//	Playerjs.com 19.10.18
//	12.08.2024 11:40:53
//	API - https://playerjs.com/docs/q=api

eval(
  (function (p, a, c, k, e, d) {
    e = function (c) {
      return (
        (c < a ? "" : e(parseInt(c / a))) +
        ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36))
      );
    };
    if (!"".replace(/^/, String)) {
      while (c--) {
        d[e(c)] = k[c] || e(c);
      }
      k = [
        function (e) {
          return d[e];
        },
      ];
      e = function () {
        return "\\w+";
      };
      c = 1;
    }
    while (c--) {
      if (k[c]) {
        p = p.replace(new RegExp("\\b" + e(c) + "\\b", "g"), k[c]);
      }
    }
    return p;
  })(
    'if(!1z.4V){1z.4V=[];1z.es}if(1z[\'IL\']){1A(IL,1)};E CQ(2J){B o={1v:K,l4:[],sV:[],ko:\'LL\',LN:yY,LO:yI,8i:\'19.10.18\',g5:[\'8q\',\'\'],ku:\'\',26:K,8D:K,9L:K,LP:K,dW:K,5Z:K,9m:K,8R:K,u:\'#LQ#LU#LW#LK#M1#Cj#M2#M4#M5#M6#M7#Cj#Ln#Lt#Lv#Lw#Ly#LC#LF#Md#Me#MN#jn#MO#jn#MX#N3#N4#N7#Lc#Nc#jn#Nd#Mi#Mj#Ml#Mn#Mg#MA#jn#ME#MH#jn#KI\',u2:\'\',u3:\'\',u4:\'\',u5:\'\',u6:\'\',u7:\'\',u8:\'\',u9:\'\',L0:\'\',y:\'xx???x=xx?xx?=\',p:\'\',KT:-1,wF:"Bh",f3:"//Bh.91",7k:[],dt:H,pr:H,ga:K,ab:K,jK:[],Kp:K,dN:\'//.9d//\',rG:0,2x:[],7q:[],9B:[],3a:[],o7:[],9D:0,a5:[],lI:0,sW:K,5V:K,1w:K,ud:K,7J:K,ni:\'<BE>\',i6:\'</BE>\',9G:1z.b8.Y<2i&&1z.b8.1g<2i,w8:[],KM:[],5z:{\'1O\':1,\'KG\':1,\'hb\':1,\'eN\':1,\'qW\':0},ah:[],qm:0,ey:0,5q:K,4Y:K,fx:K,os:K,KB:[],nL:[],bo:K,cK:0,iR:K,qS:1G,h0:1G,ri:K,BV:E(x){B a;J a},KW:0,oN:4A,4q:K,ds:K,wH:1V.wH,d:8H.vy,jQ:8H.vy,9x:8H.9x,jo:8H.9x.I("jo")==0,KO:{},v3:\'Kx-BW.91/BW.js\',fd:["BV","BH"],5X:[],Lb:[],Kt:[],i9:1,mR:[],BH:E(x,y,z){B a;J a},1a:0,n8:0,54:K,dk:-1,a7:3,KV:0,sq:0,9J:0,3E:{x:1,y:1,x0:1,y0:1},ci:["kv","kb","kf","mg","mh","mj","s9","mk","dT","e8","rI","r7"],q0:["QG","QE","QD","QC"],d2:0,QB:0,tl:0,Dz:0,cY:0,Dj:[],cO:[\'7d\',\'eq\',\'l3\',\'6F\'],Qz:[],lM:H,kT:[],ob:0,ws:"w"+"s",j9:K,ne:[K,K,K]};B eX={S:{w:20,h:20,1f:"-",Qy:"-",a:1,7j:-1,1u:"3F",1H:"",1O:1,gM:-1,as:0,2q:1,1t:"",1D:"",3Z:"PQ",eH:12,iQ:0,1q:"Q",2L:"0 3 0 3",9O:"0 0 0 0",2p:1,hg:"0 0 0 0",PG:0,hn:1,bg:0,q3:0,GJ:0,5k:1,ak:-1,4S:"3X",bJ:-1,fD:"0 0 0 0",pB:-1,pE:"3F",aI:-1,pN:-1,5U:"1X",4t:"tz",2q:0,j1:"3X",iW:0.7,yq:0,yr:"3F",iY:"3 5 3 5",Q5:"0 0 0 0",Q8:1,yB:"qa-q6",yx:11,yw:0,2O:"",zr:5,zj:0,3e:0,Q4:2,PY:2,Gf:0.2,Gi:0,Gj:0.1,fE:0,QM:"QN",Ro:1,RD:5,Gd:"3X",Gg:"3F",Ga:"3F",G9:1,GT:1,yu:1,7i:0,3B:0,gf:20,du:"<2v Y=\'20\' 1g=\'20\'><g><dK ry=\'5\' rx=\'5\' cy=\'10\' cx=\'10\' 6i=\'#gG\'/></g></2v>",yd:1,pV:-1,kH:0,m6:1,vL:-1,RB:0.1,gS:0,3d:"",Ii:0,Jf:"tz",3c:"",Jv:Et,JD:Et,Fm:0,5E:0,6f:"3F",JH:0,JJ:"3X",FX:9,vq:"0 0 10 0",vr:"0 0 0 0",FV:0}};E zW(){J H;o.Ac=H}E c4(s){if(s.I(\'.\')==-1){s=s.1k(1);s2=\'\';V(i=0;i<s.R;i+=3){s2+=\'%u0\'+s.4T(i,i+3)}s=Rz(s2)}J s};E AF(){if(o.u!=\'\'){v=8s(v,5f.6N(de(o.u)))}if(2J.I("#"+v.9Y)==0){2S{2J=5f.6N(o[o.fd[0]](2J))}2E(e){}}F{if(2J.I("#"+v.bz)==0){2S{2J=5f.6N(o[o.fd[1]](2J))}2E(e){}}}}E 7Q(x,y){}E nq(y,1e){}B vG=E(){B 9r=1Y("2e");o.1R.1T(9r);O(9r,{\'1q\':\'2C\',\'1c\':0,\'1d\':0,\'Y\':\'100%\',\'1g\':30,\'2w-1u\':v.AO,\'1C\':v.B1,\'2k\':\'1X\'});B x=1Y("2e");o.1R.1T(x);O(x,{\'1q\':\'2C\',\'1c\':0,\'1d\':0,\'Y\':\'100%\',\'1u\':v.AK,\'3Z-3M\':v.AX,\'2U\':(v.AH+\'px \'+v.Ba+\'px\'),\'2k\':\'1X\'});G.9d=E(1D,n){x.1U=1D;6T(x);O(9r,{\'1g\':x.2X,\'2k\':\'4M\'});9r.C.4X="Ry";V(B i=0;i<x.er(\'a\').R;i++){x.er(\'a\')[i].C.1u=\'#gG\'}if(n){1A(G.nU,2i*n)}x.C.4X="Rw"};G.nU=E(){3q(x);3q(9r)}};2h(E(w,i,s,e){B ao=0;B 8L=0;B gb=0;B e1=[];B dl=[];mB(H){if(ao<5)dl.2M(w.6E(ao));F if(ao<w.R)e1.2M(w.6E(ao));ao++;if(8L<5)dl.2M(i.6E(8L));F if(8L<i.R)e1.2M(i.6E(8L));8L++;if(gb<5)dl.2M(s.6E(gb));F if(gb<s.R)e1.2M(s.6E(gb));gb++;if(w.R+i.R+s.R+e.R==e1.R+dl.R+e.R)1i}B Dd=e1.we(\'\');B D4=dl.we(\'\');8L=0;B wo=[];V(ao=0;ao<e1.R;ao+=2){B wW=-1;if(D4.bh(8L)%2)wW=1;wo.2M(6Y.rC(2Q(Dd.1k(ao,2),36)-wW));8L++;if(8L>=dl.R)8L=0}J wo.we(\'\')}(\'RI\',\'R2\',\'R0\',\'QZ\'));B v={1o:0,r6:0,pz:"#3X",2R:0,wG:1,7Z:"#3X",4S:"#3F",7i:0,dY:1,mz:1,3h:0,sS:1,dc:0,uH:1,1r:{QY:0,1u:"3X",a:"0.4",h:34,k0:1,1l:1,h6:1,e5:0,iw:3,8j:0,rf:3,5U:"1X",1q:"2K",2L:"0 0 0 0",7i:0,hj:0,9E:\'\'},1M:{on:1,f:1,r:1,m:1,3D:5,vW:"3D",8J:1,vX:"1I",n4:0,J6:0,uT:1,jm:0.2},W:{4S:"3X",bJ:"p3",5k:0.9,ak:-1,1q:"1c",2L:"0 0 0 0",2U:"7 15 7 15",1u:"3F",3Z:"zo, zl, qa-q6",eH:12,5u:10,iQ:0,6f:"zR",HR:1,7Z:"QW",a:1,7j:-1,QP:0,QV:100,QT:QS,QR:1,rg:1,Ki:"R4",rv:"3X",rb:-1,QX:-1,K4:0,6M:3,hV:16,FW:"R5",7i:0,ix:1,mG:1,mM:"3F",y5:0,xZ:"3X",I1:1,Jb:0,Jc:"p3",ly:0,hz:4A,d6:0,7m:0,Ko:0,K2:0,dB:1,3x:0,i0:50,ut:0,lB:1,dZ:Rf,pk:0,vv:"p3",vf:"0 0 0 0",qg:30,7Z:"zc"},1h:{4S:"3X",bJ:"Rl",5k:0.7,ak:-1,3Z:"zo, zl, qa-q6",1q:"2K-2m",2L:"0 0 0 0",2U:"7 10 7 15",1u:"3F",eH:12,hV:16,5u:10,iQ:0,Rk:"3F",6f:"zR",a:1,1O:5,7j:-1,qp:1,6M:3,ix:1,mG:1,mM:"3F",ly:0,hz:4A,7i:0,Rj:1,Ri:"56",4G:1,Rh:"7X",Rg:1,Rd:"1W",Rc:0,Ra:"6J",R9:0,R8:"5a",qg:30,7Z:"zc"},CS:{1q:"2K-2m",2L:"0 10 50 0"},1I:0.8,w0:1,nY:1,8Z:0,5D:0,EE:1,5o:0,4C:0,HZ:0,HW:0,3k:0,ts:1,lK:0,w7:0,vA:0,j4:\',\',j8:\';\',ea:\'//\',rQ:1,j3:\'[\',e7:\']\',gy:\'6i\',nH:1,nJ:-1,qN:0,QO:\'20 0 0 20\',Os:\'1d-1c\',PD:100,O6:100,O5:-1,sX:0,Ae:1,AO:"q5",AK:"3F",AH:5,Ba:10,B1:1,AX:10,lI:0,xE:1,rj:1,fK:1,4U:\'O4\',yb:0,ht:\'6o\',af:1,Iv:0,Km:0,Hv:0,9n:1,bA:1,Fc:5,6z:0,E9:1,pj:0,uD:5,O3:0,O2:0,O1:0,o0:1,zt:1,HO:0,Jd:0,NZ:0,wP:1,mK:0,3j:"Cz",NY:GI,kR:\'100%\',ga:0,CN:{7C:1,2u:0,m7:0,4f:0,1v:1,tA:0,tB:0,tC:0,NX:0,NW:0,NV:0},CF:{7C:1,2u:0,m7:0,4f:0,1v:1,tA:0,tB:0,tC:0},O7:100,qP:1,fv:1,nR:14,kv:\'100%\',zu:1,nP:20,z4:1,mh:0.7,zC:2,rT:3,dT:10,kb:"3F",kf:"Ix",mg:"3X",mj:0,s9:0,mk:jG,vV:1,e8:0,uR:1,94:1,O8:1,Om:0.3,Oh:3,Oa:4,Of:5,Od:0,Oc:Ni,Nk:Ir,Ek:0,Ej:1,uS:1,f4:1,Dv:1,wO:0,AR:Nn,B2:90,AV:0,AT:1,A8:"p3",AZ:0,A7:1,9Y:\'2\',bz:\'3\',Nq:10,Nr:1,Nt:1,Nw:-1,NN:1,NL:1,NK:-1,NJ:0,NI:1,NE:0,NC:1,NB:0,NQ:1,Or:0,P5:1,Pk:0,Pj:1,Pi:0,Pg:1,Pf:0,tE:1,PL:0,Pb:0,Pa:1,P9:0,Pm:1,Pw:"#3F",PC:"#3X",PB:"#3X",PA:"#3F",Pz:"#3X",Pt:"#3F",Pr:"#3X",OL:"#3F",OF:"#3X",OW:"#3F",OY:"#3X",OX:"#3F",OV:1,OM:0,OP:1,ON:0.5,Qe:"#3F",OO:"#3X",OQ:1,OZ:1,P0:1,P1:1,P2:1,OJ:10,Oy:-1,OC:1,P3:1,P4:0,lx:0,Pu:"or",Po:"or",P7:"or",P8:"or",Oq:"50%",NA:-1,NM:0,Nx:-1,Nh:0,Nv:0,D3:1,Be:0,Ns:30,Nm:2,Am:10,Eo:0,Ny:30,Cd:1,Cg:1,6p:0,2c:{on:0,4S:"3X",2R:0,9T:2,7Z:"3X",1q:"1c",2L:"20 0 0 20",Y:rl,1l:0}};v.9S="en";B 7G=E(is){B i;B C=[];B f=[];B 9z=[];B Oe=[];B 5P=[];B 8r=[];B 1N=[];B f2=[];B gt=[];B Oi=[];B 53=[];B 5G=[];B 5p=[];B eu=[];B e0=K;B 2j;B b6=-1;B 4P=H;B 1b=is;B 6g=is=="1h";B W;B 5D=[];B eo=[];B kU;B 3w=\'\';B ex=\'\';B 6l=-1;B hY;B gl=K;B O0=K;B o2=K;B oW=K;B gg=K;B ic=K;B pG;B wI;B pu;B iw;B sP;B ia=[];B 6d=[];B pZ=0;B aL=0;B a6;B 6k="2p";B aW=(o.1j.2g?"g9":"lS");B b0=(o.1j.2g?"gR":"lZ");C=8s(C,v[is]);C=4b(v[is],\'2L\',\'2L\');C=4b(v[is],\'9O\',\'9O\');C=4b(v[is],\'ba\',\'ba\');if(C.pk==0){C.vf="0 0 0 0"}C=4b(v[is],\'fD\',\'vf\');C=4b(v[is],\'2U\',\'2U\');C.n0=0;B iU="<2v C=\'2L-1d:bU\' Y=\'"+C.6M*2+"\' 1g=\'"+(C.6M*2>C.5u?(C.6M*2):C.5u)+"\' 4i:4j=\'3N://4g.w3.4a/7R/4j\' 4i=\'3N://4g.w3.4a/4c/2v\'><g><dK ry=\'"+(C.6M)+"\' rx=\'"+C.6M+"\' cy=\'"+(C.6M*2>C.5u?(C.6M):(C.5u/2))+"\' cx=\'"+C.6M+"\' 6i=\'"+3z(C.6f)+"\'/></g></2v>";B FQ="<2v Y=\'"+C.6M*2+"\' 1g=\'"+C.5u+"\' 4i:4j=\'3N://4g.w3.4a/7R/4j\' 4i=\'3N://4g.w3.4a/4c/2v\' ><g><dK ry=\'"+(C.6M-1)+"\' rx=\'"+(C.6M-1)+"\' cy=\'"+(C.5u/2+2)+"\' cx=\'"+C.6M+"\' 4p=\'"+3z(C.6f)+"\' 4p=\'1\' 6i-1C=\'0\'/></g></2v>";B xx=4;B Jz="<5c C=\'2k:bZ-4M;\'><2v Y=\'"+(xx+2)+"\' 1g=\'"+(C.5u)+"\' 4i:4j=\'3N://4g.w3.4a/7R/4j\' 4i=\'3N://4g.w3.4a/4c/2v\'><g><2G x1=\'1\' y1=\'"+(C.5u/2-xx)+"\' x2=\'"+xx+"\' y2=\'"+(C.5u/2)+"\' 4p=\'#"+C.1u+"\' 4p-Y=\'1\' 4p-fR=\'4r\'/><2G x1=\'"+xx+"\' y1=\'"+(C.5u/2)+"\' x2=\'1\' y2=\'"+(C.5u/2+xx)+"\' 4p=\'#"+C.1u+"\' 4p-Y=\'1\' 4p-fR=\'4r\'/></g></2v></5c>";B hU="<5c C=\'2k:bZ-4M;\'><2v Y=\'"+(xx+10)+"\' 1g=\'"+(C.5u+1)+"\' 4i:4j=\'3N://4g.w3.4a/7R/4j\' 4i=\'3N://4g.w3.4a/4c/2v\' C=\'iy:1c\'><g><2G x1=\'1\' y1=\'"+(C.5u/2+2)+"\' x2=\'"+xx+"\' y2=\'"+(C.5u/2-xx+2)+"\' 4p=\'#"+C.1u+"\' 4p-Y=\'1\' 4p-fR=\'4r\' /><2G x1=\'1\' y1=\'"+(C.5u/2+2)+"\' x2=\'"+xx+"\' y2=\'"+(C.5u/2+xx+2)+"\' 4p=\'#"+C.1u+"\' 4p-Y=\'1\' 4p-fR=\'4r\'/></g></2v></5c>";B 7Z=5h(2y(C.7Z,\'3F\'),2y(C.JK,1));B 1F=1Y("2e");o.1R.1T(1F);O(1F,{\'6q\':\'3e\',\'2k\':\'4M\',\'1C\':0,\'2R-6Q\':C.7i});if(C.pB==1){O(1F,{"2R":"4l 6w "+3z(2y(C.pE,\'3F\'))})}B i2={};V(B i in o.5z){if(o.5z.2r(i)){i2[o.5z[i]]=-1}}if(6g){1F.C.4X=NS}F{1F.C.4X=99}B X=1Y("2e");if(o.9G){C.FP>0?C.eH=C.FP:\'\';C.FL>0?C.dZ=C.FL:\'\';C.FI>0?C.i0=C.FI:\'\'}O(X,{\'1q\':\'fr\',\'1d\':0,\'1c\':0,\'2k\':\'4M\',\'Y\':\'100%\',\'2U-1d\':C.am,\'2U-2m\':C.7x+(6g&&C.3x==1?0:20),\'2U-2K\':C.an,\'2U-1c\':C.7u,\'1u\':C.1u,\'3Z-3M\':C.eH*2y(v.8u,1),\'3Z-eA\':fb(C.3Z),\'jc-fC\':C.iQ+\'px\'});if(o.1j.6U){O(X,{\'9h-Y\':FF})}if(is!=="W"){O(X,{\'6q-y\':(6g&&C.3x==1?\'3e\':\'9b\')})}1F.1T(X);if(C.3x!=1){B 6O=1Y("2e");O(6O,{\'2k\':\'4M\',\'6q\':\'3e\',\'2R-6Q\':C.7i});if(C.3x!=1){if(o.1j.6U){O(6O,{\'9h-Y\':FF})}}X.1T(6O)}3Y(X,{id:(v.id+"41"+is)});if(is=="W"){if(C.3x==1){O(X,{\'Y\':\'100%\',\'2U-2m\':C.7x,\'2U-2K\':C.an+20,\'6q-x\':\'9b\',\'6q-y\':\'3e\',\'bj-8J\':\'d4\'});O(1F,{\'Y\':o.2V-C.4D-C.4s,\'1g\':C.i0+C.am+C.an})}F{O(X,{\'6q-y\':\'9b\',\'6q-x\':\'3e\'});if(C.Hm==1){lo()}}if(C.pk==1){O(1F,{\'2w-1u\':C.vv})}if(v.W.2Z==1){3q(1F)}}if(C.ix==1){B 5L=1Y("2e");B b7=5h(C.pk==1?C.vv:C.4S);if(C.3x==1){iJ(5L,\'to 2m, 5i(\'+b7+\',\'+(C.5k*1+0.3)+\'), 5i(\'+b7+\',0)\',\'1c\',12,5,7,10,7,10,12,15);5L.1y(6k,IA)}F{iJ(5L,\'to 2K, 5i(\'+b7+\',\'+(C.5k*1+0.3)+\'), 5i(\'+b7+\',0)\',\'1d\',5,12,10,7,10,7,15,12);5L.1y(6k,Iu)}B 5N=1Y("2e");if(C.3x==1){iJ(5N,\'to 1c, 5i(\'+b7+\',\'+(C.5k*1+0.3)+\'), 5i(\'+b7+\',0)\',\'2m\',8,5,13,10,13,10,8,15);5N.1y(6k,Ih)}F{iJ(5N,\'to 2K, 5i(\'+b7+\',0), 5i(\'+b7+\',\'+(C.5k*1+0.3)+\')\',\'2K\',5,8,10,13,10,13,15,8);5N.1y(6k,I4)}5L.1y("lS",iF);5L.1y("lZ",iF);5N.1y("lS",iF);5N.1y("lZ",iF);X.1y("uQ",F3,{5x:K});5L.1y("a4",bi);5N.1y("a4",bi);1F.1T(5L);1F.1T(5N);3I(wI);wI=7h(IE,2i)}X.1y(aW,Fv,{5x:K});X.1y(b0,wl,{5x:K});if(v.W.a6>0&&!a6&&is=="W"){if(1L FZ!=="1G"){a6=1B FZ()}}if(6g){V(B i=1;i<15;i++){if(L(v["cu"+is][is+i])){v.1h[is+i]=v["cu"+is][is+i];if(L(v["cu"+is][is+i+"1P"])){v.1h[is+i+"1P"]=v["cu"+is][is+i+"1P"]}if(L(v["cu"+is][is+i+"1f"])){v.1h[is+i+"1f"]=v["cu"+is][is+i+"1f"]}}if(L(v.1h[is+i])){if(v.1h[is+i]==1){cU(\'f\',i);bH(f[i],9z[i],5P[i],8r[i],i);B 5M=v.1h[is+i+"1f"];B 8V=v.1h[is+i+"1P"];if(!L(5M)){v.1h[is+i+"1f"]="5a"}if(5M){if(5M.I("3G")>-1&&8V){if(!v[\'6G\'+5M]){if(8V.I(":")>0){B mi=5M.4T(-1);B dm=v[\'mP\'+mi];B k=4z(8V.1k(8V.I(":")+1)).2t(\',\');B ka=[];B iG;V(B j=0;j<k.R;j++){if(k[j].I("(*)")>-1){!L(dm)?dm=j:\'\';k[j]=k[j].1Q("(*)",\'\')}iG=k[j].I("->2Y:");ka[j]=\'\';if(iG>0){ka[j]=k[j].1k(iG+6);k[j]=k[j].1k(0,iG)}}o[\'6G\'+5M]=k;o[\'m\'+mi+\'41\'+\'2Y\']=ka;8V=v.1h[is+i+"1P"]=8V.1k(0,8V.I(":"))}F{o[\'6G\'+5M]=[];v.1h[is+i+"1P"]=8V}v[\'6G\'+5M]=1;o[\'hJ\'+5M]=2y(dm,0)}}}5P[i].1U=2P(5M);if(2o(8V)){5P[i].1U=8V}if(5M=="3b"){o.g8=H}1N[i]=5M;7A(i);if(1N[i]==\'vd\'){!o.f9?o.f9=1B Rb():\'\';if(L(1z.sy)){5P[i].1U=o.f9.R7();o.f9.Ch()}}if(1N[i]in o.5z){i2[1N[i]]=i}f[i].1y(aW,6B,{5x:K});f[i].1y(b0,5Q,{5x:K});f[i].1y(6k,aS);f[i].1y("a4",bi);if(v.1h[is+i+"1l"]==1){O(f[i],{"1g":0})}}}}}E F3(x){if(is=="W"&&C.3x==1&&x){if(x.uN==0&&x.bt!=0){X.bp-=x.bt;x.96()}}3I(pu);pu=7h(wl,jf);aU()}E Fv(){o.3C=H}E wl(){if(C.eR==1){2F(o.f0);o.f0=1A(E(){if(!o.3C&&!o.mN){8w()}},(v.1h.gz>0?v.1h.gz*2i:(o.1j.tv?4c:2i)))}o.3C=K}E 6B(1e){if(o.26){o.5m?o.U.5m(K):\'\'}B i=1e.4t.7F(\'nQ\');B x;if(i){x=\'f\'}F{if(1e.4t.7F(\'bf\')){i=1e.4t.7F(\'bf\');x=\'f2\'}}if(i){i=2Q(i);B gp=K;if(L(2h(x)[i])){if(C.ak>-1){O(2h(x+\'bg\')[i],{\'1C\':C.ak})}if(2o(C.ek)){O(2h(x+\'bg\')[i],{\'6X\':\'hb(\'+C.ek+\')\'})}if(C.7j>-1){O(2h(x+\'1P\')[i],{\'1C\':C.7j});O(2h(x+\'5E\')[i],{\'1C\':C.7j})}if(is=="W"){if(1N[i].I("W")==0){B id=1N[i].1k(8);if(3w==id||ex==id){O(2h(x+\'1P\')[i],{\'1u\':C.6f});O(2h(x+\'5E\')[i],{\'1u\':C.6f});gp=H}F{O(2h(x+\'1P\')[i],{\'1u\':C.1u})}}}if(C.xI==1&&L(C.mf)&&gp){}F{O(2h(x+\'bg\')[i],{\'7W\':C.bJ})}}}};E 5Q(1e){if(o.26){o.5m?o.U.5m(H):\'\'}B i=1e.4t.7F(\'nQ\');B x;B gp=K;3I(hZ);aU();if(i){x=\'f\'}F{if(1e.4t.7F(\'bf\')){i=1e.4t.7F(\'bf\');x=\'f2\'}}if(i){if(L(2h(x)[i])){if(C.ak>-1){O(2h(x+\'bg\')[i],{\'1C\':C.5k})}if(2o(C.ek)){O(2h(x+\'bg\')[i],{\'6X\':\'hb(1)\'})}if(C.7j>-1){O(2h(x+\'1P\')[i],{\'1C\':C.a});O(2h(x+\'5E\')[i],{\'1C\':C.a})}if(is=="W"){if(1N[i].I("W")==0){B id=1N[i].1k(8);if(3w==id||ex==id){O(2h(x+\'1P\')[i],{\'1u\':C.6f});O(2h(x+\'5E\')[i],{\'1u\':C.6f});gp=H}F{if(L(o.a5[id])){iL(i)}F{O(2h(x+\'1P\')[i],{\'1u\':C.1u})}}}}if(C.xI==1&&L(C.mf)&&gp){}F{O(2h(x+\'bg\')[i],{\'7W\':o.a5[id]?C.rv:C.4S})}}}}E aS(1e){if(!gg){B d=1B 7D();o.aX=d.9V();B i=1e.4t.7F(\'nQ\');if(i){if(L(f[i])){if(L(1N[i])){if(is=="W"){o.2b=1G}51(i,0)}}}nF()}}B wr;B hZ;E Ft(1e){if(!gg){B i=1e.4t.7F(\'bf\');if(i){if(L(5p[i])){if(2j in o.5z){wr=i;hZ=7h(Fg,4A)}}}}}E Fg(){rJ(wr)}E bi(1e){3I(hZ);1e.6t=H;aU()}E vh(1e){3I(hZ);if(!gg){B d=1B 7D();o.aX=d.9V();B i=1e.4t.7F(\'bf\');if(i){if(i==0){if(5p[0]==\'1u\'){bK();51(pZ)}F{dv()}}F{if(L(5p[i])){rJ(i)}}}}}E lD(1e){B x=1e.4t.7F(\'Hb\');if(x){v5(x)}}E GU(1e){aU();B i=1e.4t.7F(\'bf\');if(L(5p[i])){if(7s("=",i)>0){B x=5p[i].1k(0,7s("=",i));B y=5p[i].1k(7s("=",i)+1);B z=2j+\'JB\';if(!v[z]){v[z]=[]}if(!L(v[z][x])){v[z][x]=v[x]+\'\'}v4(x,y)}}};E v4(x,y){v[x]=y;if(o.5w&&v.vV==1&&x!="e8"){3R.9s("nS"+x,y)}if(o.54&&o.3H){o.3H.a2()}o.U.jA();v5(x)}E FD(1e){B i=1e.4t.7F(\'bf\');B x=5p[i];if(L(x)){if(x.I("=")>0){B z=x.1k(0,x.I("="));B y=x.1k(x.I("=")+1);v[z]=y;t7();7A(o[2j+\'v6\']);if(2j=="m8"){7Q("Hu")}}}}E 7A(i){if(L(1N[i])){B aH=K;B 7I=K;B 5t=\'\';if(6g){if(1N[i]=="56"){5t=o.P.tX()}if(1N[i]=="7X"){5t=o.P.tV()}if(1N[i]=="3b"){5t=\' \';7I=H}if(1N[i].I("3G")>-1){if(o[\'6G\'+1N[i]]){if(o[\'6G\'+1N[i]].R>0){B t=o[\'hJ\'+1N[i]];if(t!=-1){5t=o[\'6G\'+1N[i]][t]}7I=H}}}if(1N[i]=="dF"){if(o.7Y){5t=o.o7[o.R1]}}if(1N[i]=="7X"||1N[i]=="dF"||1N[i]=="56"){if(o[\'6G\'+1N[i]].R==0){aH=H}F{if(o[\'6G\'+1N[i]].R==1&&(C.FJ!=1||o[\'6G\'+1N[i]][0]==1)){aH=H}F{7I=H}}}if(1N[i]=="5Z"){if(!o.5Z){aH=H}F{7I=H}}if(1N[i]=="6J"){if(o.2z!=\'dA\'&&!v.6J){aH=H}F{7I=H}}if(1N[i]=="1W"){if(L(o.1Z)){7I=H;if(o.4Y||v.94==1){if(o.3y){5t=o.3a[!o.4Y?o.3y.7e():o.3r]}}F{5t=\'\'}B hN=0;V(B s=0;s<o.1Z.R;s++){if(o.1Z[s]!=\'\'){hN++}}if(hN==1&&o.jU==1){hN=0}if(v.oL==1&&v.qi==1){}F{if(hN==0){aH=H;7I=K}}}F{aH=H}}if(1N[i]=="5a"){5t=o.5X[o.a7];5t==1&&C.dh!=1?5t=2P(\'fg\'):\'\';7I=H;if(o.2z=="ca"||(o.P.5R()&&C.R3!=1)){aH=H;7I=K}}if(1N[i]in o.5z){5t=hM(1N[i]);7I=H}if(1N[i].I("8k")>0){B x=\' \';B y=[\'Kg\',\'Il\',\'Jh\'];V(B z=0;z<y.R;z++){if(L(v[1N[i]+y[z]])){if(v[1N[i]+y[z]]!==\' \'){x+=(x!==\' \'?\':\':\'\')+v[1N[i]+y[z]]}}}5t=x!=\' 0:0\'&&x.I(":")>-1?x:\' \';o[1N[i]+\'7H\']=5t;7I=H}}8r[i].1U=5t+(5t!=\'\'&&C.RG!=1?\' &gJ;<2v Y="jj" 1g="Fx" yv="-1 -1 5 8" 8i="1.1" 4i="3N://4g.w3.4a/4c/2v" 4i:4j="3N://4g.w3.4a/7R/4j"><oO 4p="#\'+3z(C.6f)+\'" 4p-Y="1" 6i="1X" 8o="0 0 3 3 0 6"></oO></2v>\':\'\');B Hw=6g&&b6!=-1;if(aH){1l(f[i]);if(6g){eu[i]?2F(eu[i]):\'\';if(o.Q){o.Q.hF(i,K,5t)}F{eu[i]=1A(E(){o.Q.hF(i,K,5t)},4A)}}O(f[i],{\'1q\':\'2C\',\'2m\':0,\'1d\':-100})}if(7I){if(Hw){}F{if(C.3x==1){O(f[i],{\'2k\':\'bZ-4M\'})}F{1p(f[i])}}if(6g){eu[i]?2F(eu[i]):\'\';if(o.Q){o.Q.hF(i,H,5t)}F{eu[i]=1A(E(){o.Q.hF(i,H,5t)},43)}}O(f[i],{\'1q\':\'fr\',\'2m\':0,\'1d\':0})}2A()}V(B j=1;j<f.R;j++){if(f[j]){if(5S(f[j])){B 4x=K;4P?4x=H:\'\';4P=K;4x&&o.Q?o.Q.4x():\'\'}}}};B wa=0;E 51(i,Gt,fa){fa?1N[i]=fa:\'\';if(L(1N[i])){o.mN=H;aU();B x=ti();if(6g){b6==-1?wa=x[0]:x[0]=wa}if(2j!=1N[i]){2j=1N[i];B xi=2j.I("3G")>-1;if(2j==\'56\'||2j==\'7X\'||2j==\'1W\'||2j==\'5a\'||xi||2j==\'dF\'||2j in o.5z||2j.I("8k")>0||2j==\'3b\'||2j==\'1u\'){b6=i;B z=g3(o[\'6G\'+2j]);if(2j=="r0"){if(C.qe==1){z=7Q("RL")}F{z=7Q("RN")}}if(2j=="m8"){z=7Q("RO")}if(2j=="3b"&&o.3b){z=[];V(B j=1;j<=16;j++){if(L(v["3b"+j])){z.2M(2P(v["3b"+j]));ia[z.R]=v["3b"+j]}}}if(2j=="1u"&&o.4q){z=[];pZ=i;V(B j=0;j<o.q0.R;j++){B co=o.q0[j].1k(4);z.2M(2P(co));6d[z.R]=co}}if(z.R==0&&xi){B ai=2j.4T(-1);if(L(1z[\'n3\'+ai])){1z[\'n3\'+ai](v.id)}8w();J}B fL=o[\'hJ\'+2j];B GM=o[\'RR\'+2j];V(B j=1;j<f.R;j++){if(f[j]){f[j].C.2k="1X"}}f2=[];cU(\'f2\',0);bH(f2[0],gt[0],53[0],5G[0],0);O(f2[0],{"2R-2K":"4l 6w "+(C.vz==1?7Z:"5i(100,100,100,0.7)")});aL=Gt;B pU=K;53[0].1U=(x[0]<2||aL==1||C.xy==1?\'\':hU)+(v.1h[is+i+"1P"]&&v.1h[is+i+"1P"]!=\'\'?v.1h[is+i+"1P"]:2P(v.1h[is+i+"1f"]))+(o[1N[i]+\'7H\']?o[1N[i]+\'7H\']:\'\');if(2j==\'1W\'&&!o.s6){B iq=1Y("2e");iq.1U=2P("2J");O(iq,{\'1u\':C.1u,\'ag\':\'2D\',\'6Z\':\'4y\'});5G[0].1T(iq);iq.1y(6k,Gx);pU=H}if(2j==\'1W\'&&v.oL==1&&!o.1j.tv&&L(1z.sy)){B uf=1Y("2e");!o.3y?o.3y=1B jE():\'\';uf.1U="<v8 1H=\'3i\' id=\'"+v.id+"Gr\' RU=\'.ug,.ty,.jC\' C=\'2k:1X\'/>"+2P(\'vd\');O(uf,{\'1u\':C.1u,\'ag\':\'2D\',\'6Z\':\'4y\',\'2L-1c\':(pU?\'et\':0)});5G[0].1T(uf);o.eT=1V.8z(v.id+"Gr");o.eT.RV=o.3y.uC;uf.1y(6k,o.3y.uC)}if(pU){if(gl){if(aL==2){z=[];3q(f2[0])}V(j=0;j<o.ci.R;j++){if(v.pK==0&&o.ci[j]=="kf"){}F{z.2M("RP"+o.ci[j])}}}}O(53[0],{\'3Z-3M\':C.hV*2y(v.8u,1)});5p[0]="RF";if(2j in o.5z){tQ(2j);if(pZ>0&&o.q0.I(\'Rx\'+2j)>-1){53[0].1U=hU+2P(2j);5p[0]="1u";5G[0].1U=hM(2j)}O(5G[0],{\'Y\':C.5u*2.5,\'1D-8d\':\'2m\'})}if(aL!=1&&x[0]>1){f2[0].1y(aW,6B);f2[0].1y(b0,5Q);f2[0].1y(6k,vh);f2[0].1y("a4",bi)}F{O(f2[0],{"6Z":\'6K\'})}if(C.tf==1){3q(f2[0])}if(L(z)){B zz=\'\';V(j=0;j<z.R;j++){B y=j+1;B d1=0;B 6S=K;if(z[j]&&4z(z[j])!=\'\'){if(2j==\'56\'){if(z[j]==2P("2D")){d1=1}if(o.2z=="1E"&&v.Rq==1){B iz=5g(z[j]);if(iz&&iz<zz){d1=2}zz=5g(z[j])}}cU(\'f2\',y,d1);bH(f2[y],gt[y],53[y],5G[y],1N[i],i);if(2j==\'5a\'){z[j]==1&&C.dh!=1?z[j]=2P(\'fg\'):\'\'}if(1L(z[j])==\'4F\'){if(z[j].I("<<<")==0){z[j]=z[j].1Q(\'<<<\',\'\');6S=H}if(z[j].I(\'8k\')>0){o[2j+\'v6\']=i}if(z[j].I("vu")==0){B 1J=z[j];if(1J.I("8k")>0){53[y].1U=2P(z[j].1k(1J.I("8k")+5))}F{53[y].1U=2P(z[j].1k(7))}if(z[j]==\'Ru\'){kU=f2[y];O(f2[y],{"2R-1d":"4l 6w "+(C.vz==1?7Z:"5i(100,100,100,0.7)")})}}F{53[y].1U=z[j]}}F{53[y].1U=z[j]}5p[y]=2j+j;if(fL==j||GM==j){5G[y].1U=fL==j?iU:FQ;if(fL==j){nO(y)}}if(1L(z[j])==\'4F\'){if(z[j].I("vu")==0){B t=z[j].1k(7);if(t.I("1u")>0){5G[y].1U="<2e C=\'"+(v[t]=="3X"?\'2R:4l 6w #ji;1g:bq;Y:bq;\':\'1g:et;Y:et;\')+";2w-1u:"+(v[t].I("#")==-1?\'#\':\'\')+v[t]+";2R-6Q:et;\'></2e>"}F{if(L(v[z[j].1k(7)])){5G[y].1U=v[z[j].1k(7)]}}}if(2j=="3b"){if(L(ia[y])&&o.3b){5G[y].1U=o.3b.1t(ia[y],0.7,3z(C.6f))}}if(2j=="1u"){if(L(6d[y])&&o.4q){5G[y].1U=hM(6d[y])}}if(2j==\'56\'){if(z[j]==2P("2D")&&o.P.jv()){nO(y)}if(2o(v.cB)){B fq=v.cB.2t(",");V(B k=0;k<fq.R;k++){if(z[j].I(fq[k])>-1){3q(f2[y])}}}}}B vk="";if(1L(z[j])==\'4F\'){if(z[j].I("vu")==0){3Y(f2[y],{\'Q2\':i,\'Hb\':z[j].1k(7)});vk="lD"}}if(!6S){f2[y].1y(aW,6B);f2[y].1y(b0,5Q);if(vk=="lD"){f2[y].1y(6k,lD)}F{f2[y].1y(6k,vh)}f2[y].1y("a4",bi);f2[y].1y("Ex",Ft)}F{O(f2[y],{"6Z":"6K"})}}}}2A()}if(1N[i]==\'6J\'){o.U.iC();2j=-1}if(1N[i]==\'vd\'&&L(o.f9)){o.f9.7a();2j=-1}if(1N[i].I(\'W\')>-1){B id=1N[i].1k(8);if(L(o.1K[id])){B fl=o.1K[id][\'3i\'];if(L(fl)){if(1N[i].I(\'W\')>-1){if(L(hY)){2j=-1;J}}if(fl.I(\'3D:\')==0){if(id.I(\'x\'+ex)!=0){o.2b=fl.1k(5);bG(id.1k(0,id.mQ(\'-\'))+\'-0\');J}if(!o.1w){o.2b=fl.1k(5)}if(!o.1v){o.U.2B()}3v(\'3D\',fl.1k(5));v.W.7m==0&&v.W.dB==1?8w():\'\';J}ei(i);yE(id);7Q("C3");if(L(o.1K[id][\'7c\'])&&v.7c==1&&v.PV==1){7c(o.1K[id][\'7c\'])}F{oC(id);o.U.dG(fl,(v.W.kn==1?1:1G));v.W.7m==0&&v.W.dB==1?1A(8w,4A):\'\';o2=K;oW=K;oD(id);js("PU")}}F{if(L(o.1K[id][\'5e\'])){6a(id);if(o2){6l==-1?51(0,0):\'\'}F if(oW){6l==-1?51(2Q(f.R)-2,0):\'\'}}}}if(o.2Z){o.2Z.o1()}}if(1N[i]==\'5Z\'){o.P.fT()}}}};G.JS=E(x){7A(o[x+\'v6\'])};E v5(x){if(x=="r7"){GY();J}if(x=="rI"){B z=2j+\'JB\';if(v[z]){V(B y in v[z]){if(v[z].2r(y)){v4(y,v[z][y])}}gc()}J}aU();V(B i=0;i<f2.R;i++){if(f2[i]){f2[i].C.2k="1X"}}f2=[];cU(\'f2\',0);bH(f2[0],gt[0],53[0],5G[0],0);O(f2[0],{"2R-2K":"4l 6w "+(C.vz==1?7Z:"5i(100,100,100,0.7)")});if(x.I("8k")>0){f2[0].1y(6k,t7);53[0].1U=2P(x.1k(x.I("8k")+5))}F{f2[0].1y(6k,gc);53[0].1U=(C.xy!=1?hU:\'\')+2P(x)}O(53[0],{\'3Z-3M\':C.hV*2y(v.8u,1)});f2[0].1y(aW,6B);f2[0].1y(b0,5Q);f2[0].1y("a4",bi);B 4k=[];B nf=K;if(x.I("3M")>0){4k=[\'50%\',\'75%\',\'100%\',\'125%\',\'rl%\',\'DY%\',\'4A%\',\'Qw%\',\'ep%\',\'jG%\']}if(x.I("5k")>0){4k=[\'0\',\'0.2\',\'0.3\',\'0.4\',\'0.5\',\'0.6\',\'0.7\',\'0.8\',\'0.9\',\'1\']}if(x.I("kh")>0){V(B i=-5;i<5.5;i+=0.5){4k.2M(2H.4r(i*100)/100)}}if(x.I("dX")>0){4k=[4A,jG,fi]}if(x.I("2K")>0){V(i=0;i<21;i++){4k[i]=i*10}}if(x.I("Kg")>0){V(i=0;i<24;i++){4k[i]=i}}if(x.I("Il")>0||x.I("Jh")>0){V(i=0;i<60;i++){4k[i]=i}}if(x.I("9T")>0){nf=H;4k=[0,1]}if(x.I("4p")>0){nf=H;4k=[0,1]}if(x.I("1u")>0){4k=[\'3F\',\'Ix\',\'Qv\',\'Qg\',\'Qj\',\'Ql\',\'Qq\',\'PF\',\'N9\',\'KH\',\'KK\',\'L6\',\'KN\',\'KU\',\'KA\',\'L1\',\'L3\',\'3X\'];B vx=v[x].1Q("#","");if(4k.I(vx)==-1){4k[8]=vx}}V(y=1;y<=4k.R;y++){cU(\'f2\',y,0);bH(f2[y],gt[y],53[y],5G[y],y);O(5G[y],{\'2U-1c\':0});if(x.I("1u")>0||x.I("2K")>0||x.I("8k")>0||x.I("kh")>0){y%3!=0?O(f2[y],{\'iy\':\'1c\'}):\'\';O(f2[y],{\'Y\':\'33.3%\'});if(x.I("1u")>0){4k[y-1]=2y(v["KR"+(y-1)],4k[y-1]);53[y].1U="<2e C=\'"+(4k[y-1]=="3X"?\'2R:4l 6w #ji;1g:Jr;Y:Jr;\':\'1g:fI;Y:fI;\')+";2w-1u:"+3z(4k[y-1])+";2R-6Q:fI;\'></2e>";O(f2[y],{\'2G-1g\':1})}F{53[y].1U=4k[y-1]}}F{if(x.I("dX")>0){53[y].1U=4k[y-1]}F{y%2!=0?O(f2[y],{\'iy\':\'1c\'}):\'\';O(f2[y],{\'Y\':\'50%\'});if(nf){53[y].1U=2P(4k[y-1]+\'7H\')}F{53[y].1U=4k[y-1]}}}5p[y]=x+\'=\'+4k[y-1];if((4k[y-1]==v[x]&&6Y(v[x])!=" ")||v[x]==\'#\'+4k[y-1]){5G[y].1U=iU;nO(y)}f2[y].1y(aW,6B);f2[y].1y(b0,5Q);if(x.I("8k")>0){f2[y].1y(6k,FD)}F{f2[y].1y(6k,GU)}f2[y].1y("a4",bi)}2A()}E nO(x){f2[x].mb.aY(\'6L-\'+v.id+\'-e2-mP\');O(53[x],{\'1u\':C.6f});mX(gt[x])}E oC(id){if(L(o.1K[id][\'2a\'])){v.2a=o.1K[id][\'2a\'];L(v.2a)?o.P.9A(v.2a):\'\'}if(L(o.1K[id][\'1P\'])){o.cr=o.1K[id][\'1P\']}v.W.GL>0?hY=1A(Hl,v.W.GL*2i):\'\';tY()}E oD(id){B t=o.1K[id][\'1P\'];if(L(t)){if(v.lK==1){if(o.U.md(o.1K[id])){}F{v.1P=(v.vA==1&&L(o.xL)?o.xL+(v.w7==1?\'<br>\':\' \'):\'\')+t}o.U.9W(\'1P\')}}if(v.fE==1){if(L(o.1K[id][\'8o\'])){v.8o=o.1K[id][\'8o\']}F{v.8o=[]}o.Q.kj()}B xv=[\'5y\',\'nA\',\'6J\',\'7w\',\'Z\',\'j7\',\'C2\',\'nI\',\'qT\',\'4f\',\'4o\',\'1n\',\'C1\',\'C0\',\'8E\',\'c5\',\'fZ\',\'9c\',\'jM\'];V(B i=0;i<xv.R;i++){B h1=o.1K[id][xv[i]];if(L(h1)){o.nL[xv[i]]=h1;v[xv[i]]=h1;if(i==16){v.W.d6=h1}}F{i<4?v[xv[i]]=1G:\'\'}}V(B uv in o.1K[id]){if(uv.I("BX")==0){v[uv.1k(7)]=o.1K[id][uv]}}yE(id);B 8K=o.1K[id];if(L(8K[\'2n\'])){8K[\'1W\']=8K[\'2n\']}if(L(8K[\'1W\'])){o.U.fy(8K[\'1W\'])}if(L(8K[\'9c\'])){o.Q.v1()}o.U.je(o.1K[id]);if(o.iV){o.Q.xT(o.iV)}if(L(8K[\'aJ\'])){3v(\'aJ\',8K[\'aJ\'])}if(L(8K.1I)){o.U.3T(8K.1I)}}E yE(id){B x=o.1K[id][\'1w\'];if(L(x)){if(x=="3t"){if(2J.1W&&!o.1K[id][\'1W\']){o.1K[id][\'1W\']=2J.1W}if(o.P.1a()>0){v.1w=o.2b=o.P.1a()}F{2J.1w&&!o.2b?o.2b=2J.1w:v.1w=0}}F{v.1w=o.2b=x}}F{v.1w=0}}E Hl(){2F(hY);hY=28}E ei(x){if(6l==0&&!o.1w){O(5P[6l],{\'1u\':C.1u});O(9z[6l],{\'7W\':C.4S});8r[6l].1U=\'\';f[6l].mb.5y(\'6L-\'+v.id+\'-e2-pl\')}F{o.xm=x;if(6l>-1){iL(6l)}if(3w!=\'\'){if(!o.a5[3w]&&L(o.1K[3w])){o.rG+=2y(o.1K[3w].1n,0)}o.a5[3w]=H;5D=qv(5D,3w)}}if(1N[x]){B id=1N[x].1k(8);8r[x].1U=iU;f[x].mb.aY(\'6L-\'+v.id+\'-e2-pl\');O(5P[x],{\'1u\':C.6f,\'1D-sM\':\'1X\',\'1C\':C.a});mX(9z[x]);if(C.xI==1&&L(C.mf)){O(9z[x],{\'7W\':C.mf})}6l=x;3w=id;o.3w=3w;v.4O=3w;o.mO=5P[x].1U;o.xm=3w;ex=o.1K[id][\'kk\'];if(o.Q){o.Q.ib()}if(a6){a6.MY()}}}E 6a(id){B x=id==0?o.W:o.1K[id];o.xm=id;V(B i=0;i<f.R;i++){if(f[i]){if(C.3x==1){X.3m(f[i])}F{6O.3m(f[i])}f[i]=28}}f=[];6l=-1;if(L(x[\'5e\'])){B y=7U.6b(x[\'5e\']).R;cU(\'f\',y);1N[y]="MW";bH(f[y],9z[y],5P[y],8r[y],y);if(C.3x==1){O(f[y],{"Y":(C.lB==1?C.dZ:"2D"),"1g":C.i0})}if(C.HR==1){B xz="4l 6w "+5h(C.FW,2y(C.JK,1));if(C.3x==1){O(f[y],{"MM":xz})}F{O(f[y],{"LJ":xz})}}B 1J=x.1P;if(C.xy!=1){1J=hU+1J}5P[y].1U=1J;O(5P[y],{\'3Z-3M\':C.hV*2y(v.8u,1)});B p=x[\'kk\'];f[y].1y(aW,6B);f[y].1y(b0,5Q);f[y].1y(6k,E(){K0(p)});x=x[\'5e\']}B y=7U.6b(x).R;5D=[];eo=[];if(a6&&C.3x!=1){a6.5y(6O);if(y>v.W.a6){a6.aY(C,6O)}}V(B i=0;i<y;i++){cU(\'f\',i);1N[i]="W"+x[i].id;if(!L(o.a5[x[i].id])&&!L(x[i].5e)){5D[x[i].id]=i;eo[x[i].id]=i}bH(f[i],9z[i],5P[i],8r[i],i);if(C.3x==1){if(C.6M==0){O(5P[i],{\'Y\':C.dZ-C.rY-C.rX});3q(8r[i])}O(f[i],{"Y":(C.lB==1?C.dZ:"2D"),"1g":C.i0})}5P[i].1U=x[i].1P?x[i].1P:\'&gJ;\';if(v.cE==1&&v.E0==1&&x[i].id){if(o.Jt){if(o.Jt.I(x[i].id)>-1){x[i].dD=1}}}if(L(x[i].dD)){if(x[i].dD==1){o.a5[x[i].id]=H;iL(i)}}if(L(x[i].5e)){8r[i].1U=Jz;O(8r[i],{"1u":C.1u})}f[i].1y(aW,6B);f[i].1y(b0,5Q);f[i].1y(6k,aS);f[i].1y("a4",bi);if(L(o.a5[x[i].id])){iL(i)}if(3w==x[i].id){ei(i)}if(ex==x[i].id){O(5P[i],{\'1u\':C.6f});O(8r[i],{\'1u\':C.6f});mX(9z[i])}}2A();4P=K;o.Q?o.Q.4x():\'\'}E mX(x){if(2o(C.K3)&&x){O(x,{"2w-9E":"3g-4J(5i(0, 0, 0, "+(1-C.K3*1)+") 0 0)"})}}E iJ(x,y,z,x1,y1,x2,y2,x3,y3,x4,y4){B ww=(C.3x==1?\'Ij\':\'100%\');B hh=(C.3x==1?\'100%\':\'Ij\');O(x,{\'1q\':\'2C\',\'2k\':\'bZ-4M\',\'Y\':ww,\'1g\':hh,\'1D-8d\':\'8y\'});if(C.I1==1){O(x,{\'2w\':\'-nc-3g-4J(\'+y+\')\',\'2w\':\'-3S-3g-4J(\'+y+\')\',\'2w\':\'-ms-3g-4J(\'+y+\')\',\'2w\':\'-o-3g-4J(\'+y+\')\',\'2w\':\'3g-4J(\'+y+\')\',})}if(C.3x==1||o.1j.2g){O(x,{\'6Z\':\'4y\'})}F{O(x,{\'4y-3j\':\'1X\'})}if(C.ly==1){O(x,{\'5O-Y\':C.hz+\'px!5W\'})}if(z=="1d"){O(x,{\'1d\':-1,\'1c\':0})}if(z=="2K"){O(x,{\'2K\':-1,\'1c\':0})}if(z=="1c"){O(x,{\'1d\':0,\'1c\':0})}if(z=="2m"){O(x,{\'1d\':0,\'2m\':0})}if(z=="2m"||z=="1c"){O(x,{\'1D-8d\':\'1c\',\'2U-1d\':1F.2X/2-10})}x.1U="<8y><2e "+(C.Jb==1?"LV=\'G.C.7W=\\"#"+C.Jc+"\\"\' LS=\'"+(C.y5==1?"G.C.7W=\\"#"+C.xZ:"G.C.2w=\\"1X")+"\\"\'":"")+" C=\'4y-3j:2D;6Z:4y;Y:fI;1g:fI;2R-6Q:fI;"+(C.y5==1?"2w-1u:#"+C.xZ+";":"")+(z=="1d"?"2L-1d:et;":"")+(z=="2K"?"2L-1d:et;":"")+(z=="2m"?"2L-1c:fm;":"")+(z=="1c"?"2L-2m:fm;":"")+"\'><2v Y=\'20\' 1g=\'20\' 4i:4j=\'3N://4g.w3.4a/7R/4j\' 4i=\'3N://4g.w3.4a/4c/2v\'><g><2G x1=\'"+x1+"\' y1=\'"+y1+"\' x2=\'"+x2+"\' y2=\'"+y2+"\' 4p=\'#"+C.mM+"\' 4p-Y=\'"+C.mG+"\' 4p-fR=\'4r\'/><2G x1=\'"+x3+"\' y1=\'"+y3+"\' x2=\'"+x4+"\' y2=\'"+y4+"\' 4p=\'#"+C.mM+"\' 4p-Y=\'"+C.mG+"\' 4p-fR=\'4r\'/></g></2v></2e></8y>"}G.9I=E(){if(C.ix==1){9I()}};E IE(){if(e0){9I()}}E 9I(e){if(C.ix==1&&!ic){if(C.3x==1){B h=X.LX;B m=1F.2f+C.7u+C.7x+20;B t=X.bp}F{B h=X.Gc;B m=1F.2X;B t=X.d9}if(h>m){if(t>0){if(!5S(5L)){1p(5L);B m1=1B 5B({"mc":5L,"1H":"8h","to":1,"1a":0.3,"me":"5L"})}}F{if(5S(5L)){B m2=1B 5B({"mc":5L,"1H":"8h","to":0,"1a":0.3,"me":"5L","1l":H})}if(e){e.bt<0?e.96():\'\'}}if(t<h-m-10){if(!5S(5N)){1p(5N);B m3=1B 5B({"mc":5N,"1H":"8h","to":1,"1a":0.3,"me":"5N"})}}F{if(5S(5N)){B m4=1B 5B({"mc":5N,"1H":"8h","to":0,"1a":0.3,"me":"5N","1l":H})}if(e){e.bt>0?e.96():\'\'}}}F{1l(5L);1l(5N)}}}E I4(){B x=X.d9+1F.2X-60;B m=1B 5B({"mc":X,"1H":"9b","to":x,"1a":0.3,"me":"Fi","6r":"bv"});1A(9I,2i)}E Iu(){B x=X.d9-1F.2X+60;B m=1B 5B({"mc":X,"1H":"9b","to":x,"1a":0.3,"me":"LZ","6r":"bv"});1A(9I,2i)}E iF(1e){2F(o.f0);1e.aA()}E Ih(){B x=X.bp+(1F.2f+C.7u+C.7x)-60;B m=1B 5B({"mc":X,"1H":"jO","to":x,"1a":0.3,"me":"LH","6r":"bv"});1A(9I,2i)}E IA(){B x=X.bp-(1F.2f+C.7u+C.7x)+60;B m=1B 5B({"mc":X,"1H":"jO","to":x,"1a":0.3,"me":"FC","6r":"bv"});1A(9I,2i)}E K0(x){if(x==\'\'){6a(0)}F{if(L(o.1K[x])){6a(x)}}2j=\'\'}E iL(x){8r[x].1U=\'\';O(5P[x],{\'1u\':C.Ki});if(C.K4==1){O(5P[x],{\'1D-sM\':\'2G-LE\'})}if(C.rg>-1){O(5P[x],{\'1C\':C.rg})}f[x].mb.5y(\'6L-\'+v.id+\'-e2-pl\');O(9z[x],{\'7W\':C.rv});if(C.rb>-1){O(9z[x],{\'1C\':C.rb})}}E rJ(i){if(L(5p[i])){aU();if(7s("56",i)==0){o.U.5Y(5p[i].1k(7))}if(7s("7X",i)==0){o.U.dP(5p[i].1k(10))}if(7s("1W",i)==0){!o.3y?o.3y=1B jE():\'\';o.3y.9u(5p[i].1k(8))}if(7s("dF",i)==0&&v.7Y==1){o.7Y.Cf(5p[i].1k(7))}if(7s("3G",i)==0){B 5M=5p[i].4T(0,-1);o[\'hJ\'+5M]!=-1?o[\'hJ\'+5M]=i-1:\'\';if(o[\'6G\'+5M]){B mi=5M.4T(-1);if(o[\'m\'+mi+\'41\'+\'2Y\'][i-1]!=\'\'){B ap=o[\'m\'+mi+\'41\'+\'2Y\'][i-1].2t(":");3v(ap[0],ap.R>1?ap[1]:28)}if(L(1z[\'n3\'+mi])){v[\'mP\'+mi]=i-1;1z[\'n3\'+mi](v.id,o[\'6G\'+5M][i-1],i-1)}}7A(b6);8w()}if(7s("3b",i)==0){o.3b?o.3b.2Y(ia[i]):\'\';8w()}if(7s("1u",i)==0){bK();51(0,0,6d[i])}V(B p in o.5z){if(o.5z.2r(p)){if(7s(p,i)==0){o.P.IR(p,i)}}}if(7s("8k",i)>0){if(53[i].1U==2P(\'6S\')){7Q(2j+\'0\');7A(b6);if(2j=="m8"){7Q("Hu")}dv()}F{if(2j=="r0"&&C.qe==1){7Q(\'qe\',i);7A(b6);dv()}}}if(7s("5a",i)==0){o.U.9o(5p[i].1k(5));hk();1A(8w,4A)}}};G.hk=E(){hk()};G.Jp=E(x){V(B i=0;i<1N.R;i++){if(1N[i]==x){J H}}J K};E hk(){V(B i=0;i<1N.R;i++){if(1N[i]=="5a"){7A(i);if(2j==\'5a\'){bK();51(i,0)}}}}E cU(x,i,d1){if(L(2h(x))){2h(x)[i]=1Y("2e");if(i<2||x=="f"||2j!=\'56\'||d1>0){if(C.3x==1){X.1T(2h(x)[i])}F{6O.1T(2h(x)[i])}}F{if(C.3x==1){X.qj(2h(x)[i],2h(x)[i-1])}F{6O.qj(2h(x)[i],2h(x)[d1==2?i-2:i-1])}}if(x==\'f\'){3Y(2h(x)[i],{\'nQ\':i})}if(x==\'f2\'){3Y(2h(x)[i],{\'bf\':i})}2h(x+\'bg\')[i]=1Y("2e");B nt=1Y("2e");2h(x)[i].1T(nt);nt.1T(2h(x+\'bg\')[i]);eW(nt);2h(x+\'4d\')[i]=1Y("2e");2h(x)[i].1T(2h(x+\'4d\')[i]);fs(2h(x+\'4d\')[i]);eW(2h(x+\'4d\')[i]);2h(x+\'1P\')[i]=1Y("2e");2h(x)[i].1T(2h(x+\'1P\')[i]);2h(x+\'5E\')[i]=1Y("2e");2h(x)[i].1T(2h(x+\'5E\')[i]);if(i>0&&x=="f2"&&6g&&C.qp==0){3q(2h(x+\'5E\')[i])}}};E bH(x,9r,iM,te,KJ,ii){O(x,{\'1q\':\'fr\',\'2m\':0,\'1d\':0,\'6Z\':\'4y\',\'1g\':\'2D\',\'Y\':\'100%\',\'6q\':\'3e\',\'2k\':\'4M\',\'2G-1g\':\'1.Kw\'});if(6g){if(C.3x==1){O(x,{\'Y\':\'2D\'})}}if(C.ut&&C.3x==1){O(x,{\'Ng\':C.ut})}if(C.3x==1&&(!6g||ii>0||C.tf==1)){O(x,{\'2k\':\'bZ-4M\',\'aE-8d\':\'1d\',\'bj-8J\':\'fg\'})}O(9r,{\'2w\':(C.Gp==1?"3g-4J(to 1c,"+3z(C.Qm)+", "+3z(C.4S)+")":3z(C.4S)),\'1C\':C.5k,\'ag\':\'1X\',\'5v\':\'1C 0.2s 6r-5l,2w .2s 6r-5l,6X .2s 6r-5l\'});fs(9r);fs(9r.4h);if(C.9C==1){O(9r.4h,{\'jJ-6X\':\'9C(bq)\'})}if(C.QK==1){x.C[C.3x==1?"2R-2m":"2R-2K"]="4l 6w "+5h(2y(C.QH,\'3F\'),2y(C.Qd,0.2))}O(iM,{\'1q\':\'fr\',\'2m\':0,\'1d\':0,\'iy\':(C.8d?C.8d:\'1c\'),\'1u\':C.1u,\'2U-1d\':C.jY,\'2U-2m\':C.rX,\'2U-2K\':C.PN,\'2U-1c\':C.rY,\'ag\':\'1X\',\'1C\':C.a,\'5v\':\'1C 0.2s 3g,1u 0.2s 3g\',});O(te,{\'1q\':\'fr\',\'2m\':0,\'1d\':0,\'iy\':(C.Gm?C.Gm:\'2m\'),\'2U-1d\':C.jY,\'2U-2m\':C.rX,\'2U-1c\':C.rY,\'ag\':\'1X\',\'3Z-3M\':C.5u*2y(v.8u,1),\'1C\':C.a,\'1u\':C.6f,\'5v\':\'1C 0.2s 3g,1u 0.2s 3g\'});if(C.ly==1){O(x,{\'5O-Y\':C.hz+\'px!5W\'});O(iM,{\'5O-Y\':(C.hz-70)+\'px!5W\'})}F{if(C.3x==1){if(C.lB==1){O(x,{\'Y\':C.dZ});O(iM,{\'Y\':C.dZ-70})}}F{O(iM,{\'bj-8J\':\'d4\'});O(te,{\'bj-8J\':\'d4\'})}}}E dv(){V(B i=1;i<f.R;i++){if(L(f[i])){if(C.3x==1){f[i].C.2k="bZ-4M"}F{f[i].C.2k="4M"}}}aU();bK();2A();2j=\'\';b6=-1};E bK(){V(B j=0;j<f2.R;j++){if(f2[j]){if(C.3x==1){X.3m(f2[j])}F{6O.3m(f2[j])}f2[j]=28}}f2=[];2j=\'\'}E Gb(){J X.2f};G.h9=E(){lo()};E lo(){if(is=="W"){if(C.3x==1||C.Hm==1){B x=o.2V-C.4D-C.4s;O(1F,{\'Y\':x});O(X,{\'Y\':x});6O?O(6O,{\'Y\':x}):\'\'}o.2Z?o.2Z.2A():\'\'}}E 2A(){if(!ic){if(6g){o.Q?o.Q.mH():\'\';B x=C.tf==1&&f.R>1?f[1]:f[0]}if(is=="W"){lo();o.Q?o.Q.h9():\'\';B x=f[0];if(v.yz==1){mt()}}f.R>1&&!x?(f[1]?x=f[1]:\'\'):\'\';f.R>2&&!x?(f[2]?x=f[2]:\'\'):\'\';if(x){x.2f==0&&f2.R>0?x=f2[0]:\'\'}if(X.2f-X.tm>0&&x&&C.3x!=1){if(L(5L)){O(5L,{"Y":6O.2f})}if(L(5N)){O(5N,{"Y":6O.2f})}C.n0=(X.2f-x.2f)-(X.tm-x.tm)}F{C.n0=0}}};E ti(){B x=0;B y=0;B z=\'\';V(B i=1;i<f.R;i++){if(L(f[i])){if(f[i].C.5F!="3e"&&f[i].C.2k!="1X"){x++;y=i;z=1N[i]}}}J[x,y,z]}G.vJ=E(){gl=H;G.1p();aL=2;gc()};E Gx(x){gl=H;gc(x);if(gl&&kU){X.RA(0,kU.oH)}}E GY(x){gl=K;gc(x)}E gc(){dv();V(B i=0;i<1N.R;i++){if(1N[i]=="1W"){51(i,aL)}}}E aU(){2F(sP);sP=1A(E(){o.mN=K},4c)}E t7(){B x=2j;dv();V(B i=0;i<1N.R;i++){if(1N[i]==x){51(i,0)}}}G.tb=E(){J v.1h.7m==1&&v.1h.1r==1};E 8w(x){if((!6g&&v.W.Hg==1)||(6g&&v.1h.7m==1&&x!=2)){J}if(is==\'W\'&&v.W.2Z==1&&v.W.RT!=1){if(v.W.7m==1&&x==1){J}o.2Z?o.2Z.D1():\'\';e0=K}F{if((x!=1||(C.RS==1&&C.7m==1))&&!o.1j.tv){B m=1B 5B({"mc":1F,"1H":"8h","to":0,"1a":0.1,"me":is,"6r":"Dm"});iw=1A(E(){O(1F,{"5F":"3e","1C":0,"1d":-4c});e0=K},4A)}F{O(1F,{"5F":"3e","1C":0,"1d":-4c});e0=K}}if(is==\'W\'){if(v.W.GB==1&&o.Q){o.Q.qD("1f","W",H)}}3I(pu)};G.c=E(){J 1F};G.co=E(){if(1F.RQ(X)){J X}};G.s=E(1b){if(1b=="4s"||1b=="4D"){B k2=1b.1Q("2L","9O");B k3=1b.1Q("2L","ba");if(2o(C[k3])&&o.9G){J o.2V*C[k3]/100}if(2o(C[k2])){J o.2V*C[k2]/100}}J C[1b]};G.ss=E(1b){J C};G.1p=E(){dv();2F(iw);e0=H;if(is==\'W\'&&v.W.2Z==1){o.2Z?o.2Z.nZ():\'\'}F{O(1F,{"5F":"4w","1C":1,"5v":"1C 0.2s 3g"});B x=ti();if(x[0]==1){if(x[2]=="56"||x[2]=="7X"||x[2]=="1W"||x[2]=="5a"||x[2]in o.5z||x[2].I("8k")>0){51(x[1],0)}}}if(o.Q){is==\'1h\'?o.Q.mH():\'\';if(is==\'W\'){o.Q.h9();if(v.W.GB==1){o.Q.qD("1f","W",K)}}}if(o.1j.6U){O(X,{\'9h-Y\':\'2D\'});if(C.3x!=1){O(6O,{\'9h-Y\':\'2D\'})}}gg=H;3I(pG);pG=7h(GC,100)};E GC(){3I(pG);gg=K}G.7a=E(i){51(i,1)};G.1l=E(x){8w(x)};G.IU=E(){if(o.2Z){o.2Z.aB()}};G.5Y=E(){V(B i=0;i<1N.R;i++){if(1N[i]=="56"){7A(i);if(o.2x.R>1){1p(f[i])}if(2j==\'56\'){bK();51(i,aL)}}}};G.fT=E(){V(B i=0;i<1N.R;i++){if(1N[i]=="5Z"){7A(i)}}};G.ih=E(x){V(B i=0;i<1N.R;i++){if(1N[i]==x){7A(i);if(o[\'6G\'+x]){if(o[\'6G\'+x].R>1){1p(f[i])}}if(2j==x){bK();51(i,aL)}}}};G.9u=E(){V(B i=0;i<1N.R;i++){if(1N[i]=="1W"){7A(i);if(o.3a){if(o.3a.R>0){B x=K;if(o.1Z){V(B y=0;y<o.1Z.R;y++){if(o.1Z[y]!=\'\'){x=H;1i}}}F{x=H}x?1p(f[i]):\'\'}}if(2j==\'1W\'){bK();51(i,0)}}}};G.xj=E(x){o.W=x;6a(0);if(L(v.4O)){if(v.4O.I("x-")!=0){V(B y in o.1K){if(o.1K.2r(y)){if(o.1K[y].e6==v.4O){v.4O=y}}}}if(L(o.1K[v.4O])){eK(o.1K[v.4O]);B y=o.1K[v.4O][\'cW\'];ei(y);if(v.W.w6==1&&C.2Z!=1){6a(0);1A(E(){2A()},43)}F{1A(E(){dw(y);2A()},43)}v.4O=1G}F{ei(0)}}F{ei(0)}if(C.2Z==1){if(!L(o.2Z)){o.2Z=1B RK()}}};G.bG=E(x){bG(x)};E bG(x){if(L(o.1K[x])){eK(o.1K[x]);51(o.1K[x][\'cW\'],0);dw(o.1K[x][\'cW\'])}};G.nd=E(x){if(L(o.1K[x])){eK(o.1K[x]);if(o.1K[x]["3i"]){o.2b=1G;ei(o.1K[x][\'cW\']);oC(x);o.U.dG(o.1K[x]["3i"],1);oD(x);dw(o.1K[x][\'cW\']);if(o.2Z){o.2Z.o1()}}F if(o.1K[x]["5e"]){6a(x)}}};E F7(x){if(L(o.1K[x])){ex=\'\';6a(0);eK(o.1K[x]);oC(x);51(o.1K[x][\'cW\'],0);oD(x)}};G.bb=E(){o2=H;B x=2Q(6l)+1;if(3w!=\'\'){o.a5[3w]=H;5D=qv(5D,3w)}if(v.5D==1){x=uk(5D);if(x==28){if(v.QU==1||v.W.d6==1){eo.H2(E(a,b){J 2H.5H()-0.5});V(B x in eo){if(eo.2r(x)){5D[x]=eo[x]}}x=uk(5D)}F{o.U.Az()}}}F{if(3w!=\'\'){B y=7O().I(3w);if(y<7O().R){B j;V(B i=y+1;i<7O().R;i++){j=o.1K[7O()[i]];if(j.3i){if(j.3i.I("3D:")!=0&&j.6o!=1&&!j.5e){G.nd(j.id);x=-1;o.U.2B();1i}}}}}}if(x>-1){o.2b=1G;51(x,0);dw(x)}};E dw(x){if(f[x]&&!ic){if(C.3x==1){B to=f[x].hX-20;B m=1B 5B({"mc":X,"1H":"jO","to":to,"1a":0.3,"me":"FC","6r":"bv"})}F{B to=f[x].oH-1F.2X/2+20;B m=1B 5B({"mc":X,"1H":"9b","to":to,"1a":0.3,"me":"Fi","6r":"bv"})}1A(9I,2i)}}E uk(4u){B 6b=7U.6b(4u);B x;V(B i=0;i<6b.R;i++){x=4u[6b[6b.R*2H.5H()<<0]];if(x){1i}}J x};G.5z=E(x){tQ(x)};E tQ(x){i2[x]>-1?7A(i2[x]):\'\';if(5G[0]){if(2j==\'1O\'){5G[0].1U=2H.4r(o.3E.x*100)+\'%\'}F{5G[0].1U=hM(2j)}}};E hM(x){if(x=="1O"){J 2H.4r(o.3E.x*100)+\'%\'}F{J 2H.4r(2y(o.ah[x],o.5z[x])*100)+\'%\'}}G.bu=E(){J rD()};E rD(){if(v.5D==1){J 7U.6b(5D).R>0}B x=K;if(o.1K){x=7O().I(3w)<7O().R-1}J x};G.na=E(){if(L(o.kx)){F7(o.kx)}};G.f8=E(){B x=6l>0;if(o.1K){B z=7O().I(3w);x=z>0;if(z==1){if(L(o.1K[7O()[0]].5e)){x=K}}}J x};G.fN=E(){J L(o.1K)};G.dJ=E(){oW=H;if(G.f8()){B x=2Q(6l)-1;if(x<0){B y=7O().I(3w);if(y>0){B j;B z;V(B i=y-1;i>=0;i--){j=o.1K[7O()[i]];if(j){if(j.3i){z=j;if(j.3i.I("3D:")!=0&&j.6o!=1&&!j.5e){z=j;1i}}}}if(z){G.nd(z.id);o.U.2B()}}}F{o.2b=1G;51(x,0);dw(x)}}};G.n7=E(){if(6l>0){dw(6l)}};E 7s(x,i){J 5p[i].I(x)};E eK(x){if(x){if(x[\'sN\']!=-1){eK(o.1K[x[\'kk\']]);6a(x[\'kk\'])}F{6a(0)}}};G.g=E(x){bB(x){1m"Y":J Gb();1i;1m"1g":J 1F.2X;1i;1m"1d":J C.8U;1i;1m"Bq":J X.Gc;1i;1m"Bf":J C.dS;1i;1m"x":J 5g(1F.C.1c);1i;1m"y":J 5g(1F.C.1d);1i;1m"1C":J 1F.C.1C;1i;1m"1p":J e0;1i;1m"7a":J b6;1i;1m"1b":J 1b;1i;1m"aC":J 1b+aC;1i;1m"4P":J 4P;1i;1m"W":J is=="W";1i;1m"dD":J o.a5[3w];1i;1m"qp":J iU;1i;1m"c7":J o.1K[o.c7]?o.1K[o.c7].1P:\'\';1m"c5":J v.c5?v.c5:\'\';1m"F9":J rD()?o.1K[7O()[7O().I(3w)+1]].1P:\'\'}};E 7O(){J 7U.6b(o.1K)};G.Ka=E(){3w=\'\';v.4O=\'\'};G.4P=E(){if(6g){B x=0;V(B i=1;i<15;i++){if(1N[i]=="56"){B y=o.2x.R;if(L(v.cB)){B z=v.cB.2t(",");V(B j=0;j<z.R;j++){if(o.2x.I(z[j])>-1){y--}}}if(y>0){if(y>1||(y==1&&o.2x!=1&&C.FJ==1)){x++}}}if(1N[i]=="5Z"){if(o.5Z){x++}}if(1N[i]=="6J"){if(o.2z==\'dA\'||v.6J){x++}}if(1N[i]=="7X"){if(o.7q.R>1){x++}}if(1N[i]=="dF"&&v.7Y==1){if(o.o7.R>0){x++}}if(1N[i]=="1W"){if(L(o.1Z)){V(B s=0;s<o.1Z.R;s++){if(o.1Z[s]!=\'\'){x++;1i}}}if(x==1&&o.jU==1){x=0}if(v.oL==1&&v.qi==1){x++}}if(1N[i]=="5a"){if(o.2z!="ca"){x++}}if(1N[i]in o.5z||1N[i]=="3b"||1N[i]=="1u"){x++}if(1N[i]){if(1N[i].I("8k")>0){x++}if(1N[i].I("3G")>-1){x++}}if(v.1h[is+i+\'1l\']==1){x--}}J x<=0}F if(is=="W"){J f.R==0}F{J 4P}};G.4e=E(){if(1F.4h==o.1R){1F.3m(X);o.1R.3m(1F);o.2Z?o.2Z.4e():\'\';1F=28;X=28;ic=H}}};B Ab=E(Z,jq){B 6R=K;if(Z.I(\'6R\')==0){6R=H;Z=Z.1k(5)}B pR=p6(Z);B 2u;B 3h;B km=K;B 3W=K;B mJ=K;B og=K;B 2D=H;B qX=[];B cm=1;B oo=K;B hx=0;B rs;B dp=0;B od=0;B oG=K;B o9=\'FU\'+v.id+(6R?\'6R\':\'\');kF("#FU"+v.id+"{Y:100%!5W;1g:100%!5W;5O-Y:1X!5W;5O-1g:1X!5W}");B 1F=1Y(\'2e\');B op=0;1F.7o(\'id\',o9);jq.1T(1F);o.5Z=K;!6R?o.U.iH():\'\';if(o.1j.2g){v.4C=1}if(v.JL!=1){B 8l=1Y(\'2e\');jq.1T(8l);O(8l,{1q:"2C",1d:0,1c:0,"2w-1u":"#q5",1g:"100%",Y:"100%","1C":0});8l.1y("E8",E(1e){1e.6t=H});if(o.1j.2g){8l.1y("g9",E(1e){1e.6t=H});8l.1y("2p",E(1e){1e.6t=H});8l.1y("gR",E(1e){1e.6t=H;eU(1e);if(v.dY==1&&v.Op!=1){1A(HQ,100);1A(oz,2i)}})}F{8l.1y("vb",E(1e){B x=H;if(v.22==1){if(L(v.7d)&&!mJ){x=K}if(L(v.ny)&&b9()=="8x"&&1a()>0){x=K}}if(x&&v.dY==1&&v.HS!=1){3q(G);1A(oz,4c)}})}v.dY==1&&v.Oo!=1?3q(8l):\'\'}E oz(){6T(8l)}E HQ(){if(v.HS!=1){3q(8l)}}if(v.4C==1&&v.3k==0){9w()}if(!1z[\'YT\']){1z.Ol=E(){pT();V(B i=0;i<1z.4V.R;i++){if(1z.4V[i]){if(1z.4V[i].2Y("id")!=v.id){if(1z.4V[i].2Y(\'Cw\')){1z.4V[i].2Y(\'Cu\')}}}}};B rS=vg("4W.91/JF","4W.91/JF","Ok");if(rS){rS.sG=E(e){o.U.d0();if(v.I5!=1){2u=\'B8 Oj hG\';o.P.5I()}}}}F{pT()}E pT(){if(v.4C==1||6R){!km?kB():\'\'}F{o.U.d0()}}E kB(){if("YT"in 1z){if(L(YT.vo)&&!km){1o("rw fM");B r4=0;if(v.JL==1){r4=1}o.2b>0?dp=2Q(o.2b):\'\';3h=1B YT.vo(o9,{1g:o.9i,Y:o.9j,Og:pR,Ob:{O9:1,NP:o9,NO:1,Nj:1,dB:1,kq:((v.qP==0||(v.Ja!=1&&o.1j.7r))&&o.1j.2g?0:1),Nl:3,Q:r4,Np:0,Nu:1,9f:0,3k:6R||v.3k==1?1:0,8Z:0},3j:{\'NH\':rk,\'NG\':K5,\'5I\':5I,\'Nz\':Iy}});if(o.2b>0){o.2b=1G}2A();km=H}F{1A(kB,43)}}F{1A(kB,43)}}B iB;E rk(){if(o.P){1o("rw fj");3W=H;2F(rs);o.U.8A();if(6R){if(o.1j.rO){o.U.5d()}3h.q7();o.22.NF()}F{if(v.3k==1&&o.1j.rO&&!o.j9){o.U.5d();if(o.1j.2g){3I(iB);iB=7h(K1,ep)}}if(v.4C==0){3h.q7()}F{o.U.d0()}op=3h.r9();o.P.aq();if(cm!=1){9o(cm)}bL();2A();if(v.ND==1){2S{if(3h.ra()){if(L(3h.ra().1P)){v.1P=3h.ra().1P;o.U.9W(\'1P\')}}}2E(e){}}}}}E K1(){B x=3h.J4();if(x==2||x==-1){o.Q.3f();o.Q.8A();3I(iB)}if(x==1){3I(iB)}}E K5(1e){if(v.P6==1){1o(\'YT\',1e.29)}if(6R){if(1e.29==YT.dC.Io){o.22.Pc()}if(1e.29==YT.dC.Ke){}}F{if(1e.29==YT.dC.Ke){if(od==1){od=0;rk()}if(!o.1v){o.U.2B()}if(dp>0){3h.IB(dp,H);dp=0;o.2b=1G}oz();mJ=H;3W=H;if(og){3h.rR()}F{o.P.9H();o.P.ch()}IY();if(L(v.4E)){V(B i=0;i<o.2x.R;i++){if(v.4E==o.2x[i]){5Y(i)}}v.4E=28}F{if(L(o.4E)){V(B i=0;i<o.2x.R;i++){if(o.4E==o.2x[i]){5Y(i)}}o.4E=28}}oo=K}if(1e.29==-1&&oo&&o.1v){1o("rw Py")}if(1e.29==YT.dC.Px){}if(1e.29==YT.dC.Io){8c()}if(1e.29==YT.dC.Pv){if(!o.1v){}if(o.1v){oo=H;9w()}}if(1e.29==YT.dC.Ps){}}}E 5I(1e){if(6R){o.22.Pq()}F{if(1e.29==2){2u="Fu 4W id"}if(1e.29==5){2u="tD 4P"}if(1e.29==101||1e.29==rl||1e.29==100){2u="G fY is Pp"}if(v.Pn==1){L(v.HT)?2u=v.HT:\'\'}if(v.I5!=1){o.P.5I()}F{1l(o.2a)}}}E 8c(){v.1w>0?dp=v.1w:\'\';o.P.8c();o.P.aq()}E eO(){if(!o.Fn&&o.1v){o.U.3f()}}E ch(){o.P.ch()}E bL(){o.P.bL();o.U.uX()}E aq(){o.P.aq()}E dz(){o.P.dz()}E 9w(){if(o.P){o.P.9w()}F{rs=1A(9w,100)}}E Iy(1e){qq(1e.29)}E IY(){if(!oG){B x=3h.OE()+\'\';if(x!=\'\'&&x!=1G){o.2x=x.2t(\',\');o.2x=o.2x.BQ();if(v.rj==0){B y=o.2x.I(\'2D\');if(y>-1){o.2x.rZ(y,1)}}V(B i=0;i<o.2x.R;i++){o.2x[i]=jD(o.2x[i])}oG=H;qq(3h.OD())}}}E qq(x){o.3l=o.2x.I(jD(x+\'\'));o.Q.vH(o.3l)}G.3M=E(){J{"Y":0,"1g":0}};G.3c=E(x){pR=p6(x);if(o.2b>0){dp=2Q(o.2b)}bG(pR)};E b9(){B 6s=-1;if(3W){6s=3h.J4()}B x=\'\';if(6s==-1){x="8x"}if(6s==1||6s==3){hx=0;x="7B"}if(6s==2){x="8x";if(o.1v){hx++;if(hx==2){o.U.3f();hx=0}}}if(6s==5){x="8x"}if(6s==0){x="7n"}1o("6s",6s);J x}E 2A(){2S{if(L(3h)){3h.OA(o.2V,o.4B)}}2E(e){1o(e)}}E jD(x){B y=x;if(x=="Ot"){y="tK"}if(x=="9G"){y="pe"}if(x=="Oz"){y="pf"}if(x=="Ox"){y="pg"}if(x=="Ow"){y="oS"}if(x=="Ou"){y="oK"}if(v.Jd==1){y=2P(y)}if(x=="2D"){y=2P("2D")}qX[y]=x;J y}E 1a(){B x=3W?3h.OI():0;if(x>0&&v.hP>0){v.4o=x-v.hP;v.hP=-1}J x};E 9o(x){2S{3h?3h.OB(x):\'\';cm=x}2E(e){}};G.pa=E(){pT()};G.2B=E(){if(3W){3h.q7()}F{if(!km){kB()}F{}}};G.3f=E(){if(3W){3h.rR()}};G.ee=E(){if(3W){b9()==\'7B\'?3h.rR():3h.q7()}};G.3Q=E(x){if(3W){3h.IB(x,H);js("3D",x)}};G.a1=E(){J K};G.5d=E(){3W?3h.5o():\'\'};G.62=E(){3W?3h.OU():\'\'};G.3T=E(x){3W?3h.Ct(x*100):\'\'};G.kP=E(){J b9()==\'7B\'};G.5R=E(){J K};G.sh=E(x){5Y(x)};E 5Y(x){if(3W){if(L(o.2x[x])){B y=qX[o.2x[x]];2D=y==\'2D\';B z=1a();3h.Nf(y)}}}G.fU=E(x){9o(x)};G.3W=E(){J 3W};G.6W=E(){J b9()};G.1a=E(){J 1a()};G.1n=E(){B x=3W?3h.r9():0;if(x!=op){op=x;o.P.aq()}if(L(v.4f)){if(7b([v.4f],\'-\')){x=x+v.4f*1}F{x=v.4f}}J x};G.9N=E(){B x=0;if(3W){x=3h.OT()*3h.r9()}J x};G.4H=E(){2A()};G.iK=E(){J 2u};G.2D=E(){J v.rj==1?2D:K};G.AS=E(x){bG(x)};E bG(x){Z=x;if(3h){od=1;3h.Ov(x,0)}}G.pQ=E(){if(o.1j.2g&&o.1j.cQ){G.2B();og=H}F{if(b9()=="7B"){G.3f()}}};G.cs=E(){og=K};G.sQ=E(){J H};G.4e=E(){3W?3h.9F():\'\';3W=K;oG=K;2S{if(1F){jq.3m(1F)}jq.3m(8l)}2E(e){}}};B jE=E(){B 2n=[];B aR=[];B 4P=H;B 7e;B 9e=-1;B t6;B 9Z;B lQ=[];B lH;B jB=[];G.1w=E(x){if(!x&&9Z){om(9Z);9Z=1G}F{x?om(x):\'\'}};G.xH=E(x){om(x)};G.Ip=E(){jB=[]};E om(x){if(x.I("#"+v.bz)==0&&x.I(v.ea)>0){o[o.fd[1]](x,AY)}F{aK(x)}}E AY(x){if(x){o.1Z=x;aK(x)}}E aK(x){!x?x=\'\':\'\';if(x!=\'11\'){B 1w=0;B qA=H;B j2=\'\';o.1Z=x.2t(",");o.3a=[];o.3r=-1;if(wU()&&v.uR==1){if(3R.6D("un")!=28){j2=3R.6D("un")}}F{if(o.oi){j2=o.oi}}V(B i=0;i<o.1Z.R;i++){if(o.1Z[i].I("#0")==0){o.1Z[i]=c4(o.1Z[i])}if(o.1Z[i].I("#"+v.9Y)==0){o.1Z[i]=o[o.fd[0]](o.1Z[i])}if(o.1Z[i].I("[")==0&&o.1Z[i].I("]")>1){o.3a[i]=o.1Z[i].1k(o.1Z[i].I("[")+1,o.1Z[i].I("]")-1);o.1Z[i]=o.1Z[i].1k(o.1Z[i].I("]")+1);qA=K}F{o.3a[i]=o.1Z[i].1k(o.1Z[i].mQ("/")+1);o.3a[i]=o.3a[i].1k(0,o.3a[i].mQ("."))}if(o.1Z[i].I("#0")==0){o.1Z[i]=c4(o.1Z[i])}if(o.1Z[i].I("#"+v.9Y)==0){o.1Z[i]=o[o.fd[0]](o.1Z[i])}}if(o.3a.R>1&&v.pK==1){o.3a.2M(mC(\'OG\',(v.OH==1&&L(v.Ar)?v.Ar:2P(\'Bu\'))));o.1Z.2M("9X")}if(o.3a.R>0&&v.94==1){if(v.A2==1){7e=0;1w++;o.3a.iZ(mC(\'Al\',2P(\'6S\')));o.1Z.iZ("")}F{o.3a.2M(mC(\'Al\',2P(\'6S\')));o.1Z.2M("");7e=o.3a.R-1}}V(B i=0;i<o.1Z.R;i++){if(L(v.z2)){if(v.z2==o.3a[i]){1w=i;o.3r=i;v.fv=1}}if(j2!=\'\'){if(j2==o.3a[i]){1w=i;o.3r=i}}}if(v.94==1&&v.fv==0){o.3r=7e}L(o.Q)?o.Q.bn():\'\';if(v.fv==1){o.3r=1w;if(o.1w){if(v.pK==1&&o.1Z[1w]=="9X"){uu(o.3r)}F{kg(o.3r)}}F{9Z=x;o.4Y=o.1Z[1w]!=\'6S\'&&1w!=7e;1A(jI,43)}}F{if(qA&&o.1Z.R<3){kg(7e==0?1:0)}v.94!=1?o.3r=-1:\'\'}}F{4e()}};E zw(x){if(x.I(\'js:\')==0){2S{x=2h(x.1k(3))}2E(e){8g.1o(e.a0)}}J x?x:\'\'};G.um=E(x){jX(x,\'1E\')};E kg(x){if(L(o.1Z[x])){o.1Z[x]=zw(o.1Z[x]);if(o.1Z[x]){if(o.1Z[x].I(".")>-1){o.oT=o.1Z[x].2t(" or ");o.gE=0;jX(x)}F{if(o.1Z[x].I(\'aR\')==0){if(aR[o.1Z[x].1k(4)]){ub(o.3a[x],aR[o.1Z[x].1k(4)])}}if(o.1Z[x].I(\'1E\')==0){o.P.fA(x,"J9");o.4Y=H;o.3r=x;o.Q.bn()}}}}}E uu(x){o.4Y=H;jI()}E jX(x,y){B Z=y==\'1E\'?x:4z(o.oT[o.gE]);B j7=Z;B gK;if(lQ[Z]){if(o.1Z[x]!=\'9X\'){o.4Y=H;jI()}}F{if(Z.I(\'bP\')>0&&Z.I(\'bP\')<4){gK=Z.1k(0,Z.I(\'bP\'));j7=Z.1k(Z.I(\'bP\')+3)}B 4Q=gk(j7);9e=x;o.jU=1;4Q.cS=E(){o.jU=0;if(G.g1==4&&G.6W==4A){o.4Y=H;ub(Z,G.df,x,y)}F{if(o.gE+1<o.oT.R){o.gE++;jX(9e)}F{pc("eM")}}};4Q.sG=E(e){o.jU=0;if(o.gE+1<o.oT.R){o.gE++;jX(9e)}F{pc("eM")}};4Q.eb()}};E pc(x){1o("1W fQ po or Ay Af");if(o.3a&&o.1Z){if(o.3a[o.3r]){if(o.3a[o.3r].I(2P("eM"))==-1){o.3a[o.3r]=o.3a[o.3r]+\' (\'+2P(x)+\')\'}}if(v.Pe==1&&9e>-1){o.1Z[9e]=\'\';o.3a[9e]=\'\'}}o.3r=-1;o.4Y=K;if(o.Pl){o.Q.bn();o.Q.4x()}F{1A(E(){if(o.Q){o.Q.bn();o.Q.4x()}},100)}if(L(o.1W)){o.1R.3m(o.1W);o.1W=28}}E ub(Z,x,y,z){B gK;if(x.I("#"+v.9Y)==0){x=o[o.fd[0]](x)}if(x.I("#"+v.bz)==0&&x.I(v.ea)>0){x=o[o.fd[1]](x)}if(Z.I(\'bP\')>0&&Z.I(\'bP\')<4){gK=Z.1k(0,Z.I(\'bP\'))}if(Z.I(\'.jC\')>-1||Z.I(\'.ty\')>-1||Z.I(\'.ph\')>-1||Z.I(\'.ug\')>-1){B l=gK?gK:o.3r;!o.1Z?o.1Z=[]:\'\';if(o.1Z[l]=="9X"){l=y}if(z!=\'1E\'||!2n[l]){2n[l]=7U();2n[l][0]=[];2n[l][1]=[]}B 3A=cp();3A=x.2t(/\\r|\\n/);B tZ=1;B t1=0;B t2=0;B ge=(L(v.zk)?v.zk:0);if(Z.I(\'kh=\')>0){ge=Z.1k(Z.I(\'kh=\')+6)*1}V(B i=0;i<3A.R;i++){if(Z.I(\'.jC\')>-1||Z.I(\'.ug\')>-1){if(3A[i].I(\'-->\')>-1&&3A[i].I(\':\')>-1){if(z==\'1E\'){if(jB.I(3A[i])>-1){1i}jB.2M(3A[i])}t1=jH(3A[i].1k(0,3A[i].I(\'-->\')))*1+ge;t1==0?t1=1:\'\';t2=jH(3A[i].1k(3A[i].I(\'-->\')+4,12))*1+ge;L(2n[l][0][t1])?\'\':2n[l][0][t1]=\'\';V(B j=t1;j<t2;j++){2n[l][1][j]=t1}tZ++}F{3A[i]=4z(3A[i]);if(3A[i]!=\'\'&&3A[i].R>0&&3A[i]!=tZ&&3A[i]!=\'Pd\'){if(2o(2n[l][0][t1])){2n[l][0][t1]=2n[l][0][t1]+\'<br>\'+3A[i]}F{2n[l][0][t1]=3A[i]}}}}if(Z.I(\'.ty\')>-1||Z.I(\'.ph\')>-1){if(3A[i].I(\'Ph:\')>-1){t1=jH(3A[i].1k((Z.I(\'.ph\')>-1?3A[i].I(\'=0\')+3:12),12))*1+ge;t2=jH(3A[i].1k((Z.I(\'.ph\')>-1?3A[i].I(\'=0\')+14:23),10))*1+ge;B p=\'\';if(3A[i].I(\'0,,\')>0){p=3A[i].1k(3A[i].I(\'0,,\')+3)}F{if(3A[i].I(\'yK,\')>0){p=3A[i].1k(3A[i].I(\'yK,\')+6)}if(3A[i].I(\')}\')>0){p=3A[i].1k(3A[i].I(\')}\')+2)}}if(p!=\'\'){if(2n[l][0][t1]!=1G){2n[l][0][t1]+=\'<br>\'+p}F{2n[l][0][t1]=p}2n[l][0][t1]=2n[l][0][t1].1Q(/{.*?}/,\'\');2n[l][0][t1]=2n[l][0][t1].1Q(/\\\\\\\\N/,\'<br>\');2n[l][0][t1]=2n[l][0][t1].1Q(/\\\\N/,\'<br>\');V(B j=t1;j<t2;j++){2n[l][1][j]=t1}}}}}lQ[Z]=H;if(o.1Z[y]!=\'9X\'){z!=\'1E\'?jI():\'\'}}F{if(x!=\'\'){if(x.I(\'[\')==0){aK(x)}F{pc("2u")}}F{4e();o.Q.4x()}}}E jI(){o.Q.bn();o.U.jA();o.Q.4x()}E jH(jC){B 1J=jC.2t(\':\');B 5l=0;1J.R==2?1J.iZ("bR"):\'\';1J[0]!=\'bR\'?5l+=1J[0]*rH:\'\';1J[1]!=\'bR\'?5l+=1J[1]*60:\'\';5l+=1J[2].1k(0,2)*1;5l=5l*10+1J[2].1k(3,1)*1;J 5l};E 9u(x){if(L(o.3r)){if(o.3r!=x){jB=[];if(x==-1||(v.94==1&&x==7e)){pt()}F{v.e8=0;o.3r=x;o.4Y=H;v.fv=1;sg(x);js("1W",o.3a[x]);o.Q.bn()}}F{if(v.94!=1){pt()}}}}E s0(){if(L(o.3a[o.3r])){if(o.5w&&v.uR==1){3R.9s("un",o.3a[o.3r])}F{o.oi=o.3a[o.3r]}}}E sg(x){if(L(o.1Z[x])){1o("fy",x);o.3r=x;s0();if(o.2z=="1E"&&o.9K==H){o.P.fA(x,"1E")}F{if(o.2z=="3K"&&o.s6==H){o.P.fA(x,"3K")}F{if(o.1Z[x]=="9X"){uu(o.3r)}F{kg(o.3r)}}}}};G.uC=E(){if(o.eT){B x=o.eT.42;if(x[0]){B y=1B sy();y.cS=E(e){B z=e.4t.jg;aR.2M(z);o.3r=-1;B z=x[0].6C;if(z.R>40){z=x[0].6C.1k(0,15)+\'...\'+x[0].6C.1k(-15)}if(v.94==1&&v.A2==1){o.1Z.2M(\'aR\'+(aR.R-1));o.3a.2M(z+\'\');9u(o.1Z.R-1)}F{o.1Z.iZ(\'aR\'+(aR.R-1));o.3a.iZ(z+\'\');v.94==1?7e++:\'\';9u(0)}o.eT.5E=""};y.NU(x[0])}F{o.eT.2p()}}};G.9u=E(x){9u(x)};G.7e=E(){J 7e};G.NR=E(x){7e=x};G.1p=E(x){nZ(x)};G.C=E(){t9()};G.5y=E(){4e()};G.6S=E(){pt()};E pt(){js("1W","6S");o.4Y?o.Cp=o.3r:\'\';o.3r=v.94==1?7e:-1;v.fv=0;o.4Y=K;o.Q.bn();s0();o.s6?sg(o.3r):\'\';L(o.1W)?o.1R.3m(o.1W):\'\';o.1W=28}E nZ(1a){if(o.9L){J}B t=2Q(1a*10);if(v.e8){1a=1a-v.e8*1}if(o.4Y&&L(o.1Z)){if(2n){B x=o.3r;B t=2Q(1a*10);if(v.tG==1&&!o.1v){J}if(o.1Z[x]=="9X"){if(!lH){V(B i=0;i<o.1Z.R;i++){1A(kg,i*43,i)}if(!2n[x]){2n[x]=7U();2n[x][0]=cp();2n[x][1]=cp()}lH=H}F{if(2n[x][1][t]){}F{V(B i=0;i<o.1Z.R;i++){if(2n[i]){if(L(2n[i][1])){if(L(2n[i][1][t])){if(!2n[x][0][t]){2n[x][0][t]=\'\'}2n[x][0][t]+=(2n[x][0][t]!=\'\'?\'<br>[pL]\':\'\')+2n[i][0][2n[i][1][t]]+(2n[x][0][t]!=\'\'?\'[/pL]\':\'\')}}}}if(L(2n[x][0])){if(L(2n[x][0][t])){2n[x][1][t]=t}}}}}if(L(2n[x])){if(L(2n[x][1])){if(L(2n[x][1][t])){B y=\'\';y=2n[x][0][2n[x][1][t]];if(!L(o.1W)){o.1W=1Y(\'2e\');3Y(o.1W,{id:\'i1\'+v.id+\'41\'+\'1W\'});o.1R.1T(o.1W);t9();js("uo",o.3a[x])}if(4P){6T(o.1W)}DO();if(v.DL==1){y=PE(y)}if(v.pK==1){y=y.1Q(/\\[pL\\]/gm,\'<7p C="1u:\'+3z(v.kf)+\'">\');y=y.1Q(/\\[\\/pL\\]/gm,\'</7p>\')}if(y.I(\'<c.\')>-1){y=y.1Q(/\\<c./gm,\'<7p C=1u:\');y=y.1Q(/\\<\\/c\\>/gm,\'</7p>\')}if(v.9y){if(v.9y.2n==1&&t6!=y){js("2n",y);t6=y}}o.1W.1U=\'<7p C="\'+(v.z4==1?\'2w-1u:\'+5h(v.mg,v.mh)+\';\':\'\')+\'-3S-7y-sM-1i: Re;1u:\'+3z(v.kb)+\';2U:\'+v.rT+\'px \'+v.rT*2+\'px;2R-6Q:\'+v.zC+\'px;2L:0 0;2G-1g:\'+(v.zp?v.zp:1.8)+\';3Z-dX:\'+v.mk+\'">\'+4z(y)+\'</7p>\';O(o.1W,{"3Z-3M":((2Q(v.nR)+((2Q(v.kv)-100)*2Q(v.nR)/100))+"px")});if(v.zu==1){if(o.26){O(o.1W,{"3Z-3M":((v.nP+((2Q(v.kv)-100)*v.nP/100))+"px")})}}4P=K}F{if(!4P&&L(o.1W)){tr()}}}}F{tr()}}}}E tr(){if(!4P){o.1W?o.1W.1U=\'\':\'\';4P=H;3q(o.1W)}}E t9(){if(o.1W){O(o.1W,{"1q":"2C","Y":"100%","2U-1c":"10%","2U-2m":"10%","1c":0,"1u":v.kb,"1D-8d":"8y","7y-iX":"2R-7y"});if(v.QQ==1&&L(v.sd)){v.sd!=\'\'?O(o.1W,{"3Z-eA":v.sd}):\'\'}if(v.s9==1){O(o.1W,{"1D-9T":"-4l -4l 0 #gF,4l -4l 0 #gF,-4l  4l 0 #gF,4l  4l 0 #gF"})}F{if(v.mj==1){O(o.1W,{"1D-9T":"4l 4l Rm R6"})}F{O(o.1W,{"1D-9T":"1X"})}}if(v.Rn==1){rL(o.1W,\'o.kY\')}F{v.DL!=1?eW(o.1W):\'\'}}}E DO(){if(!o.kY){if((o.Q.nE()||v.dT>v.1r.h)&&v.RJ==1){O(o.1W,{"1q":"2C","1d":"2D","1c":0,"2K":v.dT*1})}F{O(o.1W,{"1q":"2C","1c":0,"2K":(v.dT*1+v.1r.h*1)})}}}E 4e(){o.3r=-1;o.4Y=K;o.os=K;v.1W=28;v.nA=28;o.2n=28;o.1Z=28;lH=K;lQ=[];2n=[];if(L(o.Q)){o.Q.bn()}o.3a=[];if(L(o.1W)){o.1R.3m(o.1W);o.1W=28}o.3r=28;o.4Y=K}};B 5B=E(x){B gP;B RM;B 2T;B 4L;B 4v;B l8;B f1=0;B cm;B tu=K;B sK;if(x.me!=1G&&x.mc!=1G&&x.1H!=1G&&x.to!=1G){if(x.1a==28){if(x.1H.I("gI")>-1){x.to==0?x.1a=0.5:x.1a=0.2}F{x.1a=0.20}}gP=Dk(x.6r);if(x.1H.I("1O")==-1){if(L(o.7k[x.me])){o.7k[x.me].rq()}o.7k[x.me]=G}if(x.1p==1){x.mc.1S("2k",H)}2T=x.1H.2t(\'|\');4v=6Y(x.to).2t(\'|\');4L=1B cp();V(B i=0;i<2T.R;i++){if(!4v[i]){4v[i]=4v[0]}if(2T[i]=="gI"){4L[i]=x.mc.g("1C")}if(2T[i]=="8h"){4L[i]=x.mc.C.1C}if(2T[i]=="y"){4L[i]=x.mc.g("y")}if(2T[i]=="x"){4L[i]=x.mc.g("x")}if(2T[i]=="1c"){4L[i]=2Q(x.mc.C.1c)}if(2T[i]=="1d"){4L[i]=2Q(x.mc.C.1d)}if(2T[i]=="1O"){4L[i]=x.mc.g("3o")}if(2T[i]=="9b"){4L[i]=x.mc.d9}if(2T[i]=="jO"){4L[i]=x.mc.bp}if(2T[i]=="3u"){4L[i]=x.mc.g("3u")}if(2T[i]=="3o"){4L[i]=x.mc.g("3o")}if(2T[i]=="Y"){4L[i]=x.mc.g("Y")}if(2T[i]=="Bd"){4L[i]=x.mc.2f;4v[i]=2H.8P(4v[i]);x.me=="RH"?1o("Y",x.me,4L[i],4v[i],x.mc.2f):\'\'}if(2T[i]=="1g"){4L[i]=x.mc.g("1g")}if(2T[i]=="D8"){4L[i]=x.mc.2X}4v[i]=DU(4v[i]);4L[i]=DU(4L[i])}cm=x.1a*2i/gP.R;l8=gP.R;if(2T.R==1&&4L[0]==4v[0]){aa()}F{1A(kW,2H.4r(cm))}}E kW(){V(B i=0;i<2T.R;i++){B 1J=4L[i]+(4v[i]-4L[i])*(gP[f1]?gP[f1]:0);tw(2T[i],1J);if(2T[i]=="y"){x.mc.1S("1d",1J)}if(2T[i]=="x"){x.mc.1S("1c",1J)}if(2T[i]=="1c"){x.mc.C.1c=1J+"px"}if(2T[i]=="1d"){x.mc.C.1d=1J+"px"}if(2T[i]=="1O"){x.mc.1S("1O",1J)}if(2T[i]=="3u"){x.mc.1S("3u",1J)}if(2T[i]=="3o"){x.mc.1S("3o",1J)}if(2T[i]=="9b"){x.mc.d9=1J}if(2T[i]=="jO"){x.mc.bp=1J}if(2T[i]=="Y"){x.mc.1S("Y",1J)}if(2T[i]=="Bd"){O(x.mc,{"Y":1J})}if(2T[i]=="1g"){x.mc.1S("1g",1J)}if(2T[i]=="D8"){O(x.mc,{"1g":1J})}}f1++;if(!tu){if(f1==l8){aa()}F{sK=1A(kW,2H.4r(cm))}}}E aa(){tu=H;if(x.1l){if(2T[0]=="8h"||2T[0]=="1c"){1l(x.mc)}F{x.mc.1S("2k",K)}}if(x.1H.I("1O")==-1){o.7k[x.me]=28;4o o.7k[x.me]}V(B i=0;i<2T.R;i++){tw(2T[i],4v[i])}2F(sK)};E tw(y,z){if(y=="gI"){x.mc.1S("1C",z)}if(y=="8h"){x.mc.C.1C=z}}G.rq=E(){aa()};G.EN=E(){f1=l8-1;kW();aa()};G.XY=E(x0,x1,y0,y1){B e=K;V(B i=0;i<2T.R;i++){if(2T[i]==\'x\'&&x0!=x1){e=H}if(2T[i]==\'y\'&&y0!=y1){e=H}}e?aa():\'\'};E Dk(Dl){bB(Dl){1m"Dm":J[0,0.RE,0.Rr,1.Rs,1.Rt,1.Rv,1.102,0.Rp,0.RC,0.87,0.PZ,0.Q0,1.Q1,1.Q3,1.PX,1.Q6,0.Q7,0.Q9,0.Qa,0.Qb,1.PT,1.EP,1.PS,1.EP,1.PR,0.ji,0.nk,0.nk,0.nk,0.nk,1];1i;1m"bv":J[0,0.PP,0.PO,0.PM,0.PK,0.PJ,0.PI,0.PH,0.Qc,0.PW,0.QA,0.Qx,0.QI,0.QJ,0.QL,0.QF,0.Qn,0.Qu,0.C8,0.95,0.Qh,0.Qi,0.Qk,0.Qf,0.99,0.Qo,0.Qp,0.ji,1];1i;6K:J[0,0.DY,0.32,0.44,0.52,0.6,0.67,0.73,0.Qr,0.82,0.85,0.Qs,0.Qt,0.C8,0.95,0.97,0.Ne,0.KF,1];1i}}};B DK=E(){B N=7S.KE,ua=7S.L7,qG;B M=ua.qF(/(mA|jw|6U|BL|BN)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);B M=ua.qF(/(mA|jw|6U|BL|BN|L9|pD)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);if(M&&(qG=ua.qF(/8i\\/([\\.\\d]+)/i))!=28)M[2]=qG[1];B mp=7S.BY;G.cT=M?M[1]:N;G.8i=M?M[2]:7S.Kv;G.d3=7S.BY>1;G.9S=7S.Fh;G.mA=G.cT=="Kr";G.s5=G.cT=="BZ 9.0";G.ie=G.cT=="BZ"||G.cT=="KZ"||G.cT=="KS";G.pD=ua.cH(/(pD)\\/?\\s*/i)>-1;G.ff=G.cT=="KL";G.6U=G.cT=="KC";G.jw=1z.jw;G.ho=ua.cH("Ku NT")>-1;G.4n=(ua.cH(/(7r|jV|Ks)\\/?\\s*/i)>-1)||(7S.L5===\'KY\'&&mp>1);G.tv=v.Bi!=1&&ua.cH(/(TV|Kq|L4|KQ|L2|KD|KP|KX)\\/?\\s*/i)>-1;G.lg=v.Bi!=1&&ua.cH(/(LG)\\/?\\s*/i)>-1;G.7r=ua.cH(/(7r)\\/?\\s*/i)>-1;G.jV=G.4n&&!G.7r;G.3S=\'L8\'in 1V.ou.C;if(ua.cH(/(cQ)\\/?\\s*/i)>-1){mp>0?G.cQ=H:G.tv=H;if(La(\'(4y:Kz)\').Ky){G.tv=H}}G.2g=(2J.2g==1||G.4n||G.cQ||(ua.cH(/(Ld|Mf|mA mn)\\/?\\s*/i)>-1))&&!G.tv&&2J.MG!=1;G.rO=G.6U||G.jw;G.26=K;if(G.4n){G.MD=3U(ua.1k(ua.I(\'OS \')+3,4).1Q(\'41\',\'.\'));if(G.jV&&(!\'Hd\'in 1z||mp<2)){G.2g=G.4n=K;G.tv=H}}G.ew=!G.2g;G.xD=G.2g||G.d3;G.Db=G.2g||G.tv;G.MC=G.3S&&G.ew;if(o.1R.tM||o.1R.tL||o.1R.tN||o.1R.uj||o.1R.uJ){G.26=H}};E 8s(4u,7z){V(B s in 7z){if(1L(7z[s])==\'3O\'){if(s=="3j"||s=="3i"){4u[s]=7z[s]}F{V(B s2 in 7z[s]){if(1L(4u[s])!=\'3O\'){4u[s]={}}if(1L(7z[s][s2])==\'3O\'){V(B s3 in 7z[s][s2]){if(1L(4u[s][s2])!=\'3O\'){4u[s][s2]={}}if(1L(7z[s][s2][s3])==\'3O\'){V(B s4 in 7z[s][s2][s3]){if(1L(4u[s][s2][s3])!=\'3O\'){4u[s][s2][s3]={}}4u[s][s2][s3][s4]=7z[s][s2][s3][s4];if(s3==\'2U\'||s3==\'2L\'){4u[s][s2][s3][s4]=2Q(4u[s][s2][s3][s4])}}}F{4u[s][s2][s3]=7z[s][s2][s3];if(s2==\'2U\'||s2==\'2L\'){4u[s][s2][s3]=2Q(4u[s][s2][s3])}}}}F{4u[s][s2]=7z[s][s2];if(s==\'2U\'||s==\'2L\'){4u[s][s2]=2Q(4u[s][s2])}}}}}F{if(s.I("MB")>0&&4z(7z[s])===""){}F{4u[s]=xB(s,7z[s])}}}J 4u};B xB=E(1b,5E){if(1L(5E)==\'4F\'){5E=4z(5E);if(1b.I("1u")>-1&&5E!=-1){5E=3z(5E)}}J 5E};E wU(){2S{B 5w=1z[\'3R\'],x=\'Mz\';5w.9s(x,x);5w.rn(x);J H}2E(e){J K}};E xQ(aC){if(aC){if(L(o.7k[aC])){o.7k[aC].rq()}}};B 2P=E(x){B y=x;if(y){y=x.6E(0).yN()+x.4T(1);if(y.I("41")>-1){y=y.1Q(/41/ig," ")}}B en={"of":"of","hO":"hO","My":"Br on Bt","Mx":"Br 2u on Bt","Bu":"Mw at Mv","8B":"nK","Mt":"No","r0":"Ms","m8":"Mr","Mq":"Mp","dT":"Mo 2L","mk":"Mm dX","mj":"Mk","mh":"au 1C","mg":"au 1u","kv":"rh 3M","kb":"rh 1u","kf":"rh 1u 2","e8":"46 kh","r7":"aB 2J","rI":"Mh","dI":"MI","Mu":"MJ to N0","tK":"Nb","pe":"Na","pf":"N8","pg":"BA","AA":"BA","oS":"HD","oK":"N6 HD","N5":"N2 HD","uh":"N1 HD","uc":"MZ HD 4K","ML":"Ad","MV":"Go to MU MT\'s MS","7X":"MR","5q":"MQ","26":"MP 26","Kh":"BI 26"};if(L(en[x])){y=en[x]}if(v.CE==1){if(o[\'n1\'+o.1j.9S]){v.9S=o.1j.9S;v.CE=0}}if(L(o[\'n1\'+v.9S])){if(L(o[\'n1\'+v.9S][x])){y=o[\'n1\'+v.9S][x]}}if(v.qH){if(v.qH[x]){y=v.qH[x]}}J y};B aV=E(x,y,z){if(!L(o.jK[y])&&v.rE!=1){B t=o.cr?o.cr:(v.1P?v.1P:\'\');L(v.8E)?t=v.8E:\'\';if(v.CF[x]==1&&v.Ea==1&&L(v.ky)){if(x=="7C"){7h(CU,MK)}if(L(1z["mU"+v.ky])){1z["mU"+v.ky].CW(\'mW\'+x,{1P:t});1o("CI",\'mW\'+x)}F{1o("CI LD 2u")}}if(v.CN[x]==1){if(v.ga==1){B kC;if(1z.CC){kC={\'LB\':\'LA\',\'Lz\':t};if(v.kM){if(1L(v.kM)=="3O"){V(B g in v.kM){if(v.kM.2r(g)){kC[g]=v.kM[g]}}}}v.Lx==1?1o(\'ga\',\'mW\'+x,kC):\'\';CC(\'1e\',\'mW\'+x,kC)}}}}z?o.jK[y]=H:\'\'};E CU(){if(L(1z["mU"+v.ky])){1z["mU"+v.ky].CW(\'Lu\')}};B p6=E(Z){B x=\'\';Z=Z.1Q("v=","{=");if(Z){if(Z.I(\'p9.be/\')>-1){x=Z.1k(Z.I(".be/")+4);x.1Q("/","")}F{x=Z.2t(/(p9.be\\/|v\\/|qT\\/|Lr\\?|4W.Le\\/B7\\/[^#]*#([^\\/]*?\\/)*)\\??{?=?([^#\\&\\?]*)/)[3]}if(x!=\'\'){if(x.I("?t=")>0){v.1w=x.1k(x.I("?t=")+3);B h=0;B m=0;B s=0;if(v.1w.I("h")>0){h=v.1w.1k(0,v.1w.I("h"));v.1w=v.1w.1k(v.1w.I("h")+1)}if(v.1w.I("m")>0){m=v.1w.1k(0,v.1w.I("m"));v.1w=v.1w.1k(v.1w.I("m")+1)}if(v.1w.I("s")>0){s=v.1w.1k(0,v.1w.I("s"));v.1w=v.1w.1k(v.1w.I("s")+1)}if(h>0||m>0||s>0){v.1w=h*rH+m*60+s*1}}if(x.I("?")>0){x=x.1k(0,x.I("?"))}}}J x};B js=E(x,y,li,ev){if(x=="7C"){o.7C=H}if(ev==1){V(B yi in y){if(y.2r(yi)){if(1L(y[yi])=="3O"){y[yi]=\'\'}}}}if(v.mK==1&&o.7C){if(v.Lq==1||li==1){rr(x,y)}F{if(y!=1G){if(1L(y)==\'3O\'){2S{y=5f.qd(y)}2E(e){}}F{if(1L(y)==\'4F\'){y=y.1Q(/\'/ig,\'′\')}}}if(1L(v.3j)==\'4F\'){if(v.3j.I("{")==0){2S{v.3j=v.3j.1Q(/\\\'/ig,\'"\');v.3j=5f.6N(v.3j)}2E(e){8g.1o(e)}}}if(1L(v.3j)==\'3O\'){if(L(v.3j[x])||L(v.3j[\'r3\'])){B z=x;if(!L(v.3j[x])&&L(v.3j[\'r3\'])){z=\'r3\'}if(x.I("6n")==0){if(L(v.3j[\'22\'])){z=\'22\'}}2S{if(y!==1G){2h(v.3j[z]+"(\'"+x+"\',\'"+v.id+"\',\'"+y+"\')")}F{2h(v.3j[z]+"(\'"+x+"\',\'"+v.id+"\')")}}2E(e){1o("3j",e,x)}}}F{if(v.3j==\'\'){v.3j="Cz"}2S{if(y!==1G){2h(v.3j+"(\'"+x+"\',\'"+v.id+"\',\'"+y+"\')")}F{2h(v.3j+"(\'"+x+"\',\'"+v.id+"\')")}}2E(e){1o("3j",e,x,y)}}}}if(o.7C&&v.AB==1){if(o.Cb){2S{o.Cb.jL.oy({1e:x,8S:y},"*")}2E(e){}}}if(v.Ao==1&&li!==1){B zv={1e:x,1a:o.P?(x=="3D"?o.Ee:o.P.1a()):0};if(y!=1G){zv["29"]=y}if(x=="1n"||x=="1a"){zv["1n"]=o.P.1n()}if(x=="1I"||x=="ar"){zv["1I"]=v.1I}if(x=="1B"){zv["id"]=3v("Ci")}2S{1z.9P.oy(zv,\'*\')}2E(e){};B z=x;x=="7C"||x=="1w"||x=="4f"?z=x+"ed":\'\';x=="1v"?z="Lp":\'\';x=="47"?z="8x":\'\';x=="5o"?z="3p":\'\';x=="ar"?z="Lo":\'\';x=="3D"?z="Lm":\'\';x=="Ll"?z="Lk":\'\';zv["1e"]=z;if(z!=\'\'&&z!=x){zv=5f.6N(5f.qd(zv));2S{1z.9P.oy(zv,\'*\')}2E(e){}}}};B rr=E(x,y){B ev=1V.Lj(\'7v\');if(y!==1G){ev.8S=y}ev.Li(x,H,H);o.1F.Lh(ev)};G.2Y=E(x,y,S){v.Lg==1?1o(\'2Y\',x,y):\'\';J 3v(x,y,S)};E 3v(x,y,S){if(L(o.U)&&1L(x)==\'4F\'){if(o.ju==1){J}if(S){if(1L(S)==\'4F\'){if(S.I("id:")==0){S=o.Q.wq(S.1k(3),"4R");if(S){if(x=="ll"&&y=="Lf"){S.GA()}}}}}if(x=="1v"||x=="3i"){if(L(y)){B bo=K;if(1L(y)==\'4F\'){y=y.1Q(/(\\r\\n|\\n|\\r)/gm,"");B 2b=-1;if(y.I("[3D:")>-1&&y.mQ("]")==y.R-1){2b=y.1k(y.I("[3D:")+6,y.R-1);2b=2b.1k(0,2b.R-1);if(2b=="1a"){2b=o.P.1a()}F{2b=2Q(2b)}y=y.1k(0,y.I("[3D:"));if(y==\'\'){if(o.P.1n()>0){o.U.3Q(2b);o.U.2B();J}F{o.2b=2b;o.U.2B();J}}F{o.2b=2b}}if(y.I("[Cc]")>-1){bo=H;y=y.1Q(\'[Cc]\',\'\')}if(y.I("#"+v.9Y)==0){y=o[o.fd[0]](y)}if(y.I("#"+v.bz)==0&&y.I(v.ea)>0){o[o.fd[1]](y,Cn,x);J}if(y.I("#0")==0){y=c4(y)}if(v.c8==1){y=c8(y)}if(y.I(".9d")==y.R-4){B 4Q=gk(y);4Q.cS=E(){if(G.g1==4&&G.6W==4A){2S{3v(\'1v\',5f.6N(G.df))}2E(e){}}};4Q.eb();J}if(y.I("id:")==0&&L(o.1K)){B z=CP(y);if(L(o.1K[z])){o.Q.Kb(z);2b>-1?o.2b=2b:\'\';J H}F{J K}}if(y.I("Ls:")==0){B z=y.1k(10);if(o.2z=="4W"){o.P.B5(z);J H}F{y=\'//p9.be/\'+z}}}if(x=="1v"){o.Q.Kn();o.U.dG(y,1G,1G,(bo?1:0))}if(x=="3i"){o.ma=H;v.3k=0;o.U.dG(y,1,1G,(bo?1:0));o.Q.3V(0,0);o.1w=K}}F{if(x=="1v"){o.U.2B()}if(x=="3i"){1L Ce==\'E\'?Ce():\'\'}}}if(x=="di"){y?o.P.AJ(y):\'\'}if(x=="4C"){if(L(y)){o.ma=H;o.U.dG(y,1,1)}F{o.P.rN()}}if(x=="47"){if(o.1v){o.U.3f();o.U.jA()}}if(x=="dF"&&L(y)){o.1w&&o.7Y?o.7Y.Cf(y):\'\'}if(x.I("LI")==0){if(o.22){o.22.Mc(x.1k(6),y)}}if(x=="9U"){o.9U.nU();o.9U=1B vG();if(L(y)){o.9U.9d(y)}F{if(v.Ap==1){o.9U.9d(v.Aw)}F{o.9U.9d("Mb a0")}if(v.Au==1&&L(v.At)){o.ej=1B Aq()}}}if(x=="7N"){!o.1w?o.Q.vO():\'\';o.Q.9p();o.Q.Fs("x9")}if(x=="hI"){o.1v?o.U.3f():o.U.2B()}if(x=="2I"){v.4C=0;v.3k=0;o.P.r5();o.U.bW()}if(x=="6z"){o.1a=o.P.1a();o.U.go()}if(x=="6J"){if(v.9y){if(v.9y.on==1&&v.9y.Ma==1){o.U.iC()}}}if(x=="rM"&&L(y)){if(o.5b){o.5b.2Y(y)}}if(x=="3b"){o.Q.IQ()}if(x=="M9"&&L(y)){if(v.22==1){if(y.I(\'js:\')==0){v.6F=y;v.kz=H;o.U.ur("6F")}F{if(o.p!=\'\'){B sv=5f.6N(de(o.p));V(B l in sv){if(sv.2r(l)){if(L(sv[l].id)){if(y==sv[l].id){v.6F=\'M8\'+(L(sv[l][\'rF\'])?\'rF\'+sv[l][\'rF\']:\'\')+y+\'41\'+sv[l].7d;v.kz=H;o.U.ur("6F")}}}}}}}}if(x=="M3"){1L C9=="E"?C9(y):\'\'}if(x=="Cm"&&y){v.Cm=y;o.3t?o.3t.M0():\'\'}if(x=="5o"){o.U.5d()}if(x=="5a"){if(L(y)){o.U.9o(y)}F{J o.5X[o.a7]}}if(x=="dD"){if(v.9y&&o.b5){if(v.9y.b5==1){J 2H.4r((o.b5.6X(LY).R-1)/2H.4r(o.P.1n())*100)}}}if(x=="hQ"){J o.5X}if(x=="ar"){o.U.62()}if(x=="nA"){if(L(y)){v[x]=y;o.U.jR()}}if(x=="cn"){J o.2x}if(x=="Em"){J o.ab?H:K}if(x=="5q"){J o.P?o.P.5R():K}if(x=="uo"){J v.94==1?o.3a.4T(0,-1):o.3a}if(x=="Ig"){o.4Y?o.3y.6S():o.3y.9u(2y(o.Cp,(o.3y.7e()==0?1:0)))}if(x=="dA"){J o.9L}if(x.I("1W:")==0&&y){v[x.1Q(\'1P:\',\'41\')]=y;o.U.jA()}if(x=="LT"){J o.kI}if(x=="ax"){J o.7q}if(x=="1I"||x=="Ct"){if(L(y)){if(1L y=="4F"){if(y.I("+")==0){y=v.1I+3U(y.1k(1))}F{if(y.I("-")==0){y=v.1I-3U(y.1k(1))}}}if(y>=0&&y<=1){o.U.3T(y)}}J o.3p?0:v.1I}if(x=="3p"){J L(o.3p)?o.3p:K}if(x=="LR"){o.Q?o.Q.Kf(y):\'\'}if(x=="aJ"){y<2?y=\'\':\'\';if(2o(o[\'u\'+y])){B x2=5f.6N(de(o[\'u\'+y]));B v2=o.v0?g3(o.v0):{};v=v2;v=8s(v,x2);v=8s(v,2J);v=8s(v,o.nL);B qb=K;if(o.Q.bO()){o.Q.7G();qb=H}B qV=K;if(o.Q.hv()){o.Q.bV();qV=H}o.Q.4e();o.Q=28;o.Q=1B w5();if(o.P.6W()=="7B"){o.Q.2B()}o.Q.3T(v.1I);if(L(v.1P)){9W(v.1P)}if(qb){o.Q.7G()}if(qV){o.Q.bV()}if(o.26){o.Q.8Q()}o.Q.3V(o.P.1a(),o.P.1n());bd()}}if(x=="nI"){J v.nI}if(x=="4H"){o.Q.4H(H)}if(x=="LM"){o.Q.mH()}if(x=="II"){bd()}if(x=="2u"){o.P.5I(x)}if(x=="3D"){if(L(y)){if(1L y=="4F"){if(y.I("%")>-1){y=2Q(y.1k(0,y.I("%")));y=o.P.1n()*y/100}F{B mI=o.P.1a();if(o.3t&&!o.1w){if(!o.3t.nb){B f=o.3t.ay();if(f.t&&f.d){mI=f.t;o.3t.nb=H}}}if(y.I("+")==0){y=mI+3U(y.1k(1))}F{if(y.I("-")==0){y=mI-3U(y.1k(1))}}}}y=y*1;y<0?y=0:\'\';if(o.P.1n()>0){y>o.P.1n()?y=0:\'\'}if(!L(o.22)&&!L(o.5A)&&o.P.1n()>0){o.2b=1G;o.U.3Q(y,H);o.U.qK()}F{o.2b=y}}}if(x=="RW"){8g.1o(y);y?v.1M.3D=y:\'\'}if(x=="26"){!o.26?o.U.8Q():\'\'}if(x=="uW"){o.26?o.U.8f():\'\'}if(x=="MF"){J o.26}if(x=="3M"){J o.2V+\'/\'+o.4B}if(x=="RY"){J o.P?o.P.3M():1G}if(x=="Up"){if(L(o.fo)){o.fo.Do()}}if(x=="FG"||x=="Zz"){if(L(o.fo)){o.fo.Un()}}if(x=="1a"||x=="Cy"){B kD=o.P?o.P.1a():0;if(o.3t&&v.cE==1&&!o.1w&&kD==0){B f=o.3t.ay();if(f.t){kD=f.t}}J x=="Cy"?fJ(kD):kD}if(x=="ZA"){if(o.c7){3v("1v","id:"+o.c7)}if(o.Cx){3v("3D",o.Cx);3v("1v")}}if(x=="1n"){J o.P?o.P.1n():0}if(x=="8a"){J o.P?o.P.9N():0}if(x=="8o"){if(y){v.8o=y;o.Q.kj()}}if(x=="56"){if(L(y)){if(S){v.hd=b4(v.hd,y,S);if(o.2x.R==2){o.U.5Y(v.hd)}}F{o.U.5Y(y)}}F{J o.P?vK(o.P.tX()):0}}if(x=="7X"){if(L(y)){if(y==\'Cs\'){J o.6P*1}if(S){v.qc=b4(v.qc,y,S);if(o.7q.R==2){o.U.dP(v.qc)}}F{o.U.dP(y)}}F{J o.P?o.P.tV():0}}if(x=="Cw"){J o.2z=="4W"}if(x=="xr"){if(o.6P>0){o.p5=o.6P}o.U.dG(o.42[o.nN])}if(x=="7B"){J o.1v}if(x=="mJ"){J o.1w}if(x=="1j"){J o.1j[y]}if(x=="Cu"){o.ju!=1?o.P.uG():\'\'}if(x=="id"){J v.id}if(x=="1o"){v.1o=y}if(x=="mK"){v.mK=y}if(x=="2c"){o.P.zh()}if(x=="ZB"){o.P.zE();if(S){o.qm=b4(o.qm,y,S)}}if(x=="5Z"){o.P.fT()}if(x=="9m"){o.P.dH()}if(x=="2J"&&v.rE!=1){8g.1o(2J)}if(x=="ZC"&&o.3H){o.3H.7C()}if(x=="ZD"&&o.3H){o.3H.5y()}if(x=="1W"){if(L(y)){if(y==\'Cs\'){J o.3r*1}if(y==\'0/1\'){if(o.4Y){o.qk=o.3r;y=-1}F{y=o.qk?o.qk:0}}v.1W=y;if(y.6c().R<3&&o.3y){o.3y.9u(y*1)}F{o.U.fy(y)}}F{J o.3a?o.3a[o.3r]:\'\'}}if(x=="+1W"&&v.1W){if(L(y)){v.1W+=\',\'+y;o.U.fy(v.1W)}}if(x=="bF"){if(L(o.bF)){if(L(y)){o.bF.2Y(y)}F{J o.bF.ZE()}}}if(x=="ve"){if(o.Cq){J o.Cq}F{J K}}if(x=="9l"){J o.P.9l()}if(x=="7y"){if(o.bM){o.bM.4h?o.bM.4h.3m(o.bM):\'\'}o.bM=1Y("2e");o.bM.id=y;o.bM.C.4X=Zy;o.1R.1T(o.bM)}if(x=="Ik"){if(o.4q){B 5j=1Y("5j");B 3M=o.P.3M();5j.Y=3M.Y>0?3M.Y:o.aT;5j.1g=3M.1g>0?3M.1g:o.cC;O(5j,{"1q":"2C","1d":-5j.1g,"1c":-5j.Y,"2k":"1X"});1V.aQ.1T(5j);B 8O=5j.Co(\'2d\');8O.rA(o.P.a1(),0,0,5j.Y,5j.1g);B 56=2;B kr=1V.1Y("5j");kr.Y=5j.Y*56;kr.1g=5j.1g*56;B kG=kr.Co("2d");kG.rA(o.P.a1(),0,0,5j.Y*56,5j.1g*56);if(v.ZF==1&&L(v.qs)){!L(v.kN)?v.kN=20:\'\';!L(v.qo)?v.qo="3F":\'\';kG.3Z=v.kN+"px ZH, ZI";kG.ZJ=3z(v.qo);kG.ZK((v.qs=="jQ"?o.jQ:v.qs),v.kN,5j.1g*56-v.kN-5)}8O.rA(kr,0,0,5j.Y,5j.1g);B 4d;2S{4d=5j.ZL("9E/ZM")}2E(e){8g.1o(e.a0);J K}J 4d}F{J K}}if(x=="3K"){J o.2z==x?o.P.lj():1G}if(x=="1E"){J o.2z==x?o.P.lT():1G}if(x=="2a"){if(!o.1v||v.fK===0){o.P.9A(y);J H}F{J K}}if(x=="Bz"){if(L(y)){y==\'1/0\'?y=1-2y(v.kQ,0):\'\';v.kQ=y;o.P.ki()}F{J 2y(v.kQ,0)}}if(x=="1O"){if(L(y)){if(y==0){o.P.ki()}F{o.P.1O(y)}}F{J[o.3E.x,o.3E.y,o.3L.C.1c,o.3L.C.1d]}}if(x=="1P"){if(L(y)){L(y)?v.1P=y:\'\';o.U.9W(\'1P\');J H}F{J v.1P}}if(x=="ZG"){o.U.BR()}if(x=="2M"){if(y){!o.jN?o.jN=[]:\'\';if(1L(y)==\'3O\'){y=o.jN.9Q(y);x="W"}}}if(x=="W"){if(y){if(1L(y)==\'3O\'){2S{o.U.6a(y);J H}2E(e){J K}}F{if(y.I(".9d")==y.R-4||y.I(".9d?")>0){B 4Q=gk(y);4Q.cS=E(){if(G.g1==4&&G.6W==4A){2S{3v(\'W\',5f.6N(G.df))}2E(e){}}};4Q.eb();J H}F{if(y==\'\'){o.U.6a([])}F{if(y==\'dD\'&&o.kI>0){B 1J=2H.4r(((o.rG+(!o.Q.cJ("dD")?o.P.1a():0))/o.kI)*100);if(1J<o.rt||1J>100){J o.rt}F{o.rt=1J;J 1J}}}}}}}if(x=="6o"){o.Q?o.Q.bb():\'\'}if(x=="dI"){o.Q?o.Q.dJ():\'\'}if(x=="6e"){o.Q?o.Q.jr(y):\'\'}if(x=="6e?"){J o.ac?[o.Zw,o.Zo]:0}if(x=="fB"){o.P?o.P.fB():\'\'}if(x=="ls"){if(L(y)&&L(o.1K)){!o.1v?v.3k=0:\'\';V(B j in o.1K){if(o.1K.2r(j)){if(o.1K[j].e6==y){y=j}}}if(L(o.1K[y])){o.Q.Kd(y);J H}F{J K}}}if(x=="Zv"){B 1J=[];if(L(o.1K)){V(B j in o.1K){if(o.1K[j].5e&&o.1K[j].sN==-1){1J.2M({1P:o.1K[j].1P,id:o.1K[j].id})}}}J 1J}if(x=="Ci"){if(o.3w){J o.1K[o.3w].e6?o.1K[o.3w].e6:o.3w}}if(x=="Zh"){if(o.1K){J 7U.6b(o.1K).R}F{J-1}}if(x=="mO"){if(L(o.mO)){J o.mO}}if(x=="11S"){o.Q.hm(y)}if(x=="Zj"){o.P.kc()}if(x=="1r"){if(y=="on"){v.1r.1l=0}F if(y=="6S"){v.1r.1l=1;o.Q.g2()}F{o.Q.hr()}}if(x=="mP"){o.Q.7G()}if(x=="Zk"||x=="Zl"||x=="Zm"){if(L(y)){o[\'Zg\'+x.4T(-1)]=v[x]=y*1;o.Q.iE(\'3G\'+x.4T(-1))}F{J v[x]}}if(x=="5V"){o[x]=H}if(x=="Zn"){if(o.22){J H}F{J K}}if(x=="Zp"){if(o.22){J D0()}F{J K}}if(x=="Zq"){if(o.22){J o.22.47()}F{J K}}if(x=="Zr"){if(o.22){J o.22.El()}F{J K}}if(x=="Zs"){if(o.22){o.22.Zt()}F{J K}}if(x=="Zu"){if(o.22){o.22.5o()}F{J K}}if(x=="6p"){if(S){v.6p=b4(v.6p,y,S);o.P.6p()}F{J v.6p}}if(x=="8Z"){if(L(S)){v.8Z=b4(v.8Z,y,S)}F{if(L(y)){y==\'0/1\'?y=1-v.8Z:\'\';v.8Z=y}F{J v.8Z}}}if(x=="5D"){if(L(S)){v.5D=b4(v.5D,y,S)}F{if(L(y)){v.5D=y}F{J v.5D}}}if(x=="jM"||x=="le"){B z="d6";x=="le"?z="kV":"";if(L(S)){v.W[z]=b4(v.W[z],y,S)}F{if(L(y)){y==\'0/1\'?y=1-v.W[z]:\'\';v.W[z]=y}}J v.W[z]}if(x=="hd"){if(o.2x.R==2){v.hd=o.2x[o.3l];v.hd=b4(v.hd,y,S);if(o.2x[0]==v.hd){o.U.5Y(0)}F{o.U.5Y(1)}}}if(x=="v"&&y){if(y.I(\'3i\')==0||y.I(\'bk\')==0){J}J v[y]}if(x.I("dV:")==0){B xx=x.1k(7);if(1L(y)==\'3O\'&&1L(v[xx])==\'3O\'){V(B yy in y){if(y.2r(yy)){v[xx][yy]=y[yy]}}}F{if(x.I(\'A1\')==-1){v[xx]=y}}J H}if(x.I("1D:")==0){o.Q.IM(x.1k(5),y)}if(v.zG==1&&x.I("1u")==0&&y){kF(\'5c, 5c > *{--6L\'+x+\':\'+5h(y,v[y.1Q("1u","6d")+\'a\'])+\'}\')}if(x=="ZN"){J o.P?o.P.c9():\'\'}if(x=="Zx"){J o.8i+\' \'+o.ko}if(x=="ko"){J o.ko}if(x=="rK"){J o.rK}if(x=="Ca"){J o.Ca}if(x=="5F"){J o.5F}if(x=="ZO"){J o.22?o.CX:1G}if(x=="9F"){o.U.mY();v.1M.on=0;if(v.sS==1){V(B i=0;i<4V.R;i++){if(4V[i]){if(4V[i].2Y("id")==v.id){4V[i]=28}}}}V(B w in 1z){if(1z[w]==o.G){1z[w]=28}}if(1z.es==v.id){1z.es=\'\'}if(o.3H){o.3H.5y()}o.ju=1;o.1F.1U=\'\';o.G=28}}F{J K}};E Cn(x,y){if(x&&y){3v(y,x)}}E b4(x,y,S){B z=4z(y)+\'\';if(y){if(y.I("/")>0){B y2=y.2t("/");if(y2.R==2){if(x==4z(y2[0])){z=4z(y2[1]);if(S){S.cd(1)}}F{z=4z(y2[0]);if(S){S.cd(0)}}}}}J z}E gk(x){B 4Q=1B BD();4Q.7a(\'BC\',x,H);J 4Q}E CP(y){B z=y.1k(3);if(o.1K){V(B j in o.1K){if(o.1K.2r(j)){if(o.1K[j].e6==z){z=j}}}}J z}E D0(){B x;if(o.22){if(o.22.e2()){x=o.22}}if(!x&&o.5A){x=o.5A}if(x){B y={is:o.3P,1j:x.8S("10h"),8i:x.8S("8i"),10j:x.8S("D7"),Z:o.Di+(x.8S("CY")?x.8S("10k")+x.8S("CY"):\'\'),1H:x.8S("10l"),1n:x.8S("bN"),3i:x.8S("3i"),1a:(o.P?o.P.1a():\'\'),1I:x.10m(),id:o.CX};if(o.3P=="6F"){y.10n=o.10o}J y}}E tY(){if(\'eL\'in 7S){7S.eL.7J=1B 10i({1P:CH(2y(o.cr,v.1P)),10p:[{3c:2y(v.2a,\'\')}]});if(!o.CR){7S.eL.mV(\'1v\',E(){3v("1v")});7S.eL.mV(\'47\',E(){3v("47")});if(o.Q.fN()){7S.eL.mV(\'10r\',E(){3v("dI")});7S.eL.mV(\'10s\',E(){3v("6o")})}o.CR=H}}}B 1Y=E(x){B y=x;x==\'2e\'||x==\'xl\'?y=\'5c\':\'\';B z=1V.1Y(y);if(x==\'xl\'){O(z,{"6Z":"4y","2k":"4M"})}J z};B 1o=E(a,b,c,d,e,f,g){if(v.1o==1||v.r6==1){B x=a+(b!=1G?" "+b:"")+(c!=1G?" "+c:"")+(d!=1G?" "+d:"")+(e!=1G?" "+e:"")+(f!=1G?" "+f:"")+(g!=1G?" "+g:"");8g.1o("CQ"+(v.vQ==1?"2":"")+": "+x);if(v.r6==1&&L(1V.8z("CO"))){1V.8z("CO").1U+=x+\'<br/>\'}}};B A0=E(){if(v.v9==1&&L(v.dR)&&v.dR!=\'\'){B x=1V.1Y(\'gS\');x.9f=\'10t\';v.dR.I(\':\')>0&&v.dR.I(\':lP\')==-1?v.dR=v.dR.1Q(/:/ig,\':lP@\'):\'\';x.9x=\'jo://v9.10u.91/10v?eA=\'+v.dR.1Q(/,/ig,"&eA=").1Q(/ /ig,"+");1V.10w.1T(x)+\'&2k=10x\'}};B FA=E(2e,6d){B x=["vT","eY","oO","iA","dK","10q"];V(B y=0;y<x.R;y++){B z=2e.vR("2v "+x[y]);if(z.R>0){V(B y2=0;y2<z.R;y2++){z[y2].C.6i=6d}}}};B nF=E(){if(v.9y){if(v.9y.10g==1){js("2p")}}};B 46=E(1a){1a<0?1a=0:\'\';B CK=o.P.1n>=fi?H:K;B CL=o.P.1n>=rH?H:K;B 6I=2H.8P(1a/60);B 7K=2H.8P(1a-6I*60);B 8v=2H.8P(6I/60);B kl=2H.8P(8v/24);6I=6I-8v*60;if(kl>0){8v=8v-kl*24}if(v.lp==1&&o.P.5R()){B d=1B 7D();J 6Y(1B 7D(d.9V()+1a*2i).CJ())}F{J 6Y((kl>0?kl+\':\':\'\')+(8v>0||CL?8v+\':\':\'\')+((8v>0||CK)&&6I<10?\'0\':\'\')+6I+\':\'+(7K<10?\'0\':\'\')+7K)}};B fJ=E(x){B 7K=2H.8P(x);B 6I=2H.8P(7K/60);B 8v=2H.8P(6I/60);6I=2H.8P(6I%60);7K=2H.8P(7K%60);8v>0&&6I<10?6I="0"+6I:"";7K=7K>=0?((7K>=10)?7K:"0"+7K):"bR";B 5l=(8v>0?8v+":":"")+(6I>=0?6I:"0")+":"+7K;if(v.lp==1&&o.P.5R()){B d=1B 7D();J 6Y(1B 7D(d.9V()+x*2i).CJ())}F{J 5l}};B DG=E(){J DH((1z.8H!=1z.9P.8H)?1V.lw:1V.8H.9x)};B vK=E(x){if(x){x=x.6c();B qn=x.I(" <7p C=\'1C");if(qn>-1){x=x.1k(0,qn)}}J x};B vg=E(x,y,z){B t;if(!CG(x)&&y){t=1V.1Y(\'pJ\');y=="ZY"?y=x:\'\';t.3c=y.I(\'//\')==-1?\'jo://\'+y:y;t.10f=1;if(z){t.6C=z}B s=1V.er(\'pJ\')[0];s.4h.qj(t,s)}J t};B CH=E(x){if(x){if(1L(x)==\'4F\'){x=x.1Q(/<[^>]*>?/gm,\'\')}}J x};B CG=E(y){B x=K;B pP=1V.er(\'pJ\');V(B i=0;i<pP.R;i++){if(pP[i].3c.I(y)>-1){x=H}}J x};B 5h=E(x,y,z){if(x){if(x.I(\'1u\')>-1||x.I(\'B\')>-1){if(L(y)&&L(z)){z.C.1C=y}J 3z(x)}F{x=x.1Q(\'#\',\'\');B r=2Q(x.R==3?x.4T(0,1).gT(2):x.4T(0,2),16);B g=2Q(x.R==3?x.4T(1,2).gT(2):x.4T(2,4),16);B b=2Q(x.R==3?x.4T(2,3).gT(2):x.4T(4,6),16);if(L(y)){J\'5i(\'+r+\', \'+g+\', \'+b+\', \'+y+\')\'}F{J\'CD(\'+r+\', \'+g+\', \'+b+\')\'}}}};B dy=E(x){if(v.zm&&v.zm!=1){x=x/v.zm}J x};B O=E(e,o){if(L(e)){V(B 1b in o){if(o.2r(1b)){if(o[1b]!=\'ZR\'&&o[1b]!=1G){if(1L o[1b]==\'ZS\'&&1b!=\'3Z-dX\'&&1b!=\'1C\'&&1b!=\'4X\'){o[1b]+=\'px\'}if(1b.I("ZT")>-1&&1b.I("AI")==-1){o[1b]=3z(o[1b])}if(1b=="2W"||1b.I("jJ")>-1){e.C[\'-ms-\'+1b]=o[1b];e.C[\'-nc-\'+1b]=o[1b];e.C[\'-3S-\'+1b]=o[1b];e.C[\'-o-\'+1b]=o[1b]}if(1b=="vw"){if(o[1b].I(" ")>-1){o[1b]=\'"\'+o[1b]+\'"\'}}if(1b=="7y-iX"){e.C.ZU(1b,o[1b],\'5W\')}F{e.C[1b]=o[1b]}}}}}};B xA=E(x,6d,b1,b2){6d=3z(6d);B y=2y(b1,1)*1;B z=2y(b2,1)*1;O(x,{"2w":"ZV-3g-4J(-ZW,"+6d+","+6d+" "+y+"px,5i(0,0,0,0),"+y+"px,5i(0,0,0,0) "+(y+z)+"px)"})};B 3z=E(c){if(c){c.I("1u")==0?c=\'B(--6L\'+c+\')\':\'\';J c.1k(0,1)!=\'#\'&&c.I("B")==-1&&c.I("CD")==-1?c="#"+c:c}F{J\'#gG\'}};B F5=E(x,1u,y){!1u?1u=\'#gG\':\'\';1u=3z(1u);B r=5H(oV,ZQ);x=x.1Q(/\\(zL\\)/g,r);x=x.1Q(/\\(1u\\)/g,1u);x=x.1Q(/\\(hR\\)/g,1+(v.ZX.1O-1)/2);B C7=x.1k(0,x.I(\'|||\'));B qh=x.1k(x.I(\'|||\')+3);B az=\'\';if(o.1j.3S){az=qh.1Q(/5U:/g,"-3S-5U:");az=az.1Q(/5U-/g,"-3S-5U-");az=az.1Q(/@CB/g,"@-3S-CB");az=az.1Q(/2W/g,"-3S-2W")}y?y.1U=C7:\'\';kF(az+qh)};B 7b=E(x,y,f){B z=K;if(x){V(B i=0;i<x.R;i++){if(x[i]){if(f){if(3U(y)==3U(x[i])){z=i;1i}}F{if(6Y(x[i]).I(y)>-1){z=H}}}}}J z};B io=E(x,y){B z=K;if(x&&y){V(B i=0;i<y.R;i++){if(6Y(x).I(y[i])>-1){z=H}}}J z};B kF=E(x){if(o.O){if(o.O.C6){o.O.C6.ZZ=x}F{o.O.1T(1V.D9(x))}}};B fs=E(x){O(x,{"1q":"2C","1d":0,"1c":0,"Y":"100%","1g":"100%"})};B eW=E(x){O(x,{"ag":"1X"})};B 4Q=E(y,z){B x=1B BD();x.7a(\'BC\',y,H);x.cS=z;x.eb()};B 10a=E(x){if(x){V(B i=0;i<5;i++){if(x.10b=="10c"){1i}F{if(x.BB){x=x.BB}}}}J x};B fF=E(z){B fF=1V.1Y("4d");if(o.mR.I(z)>-1){o.mR.2M(z);if(z.I("?")>0){z=z+\'&\'+2H.5H()}F{z=z+\'?\'+2H.5H()}}F{o.mR.2M(z)}fF.7o(\'3c\',z);fF.7o(\'1g\',\'4l\');fF.7o(\'Y\',\'4l\')};B 3Y=E(e,o){V(B 1b in o){if(o.2r(1b)){e.7o(1b,o[1b])}}};B 9F=E(e){if(e){2S{e.4h.3m(e);e=28}2E(e){}}};B 5H=E(9h,5O){J 2H.8P(10d.R>1?(5O-9h+1)*2H.5H()+9h:(9h+1)*2H.5H())};B l7=E(){J 2H.5H().6c(36).10e(2,12)};B qv=E(x,y){x=7U.6b(x).ZP(E(4u,1b){if(1b!=y){4u[1b]=x[1b]}J 4u},{});J x};B 4z=E(x){if(1L x=="4F"){J x.1Q(/^\\s+|\\s+$/gm,\'\')}F{J x}};B 6e=E(x,y,z){B r=K;if(x){if(x.I(y)>-1){B r=x.1k(x.I(y)+y.R);if(z){if(r.I(z)>-1){r=r.1k(0,r.I(z))}}}}J r};B Ze=E(x,n){if(n==0){J"#0"+cL.e(x)}if(n==-1){J cL.e(x)}if(n==1){J"#1"+rz(cL.e(x),1)}};B vE=E(x){if(v[x]!=""){if(1L v[x]!="4F"){o[x+\'o\']=v[x]}F{if(v[x].I("[{")==0){2S{v[x]=v[x].1Q(/6L\'qt/ig,\'"\');o[x+\'o\']=2h(v[x])}2E(e){}}}}};B 5T=E(x){J 6Y.rC(x)};B de=E(x){if(x.1k(0,2)=="#1"){J cL.d(rz(x.1k(2),-1))}F if(x.1k(0,2)=="#0"){J cL.d(x.1k(2))}F{J x}};B xs=E(x){if(x){if(x.I(\'3N\')==-1&&x.I(\'.\')==-1&&x.R>100&&x.I(\'29:\')==-1){x=\'29:9E/vP;jW,\'+x}}J x};B 1l=E(x){x?x.C.5F="3e":\'\'};B 1p=E(x){x?x.C.5F="4w":\'\'};B 3q=E(x){x?x.C.2k="1X":\'\'};B 6T=E(x){x?x.C.2k="4M":\'\'};B 5S=E(x){J x?x.C.5F!="3e"&&x.C.2k!="1X":K};B 5g=E(s){if(1L s=="4F"){if(s.I("px")>0){s=s.1k(0,s.I("px"))}}J 2Q(s)};B 3e=E(x){J x.C.2k=="1X"};B 4b=E(o,x,y){o[x+\'1d\']=0;o[x+\'2m\']=0;o[x+\'2K\']=0;o[x+\'1c\']=0;if(L(o[y])){B z=o[y].2t(" ");if(z.R==4){o[x+\'1d\']=z[0]?3U(z[0]):0;o[x+\'2m\']=z[1]?3U(z[1]):0;o[x+\'2K\']=z[2]?3U(z[2]):0;o[x+\'1c\']=z[3]?3U(z[3]):0}}J o};B YD=E(x){if(x){x=x.1Q(/ /ig,\'px \')}J x+\'px\'};B mC=E(x,y){J v[x]&&v[x]!=\'\'?v[x]:y};B eC=6Y.rC(65,66,67,68,69,70,71,72,73,74,75,76,77,97,98,99,100,101,102,103,104,105,106,107,108,109,78,79,80,81,82,83,84,85,86,87,88,89,90,110,111,112,113,114,115,116,117,118,119,120,121,122);B cL={av:eC+"Zd+/=",e:E(e){B t="";B n,r,i,s,o,u,a;B f=0;e=cL.Bn(e);mB(f<e.R){n=e.bh(f++);r=e.bh(f++);i=e.bh(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(sI(r)){u=a=64}F if(sI(i)){a=64}t=t+G.av.6E(s)+G.av.6E(o)+G.av.6E(u)+G.av.6E(a)}J t},d:E(e){B t="";B n,r,i;B s,o,u,a;B f=0;e=e.1Q(/[^A-Za-z0-9\\+\\/\\=]/g,"");mB(f<e.R){s=G.av.I(e.6E(f++));o=G.av.I(e.6E(f++));u=G.av.I(e.6E(f++));a=G.av.I(e.6E(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+5T(n);if(u!=64){t=t+5T(r)}if(a!=64){t=t+5T(i)}}t=cL.Bm(t);J t},Bn:E(e){e=e.1Q(/\\r\\n/g,"\\n");B t="";V(B n=0;n<e.R;n++){B r=e.bh(n);if(r<128){t+=5T(r)}F if(r>127&&r<Yn){t+=5T(r>>6|Yo);t+=5T(r&63|128)}F{t+=5T(r>>12|Bk);t+=5T(r>>6&63|128);t+=5T(r&63|128)}}J t},Bm:E(e){B t="";B n=0;B r=0;B c1=0;B c2=0;B c3=0;mB(n<e.R){r=e.bh(n);if(r<128){t+=5T(r);n++}F if(r>Yp&&r<Bk){c2=e.bh(n+1);t+=5T((r&31)<<6|c2&63);n+=2}F{c2=e.bh(n+1);c3=e.bh(n+2);t+=5T((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}J t}};B rz=E(s,n){s=s.1Q(/\\+/g,"#");s=s.1Q(/#/g,"+");B a=Bg(o.y)*n;if(n<0)a+=eC.R/2;B r=eC.1k(a*2)+eC.1k(0,a*2);J s.1Q(/[A-Za-z]/g,E(c){J r.6E(eC.I(c))})};B Bg=E(x){x=x.2t(5T(61));B jg=\'\';B c1=5T(120);B qu;V(B i in x){if(x.2r(i)){B qL=\'\';V(B j in x[i]){if(x[i].2r(j)){qL+=(x[i][j]==c1)?5T(49):5T(48)}}qu=2Q(qL,2);jg+=5T(qu.6c(10))}}J jg.1k(0,jg.R-1)};B L=E(x){J x!=28&&1L(x)!=\'1G\'&&x!=\'1G\'};B 2y=E(x,y){J L(x)?x:y};B 2o=E(x){J L(x)&&x!=-1&&x!=\'\'};B wJ=E(x,y){J 2o(x)?x:y};B g3=E(x){if(1L x=="3O"){x=5f.6N(5f.qd(x))}J x};B gQ=E(el){B x=el.C5().1c+(1z.BF?1z.BF:1z.Yq);J x};B fb=E(x){v.Yr==1&&2o(v.BU)?x=v.BU:\'\';J x};B kO=E(el){Ys iA=el.C5();J iA.1d+1z.Ym};B 7c=E(x,y){if(x!=\'\'){if(v.Yt==1||y==\'Yv\'){1z.7a(x)}F{if(v.10z==1||y==\'1d\'){1z.9P.8H.9x=x}F{1z.8H.9x=x}}x=\'\'}};B wn=E(){if(v.4I==1){o.4I?o.1R.3m(o.4I):\'\';o.4I=28}};B Df=E(){B kZ=K;o.1j.tv?1o("tv"):\'\';o.1j.2g?1o("2g"+(o.1j.4n?\' 4n\':\'\')):\'\';G.9W=E(x){o.Q?o.Q.1P(x):\'\'};G.6u=E(x){if(x){if(1L(x)==\'4F\'){x=q9(x)}if(1L(x)==\'4F\'){x=x.1Q(/(\\r\\n|\\n|\\r)/gm,"");if(x.I("[{")==0){2S{x=x.1Q(/6L\'qt/ig,\'"\');x=5f.6N(x)}2E(e){x="B9 5f"}}}if(1L(x)==\'3O\'){o.1K=[];o.jN=g3(x);o.W=sR(x);if(o.W.R>0){if(v.W.Yx==1&&!v.4O){B 6b=7U.6b(o.1K);B qw=6b.4T(-1)[0];qw?v.4O=qw:\'\'}B y=yL();if(y){x=y.3i;o.cr=y.1P;o.Q?o.Q.IJ(y.1P):\'\';if(2o(y.2a)){if(o.P){o.P.9A(y.2a)}F{v.2a=y.2a}}if(L(y.2n)){y.1W=y.2n}if(L(y.1w)){if(y.1w=="3t"&&!o.1w){}F{v.1w=o.2b=y.1w}}7Q("C3");if(L(y.id)){o.3w=y.id}B sx=["1W","nI","qT","Z","j7","C2","C1","nA","fZ","8E","6J","8o","5y","4f","4o","C0","c5","1n","7w","9c","1I"];if(L(v.bY)){if(v.bY.Yy==1&&v.bY.lK==1){sx.2M("1P");sx.2M("t1");sx.2M("t2");sx.2M("t3");sx.2M("t4");sx.2M("t5")}}V(B i=0;i<sx.R;i++){if(L(y[sx[i]])){v[sx[i]]=y[sx[i]];o.nL[sx[i]]=y[sx[i]]}}V(B uv in y){if(uv.I("BX")==0){v[uv.1k(7)]=y[uv]}}je(y);if(sx.I(\'1P\')>0){if(v.bY.DZ==1){o.nw=v.bY.Ed;o.U.md(y)}o.U.9W(\'1P\')}if(L(y.1I)){1A(E(){o.U.3T(y.1I)},4A)}if(o.Q){o.Q.6a(o.W);if(v.9c){o.Q.v1()}}if(o.2Z){o.2Z.o1()}}F{}}}if(1L(x)==\'4F\'){x=q9(x);if(x){if(x.I("#"+v.9Y)==0){x=o[o.fd[0]](x)}if(x){if(x.I("#"+v.bz)==0&&x.I(v.ea)>0){x=o[o.fd[1]](x)}if(x){if(x.I("#0")==0){x=c4(x)}x=q9(x)}F{x=\'\'}}}if(v.c8==1){x=c8(x)}if(x==\'\'){1o("4P 3i");o.aD=H;js("2u","4P")}o.2x=[];o.9B=[];o.7q=[];o.nN=0;o.3l=0;o.6P=0;o.9D=0;v.j4==\'\'?v.j4=\',\':\'\';if((x.I(v.j3)>-1&&x.I(v.e7)>-1)||L(v.cn)){o.42=x.2t(v.j4)}F{o.42=[x]}o.ax=[];if(L(v.cn)){B cn=v.cn.2t(v.j4)}if(o.42.R>0){B q=-1;V(B i=0;i<o.42.R;i++){o.42[i]=4z(o.42[i]);if(o.42[i]!=\'\'){if(o.42[i].I(v.j3)==0&&o.42[i].I(v.e7)>1){o.2x[i]=o.42[i].1k(o.42[i].I(v.j3)+v.j3.R,o.42[i].I(v.e7)-v.e7.R);o.42[i]=o.42[i].1k(o.42[i].I(v.e7)+v.e7.R)}F{if(L(v.cn)){o.2x[i]=L(cn[i])?cn[i]:\'\'}F{o.2x[i]=i+1}}B is=0;if(L(v.4E)&&q==-1){if(6Y(v.4E).I("nu:")==0){if(v.4E.1k(4)*1==i){is=1}}if(v.4E==o.2x[i]){is=1}if(v.4E=="5O"&&i==o.42.R-1){is=1}}if(L(o.4E)){if(o.4E==o.2x[i]){is=1;q=i}}if(is==1){o.nN=i;o.3l=i}o.42[i]=qZ(o.42[i])}}}F{o.42[0]=qZ(o.42[0])}J o.42[o.nN]}}F{J x}};E qZ(x){if(L(v.oX)&&x.I("//")==-1){x=v.oX+x}J x};G.BR=E(){if(o.W){B x=o.W.BQ();V(B i=0;i<x.R;i++){x[i].cW=i}o.W=x;o.Q.6a(o.W)}};E je(y){B tx;V(B i=1;i<6;i++){B t="1D"+i;if(L(y[t])){v[t]=y[t];tx=H}}if(tx&&o.Q){o.Q.IK()}}G.je=E(x){je(x)};G.6a=E(x){if(1L(x)==\'3O\'){o.1K=[];o.jN=g3(x);o.W=sR(x);if(o.Q){o.Q.6a(o.W)}}};G.dG=E(x,y,z,no){if(!L(y)){o.3k=H;o.d5=H}!L(z)?v.4C=0:\'\';v.1n=1G;v.4f=1G;!2J.4o?v.4o=1G:\'\';o.aD!=2?o.aD=K:\'\';o.7J=K;o.9m=K;o.9J=0;o.jK=[];o.uU=K;o.sL=K;o.JT=K;o.9R=1G;o.ne=[K,K,K];o.Yz=l7();o.Dg=0;o.ey=0;o.b5?o.b5=[]:\'\';o.2z!=\'6L\'&&o.3y?o.3y.5y():\'\';if(o.BM){o.BM=[];o.YA=[]}o.bQ=0;o.Yu=0;if(o.ej){o.ej.5y()}if(o.P.6W()=="7B"){G.bW()}if(o.6e&&o.ac){o.Q.jr()}if(L(o.3b)){o.3b.4e()}if(L(o.bX)){2F(o.bX)}js("1B");if(v.22==1&&no!=1){o.U.eV();o.U.eV(\'6F\')}x=G.6u(x);if(y==1){o.2z=\'\'}o.P.6u(x);if((o.1j.2g||o.1j.6U)&&!L(y)){o.U.2B()}if(L(o.kw)){o.3E={x:1,y:1,x0:1,y0:1};o.P.ki()}aV("1v","2B");o.P.jy();o.Q.iI();o.Q.nn();o.Q.4x();o.gw?o.gw.Bx():\'\'};G.md=E(x){B y=K;if(x&&o.nw){v.1P=o.nw;V(B i=1;i<6;i++){if(L(x[\'t\'+i])){v.1P=v.1P.1Q("{"+i+"}",x[\'t\'+i]);y=H}}}J y};G.d0=E(){if(v.3k==1&&!v.BK||o.3k){if(v.kA==1){1A(E(){o.U.2B()},43)}F{G.2B()}v.BK=1;o.3k=K}jR()};G.jR=E(){jR()};E jR(){if(v.wO==1){if(1L BJ!=="1G"){o.th=1B BJ()}}}G.jy=E(){B x=K;if(o.1j.2g){x=H;if(v.Du==1&&o.1j.7r){x=K}if(v.D6==1&&o.1j.jV){x=K}if(v.Dh==1&&o.1j.4n){x=K}if(v.Yk==1&&o.1j.cQ){x=K}}if(v.Yc==1&&o.1j.tv){x=H}J x};G.uO=E(){o.P.3T(v.1I);if(o.3p){o.P.5d()}o.7J=H;o.Q?o.Q.4x():\'\';if(!o.1v&&!o.1w){v.5b==1?o.5b.2Y("47"):\'\'}if(o.54&&o.4q){o.3H.BI();o.3H.Go()}if(v.22==1){if(v.E7!=1&&v.kz==1){!L(o.22)?jF("6F","7J"):\'\'}}};G.AQ=E(){!o.hw?9H(H):\'\'};E 9H(x){o.hw=H;if(o.Q){if(o.Q.bO()){o.Q.7G()}}if(o.2Z){o.2Z.aB()}if(o.9f){o.9f.aB()}!x?o.P.2B():\'\';if(!o.uU){1A(E(){o.P.jy()},43)}!o.1v?o.Q.2B():\'\';v.5b==1?o.5b.2Y("1v"):\'\';v.22==1?o.U.eV(\'eq\'):\'\';if(o.1j.2g){o.Q.eP()}if(L(o.3b)){o.3b.Yj()?o.3b.D1():\'\'}}G.2B=E(bo){if(!o.1v&&o.P){o.gh=H;o.lV=K;o.7n=K;v.6z==9?v.6z=1:\'\';2F(o.yR);B 2I=K;if(o.2z=="4W"){if(!o.P.pa()&&v.3k!=1&&v.4C==1){2I=H;if(1z[\'YT\']){v.3k=1;o.3k=H;o.P.uG()}}}if(v.8B==1&&v.E5==0){o.U.nK();2I=H}if(o.aD||2I){if(o.aD){8e("7d")?pF(2):\'\'}}F{o.ma=K;o.d5=K;zf(!o.1w);o.9U.nU();if(!o.1w){js("1w");o.1w=H;if(v.1r.mD==1){1A(E(){o.Q.qz()},100)}if(v.1r.8j>0&&v.3k==1){o.fx=H;1A(tP,v.1r.8j*2i)}if(v.Y5==1&&v.Y6){Y7()}V(B i=0;i<o.cO.R;i++){if(v[\'DX\'+o.cO[i]]==1){3R.9s("Eq"+o.cO[i],7D.nv())}}if(v.Y8==1&&v.Y9){Ya("1w")}if(o.3y){o.3y.1w()}js("1B");o.iV?o.Q.xT(o.iV):\'\';o.Q.vO();o.Q.4x();aV("1v","2B");o.1j.2g?tY():\'\';o.ab?aV("Em","Y4",1):\'\'}F{aV("El","Yb")}if(v.Ek==1&&!o.26){B dd=1B 7D();B tt=dd.9V();if(tt-o.aX<ep){if(!o.1j.4n&&(v.Ej!=1||o.1j.2g)){G.8Q()}}}if(o.4Y){if(v.tG==1){6T(o.1W)}}if(o.ej){o.ej.5y()}if(bo!=1&&8e("7d")||8e("6R")){pF(2)}F{if(v.7c==1&&L(v.Ei)&&!L(2J.7c)){7c(v.Ei);2I=H}if(!2I){1o("2B");o.P.1n()>0?o.Q.3V(o.P.1a(),o.P.1n()):\'\';if(!o.ud){o.ud=H;if(v.1r.8j>0&&v.3k==1){o.fx=H;1A(tP,v.1r.8j*2i)}}B ny=K;if(o.P.1a()>1&&v.lx==1&&bo!=1&&!8C()&&!L(o.22)&&!L(o.5A)){ny=8e("eq")}if(ny){8C()?9H(K):\'\'}F{9H(K)}}}}}F{o.P?o.P.2B():\'\'}};E tP(){o.fx=K;o.Q.4x()}G.3f=E(){if(o.1v){o.gh=K;1o("3f");o.P.3f();o.Q.3f();js("47");v.sX==1?8n():\'\';v.qC==1?pW():\'\';v.5b==1?o.5b.2Y("47"):\'\';if(o.4Y){if(v.tG==1){3q(o.1W)}}if(!L(o.22)&&!L(o.5A)&&v.lx==0){if(8e("eq")){}F{if(v.E6!=1&&v.kT==1){jF("dU","47")}}}if(8C()){o.lV=H}o.hw=K}};G.5d=E(){o.P.5d();o.Q.5d();o.3p=H;js("5o")};G.62=E(){o.P.62();o.3p=K;o.Q.62();o.P.3T(v.1I);js("ar")};G.3T=E(x,y){if(o.Q){x<0.Yd?x=0:\'\';x>1?x=1:\'\';if(x<=0){G.5d();v.1I=0;x=0}F{if(o.3p){G.62()}v.1I=x}js("1I",x);o.Q.3T(x,y);o.P.3T(x)}};G.9p=E(){o.Q.9p()};G.8A=E(){o.Q?o.Q.8A():\'\'};G.Ye=E(){G.8A()};G.uP=E(){o.U.6y();G.8A()};G.3V=E(1a,1n){if(o.3t&&!o.1w){B f=o.3t.ay();if(f.t&&f.d){1a=f.t}}o.Q?o.Q.3V(1a,1n):\'\'};G.uX=E(1a,1n){if(o.2b>0&&o.2z!="4W"){o.U.3Q(o.2b,K);o.2b=1G}};G.eU=E(){B d=1B 7D();o.aX=d.9V();B x=K;if(o.Q.bO()&&v.1h.7m!=1){o.Q.cj();x=H}if(o.2Z){if(o.2Z.It()){o.2Z.aB();x=H}}if(v.W.7m==0){if(o.Q.hv()&&v.W.dB==1){o.Q.bV();x=H}}if(v.7c==1&&L(v.Ef)&&!L(2J.7c)){7c(v.Ef);x=H}if(o.3p&&v.nC==1){o.U.62();v.nC=0;x=H}if(!x){if(v.1M.on==1&&v.1M.2N==1&&v.1M.qy==1){7l(\'1v\',(o.1v?0:1))}G.ee()}};G.H6=E(){if(o.Q.bO()){o.Q.7G()}};G.ee=E(){if(o.P.6W()=="7B"){js("Kk");v.Yf==1?G.mY():G.3f()}F{js("JX");G.2B()}a2()};G.3Q=E(aw,hn){if(aw<o.P.1n()){if(v.eF.Yg==1){if(aw>o.P.1a()){J}}if(v.4o>0){aw<v.4o?aw=v.4o:\'\'}1o("3Q",aw);o.Ee=aw;o.P.3Q(aw);if(hn){o.Q.3Q(aw,o.P.1n())}o.iP=H;o.gU=o.P.1a();a2(o.gU)}};G.B3=E(Z,4t,Eb){if(o.P.6W()=="7B"&&o.gu!=\'J7\'){3f();if(o.26&&Eb){o.U.8f()}}1z.7a(Z,4t)};G.iC=E(){if(v.22==1&&!o.1w){if(8e("7d")){o.tq=H;J}}B x=o.P.c9();if(L(v.6J)){x=v.6J}if(x!=\'\'){js("6J");B ho=1z.7a(x,(v.Yh==1?\'Yi\':\'tz\'));ho.5V()}};G.6y=E(x){B 1a=o.P.1a();B 1n=o.P.1n();if(!o.1w&&o.2b>0){1a=o.2b}o.Q.j0(1a,1n,x)};G.qK=E(){B 1a=o.P.1a();B 1n=o.P.1n();B aM=1n>0?1a/1n:0;B bQ=2H.pI(aM*100);if(!o.iP){o.Q?o.Q.j0((o.2b>0?o.2b:1a),1n):\'\'}F{1a!=o.gU&&o.gU!=-9?o.iP=K:\'\'}if((v.ga==1||v.Ea==1)&&1n>0){ng("tA","2B 25%",aM,0.25);ng("tB","2B 50%",aM,0.50);ng("tC","2B 75%",aM,0.75)}V(B i=0;i<3;i++){if(!o.ne[i]){if(aM>=i*0.25+0.25){E1(i)}}}v.tF==1?1o(1,1a,1n):\'\';if(v.6z==1||v.tH>0){if(o.1v){B z=K;B n9=K;if(v.E9==1&&v.6z==1){if(!o.P.5R()){z=H}}if(1a>0){if(1a==o.1a&&!z){n9=H}F{o.9J=0}o.1a=1a}F{if(v.YB==1){B ld=o.P.9N();v.tF==1?1o(2,ld,o.n8):\'\';if(!z){if(ld==o.n8){n9=H}F{o.9J=0}}o.n8=ld}}if(n9){o.9J++;if(v.6z==1){v.tF==1?1o(3,o.9J):\'\';if(o.9J==v.uD*(2i/o.oN)){o.U.go()}}F if(v.tH>0&&o.P.rB()>1){if(o.9J==v.tH*(2i/o.oN)){o.P.5I(\'OR xS\')}}}}}if(v.9y){if(v.9y.b5==1&&1n>0){!o.b5?o.b5=[]:\'\';o.b5[2H.4r(1a)]=1}}if(v.22==1){if(v.E7!=1&&v.kz==1){!L(o.22)?jF("6F",1a,1n):\'\'}if(v.E6!=1&&v.kT==1){!L(o.22)?jF("dU",1a,1n):\'\'}}if(v.EO==1&&v.tI>0){if(1a>=v.tI){if(!L(o.22)){if(8e("6R")){o.P.3f();o.Q.3f()}v.tI=0}}}7Q("1v");if(v.8B==1&&v.E5>-1){Yl(1a,1n)}if(o.4Y){a2(1a)}if(o.5w&&v.cE==1){if(o.3t){!o.2b?o.3t.qx(1a,1n):\'\'}}if(o.ac){o.6e?o.6e.1v(1a):\'\'}if(L(v.4f)){B ed=v.4f;if(7b([v.4f],\'-\')){ed=1n}if(ed>0&&1a>ed){o.P.3f();o.P.3Q(v.1w>0?v.1w:0);o.U.o3()}}if(L(v.5y)){B r1=v.5y.2t(",");V(B i=0;i<r1.R;i++){B r2=r1[i].2t("-");if(r2.R==2){if(1a>r2[0]&&1a<r2[1]){o.P.3Q(r2[1]*1+(o.1j.6U?1:0))}}}}if(o.bQ!=bQ&&bQ>0){if(v.YC==1){if(1L E4!=="1G"){E4(1a,1n,bQ)}}if(v.YW==1&&o.dt){if(1L E3!=="1G"){E3()}}}o.bQ=bQ};E E1(x){o.ne[x]=H;if(v.cE==1&&v.E0==1&&v.Eo==x){if(o.5w&&o.3w){o.3t?o.3t.YY(o.3w):\'\'}}}E ng(x,y,t,p){if(!L(o.jK[y])){if(t>p){aV(x,y,1)}}};G.go=E(){o.9J=0;L(o.bX)?2F(o.bX):\'\';if(v.YZ==1){js("6z")}F{o.2b>0||o.P.5R()?\'\':o.2b=o.P.1a()+(v.Z0>0?1:0);B Ep=o.Q.hv();js("6z");o.P.6z();Ep&&v.W.dB==1?o.Q.hm():\'\'}};G.Es=E(){o.Q.j0(0,0);o.Q.yt(0,0);o.U.3V(0,0);o.Q.8A()};G.xN=E(){if(o.P){B 1a=o.P.9N();if(v.Z1==1){js("9N",1a)}B 1n=o.P.1n();o.Q?o.Q.yt(1a,1n):\'\'}};G.o3=E(){js("Z2");o.7n=H;if(v.8Z==1){if(o.2z=="4W"){G.bW()}v.22==1?o.U.eV(\'7d\'):\'\';if(v.1w>0){o.U.3Q(v.1w);o.2b=1G}G.2B()}F{if(o.P.5R()||o.2z=="4W"){G.bW()}F{if(v.EE==1){o.U.3Q((v.1w>0?v.1w:0),H);if(o.1j.ie){o.P.3f()}}}o.Q.8c();v.EO==1?v.Z3=1:\'\';if(8e("l3")||8e("sZ")){}F{aa()}}js("4f")};G.8Q=E(){B 2I=K;B 2u=K;o.EJ=K;o.aF=H;1A(E(){o.aF=K},jf);V(B x in o.7k){if(o.7k.2r(x)){if(L(o.7k[x])){2S{o.7k[x].EN()}2E(e){}}}}2S{o.dW=H;if(((o.1j.4n&&v.f4==1)||(o.1j.cQ&&v.Bs==1))&&o.4q&&!o.9L){B x=o.P.a1();if(x){if(x.YX){gO();2I=H}}}if(!2I){B nl;B y=o.1R;if((o.2z=="dm"||o.2z=="ca")&&o.1j.7r&&v.f4==1){o.P.hL();J}if(y.tL){o.8D=H;nl=y.tL({nr:"1l"});if(nl!==1G){nl.cv(E(){}).2E(E(2u){})}}F if(y.tM){y.tM({nr:"1l"});o.8D=H}F if(o.1R.tN){y.tN({nr:"1l"});o.8D=H}F if(y.uj){y.uj({nr:"1l"});o.8D=H}F if(y.uJ){y.uJ();o.8D=H}}}2E(e){2u=H;1o(e)}if(!o.8D&&!2I){if(o.1j.3S&&o.ox){gO()}F{G.xo()}}if(!2u){1A(EK,4A)}};E gO(){B x=o.P.a1();if(x){if(o.P.1a()==0&&o.1j.4n&&v.Z4!=1){!o.1v?o.U.2B():\'\'}F{o.jh=H;o.P.zs();x.Z6();x.1y("F4",EF)}}}E lc(){B x=o.P.a1();if(x){x.Z7()}};G.gO=E(){gO()};G.lc=E(){lc()};E EK(){if(o.EJ!=H){if(o.8R){o.P.dH()}if(v.1M.uT==1){l0(H);o.5m=H}v.5b==1?o.5b.2Y("m7"):\'\';js("26");aV("m7","8Q",1)}};B cw;B 8b={x:0,y:0};E uw(e){if(o.2Z){if(o.2Z.Z8()){J}}if(e.Z9!=0){e.uN!=0?8b.x++:8b.x--;e.bt!=0?8b.y++:8b.y--;if((v.1M.EG==1||v.1M.EH==1)&&o.26&&8b.y>8b.x){3I(cw);cw=7h(E(){8b={x:0,y:0};3I(cw)},2i)}F{o.9v=H;3I(cw);cw=7h(E(){o.9v=K;o.Q.4H();8b={x:0,y:0};3I(cw)},4c);o.Q.4H();e.96()}if(8b.x>8b.y){if(e.uN>0){o.U.3T(3U(v.1I)-v.1M.jm/10,"no")}F{o.U.3T(3U(v.1I)+v.1M.jm/10,"no")}}F{B st=(o.1j.ho?-v.1M.jm/10:v.1M.jm/10);if(v.1M.EH==1&&o.26){o.P.1O((e.bt>0?st:-st))}F if(v.1M.EG==1&&o.26){3v("3D",(e.bt>0?"+"+st*10:"-"+st*10))}F{o.U.3T(3U(v.1I)+(e.bt>0?st:-st),"no");o.Q.h4()}}}}E EF(){if(o.1j.4n){o.P.B4();js("uW")}o.jh=K}G.xo=E(){if(o.dW){o.26=H;o.Q.8Q();if(!o.8D){if(L(o.8m)){2S{O(o.8m,{\'Y\':\'100%\',\'1g\':\'100%\',\'1q\':\'rc\',\'1c\':0,\'1d\':0,\'4X\':"oV"})}2E(dr){}}O(o.1R,{\'Y\':\'100%\',\'1g\':\'100%\',\'1q\':\'rc\',\'1c\':0,\'1d\':0,\'4X\':"oV"});o.2V=o.1R.2f;o.4B=o.1R.2X;2S{1V.aQ.C.6q=\'3e\';if(!L(o.W)){1V.vm=E(e){e.96()}}}2E(dr){}}if(v.uS==1){O(o.1R,{\'7W\':\'#3X\'})}if(v.uH==1&&o.1j.3S==1&&!o.1j.ff){B sw=1z.b8.Y;B fz=1;V(B i=1;i<6;i++){if(sw>2i*i){fz=2y(v[\'uH\'+(2i*i)],i)}}if(fz>1){o.1R.C.Eu=fz;v.zm=fz;bd()}}if(o.2Z){o.2Z.aB()}a2();o.dW=K}};G.8f=E(){kZ=H;if(1V.ED){1V.ED()}F if(1V.Er){1V.Er()}F if(1V.EC){1V.EC()}F if(1V.EB){1V.EB()}F if(1V.EA){1V.EA()}F if(1V.Ez){1V.Ez()}if(!o.8D){G.xp(K)}};G.H7=E(x,y){sU(x,y)};E sU(x,Ey){if(L(o.22)&&!Ey){o.l5=x}F{B 2I=K;B e9=o.9j/x;B ec=0;B m5={\'1g\':e9};if(v.Zb==1){if(e9>o.9i){e9=o.9i;ec=o.9j/x;o.9j=m5[\'Y\']=ec}}if(L(o.8m)&&v.Av!=1){2S{O(o.8m,m5)}2E(dr){2I=H;1o("dc Zc Z5")}}if(!2I){o.4U=x;o.9i=e9;if(o.4U>0){O(o.1F,m5)}if(ec>0){js("Y",ec)}js("1g",e9)}if(o.22&&!o.26){o.4B=e9;if(ec>0){o.2V=ec}o.22.2A()}}};G.xp=E(x){if(kZ||x){o.26=K;o.jh=K;if(!o.8D){if(L(o.8m)){2S{O(o.8m,{\'1q\':\'pX\',\'1c\':0,\'1d\':0,\'4X\':\'Ev\'});O(o.8m,o.A4);O(o.8m,{\'Y\':o.aT,\'1g\':o.cC})}2E(dr){}}O(o.1R,{\'Y\':o.aT,\'1g\':o.cC,\'1q\':\'2C\',\'1c\':0,\'1d\':0,\'4X\':\'Ev\'});2S{1V.aQ.C.6q=\'2D\';1V.vm=E(e){J H}}2E(dr){}}o.Q.8f();if(v.uS==1){O(o.1R,{\'7W\':v.pz});if(v.dg==1){o.1R.C.7W=\'dg\'}F{O(o.1R,{\'7W\':v.pz})}}if(v.zm>1){o.1R.C.Eu=1;v.zm=1;bd()}if(v.1M.uT==1){l0(K);o.5m=K}if(o.2Z){o.2Z.aB()}a2();o.kY?o.kY=K:\'\';o.Q.n7();kZ=K;js("uW");o.8D=K;o.aF=K}};G.5m=E(x){v.1M.YV!=0?l0(x):\'\'};E l0(x){8b={x:0,y:0};if(x){1z.1y("uQ",uw,{5x:K})}F{3I(cw);1z.6H("uQ",uw)}}G.bW=E(x){v.4C=0;if(x!=1){o.Q.3f();o.U.Es()}F{}o.P.3T(v.1I);if(o.Q.bO()){o.Q.7G()}if(o.3p){G.5d()}a2(0);1o("2I");js("2I")};G.mY=E(){v.4C=0;v.3k=0;v.pj=0;v.6z==1?v.6z=9:\'\';o.P.r5();o.U.bW()};G.5Y=E(x){if(L(o.3l)){if(o.3l!=x){o.3l=x;if(v.wP==1){o.4E=o.2x[x];if(o.5w){3R.9s("wM",o.4E)}}o.P.5Y(x);js("56",o.2x[x]);o.Q.vH(x)}}};G.iH=E(){o.Q?o.Q.iH():\'\'};G.dP=E(x){if(L(o.6P)){if(o.6P!=x){o.6P=x;if(v.Dq==1){o.bs=v.bs=o.7q[x];if(o.5w){3R.9s("wK",o.bs)}}o.P.dP(x);js("7X",x);o.Q.iE("7X")}}};G.9o=E(x,z){x==\'0.0\'?x=0.1:\'\';B y=x;6Y(y).I(\'.\')>0?z=1:\'\';y=y*1;if(!z){y=x==o.dh?1:o.5X[x];o.a7=x}y=3U(y);if(o.jZ||z){o.i9=y;V(B i=0;i<o.5X.R;i++){if(y<=o.5X[i]*1){o.a7=i;1i}}}if(o.5w&&v.Eg==1){3R.9s("Eh",y)}js("5a",y);o.P.9o(y);o.Q.iE("5a")};E a2(x){o.3y?o.3y.1p(L(x)?x:o.P.1a()):\'\'};G.jA=E(){if(o.3y){a2();o.3y.C()}};G.fy=E(x){if(1L(jE)==\'E\'){!o.3y?o.3y=1B jE():\'\';o.3y.xH(x)}};B 7g;B 8I;B ln;B 2l;E 8e(x){if(v["6n"+x+"DW"]>0&&o.5w){B tb=3R.6D("nS"+x+"41"+o.d);if(tb){B ct=1B 7D();o.aX=ct.9V();B Dw=(ct.9V()-tb)/YM;if(Dw<v["6n"+x+"DW"]){J K}}}if(v["6n"+x+"Dt"]>0){if(o.P.1n()>0){if(o.P.1n()<v["6n"+x+"Dt"]*60){if(v["6n"+x+"Ds"]>0){v["6n"+x+"41"+"DQ"]=v["6n"+x+"Ds"]}F{J K}}}}if(o.ku.I("8F")!=-1&&v.22==1&&!o.bo&&v[x+\'s\']==1){if(1L sn=="1G"){J K}if(x=="6R"||x=="sZ"){if(1L Dr!=="1G"){2l=[];J Dr(x)}}if(L(o.22)||L(o.5A)){if(!5S(o.ux)||8C(o.3P)){1o(\'ad bg\');J K}F{1o(\'ad nv\');J H}}F{if(L(v[x])){if(v[x].6c().I(".")>-1||v[x].6c().I(":")>-1||v[x].6c().I("[YU]")>-1){js("YF",x);if(!8C(x)&&x!="dU"){1A(E(){o.1v||(o.5A==28&&o.22==28)?\'\':o.U.9p()},10);g0()}7g=0;8I=0;ln=x;2l=v[x].2t(" gX ");o.5J=[];o.sA=2l.R;lA();o.DD=1;o.lM=H;V(B i=0;i<2l.R;i++){2l[i]=2l[i].2t(" or ")}v[x.9Q("41","iN")]=v[x];v[x]=28;o.3P=x;if(x!=\'dU\'){o.22=1B sn()}o.5A=1B lk();V(B i=0;i<2l.R;i++){V(B j=0;j<2l[i].R;j++){B 7M=4z(2l[i][j]);if(7M.I("[50%]")>0){B 1J=5H(1,2);2l[i][j]=2l[i][j].1Q("[50%]","");if(1J==2){2l[i][j]=\'\'}}}}if(v.sa==1){V(B i=0;i<2l.R;i++){B n=i==0?1:0;if(2l[i].R>n){V(B j=n;j<2l[i].R;j++){B 7M=4z(2l[i][j]);if(o.1j.s5){fH(7M)}F{1A(fH,i*100,7M)}}}}}if(2l[0][0]==\'\'){jp()}F{o.5A.lC(4z(2l[0][0]),x)}J H}F{J K}}F{J K}}}F{J K}};G.ur=E(x){8e(x)};E jF(w,x,d){if(L(o[w+\'o\'])&&v[w+\'s\']==1){B y;V(B i in o[w+\'o\']){if(o[w+\'o\'].2r(i)){if(!L(o[w+\'o\'][i].nj)&&L(o[w+\'o\'][i].1a)&&L(o[w+\'o\'][i].22)){B z=o[w+\'o\'][i].1a.6c();B ok=K;if(z){if(x=="7J"){if(z==x){ok=H}}F{if(z=="47"){if(z==x){ok=H}}if(z.I("%")>0){if(d>0){z=2Q(z.1k(0,z.I("%")))*d/100}F{z=-1}}F{z=2Q(z)}if(x>=z){if(v[\'6n\'+w+\'Dp\']>0&&z>-1){if(x-z>=v[\'6n\'+w+\'Dp\']){z=-1}}if(z>-1){ok=H}}}if(o[w+\'o\'][i].Dn&&o.P.1n()>0){if(o.P.1n()<o[w+\'o\'][i].Dn*1){o[w+\'o\'][i].nj=H;ok=K}}if(ok){y=o[w+\'o\'][i].22;v[w]=o[w+\'o\'][i].22;o[w+\'YG\']=o[w+\'o\'][i].1a;o[w+\'YH\']=o[w+\'o\'][i].YI;if(8e(w)){o[w+\'o\'][i].nj=H;1i}}}}}}}};E lF(){if(8C()){if(o.d2==0||v[\'6n\'+o.3P+\'YJ\']==1){O(o.ux,{"1C":0,"5F":"3e","1d":4c});1o(o.3P+" 1l");o.3P==\'6F\'?o.P.2B():\'\'}}}E 8C(z){B y=K;B x=[\'6F\',\'eq\'];V(B i=0;i<x.R;i++){if(o.3P==x[i]||z==x[i]){if(v[\'6n\'+x[i]+\'YK\']==1){y=H}}}J y};G.8C=E(x){J 8C(x)};G.YE=E(x){x?\'\':l9();o.3P=="6F"?o.Dj.2M(o.Di):\'\'};G.YL=E(){l9()};G.YN=E(){l9()};E l9(){if(8C()){if(o.1v){o.P.3f();o.Q.3f()}1o(o.3P+" 1p");O(o.ux,{"1C":1,"5F":"4w","1d":0});o.pb=1}if(o.jh&&!o.8D){lc()}F{if(v["6n"+o.3P+"fg"]==1&&o.26){o.U.8f()}}};G.YO=E(x){o.5A=28;o.pb=0;1o("8F 3W",o.3P);js("YP",o.3P);if(x.1H=="dU"){B Da=1B YQ(x);o.kT.2M(Da)}F{if(L(o.22)){if(v.4C==0&&v.YR==1&&o.P.1a()==0&&!o.7J){v.4C=1;o.P.rN()}if((!o.22.YS()||x.D7)&&o.sq>0){1o("8F 10y");o.22.4e();o.22=28;o.22=1B sn()}if(8C()){lF()}F{if(o.1v){o.P.3f();o.Q.3f()}}o.sq++;if(o.lM&&v.cY>0){2F(o.cY);o.cY=1A(DT,v.cY*2i*60);if(L(v.D5)){if(v.D5!=\'\'){o.k8?o.k8.5y():\'\';o.k8=1B Zf()}}}o.lM=K;if(v.DV>0){1o("8F 10A");js("10N");1A(su,v.DV*2i,x)}F{su(x)}}F{1o("8F 11X")}}};E su(x){o.22.Go(x)}E DT(){if(L(o.22)){if(o.22.e2()&&o.d2==0){o.22.se();1o("8F xS "+v.cY);2l=[];cA()}}}G.126=E(){js(\'123\',o.3P);1o("8F 2u");sm()};G.jp=E(){sm()};E sm(){B n=lA();1o("8F 6o "+!n);!n?jp():cA()};G.11Z=E(x){if(v[o.3P+"sF"]){V(B i=0;i<3;i++){v[o.3P+"sF"]=v[o.3P+"sF"].1Q(x+(i==0?\' gX \':(i==1?\' or \':\'\')),\'\')}}};E lA(){B x=K;if(o.3P){B 7H=v[\'6n\'+o.3P+\'41\'+\'DQ\'];B jd=v[\'6n\'+o.3P+\'41\'+\'12j\'];if(jd||7H){if(jd>0&&o.tl>0){o.sA=jd;if(o.d2>=jd){x=H}}F{if(7H>0){o.sA=7H;if(o.d2>=7H){x=H}}}}}J x}E jp(){if(2l.R>0&&2l[7g]){if(8I<2l[7g].R-1){1o("8F 12f");o.22?o.22.se():\'\';lF();8I++;B 7M=4z(2l[7g][8I]);B eS=sl(7M);if(eS==\'7w\'){o.5A=1B lk();o.5A.lC(7M,o.3P)}if(eS==\'2u\'){jp()}}F{cA()}}F{cA()}}E sl(7M){B x=\'7w\';if(v.sa==1&&o.5J){B ls=K;B n=0;V(B i=0;i<o.5J.R;i++){if(o.5J[i].lz==0){if(o.5J[i].cR.DM(7M)){o.5J[i].lz=1;B y=o.5J[i].cR.b9();if(y==\'3W\'){o.5A=o.5J[i].cR;1o("8F DM");o.5J[i].cR.fj();x=y}F{if(y==\'\'){x=\'ok\';1o("8F 12g");o.5A=o.5J[i].cR;o.5J[i].cR.12i()}if(y==\'2u\'){x=\'2u\'}}ls=H}if(ls&&o.5J[i].e3==0){n++;if(n<6){sb(o.5J[i])}F{1i}}}}}J x}G.12k=E(x,y){if(x!=\'\'){B z=7g;B s7=K;if(y){V(B j=0;j<2l.R;j++){2l[j]==y?z=j:\'\'}}if(2l.R==1){if(2l[0].R>1&&8I<2l[0].R-1&&2l[8I]){B DI=2l[8I].4T(1,99);2l[0].rZ(8I+1,99);s7=H}}if(1L(x)=="3O"){V(B i=0;i<x.R;i++){2l.rZ(z+i+1,0,[x[i]]);if(o.1j.s5){fH(x[i])}F{1A(fH,i*100,x[i])}}}F{if(1L(x)=="4F"){2l.2M([x]);fH(x)}}if(s7){2l[2l.R-1]=2l[2l.R-1].9Q(DI)}}};G.12a=E(x,y){if(x!=\'\'){B z=7g;if(y){V(B j=0;j<2l.R;j++){2l[j]==y?z=j:\'\'}}if(2l[z]){if(1L(x)=="3O"){V(B i=0;i<x.R;i++){2l[z].2M(x[i])}}F{if(1L(x)=="4F"){2l[z].2M(x)}}}}};G.cA=E(x){cA(x)};E fH(x){if(v.sa==1&&o.5J){B i=0;V(B i=0;i<2l.R;i++){if(2l[i]==x){if(7g>=i){J}F{}}}if(2l.R==1&&2l[0].R>1){}F{B n=0;V(i=0;i<o.5J.R;i++){o.5J[i].lz==0?n++:\'\'}o.5J.2M({e3:0,lz:0,x:4z(x),t:o.3P,cR:1B lk(H)});n<5?sb(o.5J[o.5J.R-1]):\'\'}}}E sb(x){if(x){x.e3=1;x.cR.lC(x.x,x.t)}}E cA(kn){B 2I=lA();1o("8F 5y ("+o.d2+")");if(2l.R>0&&7g==2l.R-1){if(2l[0][0].I("js:")==0){7g=-1;2l=[[2l[0][0]]]}}if(o.12d==2){2I=H}if(2l.R>7g+1&&!2I){o.22.se();lF();7g++;o.DD++;8I=0;B 7M=4z(2l[7g][0]);B eS=sl(7M);if(eS==\'7w\'){o.5A=1B lk();o.5A.lC(7M,ln)}if(eS==\'2u\'){cA(kn)}}F{gs();o.Q.8A();if(L(o.22)){o.22.4e();o.22=28}o.5A=28;2l=[];8I=0;7g=0;o.pb=0;o.DA!=1?js("11Y",o.3P):\'\';o.DA=0;if(v.Bw==1){if(o.gq){2S{o.gq.xY()}2E(e){1o(o.gq,e)}o.gq=1G}}ln=\'\';o.d2=0;o.Dz=0;2F(o.cY);3I(o.11T);o.k8?o.k8.5y():\'\';o.bI?o.bI.1l():\'\';o.tl++;if(o.3P=="7d"||(o.3P=="eq"&&v.lx==1&&o.gh)||o.3P=="6F"){if(v.3i!=\'?\'){o.P.cs();B re;if(o.tq){o.U.iC();o.tq=K;re=H}if(o.2z=="4W"&&!o.sW&&o.1j.4n){re=H;o.3P=="7d"?o.P.zM():\'\'}if(re||kn==\'kn\'||v.11V==1||o.lV){o.lV=K}F{o.U.2B(1)}}}if(o.l5>0){sU(o.l5);o.l5=0}if(o.3P=="l3"){aa()}o.sW=K;o.3P=28}};G.129=E(){2l=[[\'\']]};G.eV=E(y){B x=[\'7d\',\'eq\',\'l3\',\'6R\',\'sZ\'];B z;V(B i=0;i<x.R;i++){z=K;if(y){y!=x[i]?z=H:\'\'}if(!z&&L(v[x[i].9Q("41","iN")])){v[\'6n\'+x[i].9Q("41","zO")]--;if(v[\'6n\'+x[i].9Q("41","zO")]>0){v[x[i]]=v[x[i].9Q("41","iN")];v[x[i].9Q("41","iN")]=28}}}if(y=="7d"||y=="6F"){if(v.tE>1){if(L(o.t0)&&v.kz==1){V(B i in o.t0){o.t0[i].nj=1G}v.tE--}}}};G.nK=E(){g0();if(L(o.8B)){o.8B.4e();o.8B=28}o.8B=1B 12c()};G.11W=E(){gs();o.8B.4e();o.8B=28};G.g0=E(){g0()};G.gs=E(){gs()};E g0(){if(o.a9){}F{o.a9=1Y("2e");o.1R.1T(o.a9);fs(o.a9);O(o.a9,{"2w":"#3X","1C":0.1});o.a9.C.4X=J0}};E gs(){if(o.a9){o.1R.3m(o.a9);o.a9=28}};E 8n(){if(L(o.2a)){B p=o.26?2y(v.124,v.2a):v.2a;if(p!=o.xu){9A(p,o.2a,v.gy)}1p(o.2a);O(o.2a,{"1C":v.nH});o.Q.4x();o.g7?o.g7.1v():\'\'}};G.g4=E(){if(L(o.2a)){if(5S(o.2a)){3I(o.xG);B t=o.P.1a();if(t==0&&v.A6==1){}F{if(v.zH>0){2F(o.sY);o.sY=1A(pW,v.zH*2i)}F{pW()}}}}};E pW(){2F(o.sY);if(v.sX==1&&!o.1v){}F{O(o.2a,{"1C":0});1A(zD,43)}}E zD(){if(!o.1v&&v.fK==1){}F{1l(o.2a);o.g7?o.g7.47():\'\';o.Q.4x()}}G.8n=E(){8n()};E zf(x){if(v.sS==1){V(B i=0;i<1z.4V.R;i++){if(1z.4V[i]){if(1z.4V[i].2Y("id")!=v.id){1z.4V[i].2Y(\'47\')}}}}1z.es=v.id}E sR(x){B y=7U.6b(x).R;o.kI=0;if(y>0){x=tn(x,y,\'\',-1)}J x}E tn(x,y,p,j){B x2=[];B 2I;if(L(x[\'W\'])){x=x[\'W\'];y=x.R}B ii=0;V(B i=0;i<y;i++){2I=K;if(L(x[i][\'id\'])){x[i][\'e6\']=x[i][\'id\']}x[i][\'id\']="x"+p+\'-\'+i+(L(x[i][\'id\'])?\'-\'+x[i][\'id\']:\'\');j==-1&&i==0&&!L(x[i][\'5e\'])?o.kx=x[i][\'id\']:\'\';if(!L(o.kx)){j==0&&!L(x[i][\'5e\'])?o.kx=x[i][\'id\']:\'\'}x[i][\'kk\']=p;x[i][\'sN\']=j;x[i][\'cW\']=ii;if(L(x[i][\'1n\'])){o.kI+=x[i][\'1n\']}if(L(x[i][\'yV\'])){x[i][\'1P\']=x[i][\'yV\'];B q1=x[i][\'3i\']?x[i][\'3i\'].I(\'[\'):0;B q2=x[i][\'3i\']?x[i][\'3i\'].I(\']\'):0;if(q1>0&&q2>0){B s1=x[i][\'3i\'].1k(q1+1,q2-q1-1);B s2=s1.2t(",");B s3=\'\';V(B k=0;k<s2.R;k++){s3+="["+s2[k]+"]"+x[i][\'3i\'].1Q("["+s1+"]",s2[k])+(k<s2.R-1?",":\'\')}x[i][\'3i\']=s3}}if(L(x[i][\'W\'])){x[i][\'5e\']=x[i][\'W\']}if(!L(x[i][\'5e\'])){if(L(x[i][\'3i\'])){if(x[i][\'3i\']==\'\'&&!L(x[i][\'7c\'])){2I=H}}F{2I=H}}if(!2I){o.1K[x[i][\'id\']]=x[i];ii+=1}if(L(x[i][\'5e\'])){B z=7U.6b(x[i][\'5e\']).R;if(z>0){x[i][\'5e\']=tn(x[i][\'5e\'],z,x[i][\'id\'],i)}}if(!2I){x2.2M(x[i])}}J x2}E yL(){B x=[];if(L(v.4O)){if(v.4O.I("x-")!=0){V(B y in o.1K){if(o.1K.2r(y)){if(o.1K[y].e6==v.4O){v.4O=y}}}}if(L(o.1K[v.4O])){v.W.12h==1?v.W.w6=0:\'\';x=o.1K[v.4O]}F{x=o.W[0];if(v.4O==o.yQ){o.2b=1G}}}F{x=o.W[0]}if(x){V(B i=0;i<10;i++){if(L(x[\'5e\'])){x=x[\'5e\'][0]}F{1i}}v.4O=x.id;if(v.4O==o.yQ&&x.1w!=\'3t\'){x.1w=1G}}J x}G.fP=E(){J fP()};E fP(){B x=K;if(o.Q){if(o.Q.fN()){if((v.W.d6==1||v.jM==1)&&o.Q.bu()){x=H}}}J x};E aa(){aV("4f","aa",1);o.U.eV();if(o.5w&&v.cE==1){o.3t.qx(0,o.P.1n())}if(o.Q.fN()){if(fP()){if(L(v.W.zS)){o.yR=1A(E(){o.Q.bb()},v.W.zS*2i)}F{o.Q.bb()}}F{sc()}}F{if(v.12b==1&&o.26){o.U.8f()}rW()}}G.Az=E(){sc()};E sc(){if(v.W.kV==1&&!o.Q.bu()){o.Q.na();J}if(v.W.GP==1){!o.Q.hv()?o.Q.bV():\'\'}rW()}E rW(){v.5b==1?o.5b.2Y("4f"):\'\';js("11U");if(v.7c==1&&v.12e==1&&2o(v.AE)){7c(v.AE)}if(v.9f){if(1L AD!=="1G"){!o.9f?o.9f=1B AD():o.9f.B3()}}!o.9f?8n():\'\'}E q9(x){if(x.I(\'js:\')==0){2S{x=2h(x.1k(3))}2E(e){8g.1o(e.a0)}}J x?x:\'\'}};B vt=E(Z){B Z;B 3J;B oY;B 7E;B fO="";B db=0;B kt=K;B ot=K;B uV;B P;B 3n;o.3E={x:1,y:1,x0:1,y0:1};B 9Z;B jb=[];B oq=0;B eJ=0;B j6;if(1L(Z)==\'4F\'){Z=4z(Z);if(Z.I("[{")==0){2S{Z=Z.1Q(/6L\'qt/ig,\'"\');Z=5f.6N(Z);9Z?Z=o.U.6u(Z):\'\'}2E(e){8g.1o(e);Z="B9 5f"}}if(Z.I("#"+v.9Y)==0){Z=o[o.fd[0]](Z)}if(Z){if(Z.I("#"+v.bz)==0&&Z.I(v.ea)>0){9Z=H;o[o.fd[1]](Z,aK)}}if(Z){if(Z.I("#0")==0){if(Z.I(o.dN)>0){Z=c4(Z.1Q(o.dN,\'\'))+o.dN}F{Z=c4(Z)}}}if(v.c8==1){Z=c8(Z)}if(1L(Z)==\'4F\'){if(Z.I(".aO")==Z.R-4||Z.I(".9d")>0){jb=Z.2t(" or ");sC()}}}o.3L=1Y("2e");fs(o.3L);O(o.3L,{"5v":"2W 0.2s 3g","1D-8d":"8y"});o.1R.1T(o.3L);if(v.1M.B6==1){if(!o.sH){rL(o.3L,\'o.B6\',v.1M.jk!=1,v.1M.jk==1,AU);o.sH=H}}if(!9Z){aK()}E AU(){B p=o.3L.hX;B p2=o.2V;if(v.1M.jk==1){p=o.3L.oH;p2=o.4B}B x;if(p>p2*2y(v.1M.B0,0.5)){if(o.Q.f8()){x=H;o.Q.dJ()}}F{if(p<-p2*2y(v.1M.B0,0.5)){if(o.Q.bu()){x=H;o.Q.bb()}}}if(x){if(v.1M.jk==1){O(o.3L,{"1d":0})}F{O(o.3L,{"1c":0})}}F{1B 5B({mc:o.3L,1H:(v.1M.jk==1?"1d":"1c"),to:0,1a:0.1,6r:"Kj",me:"sH"})}}E sC(){Z=jb[oq];if(Z.I(o.dN)>0){Z=Z.1Q(o.dN,\'\');v.3i=Z}B 4Q=gk(Z);4Q.cS=E(){if(G.g1==4&&G.6W==4A){bV(G);o.Q.Ho()}F{ov(1)}};4Q.sG=E(e){ov(3)};4Q.eb();9Z=H}E ov(x){if(jb.R>1){if(oq+1<jb.R){oq++;sC();x=0}}if(x==1){5I("W fQ po or Ay Af")}if(x==2){5I("11j 5f")}}E bV(x){if(x.df){B y=x.df;if(y.I("#"+v.9Y)==0){y=o[o.fd[0]](y)}if(y.I("#"+v.bz)==0&&y.I(v.ea)>0){y=o[o.fd[1]](y)}if(Z.I(".aO")==Z.R-4){B aO=y.2t(/(\\r\\n\\t|\\n|\\r\\t)/gm);Z=[];B sB=1;B j5=\'\';V(B i=0;i<aO.R;i++){if(aO[i].I("#11R")>-1){if(aO[i].I(" - ")>-1){B 1J=aO[i].2t(" - ");j5=1J[1J.R-1]}}if(aO[i].I("3N")>-1){Z.2M({1P:""+(j5!=\'\'?j5:sB),3i:aO[i]});sB++;j5=\'\'}}}F{y=y.1Q(/(\\r\\n\\t|\\n|\\r\\t)/gm,"");2S{Z=5f.6N(y)}2E(e){8g.1o(e.a0);ov(2)}}if(o.Q){if(v.W.lN==1){o.Q.hm(2)}}aK();bd();1A(E(){js("W")},1)}}E aK(x){Z=o.U.6u(x?x:Z);Z&&Z!=\'?\'?6u(Z):\'\';o.1v&&x&&!o.22?o.P.2B():\'\'}E 5I(x,A5){B y=H;B yy=H;js("10T",x);if(o.ju){J}if(A5!=1&&v.6z==1&&v.uA==1){ul();J}if(3J){if(o.1v||o.gh||(v.3k==1&&!o.1w)){if(3J.R>0){7E++;y=7E>3J.R-1;if(y&&3J.R>1&&v.ey>0){if(o.ey<v.ey){7E=0;y=K}o.ey++}if(y&&v.10U==1){if(o.42.R>1){if(o.2x[o.3l].I(2P("eM"))==-1){o.2x[o.3l]=o.2x[o.3l]+\' (\'+2P("eM")+\')\'}if(o.3l>0){yy=K;o.U.5Y(o.3l-1);kL()}F{if(o.2x[o.3l+1].I(2P("eM"))==-1){yy=K;o.U.5Y(o.3l+1);kL()}}}}if(!y){o.2b>0||!o.1w||P.5R()?\'\':o.2b=46();if(o.2z!=oh(3J[7E])||!o.4q){if(o.1v){o.U.bW(1)}}o.f5=K;if(v.sr>0){2F(o.f7);o.f7=1A(jP,v.sr*2i)}F{jP()}}F{if(v.6z==1&&yy&&v.uA!=1){y=K;ul()}}}}F{y=K;if(!o.1w){jP()}}}if(y&&yy&&x){uz(x,H)}};E jP(){if(o.ju){J}if(o.1v||o.gh||(v.3k==1&&!o.1w)){1o("10V cI",o.2b);6u(\'or\');o.1w&&!o.22?P.2B():\'\';kL()}F{if(!o.1w){if(3J.R>0){if(7E+1<3J.R){7E++;o.ey++;6u(\'or\')}}}F{2F(o.f7);o.f7=1A(jP,2o(v.sr,5)*2i)}}}E uz(x,mr){aV("2u","hG",H);o.d5=K;if(v.Ae==1&&!o.aD){if(v.Ap==1){o.9U.9d(v.Aw)}F{o.9U.9d(x)}if(v.Au==1&&L(v.At)){o.ej=1B Aq();o.U.g4()}}mr?o.aD=H:\'\';if(o.1v){o.U.8A();o.Q.3f()}L(o.2a)&&!L(o.ej)?o.U.8n():\'\';js("2u",x)}E ul(){eJ++;1o("hG go zB "+eJ);o.1v?o.mZ=1:\'\';L(o.bX)?2F(o.bX):\'\';o.bX=1A(An,v.uD*2i)}E An(){B x=2y(v.10W,10);if(o.1v||o.mZ==1){o.mZ=0;if(eJ<x){o.U.go()}F{if(v.uA==1){5I(P.iK(),1)}F{uz(\'go hG \'+P.iK())}}}}G.5I=E(x){5I(x?x:P.iK())};G.8c=E(y){1o("o3");kt=H;2F(j6);B x=K;if(3V()>0&&!o.54&&!y){B 1a=o.EQ;if(1a+10<3V()){1o(\'10X (Ah)\');js("Ah");P.2B();P.3Q(1a);x=H}}if(!x){o.U.o3()}};G.9H=E(){if(v.qC==1){L(o.2a)?o.U.8n():\'\'}v.fK==1?o.U.g4():\'\';o.Q.2B();o.U.AQ();if(v.10Y==1&&L(v.tk)){if(v.tk.R>5){qU();3I(uV);uV=7h(qU,v.Am*2i)}}js("1v")};G.jy=E(){if(v.my==1&&o.4q){if(o.U.jy()){o.9L=P.sQ();o.Q.4x();tR()}}o.uU=H};G.eO=E(){46()>0&&46()==3V()&&o.U.fP()?\'\':o.U.3f()};G.iD=E(){1o("10S")};G.h3=E(){1o("uP");o.U.uP();L(o.gU)?js("3D",o.gU):\'\'};G.bL=E(){1o("uO");eJ=0;o.U.uO();o.2z=="1E"?qY(1):\'\'};G.aq=E(){if(P){1o("3V",3V());o.U.3V(46(),3V());js("1n",3V());eJ=0;2F(o.bX);if(L(o.p5)){o.U.dP(o.p5);o.p5=28}}};E 46(){B x=P.1a();J x}E 3V(){B x=P.1n();J x}G.dz=E(){};G.9w=E(){1o("9p");o.U.9p();js("7N")};G.ch=E(){if(db!=46()){if(!o.a9){o.U.8A();if(db==0){if(v.fK==1&&v.A6==1){o.U.g4()}}}}db=46();B bN=3V();js("1a",db);if(v.2c.on==1){if(1L(A9)==\'E\'){!v.di&&v.2c.di?v.di=v.2c.di:\'\';if(!3n&&v.2c.3G!=1&&v.di&&v.di!=\'\'&&db>0){o.dM=1B A9();3n=o.dM.eG()}}}if(o.2z=="1E"&&o.1j.6U&&bN>0){if(o.1v&&db>bN-1){2F(j6);j6=1A(Aa,4c)}}};E Aa(){if(!kt){o.U.3f();o.P.8c()}}G.uG=E(){if(o.2z=="4W"){P?P.pa():\'\'}};G.B5=E(x){o.U.bW();P.AS(x)};G.K6=E(x){if(L(x)){if(3n){3n.3T(x)}v.2c.1I=x}};G.AJ=E(x){if(L(x)){if(3n){3n.3c(x);3n.2B()}}};G.pa=E(){if(o.2z=="4W"&&P){J P.3W()}F{J H}};G.lT=E(){J o.2z=="1E"?P.lT():1G};G.lj=E(){J P.lj()};G.5Y=E(x){1o("10Z",x);if((o.2z=="dA"||o.2z==o.ws||(o.2z=="1E"&&(v.9n==0||aj()<2))||(o.2z=="3K"&&(v.o0==0||cV()<2)))&&L(o.42[x])){B 1a=G.1a();o.2b>0?\'\':o.2b=1a;o.U.3Q(1a,K);6u(o.42[x],H);B y=H;if(v.1h){if((v.1h.11b==1&&!o.1v)||!o.1w){y=K}}if(o.9D>0){P.eB(o.9D)}if(y){o.U.2B()}}if(o.2z=="1E"&&v.9n==1&&aj()>1){P.JV(x)}F if(o.2z=="3K"&&v.o0==1&&cV()>1){P.FS(x)}F if(o.2z=="4W"||o.2z=="dm"){P.sh(x)}};G.HG=E(x,y){J jD(x,y)};G.sE=E(x,y){J zn(x,y)};E jD(x,y){B r=x.1g+\'p\';if(x.1g<4A){r=\'tK\'}F if(x.1g>=4A&&x.1g<=ep){r=\'pe\'}F if(x.1g>ep&&x.1g<=jG){r=\'pf\'}F if(x.1g>jG&&x.1g<=43){r=\'pg\'}F if(x.1g>43&&x.1g<=fi){r=\'AA\'}F if(x.1g>fi&&x.1g<=AN){r=\'oS\'}F if(x.1g>AN&&x.1g<=zT){r=\'oK\'}F if(x.1g>zT&&x.1g<=yZ){r=\'uh\'}F if(x.1g>yZ&&x.1g<=zd){r=\'11c\'}F if(x.1g>zd){r=\'uc\'}if(x.Y==11d&&x.1g<=11e){r=\'pe\'}F if(x.Y==yY&&x.1g<=yI){r=\'pf\'}F if(x.Y==11f&&x.1g<=11g){r=\'pg\'}F if(x.Y==11a&&x.1g<=10Q){r=\'oS\'}F if(x.Y==10B&&x.1g<=10P){r=\'oK\'}F if(x.Y==10O&&x.1g<=10M){r=\'uh\'}F if(x.Y==10L&&x.1g<=10K){r=\'uc\'}if(v.1h.10J==1&&L(v.1h[\'6C\'+r])){r=v.1h[\'6C\'+r]}F{if(y==1){r=2P(r)}if(y==2&&L(x.9R)){r=2Q(x.9R/2i)+\' \'+2P(\'hO\')}}J r};E zn(x,y){B r=x.n6();if(r=="10I"||r=="en"){x="10H"}F if(r=="10G"||r=="ru"){x="Русский"}if(1L(v.oU)=="3O"){if(L(v.oU[x])){x=v.oU[x]}F{x=2y(v.oU[y.6c()],x)}}J x};E tR(){if(o.4q&&o.1Z&&!o.uq){P.us();V(B i=0;i<o.1Z.R;i++){if(o.1Z[i]!=\'9X\'){P.IO(o.1Z[i],o.3a[i],(i==o.3r))}}o.uq=H}}G.9o=E(x){1o("10F",x);x=3U(x);P?P.fU(x):\'\';if(v.2c.on==1){if(3n){3n.fU(x)}}};G.zs=E(){tR()};G.B4=E(){P.us()};G.dP=E(x){1o("10E",x);if(o.ax.R>0){if(o.ax[x]){B 1a=G.1a();o.2b>0?\'\':o.2b=1a;o.U.3Q(1a,K);6u(o.ax[x],H);o.U.2B()}}F{if(o.2z=="1E"&&v.bA==1){P.Ia(x)}F if(o.2z=="3K"&&v.zt==1){P.FT(x)}F if(o.4q){P.eB(x)}}};G.tX=E(){B x=o.2x[o.3l];x==1G?x=\'\':\'\';B y=jv()&&v.af==1&&v.9n==1&&x!=2P("2D");J(y?\'\'+2P("2D")+\' \':\'\')+x};G.tV=E(){B x=o.7q[o.6P];x==1G?x=\'\':\'\';J x};G.jv=E(){J jv()};E jv(){B x=K;if(P){if(o.2z=="4W"){x=P.2D()}if(o.2z=="1E"&&v.9n==1&&aj()>1&&v.af==1){x=P.2D()}if(o.2z=="3K"&&v.o0==1&&cV()>1){x=P.2D()}}J x}E aj(){if(o.2z=="1E"){J P.aj()}F{J 0}}E cV(){if(o.2z=="3K"){J P.cV()}F{J 0}};G.9l=E(){J o.4q?P.9l():o.4U};G.4H=E(x){if(P&&(o.rP||L(v.9l))){P.4H()}if(v.ym>0){O(o.3L,{"1g":(o.26?"100%":o.cC-v.ym)})}if(o.3n&&v.2c.zF==1){o.dM.4H()}if(v.qN==1){10D()}if(o.ta){o.ta.4H()}};G.3M=E(){J P?P.3M():{}};G.hL=E(){P.hL()};G.6z=E(){1o(\'6z\');o.9J=0;o.1w?v.3k=1:\'\';o.U.9p();if(Z&&v.10C!=1){if(Z.I(\'(5H)\')==-1){Z=Z+(Z.I(\'?\')==-1?\'?\':\'&\')+\'zL=(5H)\'}}if(Z){if(o.4q){P.3c(Z);G.2B()}F{6u(Z)}}};if(!L(o.2a)){qJ()}if(L(v.2a)){if(v.2a!=\'\'){9A(v.2a,o.2a,v.gy);if(v.qC==1&&!o.1w){1l(o.2a)}}F{v.2a=28}}E b9(){fO=P?P.6W():\'\'}E ze(Z){3J=Z.2t(" or ");V(B i=0;i<3J.R;i++){if(3J[i].I(" gX ")>-1){oY=3J[i].2t(" gX ");3J[i]=oY[5H(0,oY.R-1)]}if(L(v.oX)&&3J[i].I("//")==-1){3J[i]=v.oX+3J[i]}}7E=0}E zY(){b9();if(fO=="7B"||o.54){o.U.qK()}if(fO!=""){o.U.xN()}}E qJ(){if(o.2a){o.1R.3m(o.2a)}o.2a=1Y("2e");O(o.2a,{"4y-3j":"1X","1C":v.nH,5v:"1C 0.5s"});if(v.qN==1){11h()}F{O(o.2a,{\'1q\':\'2C\',\'1c\':0,\'1d\':0,\'Y\':\'100%\',\'1g\':\'100%\'})}o.1R.1T(o.2a)}E 6u(x,y,Aj){if(x){if(x.I("3D:")==0&&o.W){o.2b=x.1k(5);o.Q.Hp(0);J}}2F(j6);v.j8==\'\'?v.j8=\';\':\'\';if(x.I(\'{\')>-1&&x.I(\'}\')>-1&&x.I(v.j8)>-1){B z=x.2t(v.j8);o.ax=[];V(B i=0;i<z.R;i++){o.7q[i]=z[i].1k(z[i].I("{")+1,z[i].I("}")-1);o.ax[i]=z[i].1k(z[i].I("}")+1);if(L(v.bs)){if(v.bs==o.7q[i]){o.6P=i}}}x=o.ax[o.6P]}!L(3J)?3J=[]:\'\';o.o6?2F(o.o6):\'\';x&&x!=\'or\'&&x!=\'x\'?ze(x):\'\';B ft=o.2z;if(3J.R>0){B fu=3J[7E];if(fu){if(fu.I(\'js:\')==0){2S{fu=2h(fu.1k(3))}2E(e){8g.1o(e.a0)}}}if(fu){o.2z=oh(fu);B eG=K;if(Aj){eG=H}Z=fu;if(Z){Z=Z.1Q(/\\(5H\\)/g,2H.5H())}F{Z=3J[0]}if(!eG&&x!=\'x\'&&P&&o.2z==ft&&(ft=="dA"||(ft=="ca"&&!o.1j.2g)||(ft=="4W"&&o.1w&&!ot)||ft=="dm"||ft=="1E"||ft=="3K")){P.3c(Z)}F{1o("10R");oe();yM(Z)}qY()}}if(!y){3I(o.qS);o.qS=7h(zY,o.oN);if(!L(v.1W)&&v.oL==1&&v.qi==1){v.1W=\'\'}if(L(v.1W)){o.U.fy(v.1W)}if(v.fG==1){if(v.my==1&&o.1j.2g){}F{if(o.2z=="4W"){O(o.3L,{"1d":-jf,"1c":-jf})}F{3q(o.3L)}v.1r.1l=0}}}}E qY(x){if(o.dh||x){if(o.jZ){P.fU(o.i9)}F{if(o.a7!=o.dh){P.fU(o.5X[o.a7])}}}}E oh(x){B 1H="dA";if(x){if(x.I(".I6")>0){1H="1E"}F if(x.I(".I9")>0){1H="3K"}F if(x.I("w")==0&&x.I("s")==1){1H=o.ws}F if(x.I(\'4W.91/\')>-1||x.I(\'p9.be/\')>-1){if(1L(Ab)==\'E\'){1H="4W";if(v.xE==1){B y=\'jo://4d.4W.91/vi/\'+p6(x)+\'/\';AM(y+\'AW.im\',E(z){z>100?v.2a=y+\'AW.im\':v.2a=y+\'11i.im\';if(o.1K){o.1K[o.3w][\'2a\']=v.2a}v.3k==1||o.1w?\'\':9A(v.2a,o.2a,v.gy)})}}F{1o("No B8")}}F if(v.ca==1&&x.I(\'ca.91/\')>-1){1H="ca"}F if(v.dm==1&&x.I(\'11B.91\')>-1){1H="dm"}F if(v.AB==1){if(1L(AC)==\'E\'){AC(x)?1H="6L":\'\'}}}o.rP=1H=="4W"||1H=="ca"||1H=="dm";o.4q=1H=="dA"||1H=="1E"||1H=="3K"||1H==o.ws;J 1H}E AM(Z,AP){B 4d=1B 11D();4d.cS=E(){AP(G.1g)};4d.3c=Z}E yM(x){o.2z=oh(x);if(o.4q){P=1B IV(x,o.3L,K)}if(o.rP){P=2h("1B vt"+o.2z[0].yN()+o.2z.4T(1)+"(x,o.3L);")}if(o.2z=="6L"){P=1B 11E(x)}o.Q?o.Q.Im():\'\';B t=0;if(L(v.1n)){if(o.3t&&v.cE==1&&!o.1w){t=o.3t.ay().t}1A(E(){o.U.3V(t,v.1n)},100)}}E oe(){if(P){P.4e();P=28;fO="7n"}if(3n){3n.4e();3n=28;3n=1G;o.dM.5y();o.3n=28;o.dM=28}};G.4e=E(){oe()};G.11F=E(){3J=[];oe()};G.6u=E(x,y,z){6u(x,y,z)};G.9A=E(x){9A(x,o.2a,v.gy)};G.2B=E(){if(P){kt=K;ot=K;if(o.54){o.3H.2B()}F{P.2B();v.fK==1?o.U.g4():\'\'}if(L(3n)){3n.2B()}if(o.7Y){if(o.4q){if(o.aX>0&&!o.7Y.11G()){o.7Y.o1()}}F{o.o7=[];o.Q.iE("dF")}}if(o.4q&&v.GX>-1&&!o.sL&&!o.1j.4n){if(o.aX>0){P.H3()}}kL()}F{1A(G.2B,43)}};E kL(){if(v.yO>0&&3J.R>1){if(3V()==0||v.z7==1){2F(o.o6);o.o6=1A(yT,v.yO*2i)}}}E yT(){if(o.1v&&(3V()==0||v.z7==1)&&46()==0&&!o.f7){if(P){if(P.9N()==0&&7E!=3J.R-1){5I(\'6u zB\')}}}}G.zE=E(1e){if(o.3n){if(v.2c.zF==1){if(o.w8[o.3n]>2){J}}if(1e){1e.aA();1z.1e?1z.1e.6t=H:\'\'}B 1J=P;P.sO(H,o.3n);3n.sO(K,o.3L);P=3n;3n=1J;P.2B();3n.2B();js("2c")}};G.zM=E(){P.3c(Z)};G.xP=E(){v.5b==1?o.5b.2Y("1l"):\'\';o.ri=H};G.hW=E(){if(v.1r.vN){v.1r.vN=K;if(o.Q){o.Q.wC(1);o.Q.qz()}}o.ri=K};G.zh=E(){if(o.3n&&o.dM){o.dM.hI()}};G.fT=E(){if(o.4q&&o.5Z){o.iR=H;P.5Z()}};G.dH=E(){if(o.4q&&o.9m){P.9m()}};G.pQ=E(){if(v.fp==1&&L(v.11H)){if(L(o.fp)){o.fp.1p()}F{if(1L(zi)==\'E\'){o.fp=1B zi()}}}kc();if(P){pF(0);P.pQ()}};G.cs=E(){o.fp?o.fp.1l():\'\';P?P.cs():\'\'};G.kc=E(x){kc(x)};E kc(x){if(v.11I==1&&2o(v.bI)){if(L(o.bI)){o.bI.1p(x)}F{if(1L(zg)==\'E\'){o.bI=1B zg()}}}}G.3f=E(){if(o.54){o.3H.3f()}F{P?P.3f():1o("11C")}if(L(o.3n)){3n.3f()}};G.r5=E(){ot=H;o.U.3Q(0,K);L(o.2a)?o.U.8n():\'\';6u(\'x\')};G.ee=E(){P?P.ee():\'\'};G.3Q=E(x){if(P){if(o.54){o.3H.3Q(x)}F{P.3Q(x);if(v.2c.on==1){if(3n){3n.3Q(x)}}}}};G.5d=E(){if(P){P.5d();o.54?o.3H.5d():\'\';1o("5o")}if(v.2c.on==1&&v.2c.gj==1){if(3n){3n.5d()}}};G.62=E(){if(P){P.62();o.54?o.3H.62():\'\';1o("ar")}if(v.2c.on==1&&v.2c.gj==1){if(3n){3n.62()}}};G.3T=E(x){P?P.3T(x):\'\';if(v.2c.on==1){if(v.2c.gj==1&&3n&&!o.Bc){3n.3T(x)}}if(o.54){o.3H.3T(x)}};G.kP=E(){J P?P.kP():K};G.5R=E(){J P?P.5R():K};G.6W=E(){J fO};G.7n=E(){J kt};G.1a=E(){B x=0;if(P){x=46();if(o.54){B y=o.3H.46();y?x=y:\'\'}F{if(3V()>0&&x!=3V()){o.EQ=x+0.11J}}J x}F{J 0}};G.1n=E(){B x=0;if(P){x=3V();x==0&&L(v.1n)?x=v.1n*1:\'\';if(o.54){B y=o.3H.3V();y?x=y:\'\'}}J x};G.9N=E(){J P?P.9N():0};G.fB=E(){o.3E.fB=o.3E.fB?K:H;O(o.3L,{"2W":(o.3E.fB?"3o(-1)":"3o(1)")})};G.11L=E(){qJ()};G.rN=E(){if(o.4q){P.4C()}};G.IR=E(x,y){if(x==\'1O\'){if(y==1){dQ(v.1h.1O/100)}if(y==2){dQ(-v.1h.1O/100)}if(y==3){o.P.ki()}}F{if(o.4q){if(!o.ah[x]){if(x==\'qW\'){o.ah[x]=0}F{o.ah[x]=1}}if(y==1){o.ah[x]+=v.1h[x]/100}if(y==2){o.ah[x]-=v.1h[x]/100}if(y==3){if(x==\'qW\'){o.ah[x]=0}F{o.ah[x]=1}}!o.k7?o.k7=[]:\'\';o.k7[x]=x+\'(\'+2Q(o.ah[x]*100)+\'%) \';B cf=\'\';V(B i in o.k7){cf+=o.k7[i]}O(P.a1(),{\'6X\':cf});o.Q.nM(x)}}};G.1O=E(x){dQ(x)};E dQ(x){if(6Y(x).I(":")>0){B y=x.2t(":");B z0=o.2V/o.4B;B z1=o.P.3M();if(z1.Y>0){z0=z1.Y/z1.1g}B z=y[0]/y[1];if(z0!=z){if(o.4q){P.gx()}B w2=o.4B*z;B x2=w2/o.2V;B h2=o.2V/z;B y2=h2/o.4B;if(x2<1){o.3E.x0=o.3E.x=3U(x2);o.3E.y=1}F{o.3E.x=1;o.3E.y0=o.3E.y=3U(y2)}O(o.3L,{"2W":"3o("+o.3E.x+") 3u("+o.3E.y+")"});o.kw=x}}F{o.3E.x+=3U(x);o.3E.y+=3U(x);O(o.3L,{"2W":"3o("+o.3E.x+") 3u("+o.3E.y+")"})}if(v.1M.11M==1){if(!o.ql){if(o.3E.x>0||o.3E.y>1){rL(o.3L,\'o.11N\');o.ql=H}}qr()}o.Q?o.Q.nM(\'1O\'):\'\'};G.ki=E(){if(o.4q){P.gx()}o.3E.x=o.3E.x0;o.3E.y=o.3E.y0;O(o.3L,{"2W":"3o("+o.3E.x+") 3u("+o.3E.y+")"});o.Q.nM(\'1O\');o.kw=28;qr()};E qr(){if(o.ql&&v.1M.11O!=1){if(o.3E.x==1&&o.3E.y==1){O(o.3L,{"1d":0,"1c":0})}}};G.fA=E(x,y){P.fA(x,y)};G.c9=E(){J c9()};E c9(){J 3J?(3J.R>0?(3J[7E]?3J[7E]:\'\'):\'\'):\'\'};G.rB=E(){J 3J.R};G.a1=E(){J P?P.a1():K};G.6p=E(){if(o.4q){P.6p()}};G.ro=E(){P.ro()};E qU(){B 4Q=gk(v.tk+\'?Z=\'+3J[7E]);4Q.cS=E(){if(G.g1==4&&G.6W==4A){if(G.df){v.1P=G.df;o.U.9W(\'1P\')}}};4Q.eb()}};B IV=E(Z,1F,2c){B 17=1Y(v.fG==1?"J7":"fY");B al;B uK=0;B 1E;B 4N=K;B rU=K;B t8=K;B 9M=K;B gB=-1;B lq=-1;B 3K;B 6v=K;B ws;B tc=K;B 6h=K;o.5q=K;B 8G=0;B 9q=K;B he=0;B 2u;B 11P;B pS=K;B i5=-1;B cz=-1;B tT;B uB;B 9K;B ir;B 11Q;B He=\'fY/BG; 11K="11A.11s, 11z.40.2"\';B l1=K;O(17,{\'1q\':\'pX\',\'Y\':\'100%\',\'1g\':\'100%\',\'3O-kp\':\'xJ\',\'5v\':"6X 0.2s 3g",\'9h-1g\':\'2D\',\'5O-1g\':\'1X\',\'9h-Y\':\'2D\',\'5O-Y\':\'1X\'});gx();if(o.1j.7r&&v.3k==1&&v.ts==1){if(!o.1w&&v.7d){3Y(17,{\'kq\':1})}F{o.3p=H;o.Q?o.Q.5d():\'\';3Y(17,{\'3p\':1,\'kq\':1,\'3k\':1})}}F{if(v.qP==1&&o.1j.2g){if(v.Ja!=1&&o.1j.7r&&v.22!=1){}F{3Y(17,{\'kq\':1})}}if(!o.1j.tv){3Y(17,{\'4C\':(v.4C==1?\'7J\':\'1X\')})}}if(v.11l==1){3Y(17,{"11m":"IX","11n":"IX"})}Z=fZ(Z);3Y(17,{\'3c\':Z,\'x-3S-5Z\':\'yH\',\'J3\':\'H\'});if(v.2a&&v.11o==1){3Y(17,{"2a":v.2a})}if(v.11p!=1){3Y(17,{\'J3\':\'H\'})}if(v.11q==1){3Y(17,{\'2c\':\'K\'})}if(2c){17.3k=H;if(v.2c.gj!=1||v.3k==1){17.3p=H}F{17.1I=2o(v.2c.1I)?v.2c.1I:v.1I}}if(v.11k==1){3Y(17,{\'11r\':\'11t\'})}uY();if(v.11u==1){B dq=1Y("dc");3Y(dq,{"z9":"no","yW":"H","yJ":"H","3c":""});O(dq,{"1q":"2C","Y":"100%","1g":"100%","2R":0});1F.1T(dq);B IW=1z.7h(E(){if(dq.jL.1V.g1==="11v"){1z.3I(IW);O(dq.tU.aQ,{"2U":0,"2L":0});dq.tU.aQ.1T(17)}},100)}F{1F.1T(17)}if(!L(Z)){Z=\'\'}B hq=K;if(o.1j.tv){if(Z.I("11w")>0){hq=H}}if(o.1j.6U){if(Z.I("11x")>0||(v.F8==1&&v.dx==1)){hq=H}}if(o.1j.4n){if(Z.I("rQ")>0){hq=H}}if(Z.I(".I9")>0){6h=H;if(!o.3K){if(1L I8!=="1G"){o.3K=1B I8()}F{6h=K}}if(L(o.3K)){if(!L(1z.HV)){o.3K.pJ()}F{qO()}}}F if(((2J.1E==1&&v.rE!=1)||Z.I(".I6")>0)&&!hq&&(o.g5.I("8q")!=-1||L(1z.5C))){4N=H;rU=H;2S{if(L(1z.5C)){if(!5C.I0()||(o.1j.6U&&v.11y==1&&!o.1j.4n)||(o.1j.4n&&v.rQ==1)||(o.1j.pD&&v.Yw==1)){1o(\'8q Y3 \',5C.I0());4N=K}F{if(v.4C==1||v.3k==1||v.HZ==1||2c){da(K)}}}F{4N=K}}2E(2u){4N=K}}F if(Z.I("w")==0&&Z.I("s")==1&&v.V1==1){9q=H;td()}if(o.1j.tv&&v.3k==1&&!4N&&!6h&&!9q){1A(E(){o.U.d0()},100)}if(v.7Y==1){L(o.7Y)?o.7Y.aB():\'\';o.7Y=1B Y1()};G.ro=E(){qO()};E qO(){6h=H;if(uF()){if(v.4C==1||v.3k==1||v.HW==1){lL(K)}}F{6h=K;1o("TS fQ G5")}}E lL(x){if(o.3K&&!6v){o.3K.eG(x,17,Z,2c);L(1z.HV)?6v=H:\'\'}}E da(x){1o("8q");if(o.42.R>1){v.9n=0;v.Ic=H}F{v.Ic?v.9n=1:\'\'}if(o.ax.R>1){v.bA=0;v.Id=H}F{v.Id?v.bA=1:\'\'}o.9K=K;gB=-1;9K=[];o.3y?o.3y.Ip():\'\';B qM=K;if(v.7d&&v.Iw==1){qM=H;v.Iw=0}al={G6:(v.Iv==1&&!2c),TT:(v.4C==1||v.3k==1||2c||x)&&!qM,fc:60,r8:60,TU:K};if(v.Iq>0){al.TW={6K:{If:v.Iq*2i}}}if(v.In>0){al.TX={6K:{If:v.In*2i}}}if(v.TY==1){al.TZ=H}if(v.dx==1){B ks=[\'wv\',\'pr\',\'ck\'];B ol=[\'91.U0.gI\',\'91.TR.U1\',\'4a.w3.U3\'];B dj={};V(B i=0;i<ks.R;i++){if(v[\'dx\'+ks[i]]==1){dj[ol[i]]={};if(2o(v[\'dx\'+ks[i]+\'l\'])){dj[ol[i]].U4=qf(v[\'dx\'+ks[i]+\'l\'])}if(2o(v[\'dx\'+ks[i]+\'s\'])){dj[ol[i]].U5=qf(v[\'dx\'+ks[i]+\'s\'])}}}al.U6=H;al.U7=dj}if(v.Km==1){al[\'U8\']=E(4Q,Z){4Q.U9=H}}if(L(v.6A)){if(L(v.6A.fc)){if(v.6A.fc>fi){v.6A.fc=fi}v.6A.r8=v.6A.fc}if(L(v.6A.Ju)){v.6A.r8=v.6A.fc=v.6A.Ju}if(1L v.6A=="3O"){V(B 1b in v.6A){if(v.6A[1b].6c().I(\'2h:\')==0){v.6A[1b]=2h(v.6A[1b].1k(5))}al[1b]=v.6A[1b]}}}js("Ua",1E);1E=1B 5C(al);js("1E",1E,1);1E.Fa(Z);1E.Ub(17);1E.on(5C.7v.U2,E(){1o("8q TP")});1E.on(5C.7v.TE,E(1e,29){!2c?o.U.d0():\'\'});1E.on(5C.7v.TO,E(1e,29){if(!2c&&v.9n==1&&aj()>1){Hi();oP();o.Q?o.Q.iI(o.3l):\'\'}});1E.on(5C.7v.Tv,E(1e,29){oP()});1E.on(5C.7v.Tw,E(1e,29){oP()});1E.on(5C.7v.Tx,E(1e,29){if(!2c){if(29.iT.5q!=o.5q){o.5q=29.iT.5q;o.Q.4x()}o.5q=29.iT.5q;if(o.5q){1o("Ty");o.JT=Z.I("?x7")>-1;if(17.1n>0&&17.cq>0){if(17.1n-17.cq<10){if(o.iv>0){if(o.iv==17.cq&&o.JP==17.1n){o.ob++;if(o.ob>2){o.ob=0;o.iv=-1;1E.9F();da(H);8c()}}F{o.iv=-1}}F{o.iv=17.cq;o.JP=17.1n}}}}}if(v.9n==1){o.3l=1E.lW;o.Q?o.Q.iI(o.3l):\'\'}lU()});1E.on(5C.7v.Tz,E(1e,29){if(L(29.iu)){!2c?js("TA",29.iu.TB):\'\';if(v.TC==1){1L JI!=="1G"?JI(29.iu):\'\'}}if(gB>-1){1E.Gy=gB;gB=-1}2F(o.f7);t8=H;G4()});1E.on(5C.7v.Tu,E(1e,29){js("TD",29,1)});1E.on(5C.7v.TF,E(1e,29){if(!2c&&v.bA==1){1A(sz,43)}});1E.on(5C.7v.TG,E(1e,29){if(!2c&&v.bA==1){sj()}});1E.TH=K;if(v.TI==1){1E.on(5C.7v.TJ,E(1e,29){if(1L(29)=="3O"){if(29.iu.1H==\'1W\'){B fu=29.iu.Z;if(fu){B st=1E.ID;if(o.4Y){o.3y.um(st+\'bP\'+fu)}F{!9K[st]?9K[st]=[]:\'\';9K[st].2M(fu)}}}}});1E.on(5C.7v.TK,E(1e,29){B x=1E.TL;B y=\'\';V(B i=0;i<x.R;i++){y+=(y!=\'\'?\',\':\'\')+\'[\'+x[i].6C+\']1E\'+i;x[i].6K?o.oi=x[i].6C:\'\'}3v("1W",y)})}1E.on(5C.7v.TM,E(1e,29){v.1o==1?8g.1o(29):\'\';js(29.1H+\'5C\',29,0,H);o.rK=29;if(29.f5){if(29.1H=="TN"){1o("8q f5 tD 2u");if(v.pj==1&&46()==0){tJ()}F{2u=29.iT+\' (\'+29.1H+\')\';o.2b>0||2c||v.5q==1||9q?\'\':o.2b=46();1E.9F();if(!2c){o.f5=H;o.P.5I()}}}F{B nx=K;if(29.1H=="Uc"){if(v.TQ==1&&o.P.rB()>0){nx=H}F{1o("8q f5 P 2u, iN");1E.Ud()}}F{nx=H}if(nx){2u="8q f5 2u, 9F";1E.9F();!2c?o.P.5I():\'\'}}}F{1o("8q ",29.1H,29.iT,(29.p0?29.p0.tO:\'\'));js("UD",(29.p0?29.p0.tO:\'\'));if(8G>0){8G=2;rV()}}});9M=H}E qf(x){if(x){V(B j=1;j<11;j++){if(v["Ge"+j]){x=x.1Q("{"+j+"}",v["Ge"+j])}}}J x}E oP(){if(!2c&&v.9n==1&&aj()>1){if(o.3l!=1E.lW){o.3l=1E.lW;o.Q?o.Q.iI(o.3l):\'\';1o("8q UF "+o.3l)}if(2o(v.cB)&&o.3l>0){B fq=v.cB.2t(",");V(B k=0;k<fq.R;k++){if(o.2x[o.3l].I(fq[k])>-1){1o(\'UG 56\');1E.hu=o.3l-1;o.3l--;1i}}}if(v.af!=1&&lX()&&lq>-1){s8(lq)}}}E td(){if(L(1z.G0)){if(uF()){if(!L(o.ws)){o.ws=1B UH()}ws=1B G0(17,Z,2y(v.UI,{G6:H}));tc=H}F{9q=K;1o("fQ G5")}}}E G4(){qB()};G.6p=E(){qB()};E qB(){if(v.Jl&&o.Q){if(17.cG.R>0){if(v.6p==1){17.cG[17.cG.R-1].gu="Je"}F{17.cG[17.cG.R-1].gu="3e"}if(!o.6p){o.6p=H;o.Q.4x()}}F{if(o.6p){o.6p=K;o.Q.4x()}}}}E tJ(){1o("UJ");!2c&&o.1v?o.U.3f():\'\';o.U.8n();8G=1;rV(o.1v)}E rV(x){if(8G>0){2F(tT);tT=1A(Fb,v.Fc*2i)}}E Fb(){if(8G>0){1o("UK");if(4N){if(8G==1){1E.Fa(Z)}if(8G==2){1E.9F();da(H);17.1v()}}F{3Y(17,{\'3c\':Z})}}}17.1y(\'UL\',EX);17.1y(\'2u\',uI);17.1y(\'7n\',8c);17.1y(\'1v\',9H);17.1y(\'47\',eO);17.1y(\'Jg\',ch);17.1y(\'iP\',iD);17.1y(\'nb\',h3);17.1y(\'K8\',bL);17.1y(\'JY\',dz);17.1y(\'7N\',9w);17.1y(\'Jm\',aq);17.1y(\'UM\',Hq);17.1y(\'JE\',ue);17.1y(\'FB\',u1);if(v.F8==1&&o.1j.6U){if(2o(v.UN)){if(2o(v.UE)){17.1y(\'EU\',tW)}F{if(1L F6!=="1G"){o.lr=F6(Z,17)}}}}if(o.1j.7r){17.1y("UO",hL,K);17.1y(\'F4\',F2)}E F2(){17.dn("Q")}E hL(){if(17.UQ){o.U.gO()}}E EX(){if(!4N&&!6h){!2c?o.U.d0():\'\'}}E uI(){if(!4N&&!6h){if(17.2u){B x=17.2u.tO;2u=17.2u.a0;if(2u==\'\'){if(x==1){2u="Gw"}if(x==2){2u="tD"}if(x==3){2u="de"}if(x==4){2u="fQ po"}}1o("hG: ",2u)}if(rU&&v.pj==1&&46()==0){2u=1G;tJ()}if(2u!=1G||o.1j.4n){5I()}}}E 5I(){!2c?o.P.5I():\'\'}E 8c(){if(!2c){o.P.8c()}F{if(v.2c.8Z==1){17.cq=0;17.1v()}}}E 9H(){if(!o.1w&&v.7d){1o(\'Fu 1v\');47();o.U.2B();J}if(4N&&8G>0){}F{if(!2c){B aP=o.U.8C()&&o.pb!=1;if(aP||cz==-1){B x=K;if(4N){if(L(o.22)||L(o.5A)){if(aP){}F{1o(\'47 hw\');47();x=H}}}if(!x){o.P.9H()}}}}}E eO(){if(!l1){1o("UR");if(o.1v&&o.gh&&!17.7n&&v.Fo==1&&!o.9L){1o("Fo");eI()}F{!2c&&!o.Fn&&17.8x?o.P.eO():\'\'}}}E ch(){!2c?o.P.ch():\'\';if(cz>-1){if(46()>cz){47();cz=-1}}}E iD(){!2c?o.P.iD():\'\'}E h3(){!2c?o.P.h3():\'\'}E bL(){if(2c){lO()}F{o.P.bL();sT();if(4N&&8G>0){8G=0;1o("US up");1E.GF();eI();o.Q.2B()}if(L(v.9l)){2A()}1A(Fj,43)}}E GE(){if(17.C.1d=="-UT"||17.oH<-2i){cs()}}E Fj(){if(17){if(17.cD&&o.7q.R==0&&v.UU!=0){B at=17.cD;V(i=0;i<at.R;i++){B x=o.P.sE((at[i].8E?at[i].8E+\' (\':\'\')+at[i].Fh+(at[i].8E?\')\':\'\'),i);if(x==v.bs){o.6P=o.9D=i}o.7q[i]=x}o.Q.nn(o.9D)}}if(o.9D>0){eB(o.9D,1)}};G.9l=E(){J(17.lY/17.gd)};E lO(){if(17.gd>0){O(1F,{"1g":1F.2f/(17.lY/17.gd)-2Q(v.2c.2R)})}F{if(uK<20){1A(lO,100);uK++}}}E sT(){if(v.oI==1){3I(o.uM);o.uM=7h(uL,100);uL()}}E uL(){if(17){if(17.gd>0){o.U.H7(17.lY/17.gd);3I(o.uM)}}}E aq(){!2c&&!9q?o.P.aq():\'\'}E dz(){!2c?o.P.dz():\'\'}E 9w(){if(4N&&8G>0){}F{!2c?o.P.9w():\'\'}}E Hq(){o.U.uX()}E uF(){B o5=1z.Hj=1z.Hj||1z.UV;B i3=1z.H8=1z.H8||1z.UW;B p4=o5&&1L o5.p4===\'E\'&&o5.p4(He);B Hs=!i3||i3.uy&&1L i3.uy.UX===\'E\'&&1L i3.uy.5y===\'E\';J p4&&Hs}B so="<7p C=\'1C:0.5\'>";E Hi(){if(!2c&&v.9n==1){B x=1E.ae;B q=-1;o.2x=[];if(x.R>1){if(v.4E==\'5O\'){q=x.R-1}V(B i=0;i<x.R;i++){if(L(x[i].1g)){B y=o.P.HG(x[i],v.HO);if(o.2x.I(y)>-1||v.UY==1){if(L(x[i].9R)){B yi=o.2x.I(y);yi>-1?o.2x[yi]+=" "+so+" &gJ;"+2Q(x[yi].9R/2i)+\' \'+2P(\'hO\')+\'</7p>\':\'\';o.2x[i]=y+" "+so+" &gJ;"+2Q(x[i].9R/2i)+\' \'+2P(\'hO\')+\'</7p>\'}}F{o.2x[i]=y}if(L(x[i].HF)){o.9B[i]=x[i].HF[0]}}F if(L(x[i].6C)){o.2x[i]=x[i].6C}F{o.2x[i]=i}if(L(v.4E)&&q==-1){if(v.4E==o.2x[i]){q=i}}if(L(o.4E)){if(o.4E==o.2x[i]){q=i}}}if(v.af==1){o.2x[x.R]=2P("2D")}F{q==-1?q=x.R-1:\'\'}if(v.Hv==1||q>-1){if(v.ht=="6o"||(!o.1w&&v.4C==0)){1E.sD=q}F{if(v.ht=="fL"){1E.hu=q}}o.3l=q}F{if(v.af==1){o.3l=1E.ae.R-1}F{o.3l=1E.UP}}if(v.HC>0){1E.lG=x.R-v.HC*1-1}lU()}if(1E.ae[o.3l]){o.9R=2y(1E.ae[o.3l].9R,0)}o.Q?o.Q.4x():\'\'}}E lU(){if(v.bA==1){sz();sj()}}E sz(){if(!2c&&v.bA==1){B x=1E.cD;o.7q=[];B 2I;B 1S=-1;if(x.R>1){V(B i=0;i<x.R;i++){2I=K;if(L(x[i].fk)&&o.9B.R>0){if(x[i].fk!=o.9B[o.3l]){V(B j=0;j<o.9B.R;j++){if(o.9B[j]==x[i].fk){2I=H}}}}if(!2I){o.7q[i]=(L(x[i].6C)?o.P.sE(x[i].6C,i):i)+(v.UC==1&&L(x[i].9S)?\' (\'+x[i].9S+\')\':\'\');if(L(v.bs)){if(v.bs==o.7q[i]){1S=i}}}}}}if(1S>-1){o.6P=1S;1E.kS=1S}}E sj(){if(!2c){B x=1E.cD;B y=1E.kS;if(y>-1){if(L(x[y].fk)){if(o.9B.R>0){if(o.9B[o.3l]!=x[y].fk){V(B i=0;i<x.R;i++){if(x[i].6C==x[y].6C&&x[i].fk==o.9B[o.3l]){1E.kS=i;y=i;1i}}}}}o.6P=y;1o("8q Uq",o.6P);o.Q.nn(o.6P)}}};G.eB=E(x,y){eB(x,y)};E eB(x,y){if(17.cD.R>1){17.cD[x].tg=H;17.cD[y==1?0:o.9D].tg=K;o.9D=x;y!=1?17.cq=o.P.1a():\'\'}}E 46(){if(6h){J 6v?o.3K.1a():0}F{J 17.cq}};E 3V(){B x=17.1n;if(x==UB){v.5q=1;x=46()+10;if(o.bN){x<o.bN?x=o.bN:\'\'}o.bN=x}if(6h&&6v){x=o.3K.1n()}if(L(v.4f)){if(7b([v.4f],\'-\')){x=x+v.4f*1}F{x=v.4f}}J!sI(x)?x:0}G.2B=E(){B p=H;if(4N&&!t8){if(!9M){da(H)}1E.GF()}if(6h&&!6v){lL(H);p=K}if(9q){if(!tc){td()}ws.1v();p=K}GE();p?eI():\'\'};B Ug;E eI(){if(Z!="1X"&&17){B pp=17.1v();if(pp!==1G){pp.cv(E(){1o("Uh");if(!o.3p){if(17.3p){1o("Ui");17.3p=K}}he=0}).2E(E(2u){B em=2u.a0;1o("Uj",em);if(em.I(\'cI\')==-1&&em.I(\'Uk by\')==-1){if(v.ts==1&&L(17)&&o.1v){1o(\'Ul\',o.1v);o.U.5d();2S{17.1I=0}2E(e){};B tj=17.1v();if(tj){tj.cv(E(){}).2E(E(e){1o("Um",e.a0);if(o.1j.tv&&(4N||6h)){}F{o.Q.3f();o.U.8n();js("Uo")}})}}F{if(!o.j9){o.Q.3f();o.U.8n()}}}F{if(em.I(\'e3 Uf\')>0||em.I(\'Gw\')>0){if(o.1v){if(he<5){1o("Y2",he);1A(eI,Ur);he++}F{}}}}})}}}G.pQ=E(){if(o.5A||o.22){if(o.8R){dH()}if(!o.iR&&o.1j.2g&&o.1j.3S){if(!17.3p){17.3p=H;pS=H}O(17,{"1q":"2C","1c":-4c,"1d":-4c});cz=46();if(!9q){17.1v()}if(cz==0&&o.2b>0){ir=o.2b}}}};G.cs=E(){cs()};E cs(){if(!o.iR&&(o.1j.2g||o.1j.3S)){O(17,{"1q":"pX","1c":0,"1d":0});if(L(v.9l)){2A()}if(pS){!o.3p?17.3p=K:\'\';pS=K}if(ir>0){o.2b=ir;ir=0}cz=-1}};G.3f=E(){1o(\'8x\');47()};E 47(){if(9q){ws.47()}F{17.47()}};G.ee=E(){!17.8x?3f():eI()};G.3Q=E(x){if(6h&&6v){o.3K.3D(x)}F{if(4N){if(v.Us==1&&x>0&&lX()&&v.af==1){gB=1E.hu;1E.Gy=0}}17.cq=x}};G.5d=E(){17.3p=H};G.62=E(){17.3p=K;if(o.2z=="1E"&&o.1j.4n&&v.22==1){if(!L(o.H4)){l1=H;1o("4n ar");17.47();1A(E(){17.1v();l1=K},10);o.H4=H}}};G.3T=E(x){17.1I=x};G.H3=E(){if(o.GS!=17){B cI;B 8O;if(o.l4[17]){cI=o.l4[17];8O=o.sV[17]}F{1z.l2=1z.l2||1z.Ut;if(L(1z.l2)){2S{8O=1B l2();cI=8O.Uu(17);o.l4[17]=cI;o.sV[17]=8O}2E(e){1o(e)}}}if(8O){B hT=8O.Uv();hT.hT.5E=v.GX;cI.GW(hT);hT.GW(8O.Uw);o.sL=H;o.GS=17}}};G.kP=E(){J!17.8x};G.5R=E(){J v.5q==1||9q?H:o.5q};G.a1=E(){J 17};G.sQ=E(){3Y(17,{\'Q\':\'1\'});J H};G.4C=E(){3Y(17,{\'4C\':\'7J\'});if(4N&&!9M){da(K)}if(6h&&!6v){lL(K)}};G.6W=E(){B 6s="7B";if(17.8x){6s="8x"}if(17.7n){6s="7n"}J 6s};G.sO=E(x,y){2c=x;y.1T(17);1F=y;if(x){if(v.2c.gj!=1){17.3p=H}F{if(!o.3p){17.3p=K}}lO();if(o.2x.R>0&&v.af==1){if(4N){i5=o.3l;1E.lG=0;1E.hu=0}}}F{if(!o.3p&&v.2c.gj!=1){17.3p=K}17.1I=2o(v.2c.1I)?v.2c.1I:v.1I;sT();if(o.2x.R>0&&v.af==1){if(4N){1E.lG=-1;if(i5>-1){i5<1E.ae.R?1E.sD=i5:\'\'}}}}};G.1a=E(){J 46()};G.1n=E(){J 3V()};G.9N=E(){B x=0;if(17.8a){if(17.8a.R>0){B y=46();V(B i=0;i<17.8a.R;i++){if((y>=17.8a.1w(i)||y>=17.8a.1w(i)-100)&&y<=17.8a.4f(i)){x=17.8a.4f(i)}}x==0?x=17.8a.4f(17.8a.R-1):\'\'}}if(L(v.4f)){B ed=v.4f;if(7b([ed],\'-\')){ed=3V()}x>ed?x=ed:\'\'}J x};G.2D=E(){J lX()};E lX(){B x=K;if(4N){if(9M){x=1E.Ux}}F if(6h){if(6v){x=o.3K.2D()}}J x}G.3M=E(){J{"Y":17.lY,"1g":17.gd}};G.3c=E(x){if(x){1o("3c");x=x.1Q(/\\(5H\\)/g,2H.5H());x=fZ(x);Z=x;o.aD!=2?o.aD=K:\'\';if(6h){if(6v){o.3K.cI(x)}}F if(4N){4N&&1E?1E.9F():\'\';da(o.1w||o.3k);sJ()}F{3Y(17,{\'3c\':x,\'3k\':0});uY();47()}}};E fZ(x){if(x){B y=x.I(\':Uy:\');if(y>0){o.fZ=x.1k(y+6);x=x.1k(0,y)}}J x}E uY(){if(o.1j.6U&&17){B y=17.cG;if(y){V(B i=0;i<y.R;i++){y[i].gu="Uz"}}y=17.cD;if(y){V(i=0;i<y.R;i++){y[i].tg=(i==0?1:0)}}if(1z.Ue){17.1y(\'Ts\',E(1e){o.5Z=1e.SI=="Tr";!2c?o.U.iH():\'\'})}o.lr?o.lr.Sn(Z):\'\'}sJ();if(v.ta==1){1L Fp!=="1G"?Fp(Z,17,1F):\'\'}}G.5Z=E(){17.So()};G.9m=E(){dH()};E sJ(){if(o.1j.3S){if(L(17.Sp)&&!o.1j.7r){o.9m=H}if(1V.Sq&&!17.Sr){o.9m=H}}}E dH(){if(o.1j.6U){if(17.Ss==="lm-in-lm"){17.G2("bZ");o.8R=K}F{17.G2("lm-in-lm");o.8R=H}}F{if(!1V.St){2h(\'17.Su().cv(p => {o.8R = H;}).2E(2u => {o.8R = K;});\')}F{2h(\'1V.Sm().cv(ok =>{o.8R = K;}).2E(2u => {});\')}}};E ue(){o.8R=H};E u1(){o.8R=K};E tW(e){if(1L FR!=="1G"){o.lr=FR(e)}}G.FS=E(x){if(6v){o.3K.sh(x)}};G.FT=E(x){if(6v){if(17.8a.R>0){o.3K.Sv(x)}}};G.Sx=E(x){if(o.ws){o.ws.JU(ws,x,-1)}};G.Sy=E(x){if(o.ws){o.ws.JU(ws,-1,x)}};G.JV=E(x){lq=x*1;s8(x)};E s8(x){if(9M){B y=2Q(x);if(y>=1E.ae.R){if(v.af==1){y=-1;1E.lG=-1}F{y=1E.ae.R-1}}if(v.ht=="fL"){1A(9w,43);1E.hu=y}if(v.ht=="6o"){1o("8q 6o Sz "+y);1E.sD=y}if(y==-1){o.3l=1E.lW}lU()}};G.lT=E(){J 1E};G.lj=E(){J 6v?o.3K.SA():K};G.aj=E(){J aj()};E aj(){B x=0;if(9M){if(1E.ae){x=1E.ae.R}}J x}G.cV=E(){J cV()};G.gx=E(){gx()};E gx(){if(17){if(v.kQ==1||v.6i==1){if(v.SB==1||v.6i==1){O(17,{\'3O-kp\':\'6i\'})}F{O(17,{\'3O-kp\':\'yn\'})}}F{O(17,{\'3O-kp\':\'xJ\'})}}}G.4H=E(){2A()};E 2A(){if(v.9l){3v(\'1O\',6Y(v.9l).1Q(\'/\',\':\'))}}E cV(){B x=0;if(6v){x=o.3K.ae()}J x}G.Ia=E(x){if(9M){1E.kS=2Q(x)}};G.fA=E(x,y){if(y=="1E"&&9M&&uB){uB.SC(x)}if(y=="J9"&&9M){if(9K[x]&&o.3y){V(B i=0;i<9K[x].R;i++){o.3y.um(9K[x][i])}}1A(E(){1E.ID=x*1},43)}if(y=="3K"&&6v){o.3K.SD(x)}};G.fU=E(x){if(x){17.SE=x}};G.us=E(){B x=17.SF;B y=[];V(B i=0;i<x.R;i++){if(x[i].nh.n6()==\'a8\'){x[i].6H("e3",uE);y.2M(x[i])}}V(B i=0;i<y.R;i++){17.3m(y[i])}V(B i=0;i<17.cG.R;i++){17.cG[i].gu=\'3e\'}o.uq=K};G.IO=E(x,y,z){if(x!=\'\'){if(x.I(\' or \')>0){B xx=x.2t(\' or \');x=xx[0]}B a8=1V.1Y(\'a8\');a8.7o(\'3c\',x);a8.7o(\'8E\',y);a8.7o(\'Sw\',\'uo\');a8.7o(\'gu\',\'Je\');if(z){a8.7o(\'6K\',\'\')}17.1T(a8);a8.1y("e3",uE)}};E uE(e){if(e.4t.8E&&o.3y){V(B i=0;i<o.3a.R;i++){if(o.3a[i]==e.4t.8E){o.3y.9u(i)}}}};G.iK=E(){J 2u?2u:\'\'};G.4e=E(){3I(o.Sk);4N&&1E?1E.9F():\'\';6h&&6v?o.3K.S9():\'\';9q&&ws?ws.2I():\'\';17.6H(\'2u\',uI);17.6H(\'7n\',8c);17.6H(\'1v\',9H);17.6H(\'47\',eO);17.6H(\'Jg\',ch);17.6H(\'iP\',iD);17.6H(\'nb\',h3);17.6H(\'K8\',bL);17.6H(\'JY\',dz);17.6H(\'7N\',9w);17.6H(\'Jm\',aq);17.6H(\'JE\',ue);17.6H(\'FB\',u1);17.6H(\'EU\',tW);17.3c=\'\';if(1F.nh=="Ag"){1F.tU.aQ.3m(17)}F{1F.3m(17)}17=28}};B w5=E(){B b=[];B fW=[];B 5n=[];B 7N=K;B nT;B 7T=K;B 1h;B W;if(o.4G){o.4G.1l();o.4G=28}B nB;o.5X=[0.25,0.5,0.75,1,1.25,1.5,2];if(v.1h.Sj==1&&L(v.1h.hQ)){v.1h.hQ=v.1h.hQ.1Q(/\\n/ig,\'\');o.5X=v.1h.hQ.2t(",")}o.dh=7b(o.5X,1,H);o.a7==3?o.a7=o.dh:\'\';V(B i in o.5z){if(o.5z.2r(i)){!L(v.1h[i])?v.1h[i]=5:\'\';o[\'6G\'+i]=[\'+ \'+v.1h[i]+\'%\',\'&S0; \'+v.1h[i]+\'%\',(o.5z[i]*100+\'%\')]}}if(v.1r.e5==1&&o.1j.4n&&v.f4==1){v.1r.1l=0}B mF=K;B 8X=0;B mL=0;B gr=K;B yl=H;B hS;B bg=1B vD();B 1h;B 59=[];B qQ=K;B qR=K;B h5=0;B cX=[];if(v.eF.1q=="Q-2m"){v.eF.1q="Q"}V(B y in v){if(v.2r(y)){if(y.I("cu")==0&&v[y]){!L(v[y].qI)?v[y].qI=v[y].59:v[y].59=v[y].qI;if(59[v[y].59]){v[y].59+=v[y].59}59[v[y].59]=y;if(v.eF.1q!="Q"){if(v[y].1q=="Q-2m"){cX.2M([y,v[y].59]);qQ=H}F{if(v[y].1q=="Q"||v[y].1q==1G){qQ?qR=H:\'\'}}}h5<v[y].59?h5=v[y].59:\'\'}}}if(qR){cX.H2(E(a,b){J a[1]-b[1]});V(B i=0;i<cX.R;i++){59[v[cX[i][0]].59]=28;v[cX[i][0]].59=h5+1;h5++;59[v[cX[i][0]].59]=cX[i][0]}}o.cF=v.1r.1l==1&&v.1r.G8==1;if(o.cF){o.1r=1Y("2e");o.1R.1T(o.1r);O(o.1r,{\'1q\':\'2C\',\'1c\':0,\'1d\':0,\'Y\':\'100%\',\'1g\':\'100%\',\'5v\':\'1d 0.3s 6r-5l\',\'4y-3j\':\'1X\'})}B 7P=1Y("2e");if(o.cF){o.1r.1T(7P)}F{o.1R.1T(7P)}B aN;if(v.1r.S1==1){aN=1B vD(H)}O(7P,{\'1q\':\'2C\',\'1c\':0,\'2K\':0,\'Y\':\'100%\',\'1g\':v.1r.h});7P.gC=E(){!o.1j.2g?o.U.H6():\'\'};if(v.uZ==1){3q(bg.c());3q(7P)}V(B i=1;i<59.R;i++){if(59[i]){B y=59[i];if(y){B 1f=v[y].1f;B S2=v[y].1l;if(o.1j.2g){if(1f=="1I"&&v[y].7L=="5a"){}F{if(1f=="1I"&&v.S3==1&&o.1j.2g){v[y].hA=0}F{if(1f=="1I"||(1f=="26"&&v.S4)){v[y].on=0}}}if(1f=="aZ"){v[y].S5==1?v[y].on=0:\'\'}}F{if(1f=="aZ"){v[y].S6==1?v[y].on=0:\'\'}}if(v[y].1l==1){if(v[y].JO==1&&L(v[y].mo)){2J[v[y].mo]?v[y].on=0:\'\'}if(v[y].JW==1&&L(v[y].m9)){!2J[v[y].m9]?v[y].on=0:\'\'}}if(v.uZ==1){v[y].on=0}if(v[y].on==1){if(1f=="2G"||1f=="1I"){b[y]=1B Ff(y,1f);b[y].2A(b[y].s("w"))}F{b[y]=1B Kc(y)}fW.2M(y);if(b[y].g("1f")=="1P"){if(b[y].s("1D")==\'\'){if(b[y].s("B")!=\'\'){if(!L(v[b[y].s("B")])){b[y].1S("2k",K)}}F{b[y].1S("2k",K)}}}if(b[y].g("1f")=="3G"){B lu=b[y].s("3d");if(lu){if(lu.I("2Y:")==0&&lu.I(",0/1")>0){B z=lu.2t(",");3v(z[0].1k(4))==0?b[y].cd(0):\'\'}if(7b([lu],"3b")){o.g8=H}}}b[y].1S("1O",b[y].s("1O"))}}}}if(L(v.1h)){if(1L(7G)==\'E\'){1h=1B 7G("1h");v.1h.7m==1?1h.1p():1h.1l()}F{o.S7=H}}if(L(v.W)){if(1L(7G)==\'E\'){W=1B 7G("W");if(L(o.W)){W.xj(o.W);if(v.W.lN==0||!L(v.W.lN)){v.W.7m==0?W.1l():\'\'}F{W.1p()}if(v.W.Hg==1){W.1p()}}F{W.1l(1)}ib()}}mv();vB();2A(H);4m();vI();yl=K;E FE(S){B x=0;B RZ=K;if(S){if(S.g("1f")==\'2G\'){x=5n.1c+S.s("4s")+S.g("Y")/2;if(5n.fV!=28){}F{5n.fV=[]}}F{if(5n.fV!=28){B cM=S.g("Y")+S.s("4D")+S.s("4s");if(fX(S)){cM=0}if(S.s("3e")==1&&!S.g("1p")){cM=0}if(S.s("aE")>0){cM=0}x=bg.g("w")-v.1r.h8*1-cM+S.g("Y")/2+S.s("4s");B i=0;5n.2m-=cM;V(i=0;i<5n.fV.R;i++){B cN=b[5n.fV[i]];if(cN.s("aE")>0){O(cN.c(),{"1c":(cN.g("x0")-cM)})}F{O(cN.c(),{"1c":(cN.g("x")-cM)})}cN.1S("x0",cN.g("x"))}5n.fV.2M(S.g("1b"));S.1S(\'eD\',1)}F{if(S.s("3e")==1&&!S.g("1p")&&!S.g("fn")){if(S.g("1f")=="1I"){if(S.s("1l")==1&&S.s("hA")==1&&gr){8X+=S.g("Y")+S.s("4s")+S.s("4D");gr=K}}}F{if(S.s("aE")>0){x=5n.1c+S.s("4s")+S.s("4D")}F{B 2I=K;if(S.g("1f")=="1I"){if(S.s("1l")==1&&S.s("hA")==1&&!S.g("fn")){if(!o.do&&!o.9v){2I=H;gr=K}F{if(!gr){8X-=S.g("Y")+S.s("4s")+S.s("4D");gr=H}}}}if(fX(S)){2I=H}if(!2I){5n.1c+=S.g("Y")/2+S.s("4s");x=5n.1c;5n.1c+=S.g("Y")/2+S.s("4D")}F{x=5n.1c}}}}}}J x};G.Ho=E(){mv();if(W&&v.W.7m&&!o.1w){W.1p()}};G.Hp=E(x){if(W){W.7a(x)}};G.Dy=E(){mv()};E mv(){if(o.g8){1L Gk==\'E\'?o.3b=1B Gk():\'\'}}E yj(S){B Y=o.26&&v.1r.k0==0?o.aT:o.2V;B 1g=o.4B;B aG=0;if(S!=bg){aG=Y/2+S.s("4s")-S.s("4D")}B ez=1g/2;B rd=S.g("Y");B mq=S.g("1g");B p=S.s("1q");if(p.I("8y")>-1){aG=o.2V/2+S.s("4s")-S.s("4D")}if(p.I("1d")==0){ez=mq/2+(S.s("G1")*o.4B/100)}if(p.I("2K")==0){ez=o.4B-(S==bg?mq:mq/2)-(S.s("F1")*o.4B/100)}if(p.I("2m")>-1){aG=o.2V-rd/2+S.s("4s")-S.s("4D")-(S.s("JM")*o.2V/100)}if(p.I("1c")>-1){aG=rd/2+S.s("4s")-S.s("4D")+(S.s("hB")*o.2V/100)}if(p.I("8T")>-1){ez=-o.oc/2-(S.s("F1")*o.oc/100)+(S.s("G1")*o.oc/100);aG=(p=="8T"?-1:1)*o.xt/2+(S.s("hB")*o.xt/100)+S.s("4s")-S.s("4D")}if(p.I("Q")>-1){B cx=FE(S);aG=(bg?(bg.c()?5g(bg.c().hX):0):0)+cx;if(p=="Q-2m"){aG+=8X}if(v.1r.1q=="1d"){ez=v.1r.h/2-(v.d8<0?v.d8:0)}F{ez=1g-v.1r.h/2}}J{x:aG,y:ez+S.s("8U")-S.s("dS")}}E 2A(9X){B w=o.26&&v.1r.k0==0?o.aT:o.2V;B h=o.4B;if(v.1r.S8==1){v.1r.FM=2o(v.1r.FK)&&o.9G?v.1r.FK:v.1r.rf;v.1r.h8=o.2V*v.1r.FM/100}F{v.1r.h8=v.1r.rf}O(bg.c(),{\'1d\':(v.1r.1q=="1d"?0:o.4B-v.1r.h)-v.d8});bg.1S("y0",(o.4B-v.1r.h-v.d8));if(v.1r.k0==0&&bg){O(bg.c(),{\'Y\':w,\'1c\':0,\'2L-1c\':0});bg.1S("w",w);if(o.26){O(bg.c(),{\'1c\':\'50%\',\'2L-1c\':-w/2})}}5n={"1c":v.1r.h8*1,"2m":(bg.g("w")-v.1r.h8*1)};B rp=K;if(!bg.g("1p")){bg.1S("2k",H);rp=H}B 1b;V(B i=0;i<fW.R;i++){1b=fW[i];if(b[1b]){B cc=yj(b[1b]);if(cc){if(b[1b].s("5U")=="1q"){if(L(o.7k[1b])){if(b[1b].g("x0")==cc.x&&b[1b].g("y0")==cc.y){3t}F{o.7k[1b].XY(b[1b].g("x0"),cc.x,b[1b].g("y0"),cc.y)}}}b[1b].1S("x0",cc.x);b[1b].1S("y0",cc.y);if(b[1b].s("3e")==1&&!b[1b].g("1p")&&!9X){xM(b[1b])}F{O(b[1b].c(),{"1q":"2C","1c":b[1b].g("x0"),"1d":b[1b].g("y0")})}}}}if(rp){bg.1S("2k",K)}8X=0;V(1b in b){if(b.2r(1b)){if(b[1b].s("1q")=="Q-2m"&&b[1b].g("1f")!="2G"&&8X>-1){8X=5n.2m-5n.1c}if(b[1b].g("1f")=="2G"&&bg){B c6;B ml=b[1b].s("4s")+b[1b].s("hB")*o.2V/100;B mr=b[1b].s("4D")+b[1b].s("JM")*o.2V/100;if(b[1b].s("Sa")==1){if(b[1b].s("Sb")==1){c6=(o.2V*b[1b].s("w")/100)-ml-mr}F{c6=b[1b].s("w")}}F{if(b[1b].s("1q").I("Q")>-1){c6=5n.2m-5n.1c-ml-mr;O(b[1b].c(),{"1c":(5g(bg.c().hX)+5n.1c+ml+c6/2)});8X=-1}F{c6=bg.g("w")-ml-mr;if(bg.c()){O(b[1b].c(),{"1c":(5g(bg.c().hX)+ml+c6/2)})}}}b[1b].1S("x0",b[1b].g("x"));b[1b].2A(c6)}}}if(1h){h7(1h)}if(W){h7(W)}if(mF||o.26||mL!=8X){4m()}}E xM(b){B 1c=0;B 1d=0;if(b.s("1q").I("2m")>-1&&b.s("1q").I("Q")==-1){1c=o.2V+b.g("Y")+10}if(b.s("1q").I("1c")>-1){1c=-b.g("Y")-10}if(b.s("1q").I("1d")>-1){1d=-b.g("1g")*2}if(b.s("1q").I("2K")>-1||b.s("1q").I("Q")>-1){1d=o.4B+b.g("1g")+b.g("Y")+10}if(1c>0){O(b.c(),{"1c":1c})}if(1d>0){O(b.c(),{"1d":1d})}}E h7(x){B 1d=-4c;x.h9();B y=o.4B-v.1r.h*(x.s("1q").I("1d")>-1?1:2);if(x==W&&v.yz==1){y=o.4B}B n2=(o.1j.2g&&o.4B<Sc&&L(x.s("JC"))?x.s("JC"):x.s("qg"))*1;B i4=y-(o.26&&!o.1j.2g?100+n2:n2)-(x==W&&n2==0?x.s("8U"):0);i4<100?i4=100:\'\';O(x.c(),{\'5O-1g\':i4});x.co()?O(x.co(),{\'5O-1g\':i4}):\'\';if(x.g("1p")){1d=o.4B/2-x.g("1g")/2+x.s("8U")-x.s("dS");if(x.s("1q").I("1d")>-1){1d=x.s("8U")-x.s("dS")}if(x.s("1q").I("2K")>-1){1d=o.4B-(v.1r.1q!=\'1d\'?v.1r.h:0)-x.g("1g")+x.s("8U")-x.s("dS")}1d<0?1d=0:\'\'}if(x.g("1b")=="1h"&&o.cg){B Jj=o.2V-x.g("Y")-x.s("4D");if(o.cg>Jj){O(x.c(),{"1q":"2C","2m":x.s("4D"),"1c":"2D","1d":1d})}F{O(x.c(),{"1q":"2C","1c":o.cg,"2m":"2D","1d":(o.hi<1d?o.hi:1d)})}}F{if(x.s("1q").I("2m")>-1){O(x.c(),{"1q":"2C","2m":x.s("4D")-x.s("n0"),"1c":"2D","1d":1d})}F if(x.s("1q").I("1c")>-1){O(x.c(),{"1q":"2C","1c":x.s("4s"),"2m":"2D","1d":1d})}F{if(x.g("1b")=="W"&&x.s("3x")==1){O(x.c(),{"1q":"2C","1c":o.2V/2-x.g("Y")/2+x.s("4s")/2-x.s("4D")/2,"1d":1d})}F{B l=o.2V/2-x.g("Y")/2+x.s("4s")-x.s("4D");O(x.c(),{"1q":"2C","1c":(l>0?l:0),"1d":1d})}}}x.9I()};G.fh=E(1b){B S=b[1b];B a=S.g("1f");if(a){B d=1B 7D();o.aX=d.9V();if(a&&a!=""){51(S);a=="47"?o.Jy=1:\'\';a=="1v"?o.Jy=0:\'\'}}nF()};G.qD=E(z,x,y){V(B 1b in b){if(b.2r(1b)){if(b[1b].s(z)==x){b[1b].1S(y?"6T":"3q")}}}};G.wq=E(x,s){B y=6V(s,x);J y};E 51(S,1H){o.j9=H;nB=S;B a=S.g("1f");if(a=="1v"){o.U.2B();if(o.3p&&v.JA==1){o.U.62();v.JA=0}if(v.1M.on==1&&v.1M.2N==1&&v.1M.qy==1){7l(\'1v\',1)}js("JX")}F{if(a=="47"){o.mZ=0;o.U.3f();if(v.1M.on==1&&v.1M.2N==1&&v.1M.qy==1){7l(\'1v\',0)}js("Kk")}if(a=="2I"){o.U.mY()}}if(a=="Kj"){o.U.3Q(0,K)}if(a=="26"){!o.54?o.U.8Q():\'\'}F{if(a=="Kh"){o.U.8f()}}if(a=="2G"){B ld=o.P.1n();B lt=S.g("2p")*ld;if(v.4o>0){ld-=v.4o*1;lt=S.g("2p")*ld+v.4o*1}if(v.hP>0){if(v.hP/ld<=1-S.g("2p")){J}}js(a,lt);o.U.3Q(lt,H);if(o.3t){o.3t.qx(lt,ld);o.2b>0?o.2b=1G:\'\'}js("lf",lt)}if(a=="1I"){B x=S.g("2p");x<0.Sd?x=0:\'\';x>1?x=1:\'\';if(S.s("7L")=="5a"){x=3U(x*o.5X.4T(-1)[0]).yF(1);o.U.9o(x,1)}F if(S.s("7L")=="vC"){o.P.K6(x)}F{if(o.5w&&v.w0==1){3R.9s("vZ",x);if(S.g("2p")>0||o.1j.7r||v.nY==0){3R.rn("k4")}F{3R.9s("k4",1)}}o.U.3T(x)}}if(a=="5o"){if(o.5w&&!o.1j.7r&&v.nY==1){3R.9s("k4",1)}o.U.5d();if(v.1M.2N==1&&v.1M.K7==1){7l(\'5o\',0)}}F{if(a=="ar"){if(o.5w){3R.rn("k4")}o.U.62();if(v.1M.2N==1&&v.1M.K7==1){7l(\'5o\',1)}}}if(a.I("1a")==0){S.Se()?S.hC():S.On()}if(a=="oF"){o.P.wm()}if(a=="1O+"){o.P.dQ(0.1)}if(a=="1O-"){o.P.dQ(-0.1)}if(a=="1O"){o.P.dQ(0)}if(a=="5q"){3v("xr");S.1S("ow",1);S.1S("eN",1)}if(a=="3b"){js("3b");tS()}if(a=="1h"){o.cg=1G;if(1h){if(!1h.g("1p")){1h.1p()}F{1h.1l()}}}if(a=="W"){if(o.f6==a){J}o.Q.hm()}if(a=="6o"){o.Q.bb()}if(a=="dI"){o.Q.dJ()}if(a=="3G"){if(S.s("gS")==1&&S.s("3d")!=""){B x=4z(S.s("3d"));if(o.f6==a+x){J}if(x.I(\'{1a}\')>-1){x=x.1Q(\'{1a}\',(L(o.3t)?o.3t.ay().t:o.P.1a()))}if(x.I(\'{3i}\')>-1){x=x.1Q(\'{3i}\',o.P.c9())}if(x.I(\'{1P}\')>-1){x=x.1Q(\'{1P}\',v.1P.1Q(/,/ig," "))}if(x=="5Z"){o.P.fT()}if(x.I(\'7w\')==0){if(S.s("7w")>0){o.U.3Q(o.cP?o.cP.Sf():S.s("7w"))}}if(x.I(\'Sg\')==0){if(o.cP){o.cP.Sh()}}if(x=="Si"){o.U.3Q(S.s("hB")*o.P.1n()/100);!o.1v?o.U.2B():\'\'}S.s("Ii")==1?o.U.3f():\'\';B y=x.2t(",");if(x.I("2Y:")==0){B z=x.1k(4).2t(";");V(B i=0;i<z.R;i++){y=z[i].2t(",");if(y.R>1){if(y[0]==\'3D\'){if(v.1M.2N==1&&v.1M.SG==1){7l(\'3D\',y[1]>0?1:0)}}3v(y[0],y[1],S);js("lf",y[1]);y[1]==\'0/1\'||y[1]==\'1/0\'?wn():\'\'}F{if(y[0]=="Ik"){B ss=3v(y[0]);if(ss){if(ss.I("29")>-1){if(v.Sl==1){B 4d=1V.1Y(\'4d\');4d.7o(\'3c\',ss);O(4d,{1q:"rc",2m:(L(v.mT)?v.mT:20),2K:(L(v.mT)?v.mT:20),Y:0,5v:"Y 0.5s bv-SH(.75,-0.5,0,1.75)"});4d.C.4X=J0;1V.aQ.1T(4d);1A(E(){O(4d,{Y:(L(v.J5)?v.J5:4A)})},1);4d.gC=E(){G.4h.3m(G)}}if(v.T5==1){B a=1Y("a");a.9x=ss;a.6J=y[0]+".im";a.2p()}}}F{1o(y[0]+" 2u")}}F{3v(y[0])}}}}F{if(x.I("js:")==0){if(x.I("(")>0&&x.I(")")>0){2h(x.1k(3))}F{2h(y[0].1k(3)+\'(\'+(L(y[1])?\'"\'+y[1]+\'"\':\'\')+(L(y[2])?\',"\'+y[2]+\'"\':\'\')+\')\')}}if(x.I("1e:")==0){rr(x.1k(6),o.P.1a())}if(x.I("3b:")==0&&o.3b){o.3b.2Y(x.1k(6))}if(x.I("rM:")==0&&o.5b){3v("rM",x.1k(7))}if(x.I("3N")==0||x.I("/")==0||x.I("?")==0||x.I("Z:")==0){x.I("Z:")==0?x=x.1k(4):\'\';1z.7a(x,S.s("Jf"))}if(x.I("6J")==0){o.U.iC()}if(x=="2Y:9m"){o.P.dH()}}if(x.I("1h#")>-1){if(1h){B si=x.1k(9).2t(",");if(1h.g("1p")&&1h.g("7a")==si[0]){o.cg=1G;o.hi=1G;1h.1l()}F{o.cg=S.g("x")-S.g("Y")/2;o.hi=S.g("y")+S.g("h");V(B i=0;i<si.R;i++){i==0?1h.1p():\'\';1h.7a(si[i])}W?W.IU():\'\'}}}if(x.I("1h:")>-1&&v.1h.T7==1){if(!o.4G){o.4G=1B T8()}if(v.1h.eR==1){if(1H=="6x"){o.4G.1p(x)}F{o.4G.hI(x)}}F{if(!1H){o.4G.hI(x)}}}if(x=="Ht"){o.U.gs();o.vp=0;S.1S("3q");B bl=6V("3d","4M");if(bl){bl.1S("3q")}}if(x=="4M"){S.6m("OK");S.s("q4")?1z.8H.9x=4z(S.s("q4")):\'\'}}}};G.1P=E(t){B y=K;V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="1P"){if(b[x].s("B")==t||t=="1P"){if(b[x].s("1l")==1&&b[x].s("xa")==1&&o.1v){y=H}if(v[t]==\'\'||y){b[x].1S("2k",K)}F{b[x].1S("2k",H)}b[x].6m(v[t])}}}}qE()};G.IJ=E(){qE()};G.qz=E(){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="3G"){if(b[x].s("1H")=="1D"){b[x].9a()}}}}};E qE(){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="3G"){if(b[x].s("1H")=="1D"){b[x].Ha(H)}}}}}E tS(){if(L(o.3b)){o.3b.nZ()}}G.IQ=E(){tS()};G.Bv=E(){if(v.1P!=\'\'){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="1P"){B y=K;if(!b[x].g("1p")){y=H;b[x].1S("2k",H)}b[x].6m(v.1P);if(y){b[x].1S("2k",K)}}}}}};G.v1=E(){vB()};E vB(){if(v.9c){if(1L(v.9c)=="3O"){V(B x in v.9c){if(v.9c.2r(x)){hK(x,v.9c[x])}}}}};G.IM=E(y,z){hK(y,z)};G.xT=E(x){if(b[x]){b[x].x6()}};G.IK=E(){V(B x in b){if(b.2r(x)){if(b[x].g("wd")){b[x].x6()}}}};E hK(y,z){if(y){V(B x in b){if(b.2r(x)){if(b[x].g("wd")){if(b[x].s("4R")==y){if((!b[x].g("1p")||b[x].s("3e")==1)&&!fX(b[x])){b[x].1S("Hz");b[x].1S("2k",H)}b[x].hK(z)}}}}}};G.4H=E(){2A()};G.II=E(){2A(H)};G.mH=E(){h7(1h)};G.h9=E(){h7(W)};G.2B=E(){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="1v"){b[x].On()}}}o.bI?o.bI.1l():\'\';xX();o.1v=H;4m()};G.3f=E(){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="47"||b[x].g("1f")=="2I"){b[x].hC()}}}if(W){if(!o.d5&&v.W.GQ==1&&!W.4P()){W.1p()}}o.1v=K;G.8A();4m();if(v.1r.1l==1&&v.1r.eE==1){g2(H)}if(o.P.1a()>0){B y=6V("1f","5q");if(y){y.1S("ow",0.5);y.1S("eN",0)}}};G.5d=E(){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="5o"){b[x].On()}G.3T(0)}}4m()};G.62=E(){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="ar"){b[x].hC()}}}if(v.1I<0.1){v.1I=0.5;o.U.3T(v.1I)}F{G.3T(v.1I)}4m()};G.3T=E(1I,y){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="1I"){if(!b[x].s("7L")||b[x].s("7L")=="1I"){b[x].6y(1I,1,(y=="no"?y:H))}}if(b[x].g("1f")=="5o"){b[x].wA(1I)}}}4m()};G.8Q=E(){B bl=6V("1f","26");if(bl){bl.On();bl.1S("1O",bl.s("1O"))}4m();mF?1A(4m,43):\'\';if(o.26&&o.FH){if(o.1j.ho||o.1j.tv){1A(2A,10)}}eP();xW()};G.8f=E(){B bl=6V("1f","26");if(bl){bl.hC()}2A();3I(o.h0);4m();xW()};E xW(){if(o.cg){o.cg=1G;o.hi=1G;1h.1l()}}G.8c=E(){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="1v"){b[x].wh()}}}};G.vl=E(){4m()};G.EL=E(){xX()};E xX(){if(W){if(W.g("1p")&&v.W.dB==1){o.Q.bV()}}}E 4m(){V(B x in b){if(b.2r(x)){if(b[x].g("1f")!="aZ"){ce(b[x])}}}ce(bg);if(mL!=8X){mL=8X;2A()}if(o.cF){gW(!o.fx&&!o.4Z&&!o.26&&o.1v&&v.1r.e5!=1&&!o.54)}};E hr(){B 1p=7T&&v.1r.h6==1;if(v.1r.1l==1){if(!o.1v&&v.1r.eE==1){1p=K}}if(1p){V(B x in b){if(b.2r(x)){if(b[x].g("1f")!="aZ"){ce(b[x],K)}}}O(o.1R,{"6Z":"6K"});o.ij=H;ce(bg,K);if(bg.g("1p")){hW()}gW(K)}}E g2(){B 1l=o.1v&&v.1r.h6==1&&!o.3C;if(o.ds&&v.1r.T9==1){1l=K}if(!o.1v&&v.1r.1l==1&&v.1r.eE==1){1l=H}if(1h){if(1h.g("1p")&&v.1r.Ta==1){B m=v.1r.Tb;if(m==1&&o.1j.2g){J}F{if(m==0||!L(m)){J}}}if(1h.g("1p")&&o.mN){1l=K}}if(o.54){1l=K}if(1l){V(B x in b){if(b.2r(x)){if(b[x].g("1f")!="aZ"){ce(b[x],H)}}}ce(bg,H);if(!bg.g("1p")){7T=H;o.P.xP();if(o.1v){O(o.1R,{"6Z":"1X"});o.ij=K}}gW(H)}}E eP(){if(v.1r.h6==1){if(v.1r.e5==1&&!o.26&&!o.aF){}F{3I(o.h0);o.h0=7h(g2,((v.1r.8j>0?v.1r.8j:v.1r.iw)*2i))}}}E ce(S,bC){B 1l=K;B 1p=K;B bD=K;if(v.1r.1l==1){if((!o.fx&&!o.4Z&&!o.26&&o.1v&&v.1r.e5!=1&&!o.54)||(o.26&&7T&&!o.ij)||(o.U.fP()&&o.7n&&!o.4Z)){1l=H;1p=K;bD=H}F{1l=K;1p=H}if(L(bC)&&!o.54){1l=bC;1p=!1l}if(o.cF&&(S.s("1q").I("Q")==0||S.s("1f")=="2G")){1l=K;1p=H}if(v.1r.eE==1&&!o.1v){1l=H;1p=K;bD=K}if(v.1r.Tc==1&&!o.7J&&o.1v){1l=K;1p=H}}F{if(S.s("1l")!=1){1p=H}}if(1p&&!o.ij){O(o.1R,{"6Z":"6K"});o.ij=H}B a=S.g("1f");if(a=="3G"&&S.s("1q").I("Q")==-1){1l=K;1p=H}if(o.54){if(a=="2G"){if(o.P.1n()==-1){1l=H;1p=K}}}B yh=K;B hp=fX(S);if(S.s("1l")==1){if(S.s("GK")==1){if(bD||bC||(o.1v&&!o.4Z)){!bD&&!bC?\'\':hp=H}}if(S.s("Td")==1){if(!bD&&!bC){hp=H}}if(S.s("Te")==1){if(o.1v&&!o.4Z){hp=H}}if(S.s("Jx")==1||S.s("JZ")==1||S.s("JQ")==1){mF=H}}if(hp){1l=H;1p=K}F{!1l?1p=H:\'\'}if(S.s("1f")=="1I"){if(S.s("1l")==1&&S.s("hA")==1&&!S.g("fn")){1l=H;1p=K;if(!bD&&(o.9v||o.do)&&!bC&&S.s("dL")!=1){1l=K;1p=H}F{yh=H}}}if(o.9L||(!o.1w&&v.1r.1l==1&&v.1r.mD==1)||(!o.7J&&v.1r.1l==1&&v.1r.JG==1)||(!o.26&&v.1r.1l==1&&v.1r.Tf==1)){if(S.s("1q").I("Q")>-1||S.s("1q").I("2K")>-1){1l=H;1p=K}if(v.1r.e5==1&&!o.26){1l=K;1p=H}}if(1h){if(1h.g("1p")&&v.1h.7m!=1){bD=K;bC=K}}if(W&&o.2Z){if(v.W.T6==1){if(o.2Z.It()){J}}}if(a=="3b"){if(L(o.3b)){if(o.3b.4P()){1l=H;1p=K;S.1S("5U","1X")}}}if(a=="W"||a=="6o"||a=="dI"||S.s("Is")==1){if(W){if(W.4P()&&S.s("Is")!=0){1l=H;1p=K;S.1S("5U","1X")}}F{1l=H;1p=K}}if(o.Tg==1){1l=H;1p=K}if(yh){B cc=yj(S);if(cc){cc.y>0?S.1S("y0",cc.y):\'\';O(S.c(),{"1q":"2C","1d":S.g("y0")})}}if(1l){8w(S,(yl?H:K))}if(1p){Hk(S)}if(S==bg){if(!1l&&1p){hW();6T(7P);aN?aN.1S("1C",aN.s("a")):\'\';7T=K;hS==0?js("ui",1):\'\';hS=1;o.6e&&o.ac?o.6e.1p():\'\'}if(1l&&!1p&&!o.54){o.P.xP();cj();3q(7P);aN?aN.1S("1C",0):\'\';7T=H;hS==1?js("ui",0):\'\';hS=0;o.6e&&o.ac?o.6e.1l():\'\'}if(1h){if(1h.tb()){if(!1h.g("1p")){1p&&!1l?1h.1p():\'\'}F{!1p&&1l?1h.1l(2):\'\'}}}if(W){if(v.W.7m==1&&!W.4P()){if(1p||o.9L){if(v.W.K2==1&&o.26){}F{if(!W.g("1p")){if(v.W.Ko==1){!o.1v&&!o.d5?W.1p():\'\'}F{W.1p()}}}}F{if(1l&&W.g("1p")){W.1l()}}}}}};E fX(S){B x=K;B a=S.g("1f");if(S.s("1l")==1){if(S.s("xa")==1){o.1v||o.d5?x=H:\'\'}if(S.s("eE")==1){!o.1v&&!o.d5?x=H:\'\'}if(S.s("Ti")==1){o.7n?x=H:\'\'}if(S.s("gZ")==1){x=H}F{if(S.s("Tj")==1){if(o.1j.ew){S.1S("gZ",1);x=H}}if(S.s("Tk")==1){if(o.1j.2g){S.1S("gZ",1);x=H}}}if(S.s("JZ")==1){if(o.2V>S.s("JD")){S.1S("dL",1);x=H}F{S.1S("dL",0)}}if(S.s("Tl")==1&&!7N){x=H;o.nW=1}if(S.s("Tm")==1&&7N){x=H;o.nW=1}if(S.s("Jx")==1){if(o.2V<=S.s("Jv")){S.1S("dL",1);x=H}F{S.1S("dL",0)}}if(S.s("Tn")==1){o.1w?x=H:\'\'}B t=o.P.1a();B d=o.P.1n();if(S.s("HP")==1&&S.s("Jq")>0){if(t>=S.s("Jq")){x=H}}if(S.s("HN")==1&&S.s("Jo")>0){if(t<S.s("Jo")){x=H}}if(S.s("HL")==1&&S.s("Jk")>0){if(t<d-S.s("Jk")||d==0){x=H}}if(S.s("To")==1){if(W){if(!W.bu()){x=H}}}if(S.s("Tp")==1){if(o.1w||!o.3t||o.P.5R()){if(S.s("mD")!=1){x=H}}if(o.3t){if(o.3t.ay().t==0){x=H}}}if(S.s("mD")==1){!o.1w?x=H:\'\'}if(S.s("l6")>0){x=H}if(S.s("JO")==1){if(L(S.s("mo"))){2J[S.s("mo")]?x=H:\'\'}}if(S.s("Tq")==1){if(!L(S.s("9c"))){x=H}}if(S.s("JW")==1){if(L(S.s("m9"))){!2J[S.s("m9")]?x=H:\'\'}}if(S.s("Th")==1&&o.1j.4n){!o.1w||o.ma?x=H:\'\'}if(S.s("T4")==1){!o.P.7n()?x=H:\'\'}if(S.s("ST")==1){!o.P.5R()?x=H:\'\'}if(S.s("T3")==1){!o.4Z?x=H:\'\'}if(S.s("SK")==1){!o.26?x=H:\'\'}if(S.s("JQ")==1){o.26?x=H:\'\'}if(S.s("SL")==1){!o.3p?x=H:\'\'}if(S.s("SM")==1){o.P.5R()&&o.P.c9().I("?x7")==-1?x=H:\'\'}if(S.s("Fe")==1){5S(o.2a)?x=H:\'\'}if(S.s("JG")==1){!o.7J?x=H:\'\'}if(S.s("SN")==1){o.7J?x=H:\'\'}if(S.s("SO")==1){o.mn?x=H:\'\'}if(S.s("SP")==1){!o.mn?x=H:\'\'}if(S.s("Gz")==1){if(S.g("ik")){x=H}}if(S.s("SQ")==1){!o.ab?x=H:\'\'}if(S.s("SR")==1){o.ab?x=H:\'\'}if(S.s("SJ")==1){if(v.4C==1&&v.dY==1){if(o.2z=="4W"&&!L(v.2a)&&v.xE==0){if(!o.1w||o.P.6W()=="7n"){if(v.2a==\'\'){}F{x=H}}}}}}if(a=="3G"){B lu=S.s("3d");if(lu){if(lu=="2Y:5Z"||lu=="5Z"){if(!o.5Z&&!o.iR){x=H}}if(lu=="2Y:9m"){if(!o.9m||(!o.1w&&v.4C==0)){x=H}}if(lu=="2Y:FG"){if(!o.mn){x=H}}if(lu.I("6p")>-1){if(!o.6p){x=H}}if(7b([lu],"7w")&&!7b([lu],"js:")&&S.s("gZ")!=1){B sk=K;if(L(v.7w)){if(!o.cP){1L Fl==\'E\'?o.cP=1B Fl():\'\'}if(o.cP){sk=o.cP.xH(S)}}!sk?x=H:\'\'}}}if(a=="W"||a=="6o"||a=="dI"){if(W){if(W.4P()){x=H}}F{x=H}}if(a=="1h"){if(1h){if(1h.4P()){x=H;o.2z!=\'1E\'?S.1S("5U","1X"):\'\'}}F{x=H}}if(S.g("1H")=="1D"){if(S.g("R")==0){x=H}}if(S.g("1h#")){if(!S.g("1S#4w")){x=H}}if(S.s("3H")==1){B cb=1V.8z("SS"+v.id);if((o.P.1n()==0&&o.P.1a()==0)||!o.4q||!5S(cb)||!o.SU){x=H}}if(S.s("wf")==1){!x?S.1S("wf",1):\'\'}if(a=="1n"){if(o.P.5R()){x=H}}if(S.g("1b")=="x9"&&o.1j.2g){if(o.9L&&o.1j.cQ){x=H}}J x}E 8w(S,yC){if(S.g("1p")){if(o.aF||S.s("5U")=="1X"||yC){S.1S("2k",K)}F{Hh(S)}S.1S("1p",K)}};E Hk(S){if(!S.g("1p")){if(S.s("5U")=="1X"||o.aF){S.1S("2k",H);if(o.aF){S.1S("1C",1)}if(S.g("1f")=="1I"){if(o.hy){xM(S)}}}F{HK(S)}if(S.s("1f")=="1I"){o.Q.3T(o.3p?0:v.1I)}if(S.s("1f")=="2G"){o.U.xN()}S.1S("1p",H)}};E Hh(S){xQ(S.g("1b"));B 5K="gI|";B 5r="0|";B 1l=1;B a=S.s("5U");if(S.s("Hy")==1){5K=\'\';5r=\'\'}B p=S.s("1q");B hR=S.g("3o");2o(S.s("mE"))?p=S.s("mE"):\'\';io(p,[\'2K\'])&&o.cF?p="":\'\';if(a=="1O"){5K+="1O|";5r+="0|"}if(a=="1q"){if(p.I("2m")>-1&&p.I("Q")==-1){5K+="x|";5r+=5g(o.2V+S.g("Y")/2*hR)+"|"}if(p.I("1c")>-1){5K+="x|";5r+=5g(-S.g("Y")/2)*hR+"|"}if(p.I("1d")>-1){5K+="y|";5r+=(-S.g("1g")/2)*hR+"|"}if(io(p,["2K","Q","8T"])){5K+="y|";if(S.g("1f")=="2G"||S.g("1f")=="1I"){5r+=5g(o.4B+S.s("h")+(S.s("h")<20?20-S.s("h"):0))+"|"}F{5r+=5g(o.4B+S.g("1g")/2)+"|"}}if(p=="8y"){5K+="1O|";5r+="0|"}}B m=1B 5B({"mc":S,"me":S.g("1b"),"1H":5K.1k(0,5K.R-1),"to":5r.1k(0,5r.R-1),"1l":1l})};E HK(S){xQ(S.g("1b"));B 5K="";B 5r="";B a=S.s("5U");B p=S.s("1q");2o(S.s("mE"))?p=S.s("mE"):\'\';if(S.g("1C")!=1&&S.s("Hy")!=1){5K="gI|";5r=(S.g("1b")==\'bg\'?v.1r.a:"1")+"|"}if(a=="1O"){if(S.g("3o")!=S.s("1O")){5K+="1O|";5r+=S.s("1O")+"|"}}if(a=="1q"){if(p=="8y"){if(S.g("3o")!=S.s("1O")){5K+="1O|";5r+=S.s("1O")+"|"}}F{if(p.I("Q")>-1||p=="2K"){if(S.g("y")!=S.g("y0")){5K+="y|";5r+=S.g("y0")+"|"}}F{5K+="x|y|";5r+=S.g("x0")+"|"+S.g("y0")+"|"}}}if(5K!=""&&5r!=""){B m=1B 5B({mc:S,me:S.g("1b"),1H:5K.1k(0,5K.R-1),to:5r.1k(0,5r.R-1),1p:1})}F{S.1S("2k",H)}};G.kK=E(1b,1H,yC){B 4H=K;B 2I=K;B S=b[1b];B 1f=S.g("1f");B 3d=S.s("3d");if(1H=="6x"){if(o.hy){if(1f=="1I"||1f=="5o"||1f=="ar"){if(!S.g("fn")){o.9v=H;o.do=H;4H=H;4m();if(v.eF.H5==1){B bl=6V("1f","2G");if(bl){3q(bl.c())}}}}}if(1h&&v.1h.eR==1&&((1f=="1h"||3d.I("Gs")==0)||3d.I("1h:")==0)){2F(o.f0);if(!1h.g("1p")||nB!=S){51(S,1H);o.f6=1f+3d;1A(E(){o.f6=28},43)}}if(W&&v.W.eR==1&&1f=="W"){2F(o.ys);if(!W.g("1p")||nB!=S){51(S,1H);o.f6=1f;1A(E(){o.f6=28},43)}}}if(1H=="5l"){if(o.hy){if(1f=="1I"||1f=="5o"||1f=="ar"){o.9v=K;o.do=H;1A(E(){if(!o.9v){o.do=K;V(B x in b){if(b.2r(x)){if(!7T){if(b[x].g("1f")=="1I"&&!b[x].g("fn")){8w(b[x]);2A()}}if(b[x].g("1f")=="2G"){if(v.eF.H5==1){6T(b[x].c())}}}}}},43)}}if(1f=="2G"){o.U.6y(1)}if(v.1h.eR==1&&((1f=="1h"||3d.I("Gs")==0)||3d.I("1h:")==0)){2F(o.f0);o.f0=1A(E(){if(!o.3C){cj(1)}},(v.1h.gz>0?v.1h.gz*2i:2i))}if(W&&v.W.eR==1&&1f=="W"){2F(o.ys);o.ys=1A(E(){if(!o.3C){W.g("1p")?W.1l(1):\'\'}},(v.W.gz>0?v.W.gz*2i:2i))}}if(4H){1A(2A,10)}};G.np=E(){if(o.5m&&!o.26&&!o.aF){o.U.5m(K);o.5m=K}if(o.2a){if(v.nJ>-1&&5S(o.2a)){O(o.2a,{1C:v.nH})}}if(o.1v&&v.GZ==1&&v.SV!=0){o.U.3f()}if(v.1r.8j>0){2F(o.Gq);o.Gq=1A(4m,v.1r.8j*2i)}F{4m()}};G.Ew=E(){if(o.2a){if(v.nJ>-1&&5S(o.2a)){O(o.2a,{1C:v.nJ})}}if(!o.1v&&v.GZ==1){o.U.2B()}4m();gW(K)};G.gD=E(bm,bc){B y;V(B x in b){if(b.2r(x)){y=b[x].g("1f");if(y=="2G"||y=="1I"){b[x].gD(bm,bc)}}}};G.nD=E(){if(v.1r.1l==1){if(v.1r.e5==1&&!o.26){J}if((!o.4Z||o.1j.2g)&&o.P.6W()=="7B"){o.4Z=H;4m();o.1j.2g?1A(E(){o.4Z=K},43):\'\'}if(v.1r.h6==1){hr();eP()}gW(K)}};G.gi=E(bm,bc){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="2G"||b[x].g("1f")=="1I"){b[x].gi(bm,bc)}}}};G.j0=E(1a,1n,GO){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="2G"){b[x].6y(1a,1n,GO)}if(b[x].g("1f")=="1a"){nX(b[x],1a,1n)}if(b[x].s("EZ")==1){b[x].wm()}if(b[x].s("G7")==1){b[x].Fr(1a,1n)}if(b[x].s("HA")==1){if(b[x].s("3d")=="HE"||b[x].s("3d")=="9R"){1L GN==\'E\'?GN(b[x]):\'\'}if(b[x].s("ES")==1&&!b[x].g("1p")&&7T){}F{if(b[x].g("1p")==fX(b[x])){4m();2A()}}}}}};E gW(x){if(v.1r.1l==1){x?cj():\'\';if(o.cF){if(!o.1v&&v.1r.eE==1){x=H}if(x&&!o.yD){O(o.1r,{"1d":bg.h()})}if(!x&&o.yD){O(o.1r,{"1d":0})}o.yD=x}}}E hW(){7T=K;o.P.hW();if(o.vM){o.vM=K;2A();1A(2A,ep)}}E nX(x,1a,1n){if(v.4o>0){1a-=v.4o*1;1n-=v.4o*1}B y=46(1a);if(x.s("Js")=="1"){y=46(1n-1a)}if(x.s("SW")=="1"){if(x.s("SX")=="1"){y=y+(1n>0?\' \'+2P(x.s("SY"))+\' \'+46(1n):\'\')}F{1a==0?y=46(1n):\'\'}}x.6m(y)}G.yt=E(1a,1n){B x=6V("1f","2G");if(x){x.za(1a,1n)}};G.jr=E(y){if(o.P.1n()>0){B x=6V("1f","2G");if(x){x.jr(y)}}};G.9p=E(){if(!7N){if(v.fG==1){2F(nT);nT=1A(9p,43)}F{9p()}}};E 9p(){if(!7N){js("SZ");7N=H;B x=6V("1f","aZ");if(x){x.Fq();if(v.EV==1&&o.1v){2F(o.Gn);o.Gn=1A(HJ,(v.HH>0?v.HH:1)*2i)}}o.nW?4m():\'\'}}E HJ(){if(o.1v&&7N){o.U.8n()}}G.Fs=E(y){V(B x in b){if(x==y){b[x].1S("3q")}}};G.8A=E(){2F(nT);if(7N){js("8a");B x=6V("1f","aZ");if(x){x.hH();if(v.EV==1&&o.1v){o.U.g4()}}7N=K;o.nW?4m():\'\'}};G.h4=E(){B x=6V("3d","1I 9b");if(x){x.1S("6T");x.6m(2P(\'1I\')+\' \'+(o.3p?0:2H.pI(v.1I*100))+\'%\');2F(o.h4);o.h4=1A(ET,2i)}};E ET(){B x=6V("3d","1I 9b");if(x){x.6m(\'\');x.1S("3q");2F(o.h4)}}G.3Q=E(1a,1n){if(v.4o>0){1a-=v.4o*1;1n-=v.4o*1}V(B x in b){if(b.2r(x)){if(b[x].s("on")==1){if(b[x].g("1f")=="2G"){1n>0?b[x].1S("2p",1a/1n):\'\';b[x].yX()}if(b[x].g("1f")=="1a"){nX(b[x],1a,1n)}if(b[x].g("1f")=="5q"){b[x].1S("ow",0.5);b[x].1S("eN",0)}}}}};G.3V=E(1a,1n){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="1n"){if(v.4o>0){1n-=v.4o*1}b[x].6m(46(1n))}if(b[x].g("1f")=="2G"){b[x].6y(1a,1n);b[x].IS(1n)}if(b[x].g("1f")=="1a"){nX(b[x],1a,1n)}}}};G.7G=E(){if(!o.4G){1h.g("1p")?1h.1l():1h.1p()}};G.bO=E(){if(1h){if(o.4G){J o.4G.5S()||1h.g("1p")}F{J 1h.g("1p")?H:K}}F{J K}};G.nM=E(x){if(1h){1h.5z(x)}};G.cj=E(){cj()};G.T0=E(x){if(1h){1h.JS(x)}};G.D2=E(){if(1h){1h.hk()}};G.En=E(x){if(1h){J 1h.Jp(x)}};E cj(x){if(1h){1h.g("1p")?1h.1l(x):\'\'}o.4G?o.4G.1l():\'\'};G.bV=E(){if(W){if(W.g("1p")){W.1l(1)}F{W.1p()}}};G.hm=E(x){if(W){if(W.g("1p")&&x!=1){x!=2?W.1l():\'\'}F{1A(E(){W.1p()},100)}}};G.hv=E(){if(W){J W.g("1p")?H:K}F{J K}};G.cJ=E(x){J W?W.g(x):\'\'};G.6a=E(x){if(W){W.xj(x)}};G.Kn=E(x){if(W){W.Ka(x)}};G.bb=E(){if(W){W.bb()}};G.n7=E(){if(W){W.n7()}};G.ib=E(){ib()};E ib(){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="6o"){O(b[x].c(),{"1C":(!W.bu()?0.5:1)})}if(b[x].g("1f")=="dI"){O(b[x].c(),{"1C":(!W.f8()?0.5:1)})}}}}G.bu=E(){if(W){J W.bu()}F{J K}};G.f8=E(){if(W){J W.f8()}F{J K}};G.fN=E(){if(W){J W.fN()}F{J K}};G.na=E(){if(W){W.na()}};G.dJ=E(){if(W){W.dJ()}};G.Kb=E(x){if(x&&W){W.bG(x)}};G.Kd=E(x){if(x&&W){W.nd(x)}};G.Kf=E(x){if(x&&W){O(W.co(),{"T1":"1X","2U-2m":W.s("7x")});1V.8z(x).1T(W.co());3q(W.c())}};G.T2=E(){};G.vH=E(x){if(1h){1h.5Y();1h.g("1p")?1A(E(){1h.1l()},4A):\'\'}};G.iI=E(){if(1h){1h.5Y()}if(o.4G){o.4G.dV()}};G.iH=E(x){if(1h){1h.fT()}2A();4m()};G.iE=E(x){if(1h){1h.ih(x);1h.g("1p")?1h.1l():\'\'}if(o.4G){o.4G.dV()}x=="5a"?vI():\'\'};E vI(){if(o.jZ){B x=3U(o.i9/o.5X.4T(-1)[0],1).yF(2);V(B i in b){if(b.2r(i)){if(b[i].s("7L")=="5a"&&o.i9){b[i].6y(x,1)}if(b[i].s("3d")=="2Y:5a,1.0"){b[i].wA(x)}}}}}G.nn=E(x){if(1h){1h.ih("7X")}if(o.4G){o.4G.dV()}};G.bn=E(){if(1h){1h.9u();1h.g("1p")?1A(E(){1h.1l()},4A):\'\'}if(o.4G){o.4G.dV()}if(o.54&&o.4q){o.3H.a2()}};G.vJ=E(){o.4G?o.4G.1l():\'\';if(1h){1h.vJ()}};G.hF=E(nu,2k,7H){V(B x in b){if(b.2r(x)){if(b[x].g("1f")=="1h"){if(b[x].s("gN")==1){b[x].EY()}}if(b[x].g("Hx")=="1h#"+nu){b[x].1S("1S#4w",2k);if(b[x].g("1H")=="1D"){if(7H){b[x].6m(vK(7H))}}F{if(v.1h[\'1h\'+nu+\'1f\']=="1W"){if(7H==2P("6S")){b[x].cd(0)}F{b[x].cd(1)}}2A()}ce(b[x])}}}};G.Im=E(){if(1h){1h.5Y();1h.ih("7X");1h.ih("6J")}};G.kj=E(){B x=6V("1f","2G");if(x){x.kj()}};G.4H=E(){2A();if(7T){o.vM=H}};G.wC=E(x){if(!7T||x==1){2A();4m()}F{v.1r.vN=H}};G.vO=E(){B b=6V("1H","O");if(b){b.F0()}};G.4x=E(){4m();2A();4m();if(o.9L){3q(7P)}F{!7T?6T(7P):\'\'}};G.E2=E(1e){if(1z.es==v.id&&v.1M.on==1){B x=1e.IZ;B y=K;if(x==1G){x=1e.Iz}if(L(o.22)||L(o.8B)||o.vp==1){J K}if(o.1v&&v.1M.hw==1){y=H}if(((v.1M.8J==1&&x==32)||(v.1M.UZ==1&&x==13)||(v.1M.k==1&&x==75))&&(o.5V||o.4Z||y)){if(v.1M.2N==1){7l(\'1v\',o.1v?0:1)}o.U.ee();1e.96();J K}!v.1M.lh?v.1M.lh=0.2:\'\';!v.1M.1O?v.1M.1O=5:\'\';if(v.1M.J6==1&&(o.5V||y)){if(o.P.1n()>0){V(B i=48;i<58;i++){if(x==i){o.U.3Q((o.P.1n()*(x-48)*10)/100,H)}}}}if((x==39||(v.1M.l==1&&x==76))&&(o.5V||y)){la(v.1M.vW)}if((x==37||(v.1M.j==1&&x==74))&&(o.5V||y)){lb(v.1M.vW)}if(x==38&&(o.5V||y)){la(v.1M.vX)}if(x==40&&(o.5V||y)){lb(v.1M.vX)}if(x==Tt&&(o.5V||y)){la(v.1M.J8)}if(x==V0&&(o.5V||y)){lb(v.1M.J8)}}};E 6V(y,z){V(B x in b){if(b.2r(x)){if(b[x].s(y)==z){J b[x]}}}}E la(x){if(x=="6o"){if(o.W){o.Q.bb()}F{x="3D"}}if(x=="3D"){if(o.P.1n()>0){B sk=o.P.1a()+3U(v.1M.3D);if(sk<o.P.1n()){o.U.3Q(sk,H);js("lf",sk)}}}if(x=="1I"){o.U.3T(3U(v.1I)+3U(v.1M.lh));1e.96()}if(x=="1O"){o.P.1O(v.1M.1O/100);1e.96()}if(v.1M.2N==1){7l(x,1)}}E lb(x){if(x=="6o"){if(o.W){o.Q.dJ()}F{x="3D"}}if(x=="3D"){if(o.P.1n()>0&&o.1w){B sk=o.P.1a()-v.1M.3D>=0?o.P.1a()-v.1M.3D:0;o.U.3Q(sk,H);js("lf",sk)}}if(x=="1I"){o.U.3T(3U(v.1I)-3U(v.1M.lh));1e.96()}if(x=="1O"){o.P.1O(-v.1M.1O/100);1e.96()}if(v.1M.2N==1){7l(x,0)}};G.EM=E(1e){if(1z.es==v.id){B x=1e.IZ;if(x==1G){x=1e.Iz}if(x==57){if(v.1o==1){}}if(o.26&&x==27){o.U.8f()}if(L(o.22)||L(o.8B)){J K}if(v.1M.on==1){if(v.1M.f==1&&x==70&&v.fG!=1&&(o.5V||o.4Z)){if(v.1M.2N==1){7l(\'26\',o.26?0:1)}o.26?o.U.8f():o.U.8Q()}if(v.1M.s==1&&x==83&&(o.5V||o.4Z)){if(o.3y){if(v.1M.2N==1){7l(\'1W\',o.4Y?0:1)}3v("Ig")}}if(v.1M.m==1&&x==77&&(o.5V||o.4Z)){if(v.1M.2N==1){7l(\'5o\',o.3p?1:0)}o.3p?o.U.62():o.U.5d()}}}};G.4e=E(){3I(o.h0);V(B x in o){if(x.I("X")==0&&x.I("Cv")>-1){3I(o[x])}}V(B i=0;i<fW.R;i++){B 1b=fW[i];if(b[1b]){b[1b].4e()}}if(1h){1h.4e()}if(W){W.4e()}bg.4e();aN?aN.4e():\'\';if(7P.4h==o.1R){o.1R.3m(7P)}F{o.1r?o.1r.3m(7P):\'\'}};G.hr=E(){hr()};G.g2=E(){g2();4m()};G.eP=E(){eP()};G.nE=E(){J 7T}};B Kc=E(1b){B i;B C=[];B w;B h;B wE=0;B bg;B pY;B 9k;B mS=0;B 4w=H;B Gu=K;B 3o=1;B 3u=1;B 2q;B ip;B 2O;B 8p;B 1f;B a3=\'\';B x0;B y0;B on;B 6x=K;B bT=K;B hc=0;B Ww;B WV=0;B eD=0;B Ji=0;B fe=0;B pq=K;B H9=K;B ik=K;B 3e=K;B iO;B gN;B py;B wg=K;C=8s(C,eX.S);C=8s(C,v[1b]);B U=[C.1f];1f=U[0];L(C.K9)?U[1]=C.K9:\'\';L(C.Kl)?U[1]=C.Kl:\'\';L(C.1P)?C.1D=C.1P:\'\';if(2o(C.Jn)){o.9G?C.1O=C.Jn:\'\'}if(1f=="3b"){o.g8=H}if(L(C.3d)){if(C.1H=="1D"&&C.3d!=\'\'){if(L(v[C.3d+\'1D\'])){C.1D=v[C.3d+\'1D\']}}if(C.3d.I("1h#")==0){a3=C.3d;if(C.2O==\'\'&&a3.I(",")==-1){C.2O=2P(v.1h[\'1h\'+a3.1k(9)+\'1f\'])}}if(C.3d.I("6p")>-1){v.Jl=H}if(C.3d.I("3b:")>-1){o.g8=H}if(C.3d=="WW"){C.WX=1B WY(C)}}B 7f=C.2O?C.2O.2t("///"):[];if(C.JN==1){C.1H="1D";C.1D=hD(0)+(U.R>1?\'///\'+hD(1):\'\');if(2o(C.aI)){C.1u=C.aI}}C.it=[];C.il=[];B wQ=0;B 2N=1B cp();B 1t=1B cp();B eg=1B cp();B WZ=1B cp();B hE=0;B b3;if(C.1H=="1D"){if(C.4R){if(L(v[C.4R+\'1D\'])){C.1D=v[C.4R+\'1D\']}}if(L(C.1D)){2N[0]=4z(C.1D);C.o8=C.1D.R;B v7=[\'/\',\'|\',\'-\'];v7.I(C.1D.1k(-1))>-1?C.wz=C.1D.1k(-1):\'\';v7.I(C.1D.1k(0,1))>-1?C.wx=C.1D.1k(0,1):\'\';if(1f=="1a"||1f=="1n"){if(C.1D.I(\'0:\')==0){C.o4=H}if(C.1D.2t(":").R==3){C.Hc=H}F{if(C.1D.I(\'bR:bR\')>-1){C.Hf=H}}if(C.lp==1){v.lp=1}}if(C.Js==1&&C.1D.I("-")==0){C.Hn=H}if(C.1D.I("///")>0&&(1f=="3G"||C.JN==1)){C.gv=C.1D.2t("///");C.1D=2N[0]=C.gv[0]}}if(v.v9==1){1A(9a,100);1A(9a,43);1A(9a,2i)}}F{if(L(C.1t)){2N[0]=C.1t;if(2N[0].I("///")>0&&2N[0].I("jW")==-1){2N=C.1t.2t("///")}if(L(C.pO)){2N[1]=C.pO}if(C.Fk==1){if(2o(C.FO)){2N.2M(C.FO);hE=2N.R-1}}}}if(1f=="3G"){if(C.X0==1&&L(C.q4)){C.xb=C.3d}}B X=1Y("2e");if(C.1q.I(\'8T\')>-1){o.8T?o.8T.1T(X):1A(E(){o.8T.1T(X)},100);o.FH=H}F{if(io(C.1q,["X","2K"])&&o.cF){o.1r.1T(X)}F{o.1R.1T(X)}if(1f=="aZ"&&C.X1==1){X.C.4X=lR}}if(C.G7==1){C.i8=1B X2(C,X)}B pY=1Y("2e");X.1T(pY);B ef=1Y("2e");O(ef,{"1q":"2C","1c":0,"1d":0});X.1T(ef);O(X,{"1q":"2C","1c":0,"1d":0,"1C":1,"eh":"pC","oJ":"kJ"});if(2o(C.4R)){3Y(X,{"id":(v.id+"41"+"cu"+C.4R)})}if(C.EZ==1||C.Gv==1){O(ef,{"5v":"2W 0.2s 3g"})}if(2N.R>0){V(i=0;i<2N.R;i++){1t[i]=1Y("2e");O(1t[i],{"1q":"2C","1d":0,"1c":0,"ag":"1X","1C":C.a,"5v":"1C 0.1s 3g"});if(C.gM>C.1O){O(1t[i],{"5v":"1C 0.1s 3g,2W 0.1s 3g"})}if(C.1H=="eQ"&&C.3c!=\'\'){if(2o(C.4R)){3Y(1t[i],{"id":(v.id+"41"+"X"+"41"+C.4R+"41"+"1t")});if(v[C.4R+\'3c\']){C.3c=v[C.4R+\'3c\']}}if(io(C.3c,[".vP",".im",".X3","jW",".fF"])){C.3c.I("//")==-1&&C.3c.I("jW")==-1?C.3c=\'//\'+C.3c:\'\';B z=1Y("4d");C.9e=1;z.1y("e3",xf);z.3c=C.3c;1t[i].1T(z);C.w=1t[i].2f;C.h=1t[i].2X;if(C.EW>0){O(z,{1g:C.EW})}}}if(C.1H=="1D"){O(1t[i],{"1u":(C.1u),"eh":C.eH*2y(v.8u,1),"vw":fb(C.3Z),"jc-fC":C.iQ+\'px\',"2U":"0 bU 0 bU","bj-8J":"d4"});if(o.9G){if(2o(C.Fd)){O(1t[i],{"eh":C.Fd*2y(v.8u,1),})}}if(C.2p==1){if(C.1D.I("<a ")>-1||1b=="bY"){O(1t[i],{"ag":"2D"})}}if(C.Fz==1){O(1t[i],{"3Z-dX":"Fz"})}if(C.lP>0){O(1t[i],{"3Z-dX":C.lP})}if(C.Fy){O(1t[i],{"oJ":C.Fy+"em"})}2N[i]==\'5q\'?2N[i]=2P("5q"):\'\';1t[i].1U=xc(2N[i]);1A(wB,100);C.w=1t[i].2f;C.h=1t[i].2X;if(2o(C.4R)){3Y(1t[i],{"id":(v.id+"oR"+C.4R+"WU")})}}if(C.1H=="O"){o.1w?1A(wY,4A):\'\'}B 8M=2N[i].6c();if(8M.I(\'B:\')==0){8M=2y(1z[8M.1k(4)],\'\')}B lv=8M.I(\'<2v\')>-1||8M.I(\'<X4\')>-1;if(C.1H=="2v"&&(8M.I(\'<g>\')>-1||lv)){if(1f=="5o"||1f=="3G"){8M=8M.1Q(/i1/g,\'i1\'+v.id+1b)}if(8M.I(\'4y\')>-1){bS(1t[i])}1t[i].1U=(!lv?"<2v Y=\'20\' 1g=\'20\' 4i:4j=\'3N://4g.w3.4a/7R/4j\' 4i=\'3N://4g.w3.4a/4c/2v\'>":\'\')+8M+(!lv?"</2v>":\'\');1t[i].2f>20?C.w=1t[i].2f:\'\';1t[i].2X>20?C.h=1t[i].2X:\'\';O(1t[i],{"Y":C.w,"1g":C.h});if(C.aI!=-1){oZ(1t,C.aI)}if(2o(C.4R)){3Y(1t[i],{"id":(v.id+"oR"+C.4R+"X6"+i)})}}ef.1T(1t[i]);i>0?1l(1t[i]):\'\'}au();py?xf():\'\';if(C.3d=="3H"){C.3H=1;C.1l=1;o.3H?1t[0].1U=o.3H.ll(C.aI!=-1?C.aI:\'#3F\'):\'\';if(o.1j.2g){1t[0].Hd=wN;1t[0].X7=5Q;1t[0].vm=wL}F{1t[0].jS=6B;1t[0].jT=5Q;1t[0].kE=e4}}F{if((bg.2f*C.1O<35||bg.2X*C.1O<35)&&C.1H!=\'1D\'){xg();bS(9k)}F{bS(bg)}}if(1f=="3G"){B lu=\'\';if(C.gS==1&&L(C.3d)){lu=C.3d;if(lu.I("2Y:")==0){B 1J=lu.1k(4).2t(",");if(1J.R==2){B vn=1J[1].2t("/");if(vn.R==2){1J[0]==\'hd\'?1J[0]="4E":\'\';if(v[1J[0]]==vn[1]){C.a=1;O(1t[0],{"1C":C.a})}}}}if(lu=="Ht"||lu=="4M"){o.U.g0();X.C.4X=lR;o.vp=1}}if((C.1l==1&&(C.HP==1||C.HN==1||C.HL==1))||lu.I("7w")==0||lu=="HE"||lu=="9R"){C.HA=1;if(7b([C.1q],"X")||C.GK==1){C.ES=1}}if(lu.I("7w")==0){X.C.4X=lR}}V(B sf in C){x5(sf)}if(1f=="1h"&&C.gN==1){gN=1B X8(X,bg,C)}if(C.2p==0){eW(X)}if(C.9e==1){1l(bg)}if(C.2q==1){p1()}if(C.1q.I("2m")>-1){eD=1}if(C.1q.I("1d")>-1){Ji=1}if(C.1q.I("2K")>-1){fe=1;1f=="3G"&&2o(C.3d)?X.C.4X=lR:\'\'}if(C.1q.I("X")>-1){fe=1}2A();B t=\'\';if(C.as!=0){t+="oF("+C.as+"vF)"}if(C.X9==1){t+=" 3o(-1)"}if(C.Xa==1){t+=" 3u(-1)"}if(t!=\'\'){O(ef,{"2W":t})}if(1f=="aZ"){hH()}B 1J=[];B i;if(1f=="W"){1J=[\'d6\',\'GP\',\'lN\',\'GQ\',\'w6\',\'kV\'];V(i=0;i<1J.R;i++){if(L(C[1J[i]])&&!L(v.W[1J[i]])){v.W[1J[i]]=C[1J[i]]}}}if(1f=="1P"){1J=[\'lK\',\'vA\',\'w7\'];V(i=0;i<1J.R;i++){if(L(C[1J[i]])&&!L(2J[1J[i]])){v[1J[i]]=C[1J[i]]}}}C.q8==1?8Y():\'\';if(1f=="3G"&&C.on==0){3q(X)}if(C.1l==1&&C.l6>0){1A(GR,C.l6*2i)}}E GR(){C.l6=-1;o.Q.4x()}E xg(){if(9k){9k.4h.3m(9k)}9k=1Y("2e");O(9k,{"1q":"2C","1d":0,"1c":0,"Y":C.1H=="eQ"?bg.2f:(bg.2f>35?bg.2f:35)*C.GT,"1g":C.1H=="eQ"?bg.2X:(bg.2X>35?bg.2X:35)*C.yu});C=4b(C,\'hg\',\'hg\');X.1T(9k)}E bS(x){if(1f.I("1a")==0&&U.R==1){C.2p=0}if(1f=="3G"&&C.gS==0){C.2p=0}if(C.2p==1){if(C.hn==1){O(x,{"6Z":"4y"})}O(x,{"ag":"2D"});if(o.1j.2g){x.1y("bT",E(e){wL(e)},{5x:K});x.1y("g9",E(e){wN(e)},{5x:K});x.1y("gR",E(e){H0(e)},{5x:K})}if(v.ew==1||!o.1j.2g){x.gC=aS}if(v.1r.hj==1||C.hj==1){O(x,{"2w-1u":"#q5","1C":0.5})}}F{O(x,{"6Z":"6K"})}if(!o.1j.2g){x.jS=6B;x.jT=5Q}if(C.3e==1||C.2q==1){x.kE=e4}}E wL(e){js("Xb"+1b);e.aA();bT=H}E wN(e){C.H1==1?6B():\'\';e.aA()}E H0(e){e.aA();e.96();C.H1==1?5Q():\'\';if(!bT){aS(e)}bT=K}E au(){if(bg){bg.4h.3m(bg)}bg=1Y("2e");O(bg,{"1q":"2C","1d":0,"1c":0});if(2o(C.4R)){3Y(bg,{"id":(v.id+"oR"+C.4R+"Xc")})}w=C.w;h=C.h;C.gH=-1;C.aP=-1;C=4b(C,\'2L\',\'2L\');C=4b(C,\'9O\',\'9O\');if(C.ba&&o.9G){if(C.ba!=\'0 0 0 0\'){C=4b(C,\'9O\',\'ba\')}}if(C.1H=="1D"){w=1t[wQ].2f;h=1t[wQ].2X;if(C.wR>0){w<C.wR?w=C.wR:\'\'}}C=4b(C,\'fD\',\'fD\');C=4b(C,\'GV\',\'GV\');if(2o(C.4R)&&L(v.3G)&&C.1f=="3G"){if(1L(v.3G)==\'3O\'){V(B i=0;i<7U.6b(v.3G).R;i++){if(v.3G[i][C.4R]){if(v.3G[i][C.4R]=="6S"){C.on=0}F{B 1J=v.3G[i][C.4R].2t(":");if(1J[0]=="2L-1c"){if(1J[1].I("%")>0){C.hB=2Q(1J[1])}F{C.4s=2Q(1J[1])}}}}}}}C.h=h;C.w=w;if(C.bg==1){h=h+C.am+C.an;w=w+C.7u+C.7x;C.h=h;C.w=w;if(C.1H=="1D"){C.hl=1t[0].2X}}F{C.5k=0}O(bg,{"Y":(C.GJ==1?GI:w),"1g":h,"yA":(C.q3*h)/2,"2w":(C.Gp==1?"3g-4J("+(C.Xd==1?"to 2m,":\'\')+5h(C.4S,C.5k)+","+5h(C.Xe,C.5k)+")":5h(C.4S,C.5k,bg)),"5v":"2w .1s 3g, 1C .2s, 2W .1s 3g"+(2o(C.ek)?\', 6X .1s 3g\':\'\')});if(C.1H=="eQ"){O(bg,{"Y":w,"1g":h,"yA":(C.q3*h/C.1O)/2,})}if(C.Ie==1){xA(bg,C.4S,C.J1,C.J2)}if(C.pB==1){O(bg,{"2R":2y(C.I2,1)+"px 6w "+C.pE})}if(C.9C==1){O(bg,{\'jJ-6X\':\'9C(bq)\'})}pY.1T(bg)}E 2A(){B gH=(-bg.2X/2);B aP=(-bg.2f/2);if(gH!=C.gH||aP!=C.aP){O(bg,{"1d":(-bg.2X/2),"1c":(-bg.2f/2)});C.gH=gH;C.aP=aP}if(9k){B x=C.1H=="eQ"?bg.2f:(bg.2f>35?bg.2f:35);B y=C.1H=="eQ"?bg.2X:(bg.2X>35?bg.2X:35);O(9k,{"1d":(-y/2)+C.I7-C.Ib,"1c":(-x/2)+C.X5-C.WS})}V(B i=0;i<2N.R;i++){B it=C.1H=="2v"?2H.4r(2Q(1t[i].C.1g))/2:2H.4r(1t[i].2X)/2;B il=C.1H=="2v"?2Q(1t[i].C.Y)/2:1t[i].2f/2;if(it!=C.it[i]||il!=C.il[i]){O(1t[i],{"1d":-it,"1c":-il});if(bg){O(1t[i],{"1d":(5g(1t[i].C.1d)+C.am/2-C.an/2+C.WH/2+C.WR/2),"1c":(5g(1t[i].C.1c)+C.7u/2-C.7x/2+C.Wy/2+C.Wz/2)})}C.it[i]=it;C.il[i]=il}}}E 6B(){B i;6x=H;if(C.eg==1){if(on&&L(C.pO)){i=1}F{i=0}if(b3&&eg.R>2){i=2}if(eg[i]){pd();1p(1t[eg[i]])}}if(C.bg==1){O(bg,{"2w":5h(wJ(C.bJ,C.4S),wJ(C.ak,C.5k),bg)});if(2o(C.ek)){O(bg,{"6X":"hb("+C.ek+")"})}}if(C.7j>-1&&!Gu){V(i=0;i<2N.R;i++){if(1t[i].C.5F!="3e"){O(1t[i],{"1C":C.7j})}}}if(C.pN!=-1){oZ(1t,C.pN)}if(C.Gv==1){hc+=45;i7(1t[0],hc)}if(C.gM>C.1O&&C.gM>-1){1O(C.gM)}if(1f=="1h"&&o.Q.bO()){}F{if(C.2q==1&&C.q8!=1){B x=7f.R>1&&!on?7f[1]:7f[0];if(x){if(x.I(\'B:\')==0){2O.1U=1z[x.1k(4)];8Y()}}1p(2q);O(2q,{"1C":1})}}if(1f=="5o"){o.U.5m(H);o.5m=H}o.ds=H;o.Q.kK(1b,"6x")}E 5Q(){6x=K;B i;if(C.eg==1){if(on&&L(C.pO)){i=1}F{i=0}if(b3&&eg.R>2){i=2}pd();1p(1t[i])}if(C.bg==1){O(bg,{"2w":5h(C.4S,C.5k,bg)});if(2o(C.ek)){O(bg,{"6X":"hb(1)"})}}if(C.7j>-1){V(i=0;i<2N.R;i++){if(1t[i].C.5F!="3e"){O(1t[i],{"1C":C.a})}}}if(C.gM>-1){1O(C.1O)}if(C.pN!=-1){oZ(1t,(C.aI==-1?\'#3F\':C.aI))}if(1f=="5o"&&!o.26){o.U.5m(K);o.5m=K}wZ();o.ds=K;o.Q?o.Q.kK(1b,"5l"):\'\'}E wZ(){if(C.2q==1&&C.q8!=1){1l(2q);O(2q,{"1C":0})}}E aS(e){e?e.6t=H:\'\';if(!pq){o.Q.fh(1b);if(1f=="3G"){oj()}wZ();if(C.WA==1){hc-=30;i7(1t[0],hc)}ik=H;if(C.Gz==1||(1b=="x9"&&C.1l==1&&C.xa==1)){o.Q.4x()}}};G.GA=E(){aS()};E oj(){if(2N){if(2N.R>1){if(on==H){1p(1t[0]);1l(1t[1])}F{1p(1t[1]);1l(1t[0])}}if(C.2q==1&&7f.R>1){2O.1U=o.ni+(on==H?7f[0]:7f[1])+o.i6;8Y()}}if(L(C.xb)){if(on==H){C.3d=C.xb}F{C.3d=C.q4}}pi();on=on!=H;if(C.3d){if(C.3d.I(",0/1")>-1){js(C.3d,on?1:0)}}if(C.bg==1&&L(C.xd)){if(C.xd!=-1){if(on){C.GD=C.4S;C.4S=C.xd}F{C.4S=C.GD}au();bS(bg);2A();if(C.1H=="1D"){9a()}F{1O(C.1O)}}}}E pi(){if(L(C.gv)){if(C.gv.R>1){if(on==H){6m(C.gv[0])}F{6m(C.gv[1])}}}}E wh(1e){1e.6t=H;o.Q.fh(1b)}E pd(){V(B i=0;i<2N.R;i++){if(1t[i].C.5F!="3e"){O(1t[i],{"1C":C.a});1l(1t[i])}}}E wB(1D){if(1t[0]){if(1t[0].2f>o.2V-C.4s-C.4D-C.7u-C.7x){if(C.xe==1){if(!1D){1D=1t[0].1U}1t[0].1U=\'<xe>\'+1D+\'</xe>\'}F{O(1t[0],{"bj-8J":"fg"})}O(1t[0],{"Y":o.2V-C.4s-C.4D-C.7u-C.7x})}}}E xf(){if(bg){py=K;C.9e=0;1l(bg);if(1t[0]){C.w=1t[0].2f*C.1O;C.h=1t[0].2X*C.1O;1O(C.1O)}C.9N=0;au();xg();bS(9k);1p(bg);2A();o.Q.4H();if(!5S(X)){3q(X)}}F{py=H}}E IG(1e){1e.6t=H}E e4(){if(!o.1j.2g&&!o.ds){6B()}8Y()}E 1O(x){if(x>0){O(bg,{"2W":"1O("+x+")"});V(i=0;i<2N.R;i++){O(1t[i],{"2W":"1O("+x+")"})}if(C.i8){C.i8.1O(x)}3o=x;3u=x}}E p1(){2q=1Y("2e");O(2q,{\'1q\':\'2C\',\'1c\':0,\'1d\':0,\'1g\':\'2D\',"1C":0,"5v":"1C 0.1s 3g"});ip=1Y("2e");C=4b(C,\'iY\',\'iY\');C=4b(C,\'GG\',\'GG\');O(ip,{\'1q\':\'2C\',\'1c\':0,\'1d\':0,\'Y\':\'100%\',\'1g\':30,\'2w-1u\':C.j1,\'1C\':C.iW,\'2R-6Q\':C.yq});2O=1Y("2e");O(2O,{\'1q\':\'2C\',\'1c\':C.xF,\'1d\':C.oQ,\'1u\':C.yr,\'3Z-eA\':fb(C.yB),\'3Z-3M\':C.yx*2y(v.8u,1),"jc-fC":C.yw+\'px\',"2G-1g":"1"});if(C.2O){if(C.2O.I("B:")==0){C.GH=H}}if(!C.GH){O(2O,{\'bj-8J\':\'d4\'})}if(C.eZ==1){8p=1Y("2e");8p.1U=\'<2v Y="bq" 1g="yo" yv="0 0 8 6" 8i="1.1" 4i="3N://4g.w3.4a/4c/2v" 4i:4j="3N://4g.w3.4a/7R/4j"><eY id="zN" 4p="1X" 6i="#\'+C.j1.1Q("#","")+\'" 6i-zK="zA" 8o="0 0 8 0 4 6"></eY></2v>\'}if(C.q8==1){O(2q,{"1C":1});bS(2q)}F{eW(2q)}X.1T(2q);2O.1U=o.ni+(C.2O==\'\'?2P(1f):7f[0])+o.i6;2q.1T(ip);2q.1T(2O);if(C.eZ==1){2q.1T(8p);B wb=o.wH?\'-bq\':\'-yo\';B ps=C.WB;if(!L(ps)){ps=\'\'}B tp=ps.I("1d")>-1;if(tp){i7(8p,\'-WC\')}O(8p,{\'1q\':\'2C\',\'2m\':(ps.I("2m")>-1?10*C.1O:\'2D\'),\'1c\':(ps.I("1c")>-1?10*C.1O:(ps==\'\'||ps==\'1d\'?\'50%\':\'2D\')),\'2L-1c\':(ps==\'\'||ps==\'1d\'?\'-DN\':0),\'2K\':(tp?\'2D\':wb),\'1d\':(tp?wb:\'2D\'),\'1C\':C.iW})}8Y()}E 8Y(){if(C.2q==1){O(2q,{"1d":(fe==1?-h-2q.2X+3:-2q.2X/2)+C.WD-C.WE,"1c":(eD==1?-2O.2f:(fe==1?-w/2:+2O.2f))-(fe==1?0:2O.2f/2+5)+C.WF-C.Wx,"1g":C.oQ+2O.2X+C.xK,"Y":C.xF+2O.2f+C.zV});O(ip,{\'1g\':2q.2X});2q.C.4X="2i"}}G.c=E(){J X};G.s=E(x){if(1f=="3G"){x5(x)}J C[x]};G.ss=E(x,x2){J L(C[x])?C[x][x2]:K};G.g=E(x){bB(x){1m"Y":J w;1i;1m"1g":J h;1i;1m"h":J 2y(C.hl,h);1i;1m"x":J 5g(X.C.1c);1i;1m"y":J 5g(X.C.1d);1i;1m"1C":J X.C.1C?X.C.1C:1;1i;1m"1p":J 4w;1i;1m"3o":J 3o;1i;1m"3u":J 3u;1i;1m"1f":J 1f;1i;1m"Hx":J a3;1i;1m"ik":J ik;1i;1m"1H":J C.1H;1i;1m"R":J C.o8?C.o8:0;1i;1m"1b":J 1b;1i;1m"x0":J x0;1i;1m"y0":J y0;1i;1m"6x":J 6x;1i;1m"1h#":J a3.I("1h#")==0;1i;1m"1h:":J a3.I("1h:")==0;1i;1m"wd":J 1f=="3G"&&C.1H=="1D";1i;1m"1S#4w":J wg;1i;6K:J K}};G.1S=E(k,x){bB(k){1m"1p":6x?5Q():\'\';4w=x;1i;1m"2k":HI(x);1i;1m"6T":6T(X);1i;1m"3q":3q(X);1i;1m"Hz":C.3e=0;1i;1m"wf":if(C.HB>0&&C.3e!=1&&!iO){2F(iO);iO=1A(E(){3q(X);(C.WG!=1?C.3e=1:\'\');iO=1G},C.HB*2i)}1i;1m"1O":1O(x);1i;1m"WI":O(X,{"2W":"1O(0)"});1i;1m"3o":O(X,{"2W":"3o("+x+")"});3o=x;1i;1m"3u":O(X,{"2W":"3u("+x+")"});3u=x;1i;1m"1C":O(X,{"1C":x});1i;1m"ow":O(1t[0],{"1C":x});1i;1m"eN":O(1t[0],{"6X":"eN("+x+")"});1i;1m"1c":O(X,{"1c":x});1i;1m"1d":O(X,{"1d":x});1i;1m"Y":O(X,{"Y":x});1i;1m"1g":O(X,{"1g":x});1i;1m"y8":C.y8=x;1i;1m"eD":eD=x;1i;1m"1S#4w":wg=x;1i;1m"x":O(X,{"1c":x});1i;1m"y":O(X,{"1d":x});1i;1m"5U":C.5U=x;1i;1m"7w":C.7w=x;1i;1m"x0":x0=x;1i;1m"y0":y0=x;1i;1m"gZ":C.gZ=x;1i;6K:J K}};E HI(x){if(x&&o.1j.2g){pq=H;1A(HM,ep)}if(!x){if(pn()&&b3){1l(1t[hE]);1p(1t[0]);b3=K}}if(C.9e==1){x?1p(X):1l(X)}F{if(1b=="WJ"||1b=="WK"){x?1p(X):1l(X)}F{O(X,{"2k":(x?"4M":"1X")})}4w=x;x?1p(X):\'\'}if(x&&C.oE){C.oE=K;1A(9a,100)}}E HM(){pq=K}G.6m=E(x,y){if(a3!=\'\'&&(C.1D==\'x\'||C.1D==\'1x\')){x=x+\'x\'}if(y){x=C.1D+x}6m(x);!5S(X)?C.oE=H:\'\'};B wk;G.hK=E(x){if(wk!=x){C.9c=x;6m(x);!5S(X)?C.oE=H:\'\';o.Q?o.Q.4H():\'\'}wk=x};G.wm=E(){i7(ef,mS);mS+=20};E i7(x,y){O(x,{"2W":"oF("+y+"vF)"+(x==1t[0]&&!H9&&3o!=1?\' 1O(\'+3o+\')\':\'\')})};G.Ha=E(x){if(C.1D.I("{1P")>-1){6m(C.1D)}};G.oj=E(){oj()};E 6m(1D){if(C.1H=="1D"){if(L(1D)){if(C.Hc){if(1D.R==4){1D=(C.o4?\'0:0\':\'bR:0\')+1D}if(1D.R==5){1D=(C.o4?\'0:\':\'bR:\')+1D}if(1D.R==7){1D=(C.o4?\'\':\'0\')+1D}}if(C.Hf){if(1D.R==4){1D=\'0\'+1D}}C.o8=1D.R}1D=(C.wx?C.wx+(C.Hn?\'\':\' \'):\'\')+1D+(C.wz?\' \'+C.wz:\'\');B Hr=1t[0].2f+(C.bg==1?C.am+C.an:0);B Gl=1t[0].2X+(C.bg==1?C.am+C.an:0);1t[0].1U=o.ni+(1f=="3G"?xc(1D):1D)+o.i6;if(C.WL==1){1t[0].1U+=\'<7p C="2k:bZ-4M;Y:et"></7p><7p C="2R-1d: bU 6w \'+3z(C.1u)+\';2R-1c: bU 6w dg;2R-2m: bU 6w dg;1q: 2C;2m:bU;1d: 50%;2L-1d: -4l;"></7p>\'}if(1f=="1P"){O(1t[0],{"Y":"2D","bj-8J":"d4"});wB(1D)}C.w=1t[0].2f+(C.bg==1?C.am+C.an:0);C.h=1t[0].2X+(C.bg==1?C.am+C.an:0);if(Hr!=C.w||Gl!=C.h||(C.w>0&&wE==0)){9a()}if(1t[0].2f>0){wE=C.w}F{a3!=\'\'?1l(1t[0]):\'\';if(1D!=\'\'){1A(9a,10)}}}}G.9a=E(){9a()};E pn(){J!o.P.5R()&&C.Fk==1}E 9a(){if(C.1H=="1D"){if(1t[0]){if(1t[0].2f>0){a3!=\'\'?1p(1t[0]):\'\';w=C.w=1t[0].2f;h=C.h=1t[0].2X;au();bS(bg);2A();if(o.Q){if(7b([C.1q],"X")){o.Q.wC()}F{o.Q.4H()}}}}}}G.wA=E(x){if(C.Fm==1){B n=4;if(1b=="WM"){if(o.1j.2g){J}}F{n=8}B y=\'i1\';B z=[];V(B i=1;i<n;i++){z[i]=1V.8z(y.9Q(v.id,1b,\'WN\',i))}if(z[1]){V(B i=1;i<n;i++){z[i]?1l(z[i]):\'\'}if(n==4){V(B i=1;i<n;i++){x>(i/n)&&z[i]?1p(z[i]):\'\'}}F{V(B i=n;i>0;i--){if(x*1+(1/n)>=(i/n)&&z[i]){1p(z[i]);1i}}}}}};G.On=E(){if(!on){if(2N){if(2N.R>1&&U.R>1){1l(1t[0]);1p(1t[1])}}if(U.R>1){1f=U[1];if(C.2q==1){2O.1U=hD(1);8Y()}}if(pn()&&b3){1l(1t[hE]);b3=K}pi();on=H}};E hD(x){J o.ni+(C.2O==\'\'?2P(U[x]):(7f.R>1?7f[x]:7f[0]))+o.i6}G.cd=E(x){cd(x)};G.Fr=E(x,y){if(C.i8){C.i8.dV(x,y)}};E cd(x){B y=\'i1\';B z=1V.8z(y.9Q(v.id,1b,\'WO\'));if(z){O(z,{"5v":"2W 0.1s 6r-5l"});if(x==1){z.C.2W=\'Fw(0, 0)\'}F{z.C.2W=\'Fw(-Fx, 0)\'}}F{if(x==1){C.a=1}F{C.a=0.5}}on=x==1;if(C.2q==1&&7f.R>1){2O.1U=(on?7f[0]:7f[1])}O(1t[0],{"1C":C.a})};G.hC=E(){if(on){if(2N){if(2N.R>1&&U.R>1){1p(1t[0]);1l(1t[1]);O(1t[0],{"1C":C.a})}}1f=U[0];if(U.R>1){if(C.2q==1){2O.1U=hD(0);8Y()}}pi();on=K;b3=K}};G.wh=E(){if(pn()){pd();1p(1t[hE]);b3=H}};G.Fq=E(){B 2I=K;if(C.1l==1){if(C.Fe==1){if(5S(o.2a)){2I=H}}if(C.WP==1&&!o.26){2I=H}if(C.WQ==1&&o.26){2I=H}}if(!2I){6T(X);B gV=X.er("*");V(B i=gV.R;i--;){O(gV[i],{"5U-1v-6s":"Xf"})}4w=H}};G.hH=E(){hH()};E hH(){3q(X);B gV=X.er("*");V(B i=gV.R;i--;){O(gV[i],{"5U-1v-6s":"8x"})}4w=K}G.4e=E(){if(2N.R>0){V(i=0;i<2N.R;i++){if(1t[i].4h==X){X.3m(1t[i])}1t[i]=28}}if(bg){bg.dn("gC");bg.dn("jS");bg.dn("jT");bg.4h.3m(bg);bg=28}if(C.1q.I(\'8T\')>-1){if(X.4h==o.8T){o.8T.3m(X)}}F{if(X.4h==o.1R){o.1R.3m(X)}F{if(o.1r){if(X.4h==o.1r){o.1r.3m(X)}}}}if(2q){if(2q.4h==X){X.3m(2q)}}X=28};G.EY=E(){gN?gN.hI():\'\'};G.F0=E(){wY()};E wY(){F5(2N[0],C.1u,1t[0])}E xc(x){B z=x+\'\';if(x.I(\'{\')>-1){if(x.I(\'{1a}\')>-1&&L(o.3t)){x=x.1Q(\'{1a}\',fJ(o.3t.ay().t))}if(x.I(\'{1P\')>-1){B y=o.cr?o.cr:(v.1P?v.1P:\'\');if(x.I(\'{c5}\')>-1&&o.Q){x=x.1Q(\'{c5}\',o.Q.cJ(\'c5\'))}if(o.c7&&o.Q){y=o.Q.cJ(\'c7\')}x=x.1Q(\'{1P}\',y);if(o.c7&&!o.Q){1A(6m,100,z)}}if(x.I(\'{1D\')>-1){V(B i=1;i<6;i++){if(x.I(\'{1D\'+i+\'}\')>-1){if(L(v[\'1D\'+i])){x=x.1Q(\'{1D\'+i+\'}\',v[\'1D\'+i])}F{x=x.1Q(\'{1D\'+i+\'}\',\'\')}}}}if(x.I(\'{6o}\')>-1){o.iV=1b;if(o.Q){x=x.1Q(\'{6o}\',o.Q.cJ(\'F9\'))}}}J x}G.x6=E(){6m(C.1D)};E x5(sf){if(2o(C[sf+\'41\'+\'B\'])){B x=v[C[sf+\'41\'+\'B\']];if(2o(x)){if(1L(x)=="4F"){C[sf]=x}}}}E oZ(1t,6d){V(B i=0;i<1t.R;i++){FA(1t[i],6d)}if(C.3d=="3H"){if(o.3H){o.3H.WT(1t[0],6d)}}}};B Ff=E(1b,1f){B i;B C=[];B w;B h;B bg;B 4w=H;B x0;B y0;B 3o=1;B 3u=1;B fw=0;B 92=0;B Xg;B 3C;B pA;B 6x;B 2p;B 3B;B yP;B z8;B xq;B zb;B 2q;B 2O;B 8p;B fS;B xV;o.IF=-1;B pH;B 6x;B y7;V(i in eX.S){C[i]=eX.S[i]}B 1f=v[1b].1f;B 1H=v[1b].1H;V(i in eX[1f]){C[i]=eX[1f][i]}V(i in v[1b]){C[i]=v[1b][i]}C.w=2Q(C.w);C.h=2Q(C.h);C=4b(C,\'2L\',\'2L\');C=4b(C,\'9O\',\'9O\');if(o.9G){if(C.G3>0){C.w=2Q(C.G3)}if(C.ba){if(C.ba!=\'0 0 0 0\'){C=4b(C,\'9O\',\'ba\')}}}B X=1Y("2e");if(v.1r.G8==1&&v.1r.1l==1){o.1r.1T(X)}F{o.1R.1T(X)}1f=="2G"?o.8T=X:\'\';B 8t=K;if(C.7L){if(C.7L!=\'1I\'){8t=H}}O(X,{"1q":"2C","1d":0,"1c":0,"1C":1,"eh":"pC","oJ":"kJ"});if(C.G9==1){X.C.4X=C.59}au();B 8W=1Y("2e");O(8W,{"1q":"2C","2K":2H.4r(-C.h/2),"1c":2H.4r(-C.w/2)});if(C.7i>0&&C.HU==1){O(8W,{"2R-6Q":C.7i*C.h/2,"1g":C.h,"6q":"3e","4y-3j":"1X"})}if(2o(C.4R)){3Y(X,{"id":(v.id+"oR"+C.4R)})}X.1T(8W);if(1f==\'2G\'&&v.wO==1){AG()}if(C.2q==1){p1()}B 8N=1Y("2e");hf(0,8N,0.3,(C.4J==1?"3g-4J("+(C.vs==1?"to 1c,":\'\')+3z(C.Gd)+", "+3z(C.oM)+")":3z(C.oM)),C.w,C.XE);if(C.FY==1&&L(C.p8)){B iS=1Y("2e");iS.1U=C.p8.1Q(/\\#FN/g,3z(C.oM));8N.1T(iS);O(iS,{"1q":"2C","2K":-2H.4r(C.h/2),"1c":0,"4y-3j":"1X"});O(8N,{"6q":"3e","2w":"1X"});B x=["vT","eY","oO","iA","dK"];V(B y=0;y<x.R;y++){B z=iS.vR("2v "+x[y]);if(z.R>0){V(B y2=0;y2<z.R;y2++){z[y2].C.6i=3z(C.oM)}}}}8W.1T(8N);B XG=[];B bx=1Y("2e");hf(1,bx,C.Gf,(C.4J==1?"3g-4J("+(C.vs==1?"to 1c,":\'\')+3z(C.Gg)+", "+3z(C.Gh)+")":C.Gh),0,C.XH);8W.1T(bx);if(C.7j>0){B dO=1Y("2e");hf(2,dO,C.Gi,C.XI,0,C.7j);8W.1T(dO)}B 7t=1Y("2e");hf(3,7t,C.Gj,(C.4J==1?"3g-4J("+(C.vs==1?"to 1c,":\'\')+3z(C.Ga)+", "+3z(C.1u)+")":C.1u),0,C.a);if(C.FY==1&&L(C.p8)){B p7=1Y("2e");p7.1U=C.p8.1Q(/\\#FN/g,3z(C.1u));O(p7,{"1q":"2C","2K":-2H.4r(C.h/2),"1c":0,"4y-3j":"1X"});O(7t,{"6q":"3e","2w":"1X"});7t.1T(p7)}if(C.5E==1){B cl=1Y("2e");C=4b(C,\'vr\',\'vr\');C=4b(C,\'vq\',\'vq\');O(cl,{"1q":"2C","2K":C.h/2,"1c":0,"4y-3j":"1X","3Z-3M":C.FX*2y(v.8u,1),"1u":C.6f,"2G-1g":"100%","2U-1d":C.XJ,"2U-2K":C.XK,"2U-1c":C.XL,"2U-2m":C.XM,"2L-1d":C.XN,"2L-2K":C.XO,"2L-1c":C.XF,"2L-2m":C.XP,"2R-6Q":(C.FV+"px"),"2k":"1X"});if(C.JH==1){O(cl,{"2w":3z(C.JJ)})}7t.1T(cl);B jt=K;B XR=K}o.oc=C.h;8W.1T(7t);if(C.fE==1){B 8o=[];if(1L JR!=="1G"){B 9g=1B JR(X,8o,w,C)}}if(C.3B==1){if(C.du.6c().I(\'<2v\')==-1){C.du==\'\'?C.du="<2v Y=\'20\' 1g=\'20\'><g><dK ry=\'5\' rx=\'5\' cy=\'10\' cx=\'10\' 6i=\'#gG\'/></g></2v>":\'\'}3B=1Y("2e");3B.1U=C.du.6c();C=4b(C,\'Jw\',\'Jw\');O(3B,{"1q":"2C","1d":-10+C.XS-C.XT,"1c":-2i,"4y-3j":"1X","1g":20,"Y":C.gf,"1C":C.yd,"5v":"2W 0.1s 3g, 1C 0.1s 3g"});if(C.kH==1||C.y9==1){O(3B,{"2W":"1O(0)"})}F{if(C.m6!=1){O(3B,{"2W":"1O("+C.m6+")"})}}if(C.XU==1){O(3B,{"6X":"XV-9T(4l 4l bU 5i(0, 0, 0, .7))"})}X.1T(3B);if(C.vL!=-1){B x=["vT","iA","dK"];V(B y=0;y<x.R;y++){B z=3B.vR("2v "+x[y]);if(z.R>0){V(B y2=0;y2<z.R;y2++){z[y2].C.6i=3z(C.vL)}}}}C.gn=3B.2f}if(C.as!=0){O(X,{"2W":"oF("+C.as+"vF)"})}if(C.3e==1){1l(X);4w=K}if(1f=="1I"&&!8t){if(C.1l==1&&C.hA==1){o.hy=H;C.3e=H}F{o.hy=K}}C.aE=0;if(C.as!=0){C.ha=2H.CA(C.as);if(C.ha>45&&C.ha<XW){C.aE=90}if(C.ha>XX&&C.ha<Ir){C.aE=IP}}if(8t){C.7L?o[\'2G\'+\'41\'+C.7L]=C.7L:\'\';w=C.w;C.7L=="5a"?6y(1,o.5X.4T(-1)[0],"no"):\'\';if(C.7L=="vC"){B pv=v.1I;v.2c?(v.2c.1I?pv=v.2c.1I:\'\'):\'\';6y(pv,1,"no")}}E hf(n,x,y,z,I3,HX){O(x,{"1q":"2C","2K":0,"1c":0,"Y":I3,"1g":(C[\'h\'+n]>0?C[\'h\'+n]:C.h),"2w":z?(z.I("3g")>-1?z:3z(z)):\'\',"2R-6Q":(C.HU==1?1:C.7i*C.h/2),"1C":HX,"4y-3j":"1X","5v":"2W 0.2s 6r-in-5l"})}E au(){bg=1Y("2e");C=4b(C,\'fD\',\'fD\');B hl=C.h+C.am+C.an;B HY=C.w+C.7u+C.7x;if(C.bg==1){}F{C.5k=0}C=4b(C,\'hg\',\'hg\');if(v.1r.hj==1||C.hj==1){C.4S=\'#q5\';C.bg=1;C.5k=0.5}O(bg,{"1q":"2C","1d":0,"1c":0,"Y":HY,"1g":hl*C.yu,"yA":(C.q3*hl)/2,"2w":5h(C.4S,C.5k),"ag":"2D","5v":"1C .1s 3g, 2w .1s 3g"});if(C.9C==1){O(bg,{\'jJ-6X\':\'9C(bq)\'})}if(C.pB==1){O(bg,{"2R":2y(C.I2,1)+"px 6w #"+C.pE})}if(C.2p==1){if(C.hn==1){O(bg,{"6Z":"4y"})}if(!o.1j.2g||v.ew==1){bg.gC=aS;bg.XZ=xR;bg.Y0=pw;bg.kE=e4}}F{O(bg,{"6Z":"6K"})}if(!o.1j.2g){bg.jS=6B;bg.kE=e4;bg.jT=5Q}if(o.1j.xD&&C.2p==1){bg.1y("g9",E(1e){1e.6t=H;if(!L(1e.6j)&&1e.7V.R>0){1e.6j=1e.7V[0].k6;1e.9t=1e.7V[0].nm}pH=1e;6B(1e);pw(1e)},{5x:K});bg.1y("gR",E(1e){1e.6t=H;o.3C=K;5Q(1e);xR(pH)},{5x:K});bg.1y("2p",E(1e){1e.6t=H});bg.1y("bT",E(1e){if(!L(1e.6j)&&1e.7V.R>0){1e.6j=1e.7V[0].k6;1e.9t=1e.7V[0].nm}pH=1e;o.3C=H;e4(1e);if(o.1j.xD){pw(1e)}},{5x:K})}O(bg,{"1c":2H.pI(-C.w/2-C.7u)});O(bg,{"1d":2H.pI(-C.h/2-C.am+C.I7-C.Ib)});if(C.Ie==1){xA(bg,C.4S,C.J1,C.J2)}X.1T(bg)}E 2A(Y){if(Y!=w){w=Y;o.xt=w;B aM=w/8N.2f;O(bg,{"Y":(w+C.7u+C.7x),"1c":-w/2-C.7u,});O(8W,{"1c":-w/2});O(8N,{"Y":w});O(8W,{"Y":w});B xx=bx.2f*aM;if(xx>8N.2f){xx=8N.2f}O(bx,{"Y":xx});B wp=7t.2f*aM;O(7t,{"Y":wp});k5(wp);if(1f=="2G"){zy()}if(C.fE==1){9g?9g.IT(w):\'\'}if(o.6e){o.6e.2A()}}}E k5(x){if(C.3B==1){if(x<C.gn/2&&C.gf!=20){x=C.gn/2}if(x>w-C.gn/2&&C.gf!=20){x=w-C.gn/2}B y=x-w/2-C.gn/2+C.XQ-C.Zi;O(3B,{"1c":y})}}E xC(){O(3B,{"2W":"1O("+C.m6+")"})}E 6B(1e){o.Q.kK(1b,"6x");if(C.bg==1){if(C.ak!=-1){B m=1B 5B({"mc":bg,"1H":"8h","to":C.ak,"1a":0.1,"me":(1b+"bg")})}if(2o(C.bJ)){O(bg,{"2w-1u":C.bJ})}}if(2o(C.yf)){O(7t,{"2w-1u":C.yf})}if(C.3B==1){if(C.IC==1&&L(C.ye)){if(C.pM==1&&3C){}F{3B.1U="<2v Y=\'"+C.gf+"\' 1g=\'20\' 4i:4j=\'3N://4g.w3.4a/7R/4j\' 4i=\'3N://4g.w3.4a/4c/2v\'>"+C.ye.6c()+"</2v>"}}if(C.kH==1){if(C.y9==1&&!o.1w){}F{xC()}}F{if(C.pV!=-1){B m2=1B 5B({"mc":3B,"1H":"8h","to":C.pV,"1a":0.1,"me":(1b+"3B")})}}}if(C.2q==1&&(o.P.1n()>0||1f=="1I"||8t)){k9()}if(C.gY>0){O(bg,{"2W":"3u("+((C.gY-1)/5+1)+")"});yc(C.gY)}if(C.3B==1&&C.xO==1){k5(dy(1e.6j)-92)}if(1f=="1I"){o.U.5m(H);o.5m=H}6x=H;o.ds=H}E yc(x){O(8N,{"2W":"3u("+x+")"});O(bx,{"2W":"3u("+x+")"});dO?O(dO,{"2W":"3u("+x+")"}):\'\';O(7t,{"2W":"3u("+x+")"})}E 5Q(){if(!pA){if(C.7j>0){O(dO,{"Y":0})}if(2o(C.yf)){O(7t,{"2w-1u":C.1u})}if(C.bg==1){if(C.ak!=-1){B m=1B 5B({"mc":bg,"1H":"8h","to":C.5k,"1a":0.1,"me":(1b+"bg")})}if(2o(C.bJ)){O(bg,{"2w-1u":C.4S})}}if(C.3B==1){if(C.IC==1&&L(C.ye)){if(C.pM==1&&3C){}F{3B.1U="<2v Y=\'"+C.gf+"\' 1g=\'20\' 4i:4j=\'3N://4g.w3.4a/7R/4j\' 4i=\'3N://4g.w3.4a/4c/2v\'>"+C.du.6c()+"</2v>"}}if(C.kH==1){O(3B,{"2W":"1O(0)"})}F{if(C.pV!=-1){B m2=1B 5B({"mc":3B,"1H":"8h","to":C.yd,"1a":0.1,"me":(1b+"3B")})}}}if(C.gY>0){O(bg,{"2W":"3u(1)"});yc(1)}if(1f=="1I"&&!o.26){o.U.5m(K);o.5m=K}o.Q.kK(1b,"5l")}if(C.fE==1&&9g){9g.5l()}if(C.2q==1&&(o.P.1n()>0||1f=="1I")){oa()}if(o.os&&1f=="2G"){o.th.1l();o.IF=-1}6x=K;o.ds=K}E aS(1e){1e.6t=H}E IG(1e){1e.6t=H}E xR(1e){if(1f=="1I"){if(o.9v){pA=H;2F(y7);y7=1A(E(){pA=K;5Q()},2i)}}yk();o.3C=K;if(C.3B==1){if(C.pM==1&&L(C.y6)){3B.1U="<2v Y=\'20\' 1g=\'20\' 4i:4j=\'3N://4g.w3.4a/7R/4j\' 4i=\'3N://4g.w3.4a/4c/2v\'>"+C.du.6c()+"</2v>"}}c0(1e.6j,1e.9t);o.Q.fh(1b);o.Q.gi(1e.6j,1e.9t);1e.6t=H}E pw(1e){3C=H;if(C.3B==1){if(C.pM==1&&L(C.y6)){3B.1U="<2v Y=\'20\' 1g=\'20\' 4i:4j=\'3N://4g.w3.4a/7R/4j\' 4i=\'3N://4g.w3.4a/4c/2v\'>"+C.y6.6c()+"</2v>"}}fw=kO(bg);92=gQ(bg);c0(1e.6j,1e.9t);6y(2p,1,"no")}E c0(d7,cZ){B x;d7=dy(d7);cZ=dy(cZ);B IN=2H.5O(1V.ou.bp,1V.aQ.bp);B IH=2H.5O(1V.ou.d9,1V.aQ.d9);if(o.1j.2g){}F{cZ=cZ+IH;d7=d7+IN}if(C.aE>0){x=cZ-fw-C.7x;2p=x/w;if(C.aE==IP){x=cZ-fw-C.7u;2p=x/w;2p=(2p-1)*-1}}F{x=d7-92-C.7u;2p=x/w;if(C.as>XD&&C.as<Xs){x=d7-92-C.7x;2p=x/w;2p=(2p-1)*-1}}2p>1?2p=1:\'\';2p<0?2p=0:\'\'}G.IS=E(){9g?9g.IT(w):\'\'};G.kj=E(){9g?9g.dV(w):\'\'};E yk(){3C=K}E e4(1e){92=gQ(bg);if(C.7j>0){if(o.1w||1f!=\'2G\'){O(dO,{"Y":dy(1e.6j)-92})}}if(C.2q==1&&(o.P.1n()>0||1f=="1I"||8t)){k9();fw=kO(bg);c0(1e.6j,1e.9t);if(1f=="2G"){if(v.XC==1){if(o.P.5R()&&o.P.c9().I("?x7")>0){2O.1U=\'- \'+fJ((1-2p)*o.P.1n(H))}F{2O.1U=fJ(2p*o.P.1n())}}F{B d=o.P.1n();if(v.4o>0){d=d-v.4o*1}B aY=\'\';if(C.fE==1&&9g){aY=9g.2q(2p*d);aY!=\'\'?aY=aY+\'<br>\':\'\'}2O.1U=aY+fJ(2p*d)}}if(1f=="1I"||8t){2O.1U=yG(2p)}8Y(1e)}if(o.os&&1f=="2G"&&o.th){xV=1e;if(!fS||v.zx!=1){xU()}if(v.zx==1){2F(fS);fS=1A(xU,50)}}if(C.3B==1&&C.xO==1){k5(dy(1e.6j)-92)}}E xU(){2F(fS);fS=1G;if(C.2q==0){fw=kO(bg);92=gQ(bg);c0(1e.6j,1e.9t)}6x?o.th.bE(xV,w,2p,92):\'\'}E 8Y(1e,t,l){B 1c=(-w/2+(dy(1e.6j)+1V.ou.bp-92)-2O.2f/2)+(l?l:0);B ke=0;if(v.wy!=1){if(1c+w/2+2O.2f+10>o.2V){ke=1c;1c=o.2V-w/2-2O.2f-10}if(1c+o.2V/2<0){ke=1c;1c=-o.2V/2}}B x={"1d":(-2O.2X-C.zr*1-C.oQ-C.xK)-(C.zj==1?(C.h/2)*(C.gY>0?C.gY:1):0)+(t?t:0),"1c":1c};O(2q,x);if(C.eZ==1){O(8p,{\'1q\':\'2C\',\'1c\':2O.2f/2-4+(ke!=0?ke-1c:0),\'1d\':2O.2X-6})}}G.k9=E(e,x,t,l){k9();2O.1U=x;8Y(e,t,l)};E k9(){if(!5S(2q)||2q.C.1C==0){1p(2q);O(2q,{"1C":1})}}G.oa=E(){oa()};E oa(){1l(2q);O(2q,{"1C":0})}G.c=E(){J X};G.s=E(1b){J C[1b]};G.ss=E(x,x2){J C[x][x2]};G.g=E(x){bB(x){1m"Y":J w;1i;1m"Xj":J 8N.2f;1i;1m"1g":J C.h;1i;1m"x":J 5g(X.C.1c);1i;1m"y":J 5g(X.C.1d);1i;1m"1C":J X.C.1C?X.C.1C:1;1i;1m"1p":J 4w;1i;1m"3o":J 3o;1i;1m"3u":J 3u;1i;1m"1f":J 1f;1i;1m"1b":J 1b;1i;1m"x0":J x0;1i;1m"y0":J y0;1i;1m"2p":J 2p;1i;1m"fn":J 8t;1i;6K:J K}};G.1S=E(1b,x){bB(1b){1m"1p":4w=x;1i;1m"3C":3C=x;1i;1m"2k":1f=="2G"||C.1l==1?O(X,{"5F":(x?"4w":"3e")}):O(X,{"2k":(x?"4M":"1X")});4w=x;1i;1m"3o":O(X,{"2W":"3o("+x+")"});3o=x;1i;1m"3u":O(X,{"2W":"3u("+x+")"});3u=x;1i;1m"1C":O(X,{"1C":x});1i;1m"1c":O(X,{"1c":x});1i;1m"1d":O(X,{"1d":x});1i;1m"2p":2p=x;1i;1m"dL":C.dL=x;1i;1m"Y":O(X,{"Y":x});1i;1m"1g":O(X,{"1g":x});1i;1m"y8":C.Xk=x;1i;1m"x":O(X,{"1c":x});1i;1m"y":O(X,{"1d":x});1i;1m"x0":x0=x;1i;1m"y0":y0=x;1i}};G.2A=E(x){2A(x)};G.np=E(x){};G.gD=E(bm,bc){if(3C){if(1f=="1I"||8t){c0(bm,bc);o.Q.fh(1b)}if(1f=="1I"){o.9v=H}c0(bm,bc);6y(2p,1,"no")}};G.gi=E(bm,bc){if(3C){yk();3C=K;c0(bm,bc);o.Q.fh(1b);6y(2p,1,"no")}};E 6y(1a,1n,x){1a<0?1a=0:\'\';if(v.4o>0&&1n>1){1n=1n-v.4o;1a=1a-v.4o}if(C.3B==1&&C.y9==1&&C.kH!=1){if(!C.z6&&1a>0){xC();C.z6=H}}if(3C&&1n!=1){}F{B 4v;if(1n>0&&1a>0){if(1a>1n){1a=1n}4v=w*(1a/1n);if(4v==7t.2f){4v=-1}}F{4v=0}if(4v>=0){O(7t,{"Y":4v});if(C.xO==1&&6x&&!x){}F{k5(4v)}}if(L(cl)){if(1n<2&&1f=="2G"){if(jt){3q(cl);jt=K}}F{if(!jt){6T(cl);jt=H}cl.1U=1f=="2G"?46(1a==0?1n:1a):yG(1a)}}}};G.6y=E(1a,1n,x){if(1n!=z8||1a!=zb||x){6y(1a,1n,x)}};G.yX=E(){2p>1?2p=1:\'\';2p<0?2p=0:\'\';O(7t,{"Y":(2p*w)})};G.za=E(1a,1n){if(1n>0&&1a>0){B 4v=w*(1a/1n);4v>w?4v=w:\'\';O(bx,{"Y":5g(4v)});yP=1n;xq=1a}F{xq=0;O(bx,{"Y":0})}};G.jr=E(x){if(C.6e==1){if(!o.6e){if(x!=0){if(1L AL!=="1G"){o.6e=1B AL(X,C,x);o.ac=H}}}F{if((!L(x)||x==0)&&o.ac){o.6e.1l();o.ac=K}F{if(!o.ac||(L(x)&&x!=1&&x!=0)){o.6e.xr(x);o.ac=H}}}}};E AG(){o.bE=1Y("2e");O(o.bE,{\'1q\':\'2C\',\'1c\':0,\'1d\':0,\'Y\':v.AR,\'1g\':v.B2,\'6q\':\'3e\',"4y-3j":"1X","2w-1u":"#gF","2R-6Q":v.AZ+\'px\',"2k":"1X"});o.bE.id="Xl"+v.id;if(v.AV==1){O(o.bE,{"2R":v.AT+"px 6w "+xB(\'1u\',v.A8)})}if(v.A7==1){O(o.bE,{"7y-9T":"fm 4l jj 5i(0,0,0,0.5)"})}o.bE.C.4X="ji";X.1T(o.bE)}E p1(){2q=1Y("2e");O(2q,{\'1q\':\'2C\',\'1c\':0,\'1d\':0,\'1g\':\'2D\',"4y-3j":"1X","1C":0,"5v":"1C 0.1s 3g"});C=4b(C,\'iY\',\'iY\');2O=1Y("2e");O(2O,{\'1q\':\'2C\',\'2U-1c\':C.xF,\'2U-2m\':C.zV,\'2U-1d\':C.oQ,\'2U-2K\':C.xK-1,\'1D-8d\':\'8y\',\'1u\':C.yr,\'3Z-eA\':fb(C.yB),\'3Z-3M\':C.yx*2y(v.8u,1),\'jc-fC\':C.yw+\'px\',\'2G-1g\':"1",\'2w-1u\':5h(C.j1,C.iW),\'2R-6Q\':C.yq});C.yS?C.eZ=C.yS:\'\';if(C.eZ==1){8p=1Y("2e");8p.1U=\'<2v Y="bq" 1g="yo" yv="0 0 8 6" 8i="1.1" 4i="3N://4g.w3.4a/4c/2v" 4i:4j="3N://4g.w3.4a/7R/4j"><eY id="zN" 4p="1X" 6i="\'+3z(C.j1)+\'" 6i-zK="zA" 8o="0 0 8 0 4 6"></eY></2v>\'}X.1T(2q);2q.1T(2O);if(C.eZ==1){2q.1T(8p);O(8p,{\'1C\':C.iW})}2q.C.4X="2i"};E zy(){if(o.3t&&v.cE==1&&!o.1w){B f=o.3t.ay();if(f.t&&f.d){6y(f.t,f.d)}}};E yG(x){B y=2H.4r(x*100);if(8t){if(o.jZ){J(8t&&2o(C.2O)?C.2O+\'&gJ;\':\'\')+3U(x*o.5X.4T(-1)[0]).yF(1)}if(o.Bc){J(8t&&2o(C.2O)?C.2O+\'&gJ;\':\'\')+o.vC}}J y};G.4e=E(){X.3m(8W);if(bg){bg.dn("gC");bg.dn("jS");bg.dn("jT");bg.4h.3m(bg);bg=28}if(3B){X.3m(3B)}if(X.4h==o.1R){o.1R.3m(X)}F{if(o.1r){if(X.4h==o.1r){o.1r.3m(X)}}}X=28}};B vD=E(1d){B i;B C=[];B w;B h;B 4w=H;B 3o=1;B 3u=1;B x0=0;B y0=0;B aC=5H(oV,Xm);B 1f,1b="bg";B 1H="Xn";if(1d==H){C["1q"]=\'1d\';C.h=2y(v.1r.Xo,50);C.a=2y(v.1r.Xp,0.5);C.1u=2y(v.1r.Xq,\'#gF\')}F{C["1q"]=v.1r.1q;V(B k in v.1r){if(v.1r.2r(k)){C[k]=v.1r[k]}}}if(C.1p==0){v.1r.h=C.h=0;C.2U=C.2L="0 0 0 0";C.4J=0}C["1O"]=1;C=4b(C,\'2L\',\'2L\');if(L(C.jY)){if(C.jY!=20&&C.2L=="-20 0 0 0"){C.8U=C.jY}}if(2o(C.zq)&&o.9G){C=4b(C,\'2L\',\'zq\')}if(C.Xi==1){C.4s+=\'%\';C.4D+=\'%\'}B X=1Y("2e");if(C.9C==1&&C.4J==0){C.a<1?C.vU=C.a:C.vU=0.2;v.1r.a=C.a=1}F{C.9C=0}O(X,{\'1q\':\'2C\',\'1c\':0,\'1d\':0,\'Y\':(C.k0==1||1d?\'100%\':o.aT),\'1C\':C.a,\'4y-3j\':\'1X\',\'eh\':\'pC\',\'oJ\':\'kJ\'});o.1R.1T(X);B bg=1Y("2e");O(bg,{\'1g\':C.h-(C.1q!=\'1d\'?C.dS+C.8U:0),\'2k\':\'4M\',\'2L-1c\':C.4s,\'2L-2m\':C.4D,\'2R-6Q\':C.7i});if(C.k1>0){B k1=\'4l 6w \'+5h(2y(C.Xr,\'3F\'),C.k1);if(C.Xt==1){O(bg,{\'2R-1d\':k1})}F{O(bg,{\'2R\':k1})}}X.1T(bg);w=X.2f;v.d8=-C.8U;if(C.4J==1||1d){if((C.1u==\'3X\'||v.1r.9E!=\'\')&&!1d){if(C.1q!=\'1d\'){v.d8=98-C.h}B 4d=\'29:9E/vP;jW,Xu+Xv/T/D+Xw/Xx/Xy==\';if(v.1r.9E.I("29:9E")>-1){4d=v.1r.9E}O(bg,{\'1g\':C.h+(C.1q!=\'1d\'?v.d8:0),\'2w\':\'Z(\'+4d+\') gT-x 50% 100%\',\'2w-3M\':\'2D\'})}F{B g6=(1d?\'to 1d, \':\'to 2K, \')+5h(C.1u,0)+\', \'+5h(C.1u,1);O(bg,{\'2w\':\'-nc-3g-4J(\'+g6+\')\',\'2w\':\'-3S-3g-4J(\'+g6+\')\',\'2w\':\'-ms-3g-4J(\'+g6+\')\',\'2w\':\'-o-3g-4J(\'+g6+\')\',\'2w\':\'3g-4J(\'+g6+\')\'})}}F{if(C.9C==1){O(X,{\'jJ-6X\':\'9C(bq)\'});O(bg,{\'1C\':C.vU})}O(bg,{\'2w-1u\':C.1u})}if(1d){O(X,{"5v":"1C 0.2s 6r-5l"})}G.h=E(){J C.h-(C.1q!=\'1d\'?C.8U:0)};G.c=E(){J X};G.s=E(1b){J C[1b]};G.g=E(x){if(X){bB(x){1m"w":X.2f>0?w=X.2f:\'\';J w;1i;1m"Y":J X.2f;1i;1m"1g":J X.2X;1i;1m"x":J 5g(X.C.1c);1i;1m"y":J 5g(X.C.1d);1i;1m"1C":J X.C.1C?X.C.1C:1;1i;1m"1p":J 4w;1i;1m"3o":J 3o;1i;1m"3u":J 3u;1i;1m"1b":J 1b;1i;1m"x0":J x0;1i;1m"y0":J y0;1i;1m"aC":J 1b+aC;1i;6K:J K}}F{J K}};G.1S=E(1b,x){bB(1b){1m"1p":4w=x;1i;1m"w":w=x;1i;1m"2k":O(X,{"2k":(x&&v.uZ!=1?"4M":"1X")});4w=x;1i;1m"1O":O(X,{"2W":"1O("+x+")"});3o=x;3u=x;1i;1m"3o":O(X,{"2W":"3o("+x+")"});3o=x;1i;1m"3u":O(X,{"2W":"3u("+x+")"});3u=x;1i;1m"1C":O(X,{"1C":x});1i;1m"1c":O(X,{"1c":x});1i;1m"1d":O(X,{"1d":x});1i;1m"Y":O(X,{"Y":x});1i;1m"1g":O(X,{"1g":x});1i;1m"x":O(X,{"1c":x});1i;1m"y":O(X,{"1d":x});1i;1m"x0":x0=x;1i;1m"y0":y0=x;1i}};G.4e=E(){o.1R.3m(X);X=28}};if(1L(2J)=="4F"){AF()}o.G=G;if(2J.id){if(1V.8z(2J.id)){vY()}F{1V.1y(\'Xz\',fM)}}F{1L Bb==\'E\'?Bb():\'\'}E vY(){if(L(2J.id)){if(1V.8z(2J.id)){if(!Cr(1V.8z(2J.id))||2J.4w==1){2J.XA==1?1A(fM,50):fM()}F{1A(vY,50)}}}}E fM(){V(B i=0;i<1z.4V.R;i++){if(L(1z.4V[i])){if(1z.4V[i].2Y("id")==2J.id){if(1z.4V[i].2Y("7B")){1z.4V[i].2Y(\'2I\')}}F{if(v.XB==1&&1z.4V[i].2Y("v","3k")==1){2J.3k=0}}}}1z.4V.2M(o.G);B 2I=K;o.v0=g3(v);2J.aJ?2J.3h=2J.aJ:\'\';if(L(2J.3h)){V(B i=2;i<10;i++){if(2J.3h==i&&o[\'u\'+i]!=\'\'){v=8s(v,5f.6N(de(o[\'u\'+i])));2I=H}}}if(o.u!=\'\'&&!2I){v=8s(v,(1L o.u!="3O"?5f.6N(de(o.u)):o.u))}if(1L(Xh)!="E"){V(B 1b in 2J){if(2J.2r(1b)){if(1b.I("A1")==0){2J[1b]=28}}}}v=8s(v,2J);o.1F=1V.8z(v.id);if(v.kA==1&&v.Wv==1&&1L(xk)=="E"){xn(o.1F,"VL");if(!xk()){1z.1V.1y("9b",xk,{5x:K})}}F{As()}}E As(){B w1=v.2a;if(v.Wu==1&&L(v.2a)&&L(w1)){v.2a!=\'\'?v.2a=w1:\'\'}if((!L(v.3i)||v.3i==\'\')&&v.Vq==1){1o(\'5y\');J}if(v.Ao==1||v.vQ==1){1z.1y(\'a0\',E(1e){B x=1G;B y;L(1e.29.1a)?x=1e.29.1a:\'\';L(1e.29.1I)?x=1e.29.1I:\'\';L(1e.29.Ai)?y=1e.29.Ai:\'\';L(1e.29.2Y)?y=1e.29.2Y:\'\';if(y&&v.w4){if(v.w4!=\'\'){B pm=v.w4.1Q(/\\s+/ig,\'\').2t(\',\');if(pm.I(y)==-1){J}}}if(v.vQ==1){if(1L(Ak)=="E"){Ak(1e)}}if(y&&o.7C){if(L(1e.29.1S)){x=1e.29.1S}B z=3v(y,x);1z.9P.oy({1e:y,Vr:z},\'*\')}})}V(B 1b in o.g5){if(o.g5.2r(1b)){o.g5[1b]!=\'\'?o.ku+=o.g5[1b]+\' \':\'\'}}1o(o.8i+\' \'+o.ku);1z.es=v.id;o.d=8H.vy;o.hs=8H.Vs;if(!v.4O&&7b([o.hs],\'#1v-\')){v.4O=o.hs.1k(o.hs.I(\'#1v-\')+6)}if(9P){B oA=K;2S{if(9P){if(9P.1V){B oB=9P.1V.er("Ag");V(B i=0;i<oB.R;i++){if(oB[i].jL===1z){o.8m=oB[i];o.ox=H;v.Av!=1?O(o.8m,{"2R":"1X"}):\'\';o.A4=o.8m.C;1o("dc")}}}F{oA=H}}}2E(dr){oA=H}if(oA){o.ox=H;1o("Vt-jQ")}}o.ox&&1V.lw?o.jQ=1V.lw.2t(\'/\')[2]:\'\';!o.Ac?zW():\'\';if(1L(zX)=="E"){if(zX()){J}}o.7C=H;A0();B A3=1B 7D();if(A3.Vu()==20){if(5H(1,20)==10&&v.Vv!=0){vg(o.v3,o.v3);1A(E(){if(1z.ga){ga(\'eG\',\'UA-Vw-6\',\'2D\',{\'6C\':\'6L\',\'Vx\':H});ga(\'Vp\',\'Ax\');ga(\'Ax:Vy\',[o.d]);ga(\'6L.eb\',\'1e\',{VA:\'vo\',VB:\'fM\',VC:o.d})}},jf)}}if(!o.1F){v.1o=1;1o(\'id "\'+v.id+\'" fQ po\');J K}o.1F.1U=\'\';O(o.1F,{\'2U\':0,\'VD-fC\':\'fg\'});o.9i=o.1F.2X;o.9j=o.1F.2f;if(L(v.jl)&&!L(v.4U)){if(L(v.jl.4U)){v.4U=v.jl.4U}if(L(v.jl.oI)){v.oI=v.jl.oI}}if(o.1F.C.Y.I("%")>-1){o.VE=o.1F.C.Y}if(v.4U=="6S"||o.1F.C.1g.I("%")>-1){v.4U="%";o.kR=o.1F.C.1g;o.9i=0}if(o.9j==0){if(o.1F.C.Y.I("px")>0){o.9j=2Q(o.1F.C.Y)}F{if(o.1F.4h.C.Y.I("px")>0){o.9j=2Q(o.1F.4h.C.Y)}F{if(o.1F.4h.4h.C.Y.I("px")>0){o.9j=2Q(o.1F.4h.4h.C.Y)}}}}if(6Y(v.4U).I("x")>0){o.4U=v.4U.2t("x")[0]/v.4U.2t("x")[1];if(o.9i==0){o.9i=o.9j/o.4U}}F{o.4U=0}O(o.1F,{\'1q\':\'fr\',\'7y-iX\':\'wi-7y\',\'1D-8d\':\'1c\',\'-3S-B7-VF\':\'1X\',\'vw\':fb(\'qa-q6\'),\'9h-1g\':15,\'eh\':14*2y(v.8u,1),\'2G-1g\':\'kJ\',\'zI\':\'zJ\',\'1u-AI\':\'1X\'});if(v.9T==1){O(o.1F,{\'7y-9T\':\' 0 zU VG 5i(50,50,93,.1), 0 jj zU 5i(0,0,0,.VH)\'})}if(o.4U>0){O(o.1F,{\'1g\':o.9i})}F{O(o.1F,{\'1g\':o.9i==0?o.kR:o.9i})}if(o.9j==0){O(o.1F,{\'Y\':\'100%\'})}o.1R=1Y("2e");O(o.1R,{\'1q\':\'2C\',\'7y-iX\':\'wi-7y\',\'7W\':v.pz,\'1u\':\'#3F\',\'Y\':\'100%\',\'1g\':\'100%\',\'1c\':0,\'1d\':0,\'eh\':\'pC\',\'2G-1g\':\'kJ\'});if(v.wy!=1){o.1R.C.6q=\'3e\'}if(v.VI==1){o.1R.C.7W=\'dg\'}o.O=1V.1Y(\'C\');o.O.1H=\'1D/O\';o.1R.1T(o.O);o.1R.7o("id",\'Vz\'+v.id);pF(1);if(1z.yU){B z5=1B yU(E(e){if(e[0].wV.R>0){V(B i=0;i<e[0].wV.R;i++){if(e[0].wV[i]==o.1R){xY()}}}});z5.Vn(o.1F,{Vc:H})}o.dE=1Y(\'dc\');3Y(o.dE,{"id":"z3"+v.id,"z9":"no","1P":"z3"+v.id,"yW":"H","yJ":"H","yH-pP":"H"});O(o.dE,{\'1q\':\'2C\',\'Y\':\'100%\',\'1g\':\'100%\',\'2R\':0,\'4y-3j\':\'1X\'});if(v.2R==1){if(v.Vm==1){O(o.dE,{"7y-9T":"fm fm fm "+v.wG+"px "+v.7Z+" V3",\'4X\':2})}F{O(o.1F,{\'2R\':v.wG+\'px 6w \'+v.7Z})}}if(!1V.V4(\'.wt\')){B 1J="";if(v.zG==1){V(B i=1;i<6;i++){if(2o(v[\'1u\'+i])){1J+=\'--V5\'+i+\':\'+5h(v[\'1u\'+i],v[\'6d\'+i+\'a\'])+\';\'}}}kF("5c, 5c > *{-3S-V6-5F: 3e;1q: pX;1d: 2D;1c: 2D;6q:4w;zI:zJ!5W;5O-Y:1X!5W;d3-1f: V7;2W-V8: 8y 8y;7y-iX:wi-7y!5W;-3S-zP-zQ-1u: 5i(0,0,0,0);-3S-zP-zQ-1u: dg;1D-V9:0!5W;"+1J+"} 5c 4d{5O-Y:1X} 5c > *:5V{Va: 1X} 5c,5c a,5c a:V2,5c a:Vb,5c a:gS,5c a:e2,5c a:5V{1u:#gG;3Z-3M:100%;}5c dc{2R:0}5c dc{2k:4M!5W;5O-1g:1X!5W;2w:dg}.wt{}5c 2v{2L:0}");o.1R.7o(\'Vd\',\'wt\')}o.1R.1T(o.dE);o.5b?o.5b.2Y(\'7C\'):\'\';o.1F.Ve=E Vf(e){o.lI++;if(o.lI==5){v.1o=1;1o(o.8i+\' \'+o.ku+\' \'+o.ko)}if(!e)B e=1z.1e;e.6t=H;if(e.aA)e.aA();B x=e.k6-gQ(o.1R);B y=e.nm-kO(o.1R);if(v.Vg==1){if(L(v.m0)){if(4z(v.m0)!=\'\'){o.wF=v.m0;L(v.zZ)?o.f3=v.zZ:\'\';v.m0==\'1X\'?o.f3=o.d:\'\'}}}w9(x,y);J K};E w9(x,y){if(o.f3.I(o.d)==-1||v.Be==1||v.4I==1){if(!L(o.4I)){!v.lJ?v.lJ="3X":\'\';!v.wc?v.wc="3F":\'\';o.4I=1Y(\'2e\');B 1J;B n=0;V(B i=0;i<10;i++){if((v[\'rm\'+i]==1&&v.4I==1)||i==9){if((L(v[\'rm\'+i+\'t\'])&&L(v[\'rm\'+i+\'a\'])||i==9)){1J=1Y("xl");if(i==9){if(v.Vh!=1){1J.wD=o.wF+(v.D3==1?" "+o.8i:\'\')}F{1i}}F{1J.wD=v[\'rm\'+i+\'t\']}if(i!=9){if(v[\'rm\'+i+\'a\'].I(",0/1")>-1||v[\'rm\'+i+\'a\'].I(",1/0")>-1){B z=v[\'rm\'+i+\'a\'].2t(\',\');1J.wD+=\' (\'+(3v(z[0].1k(4))==1?2P(\'on\'):2P(\'6S\'))+\')\'}if(v[\'rm\'+i+\'a\'].I("3b")==0){o.g8=H;!o.3b?o.Q.Dy():\'\'}}1J.7o("i",i);DJ(1J);1J.1y("2p",DC);o.4I.1T(1J);n++}}}O(o.4I,{"1D-2W":"Vi","2G-1g":"1","bj-8J":"d4","2w":5h(v.lJ,0.7)});if(n>1){O(o.4I,{"2U":"jj"})}o.4I.C.4X="Vj";o.4I.kE=DB;o.1R.1T(o.4I)}F{6T(o.4I)}O(o.4I,{"1q":"2C","1d":y,"1c":x,"1D-8d":"1c"});B wu=K;if(o.2V-x<o.4I.2f-20&&v.wy!=1){O(o.4I,{"1c":x-o.4I.2f});wu=H}if(v.Vk==1||wu){O(o.4I,{"1D-8d":"2m"})}o.DE=x;o.DF=y;2F(o.lE);o.lE=1A(E(){3q(o.4I)},4c)}}E DB(){2F(o.lE);o.lE=1A(E(){3q(o.4I)},4c)}E DC(e){B i=e.4t.7F("i");B y;B wj=K;if(i>0){if(i==9){o.f3!=\'\'?1z.7a(o.f3):\'\'}F{B x=v[\'rm\'+i+\'a\'];if(x){if(x.I("2Y:")==0){if(x.I(",0/1")>-1||x.I(",1/0")>-1){B z=x.2t(\',\');B b=o.Q.wq(x,"3d");B u=3v(z[0].1k(4),z[1],b);js(z,u);wn();w9(o.DE,o.DF);wj=H}F{y=x.2t(",");3v(y[0].1k(4),(L(y[1])?y[1]:28))}}if(x.I("3b:")==0&&o.3b){o.3b.2Y(x.1k(6))}if(x.I("js:")==0){y=x.2t(",");2h(y[0].1k(3)+\'(\'+(L(y[1])?\'"\'+y[1]+\'"\':\'\')+(L(y[2])?\',"\'+y[2]+\'"\':\'\')+\')\')}if(x.I("Z:")==0){x=x.1Q(/\\(Z\\)/g,DG());x=x.1Q(/\\(Vl\\)/g,DH(L(v.Dx)?v.Dx:1V.lw));x=x.1Q(/\\(1P\\)/g,o.cr);x=x.1Q(/\\(8E\\)/g,v.8E);1z.7a(x.1k(4))}}}!wj?3q(o.4I):\'\'}}E DJ(x){O(x,{"2U":"DN jj","3Z-3M":(v.DP?v.DP:"55")*2y(v.8u,1)+"%","jc-fC":"0.VJ","1C":0.9,"1u":v.wc});x.1y("lS",DR);x.1y("lZ",DS)}E DR(e){O(e.4t,{"1C":1});O(e.4t,{"2w":5h(v.lJ,0.5)})}E DS(e){O(e.4t,{"1C":0.9});O(e.4t,{"2w":"1X"})}o.1j=1B DK();if(o.1j.4n){B wX=(v.Dv==1?\'*::-3S-P-Q-1w-Vo-ll {2k: 1X!5W;-3S-x8: 1X;}\':\'\');if(v.my==1&&v.Dh!=1&&(v.Du!=1||!o.1j.7r)&&(v.D6!=1||!o.1j.jV)){}F{if(o.1j.4n&&v.f4==1){}F{wX+=\'fY::-3S-P-Q {2k:1X !5W;}*::-3S-P-Q-VK {2k: 1X!5W;-3S-x8: 1X;}*::--3S-P-Q-1v-ll {2k: 1X!5W;-3S-x8: 1X;}\'}}B 1J=1V.1Y(\'C\');1J.1H=\'1D/O\';1J.1T(1V.D9(wX));o.1R.1T(1J)}if(o.1j.Db){v.3k==1&&v.W8==1?v.3k=0:\'\'}if(o.4U==0){if(o.1R.2X==15&&!o.kR&&v.Dc>0){O(o.1F,{"1g":v.Dc})}}if(L(v.jM)){v.W.d6=v.jM}if(L(v.le)){v.W.kV=v.le}if(L(v.1w)){o.2b=v.1w}if(L(1z.De)&&v.Wa==1){1z.De(fj)}F{fj()}}E fj(){1o("fj");o.U=1B Df();if(!v.3i){v.3i="?"}if(v.pl){v.3i=v.pl+o.dN}o.Wb=l7();o.Dg=0;o.5w=wU();if(o.5w){if(3R.6D("wT")!=28){o.wS=3R.6D("wT")}F{o.wS=l7();3R.9s("wT",o.wS)}if(v.wP==1){if(3R.6D("wM")!=28){o.4E=3R.6D("wM");if(2o(v.cB)){if(v.cB.I(o.4E)>-1){o.4E=28}}}}if(v.Dq==1){if(3R.6D("wK")!=28){v.bs=3R.6D("wK")}}V(B i=0;i<o.cO.R;i++){if(v[\'DX\'+o.cO[i]]==1){if(3R.6D("Eq"+o.cO[i])!=28){}F{v[o.cO[i]+\'s\']=0}}}7Q("Wc");7Q("Wd")}o.jz=o.9x.1k(o.9x.I("://")+3);if(o.jz.I("#")>0){o.jz=o.jz.1k(0,o.jz.I("#"))}if(o.5w&&v.cE==1){o.3t=1B We()}if(v.kA==1){o.5F=v.Wf;xn(o.1F,"5F",H)}v.fo==1&&v.kA==1?o.fo=1B Wg():\'\';v.ab==1?Wh():\'\';if(v.Wi==1){o.bF=1B W9();o.bF.aK()}o.P=1B vt(v.3i);if(!o.1j.2g||v.ew==1){o.1R.1y("Wj",E(){o.4Z=H;o.kX=H;o.Q?o.Q.Ew():\'\'});o.1R.1y("Wl",E(e){if(!o.3C){if(v.1r.8j>0){2F(o.n5);o.n5=1A(E(){if(o.4Z!=o.kX){o.4Z=o.kX;o.Q.vl()}},v.1r.8j*2i)}F{o.4Z=K}o.kX=K;if(o.Q){o.Q.np()}}})}if(!o.1j.2g){o.1R.1y("Ex",E(e){if(!o.jx){o.3C=H}});o.1R.1y("a4",E(e){if(!o.jx){o.3C=K;if(!o.5m){o.9v=K;o.do=K}if(o.1j.d3&&o.1j.ew&&o.26){1A(E(){o.4Z=K;o.Q.vl()},43)}1A(E(){o.5V=H},43);if(o.1j.2g&&o.Q.nE()){}F{o.Q?o.Q.gi(e.6j,e.9t):\'\'}if(v.fG==1){if(o.Q.bO()){o.Q.7G()}}}});o.1R.1y("vb",E(e){if(!o.jx){if(L(o.Q)){if(o.3C){o.Q.gD(e.6j,e.9t)}F{o.Q.nD()}}}})}if(o.1j.2g){1z.1y("Wm",CZ,K)}v.ve==1&&1L EI==\'E\'?o.ve=1B EI():\'\';o.3L.1y("g9",E(e){if(e.7V){o.gL=e.7V.R}o.3C=H;o.4Z=H;o.ns=K;nq("1w",e)},{5x:H});o.3L.1y("bT",E(e){if(e.7V){o.gL=e.7V.R;if(o.gL>1){o.vc=1}}if(o.3C){o.ns=H;nq("Wn",e)}},{5x:H});o.3L.1y("gR",E(e){o.3C=K;2F(o.n5);o.n5=1A(E(){o.4Z=K},2y(v.1r.8j,0.5)*2i);if(v.nG==1){B nv=1B 7D().9V();if(nv-o.aX<(v.ja?v.ja:0.3)*2i){nz(e)}}!o.ns&&o.gL<2&&o.vc!=1?eU(e):\'\';o.ns=K;o.gL=0;if(e.7V.R==0){o.gL=0;o.vc=0}nq("4f",e)},{5x:H});2S{1z.1V.1y("a4",E(e){o.5V=K;if(!o.5m){o.9v=K;o.do=K}if(o.3C&&o.Q){o.3C=K;o.Q.gi(e.6j,e.9t);o.Q.np()}if(!o.4Z&&!o.1j.2g&&!o.1j.tv){o.Q.cj();if(o.2Z){o.2Z.aB()}o.Q.EL()}})}2E(dr){}1z.1V.1y("vb",E(e){if(o.Q){if(o.3C){o.Q.gD(e.6j,e.9t)}F{if(o.26&&o.va){o.Q.nD()}}}});if(!o.1j.tv){o.1R.1y("g9",E(e){o.jx=H;if(!o.1j.2g){1o("va");o.va=H}o.d3=H;o.3C=H},{5x:H});o.1R.1y("gR",E(e){o.d3=K;o.3C=K},{5x:H});1z.1V.1y("bT",E(e){if(o.Q&&o.d3){o.Q.gD(e.7V[0].k6,e.7V[0].nm)}},{5x:H})}1z.1V.1y("Wo",E(e){B x=e.4t.nh.n6();if(x==\'v8\'||x==\'Ec\'||x==\'ER\'){J}F{o.Q?o.Q.EM(e):\'\'}});1z.1V.1y("Wp",E(e){B x=e.4t.nh.n6();if(x==\'v8\'||x==\'Ec\'||x==\'2e\'||x==\'ER\'){J}F{o.Q?o.Q.E2(e):\'\'}});if(o.8m){vj(9P.1V,CV)}vj(1V,CT);E vj(x,z){B y=[\'\',\'nc\',\'3S\',\'ms\',\'Wq\'];if(x){V(B i=0;i<y.R;i++){x.1y(y[i]+(i<y.R-1?"Wr":\'\'),z,K)}}}if(!L(o.dE.jL)){1o("Ws");J}F{o.dE.jL.1y(\'4H\',mu,H)}if(!o.1j.2g){o.3L.1y("2p",E(e){!o.jx?eU(e):\'\'},K);if(v.mz==1&&v.nG==1){o.3L.1y("E8",nz,K)}}mt();if(v.3H){v.3H.on==1?o.3H=1B Wt():\'\'}v.5b==1?o.5b=1B Wk():\'\';v.gw==1?o.gw=1B W7():\'\';o.Q=1B w5();if(v.bY.DZ){o.nw=v.bY.Ed}9W();bd();if(o.5w){if(v.w0==1&&v.1I!=0&&!o.1j.2g){if(3R.6D("vZ")!=28){v.1I=3R.6D("vZ")}if(3R.6D("k4")==1&&v.nY==1){v.5o=1}}if(v.Eg==1){B sp=3R.6D("Eh");if(L(sp)){if(sp.I(\'.\')>0&&o.jZ){o.U.9o(sp,1)}F{if(o.5X){B nV=7b(o.5X,sp,H);if(nV!=-1&&o.Q.En(\'5a\')){o.a7=nV;o.P.9o(o.5X[nV])}o.Q.D2()}}}}B vS=K;if(v.vV==1){V(B j=0;j<o.ci.R;j++){if(3R.6D("nS"+o.ci[j])!=28){v[o.ci[j]]=3R.6D("nS"+o.ci[j]);vS=H}}}if(o.1j.2g){if(!vS){2o(v.BO)?v.dT=v.BO:\'\'}if(L(v.BP)){v.nR=v.BP;2o(v.BS)?v.nP=v.BS:\'\'}}}if(o.3t){B f=o.3t.ay();if(f.t&&f.d){o.Q.j0(f.t,f.d);o.Q.3V(f.t,f.d);v.1n=f.d}}o.U.3T(v.1I);if(v.5o==1){o.U.5d();o.Q.4x()}if(L(v.BT)){3v("5a",v.BT)}o.9U=1B vG();if(v.7i>0){if(v.fG==1||o.cC<120){O(o.1F,{"2R-6Q":(v.7i+"px")});O(o.1R,{"2R-6Q":(v.7i+"px")})}F{VW()}}if(L(v.6F)){vE("6F")}if(L(v.dU)){vE("dU")}if(L(o.W)){js("W")}if(v.8B==1&&v.W6==1){o.U.nK()}V(B i=2;i<10;i++){if(L(v["aJ"+i])){if(v["aJ"+i]=="2g"&&o.1j.2g){3v("aJ",i)}}}1A(mu,43,H);1A(E(){js("7C");if(v.3W){if(1L v.3W==\'E\'){v.3W=v.3W.6C};2h(v.3W+(v.3W.I(\'()\')==-1?\'("\'+v.id+\'")\':\'\'))}},1)}E eU(e){if(o.w8[o.3L]>2){J}o.j9=H;v.ja==0?v.nG=1:\'\';if(o.mw&&v.dY==1&&!o.1j.tv){nz(e)}F{B t=(v.ja?v.ja:0.35)*2i;mx();2F(o.C4);o.C4=1A(E(){o.cK=0},t+4A);if(v.nG==1||(v.mz==0&&v.1M.n4!=1)){yp()}F{o.mw=1A(yp,t)}}o.cK++;nF()}E yp(){mx();if(o.1j.2g){if(o.Q.nE()){o.Q.nD();if(o.3p&&v.nC==1){o.U.62();v.nC=0}if(v.VN!=1){J}}if(o.jh){if(v.Bs==1&&v.VO==1&&o.1j.cQ){J}if(v.f4==1&&v.VP==1&&o.1j.4n){J}}}if(o.cK>1&&v.1M.n4==1){o.cK=0;J}o.cK=0;if(v.dY==1){o.1j.2g&&v.VQ==1?\'\':o.U.eU()}}E nz(e){mx();B y=K;if(v.1M.n4==1){if(e){if(v.1M.VR==1&&!o.1j.2g){}F{B x;if(o.1j.2g){x=e.VS;if(!x){if(e.Bj){x=e.Bj[0].k6-gQ(o.1R)}}}F{x=e.VT}if(v.zm&&v.zm!=1){x=x/v.zm}if(x){if(x<o.2V/2){if(x<o.2V*20/100){3v("3D","-"+2y(v.1M.Bl,10)*o.cK);v.1M.2N==1&&v.1M.Bo==1?7l(\'3D\',0):\'\';y=H}}F{if(x>o.2V-o.2V*20/100){3v("3D","+"+2y(v.1M.Bl,10)*o.cK);v.1M.2N==1&&v.1M.Bo==1?7l(\'3D\',1):\'\';y=H}}if(y){if(e.aA)e.aA()}}}}}if(!y){if(v.mz==1){if(v.my==1&&o.1j.2g){}F{o.26?o.U.8f():o.U.8Q()}}}}E mx(){2F(o.mw);o.mw=1G}E mu(x){if(o.Bp!=o.1R.2f){x?o.Bp=o.1R.2f:\'\';mu()}F{bd()}}E bd(){B y=K;if(o.aT!=o.1R.2f||o.cC!=o.1R.2X){y=H}mt();o.Q?o.Q.4H():\'\';o.P.4H();y&&!o.26?js("4H",o.aT+\',\'+o.cC):\'\'}E mt(){B xw=o.1R.2f;B xh=o.1R.2X;if(o.Q){if(v.yz==1){if(v.W.1q!="2K"){B x=o.Q.cJ("Bq")+o.Q.cJ("1d")+5+o.Q.cJ("Bf")+2y(v.VU,0);O(o.1F,{"1g":x})}}}if(o.4U>0&&!o.26&&!o.dW){xh=xw/o.4U+2y(v.ym,0);O(o.1F,{"1g":xh})}if(!o.26&&!o.dW&&!o.aF){o.aT=2H.4r(xw);o.cC=2H.4r(xh)}if(o.1j.2g&&o.26&&v.yb==1&&b8.bw){if(L(b8.bw.mm)){if(o.4U>0){if(o.4U<1||o.P.9l()<1){B sp=b8.bw.mm(\'Ck\');if(sp!==1G){sp.cv(E(){}).2E(E(e){})}}F{B sp=b8.bw.mm(\'yg\');if(sp!==1G){sp.cv(E(){}).2E(E(e){})}}}F{B sp=b8.bw.mm(\'yg\');if(sp!==1G){sp.cv(E(){}).2E(E(e){})}}}}o.2V=xw;o.4B=xh;if(L(v.1P)&&o.Q){v.1P!=\'\'?o.Q.Bv():\'\'}if(L(o.kw)){o.P.1O(o.kw)}if(o.22&&!o.26){o.22.2A()}if(v.Bw==1&&L(o.gq)){2S{o.gq.2A()}2E(e){8g.1o(e)}}o.2Z?o.2Z.2A():\'\';o.bF?o.bF.2A():\'\';o.5b?o.5b.2Y(\'4H\'):\'\';o.9f?o.9f.2A():\'\'}E 9W(){o.U.md(v);V(B x in v){if(v.2r(x)){if(x.I("1P")==0){if(v[x]!=\'\'){o.xL=v[x];o.U.9W(x)}}}}o.gw?o.gw.Bx():\'\'}E 9A(Z,1F,1O){if(Z){if(Z!=\'\'){if(v.c8==1){Z=c8(Z)}if(1F==o.2a&&Z==o.xu){}F{if(Z.I("#"+v.9Y)==0){Z=o[o.fd[0]](Z)}if(Z.I("#0")==0){Z=c4(Z)}Z=xs(Z);if(L(v.By)&&Z.I("//")==-1){Z=v.By+Z}B s="xJ";if(1O=="6i"){s="yn"}if(1O=="1X"){s="2D"}if(1O=="Bz"){s="100% 100%"}if(Z.I(\' gX \')>0&&1F==o.2a){o.kd=Z.2t(\' gX \');3I(o.xG);o.xG=7h(CM,2y(v.VM,2)*2i);o.gA=0;Z=o.kd[0]}Z=Z.1Q(/ or /g,\'"),Z("\');Z=Z.1Q(/\\s/g,\'%20\');if(v.VV==1&&7b([Z],\'.BG\')){B 1J=\'6L\'+v.id+\'VX\';1F.1U=\'<fY id="\'+1J+\'" 3c="\'+Z+\'" 8Z=1 kq=1 3k=1 3p=1 C="\'+(v.VY==1?\'3O-kp:yn;\':\'\')+\'Y:100%;1g:100%"></fY>\';o.g7=1V.8z(1J)}F{o.g7=1G;1F.1U=\'\';O(1F,{\'2w-9E\':\'Z("\'+Z+\'")\',\'2w-gT\':\'no-gT\',\'2w-1q\':\'8y\',\'2w-3M\':s})}1p(1F);1F==o.2a?o.xu=Z:\'\'}}}};E CM(){if(L(o.kd)&&L(o.gA)){o.gA++;if(o.gA>=o.kd.R){o.gA=0}9A(o.kd[o.gA],o.2a,v.gy)}}E VZ(x){if(x.on==1&&L(x.3c)){x.3c=xs(x.3c);B y=1Y("2e");if(x.3c.I("3N")>-1||x.3c.I("//")==0){B z=1Y("4d");z.3c=x.3c;y.1T(z)}x=8s(x,v.CS);x=4b(x,\'2L\',\'2L\');O(y,{\'1q\':\'2C\'});if(x.1q.I("2K")>-1){O(y,{\'2K\':x.dS})}if(x.1q.I("2m")>-1){O(y,{\'2m\':x.4D})}if(x.1q.I("1d")>-1){O(y,{\'1d\':x.8U})}if(x.1q.I("1c")>-1){O(y,{\'1c\':x.4s})}o.1F.1T(y)}};E CT(){if(o.26&&!ya()){o.U.xp(H);o.1j.ff?bd():\'\'}F{if(o.dW||o.4Z){ya()?o.26=H:\'\';o.U.xo()}}1o("26",o.26)}E CV(){if(v.kA==1){xn(o.1F,"5F",H)}}E W0(){1o("bw "+b8.bw.mS)}E CZ(){if(2H.CA(1z.bw)===90){1o("yg");if(v.Cl==1){B ok=H;if(v.Cd==1&&!o.1w){ok=K}if(v.Cg==1&&!o.1v){ok=K}if(o.8R){ok=K}if(o.22){ok=H}!o.26&&ok?o.U.8Q():\'\'}}F{1o("Ck");if(v.Cl==1){o.26&&v.yb!=1?o.U.8f():\'\'}}}E ya(x){!x?x=1V:\'\';B y=K;2S{y=!!(x.W1||x.W2||x.W3||x.W4||(x.W5!=1G))}2E(e){y=K}J y}E Cr(x){J x.2f==0&&x.2X==0};E xY(){V(B x in o){if(o.2r(x)){if(x.I("Cv")>-1){3I(o[x])}if(x.I("xS")>-1){2F(o[x])}}}1o("RX")}}',
    62,
    3989,
    "|||||||||||||||||||||||||||||||||||||var|style||function|else|this|true|indexOf|return|false|exist|||css|media|controls|length|but||actions|for|playlist|control|width|url||||||||pjstg|||time|key|left|top|event|action|height|settings|break|system|substr|hide|case|duration|log|show|position|toolbar||icon|color|play|start||addEventListener|window|setTimeout|new|opacity|text|hls|container|undefined|type|volume|tmp|playlist_dic|typeof|hotkey|faction|scale|title|replace|frame|set|appendChild|innerHTML|document|subtitle|none|createElement|subs|||vast||||fullscreen||null|data|poster|seekto|pip||div|offsetWidth|mobile|eval|1000|open_action|display|vasturl|right|sub|exist2|click|tip|hasOwnProperty||split|error|svg|background|files_quality|existv|file_type|Resize|Play|absolute|auto|catch|clearTimeout|line|Math|stop|options|bottom|margin|push|icons|tiptext|Lang|parseInt|border|try|_type|padding|screen_w|transform|offsetHeight|api|droplist|||||||||||files_subtitle|share|src|linkurl|hidden|Pause|linear|player|file|events|autoplay|current_quality|removeChild|media2|scaleX|muted|hide2|current_subtitle||continue|scaleY|apiProcessor|plid|floatleft|sbt|CheckColor|rows|handle|mouseDown|seek|mediascale|ffffff|custom|chromecast|clearInterval|urls|dash|mediacontainer|size|http|object|vasttype|Seek|localStorage|webkit|Volume|parseFloat|Duration|ready|000000|attr|font||_|files|500|||Time|pause|||org|MarginPadding|2000|img|Remove|end|www|parentNode|xmlns|xlink|values|1px|ShowOrHide|ios|delete|stroke|tagvideo|round|marginleft|target|obj|_to|visible|refresh|pointer|trim|200|screen_h|preload|marginright|default_quality|string|settings2|resize|rightmenu|gradient||_from|block|is_hls|plstart|empty|xhr|dom|bgcolor|slice|aspect|pljssglobal|youtube|zIndex|subtitle_on|mouseHere||Action||f2title|casting||quality|||order|speed|effects|pjsdiv|Mute|folder|JSON|int|hex2rgb|rgba|canvas|bga|out|volumewheel|butPosition|mute|f2action|live|m_to||_value|valuefontsize|transition|storage|passive|remove|menuproc|vastloader|Motion|Hls|shuffle|value|visibility|f2value|random|onError|vast_loaders|m_type|arr_up|act|arr_down|max|ftitle|onOut|isLive|isVisible|dechar|animation|focus|important|files_speed|SetQuality|airplay|||Unmute||||||||UpdatePlaylist|keys|toString|clr|cut|valuecolor|iset|is_dash|fill|clientX|evntclk|plx|UpdateText|vast_|next|captions|overflow|ease|state|cancelBubble|File|dash_created|solid|over|UpdatePlay|reload|hlsconfig|onOver|name|getItem|charAt|midroll|files_|removeEventListener|minutes|download|default|pjs|activeiconsize|parse|control2|current_audiotrack|radius|intro|off|show2|safari|FindBut|status|filter|String|cursor|||||||||||open|indOf|redirect|preroll|ioff|tips|vast_and|setInterval|rounding|aover|motions|PluginHotIcon|always|ended|setAttribute|span|files_audiotrack|iphone|f2i|line3|bgpaddingleft|Events|skip|bgpaddingright|box|obj2|Value|playing|init|Date|current_url|getAttribute|Settings|val|_show|metadata|seconds|customline|_url|waiting|okpd|bg2|SettingsTimers|1999|navigator|toolbarHidden|Object|touches|backgroundColor|audiotrack|channels|bordercolor|||||||||||buffered|lastwheel|onEnded|align|Advertising|Normalscreen|console|alpha_div|version|hideleavetimeout|timer|layer|parentIframe|ShowPoster|points|tipcrn|HLS|fvalue|UpdateObject|_cul|globalfs|hours|HideControl|paused|center|getElementById|StopWaiting|pass|isVastBgLoad|realfullscreen|label|VAST|is_sleep|location|vast_or|space|opid|ll1I|icn|line0|ctx|floor|Fullscreen|ispipkit|info|timeline|margintop|ttl|lines|stretch_width|Tip|loop||com|leftBg||sub_off||preventDefault||||ResizeText|scroll|customtext|txt|loading|rel|pnt|min|container_h|container_w|area|ratio|pipwebkit|hlsquality|SetSpeed|Waiting|is_ws|xbg|setItem|clientY|SetSubtitle|hidden_volume_over|onWaiting|href|apiprm|fbg|Poster|files_quality_ag|blur|ncrtat|image|destroy|small|onPlay|Arrows|reloadTimer|hls_subs|nativecontrols|hls_created|loaded|marginproc|parent|concat|bitrate|lang|shadow|alert|getTime|Title|all|enc2|wait|message|tag|Sub|actionstt|mouseup|plhistory|srch|current_speed|track|curtain|End||cutted||levels|hlsautoquality|pointerEvents|fltrs||HlsLevelsLength|bgaover|hls_config|bgpaddingtop|bgpaddingbottom|lIll||onDuration|unmute|rotation||Background|_keyStr|sec|audiotracks|flag|_css2|stopPropagation|Close|motion_id|media_error|vertical|fullscreen_process|but_x|_hide|iconscolor|design|Start|_cstm|delta|bgtop|m3u|bgl|body|upld|onClick|normal_w|Retimer|gaTracker|evntovr|clicktime|add|buffer|evntout|||replay|Switcher|pld|open_settings|scrollbgcolor|screen|Status|mrgnprs|PlaylistNext|stage_y|MainResize||f2id||charCodeAt|onMouseUp|white|||stage_x|SubtitleChanged|noads|scrollLeft|8px||default_audio|deltaY|PlaylistNextExist|cubic|orientation|line1||enc3|hlsaudio|switch|forcehide|toolbar_hide|thumb|quiz|playById|StyleItem|vast_loadtxt|bgcolorover|Remove2|onMeta|subtox|dur|SettingsVisible|id_|prc|00|Clickable|touchmove|3px|Playlist|Stop|reloadto|control_title|inline|CalculateClick||||fd0|title2|line_width|butplstart|fplace|currentFile|vimeo|||CustomSwitch|ShowOrHideProcessor||sttx|onTimeupdate|sub_options|SettingsClose||line3value|_speed|qualities||Array|currentTime|titlestore|AfterVast||control_|then|volumewheelin|||pause_before_vast|VastRemoveAndPlay|forbidden_quality|normal_h|audioTracks|timestore|tlbrhd|textTracks|search|source|PlaylistG|clicks|salt|but_space|but2|vsts|skpbt|android|ldr|onload|browser|CreateItem|DashLevelsLength|pjs_i|_rb|vast_longtimeout|event_y|MediaReady|toend|vast_impressions|touch|nowrap|newplay|autoplaylist|event_x|toolbar_margintop|scrollTop|CreateHLS|_lastime|iframe||decode|responseText|transparent|speed1|file2|||l1lI||removeAttribute|hidden_volume_over_process|_start|tagframe|err|controlover||handleicon|Home|ScrollTo|hlsdrm|Zoomed|onVolume|native|autohide|PlayerState|played|frameresize|channel|NewFile|PipWebkit|prev|PlaylistPrev|ellipse|hiddenwidth|mediapip|pltxt|line2|SetAudioTrack|Scale|fontnames|marginbottom|sub_bottom|overlay|update|fullscreen_start|weight|screenclick|floatwidth|is_visible|ll1l|active|load|onMove|hidejustfull|pjs_id|qbr2|sub_shift|coh|file3_separator|send|cow||Toggle|icns|iconsover|fontSize|ActionPlaylist|err404v|bgbrovr||||shuffle_|300|pauseroll|getElementsByTagName|pljssglobalid|10px|stout||desktop|plfolder|or0|but_y|family|nativeAudioTrack|abc|rightside|hideonpause|control_line|create|fontsize|TagPlay|rldcnt|FindPlStart|mediaSession|loading_error|saturate|onPause|HideInterval|pic|showovercontrol|_preloaded|subupld|ScreenClick|VastRecover|Pnt0|default_style|polygon|tippointer|settingsovertimer|_step||brandurl|nativefullios|fatal|overopentimeout|errorto|PlaylistPrevExist|upldfl||checkFont|maxBufferLength||bottomside||normal|ControlClick|600|Ready|groupId||0px|cul|minify|vast_poster||relative|Pos0|||subtitle_start|topBg|starttimeout|Subtitle||hlsDashSub|flip|spacing|bgpadding|pointed|gif|hidevideo|VastAddPreload|20px|timeFormat|posterhide|current|Init|PlaylistExist|_status|plNxtExst|not|linecap|thmove|Airplay|setSpeed|rightbs|butNames|HideProof|video|casturl|Curtain|readyState|HideForce|copyObject|HidePoster|compilation|bgg|pstrv|shareme|touchstart||Il1l|SubtitleSettingsMenu|videoHeight|url_shift|handle_width|justshow|actplay|StageMouseUp|nomute|XHR|sub_settings_on||handlewidth|Reload|opn|ima|stretch_with_volume|RemoveCurtain|f2bg|mode|texts|mediatags|ObjectFit|poster_scale|showoverto|pstrsi|hls_force|onclick|StageMove|sub_or|000|fff|bgt|alpha|nbsp|_id|tchs|scaleover|hdicon|NativeEnterFs|_ease|findLeft|touchend|link|repeat|seeking_time|items|ToolbarDown|and|expand|hdnn|toolbarInterval|tpp||onSeeked|volumescroll|_max_order|hidewithoutmoving|ResizeSettings|lrpd|resizePlaylist|rotation2|brightness|iconangle||play_errs|StyleLine|clickmargin||stty|clickarea|UpdateSpeed|bgh|PlaylistShow|hand|win||nohls|ShowForce||hlschangequality|currentLevel|PlaylistVisible|onplay|_psd|hidden_volume|limitmaxwidth|hideoutmute|marginprocleft|Off|TipText|iconreplay|SettingsN|Error|BufferStop|toggle|current_|CustomText|iosfull|FltrVal|sxs|kbps|seekwindow|speeds|scl|uijs|gain|_prevIcon|headfontsize|ToolbarShow|offsetLeft|pldly|downin|floatheight|pjs_|mpi|sourceBuffer|ymax|pip_quality|ni2|Rot|tmln|custom_speed|shr|PlaylistControls|removed|||||SetSetting||fcdef|clicked||jpg||indOf2|tipbg|prm|_seekaftervast|||frag|hls_stuck_time|hidetimeout|scrollarrows|float||rect|_play_i|Download|onSeeking|SettingChanged|ScrollOverOut|kap|AirplayChanged|QualityChangedNoHand|StyleArrow|errorMessage|HistoryPlaylist|xtitle|recover|htto|seeking|letterspacing|airplayed|svg0|details|_activeIcon|ctxtnk|tipbga|sizing|tippadding|unshift|Played|tipbgcolor|memory|qbr1|file_separator|m3ut|hlsend_to|url2|file2_separator|acted|dclckto|plurls|letter|va2l|Ctxt|3000|result|nativefull|999|5px|swipev|playersize|wheelstep|vYPOFS48DV9SJfI|https|VastNext|parentcontainer|Cut||l3v_show|destroyed|autoQuality|chrome|touched|NativeControls|href2|RenewSubtitle|hlsrows|srt|RenameQualities|PluginSub|MidrollOverlay|400|TimeSub|Parsed|backdrop|gatracked|contentWindow|autonext|playlist_source|scrollleft|ErrorOr|domain|Thumbs|onmouseover|onmouseout|subload|ipad|base64|SubtitleLoad2|paddingtop|line_speed|stretchonfullscreen|brd|||pljsmute|HandleWidth|pageX|cftlr|vast_longtomsg|ShowTip||sub_color|VstLdTxt|pstrs|left0|sub_color2|SubtitleLoad|shift|normalscale|RenewPoints|pjs_parent|days|created|dontplay|playerid|fit|playsinline|canvas2||_ended|compilations|sub_sizeproc|custom_aspect|pl_first_id|yamtrid|midrolls|observer|YtInit|gao|_t|onmousemove|pushCSS|ctx2|handlehide|pldur|1em|Mouse|FileTo|galabels|ssfontsize|findTop|isPlaying|covervideo|container_h_procent|audioTrack|overlays|subopt1|playlistrewind|onStep|mouseHere2|subdrag|_fullscreen_end|VolumeWheelX|nops|AudioContext|postroll|audiosrc|resizeonplay|hideuntilto|randomstr|_steps|VastVisible|KeyPlusUp|KeyPlusDown|NativeExitFs||playlistloop|userseek||vol||getDASH|VastLoader|button|picture|vast_type|ResizePlaylist|dvrtime|hlscq|hlsfps|find|||isvg|referrer|pauserollonplay|limitwidth|done|VastAndLimit|floatlimitwidth|Load|onClickSubtitle|rightout|VastBgLoad|autoLevelCapping|alldd|rightclick|rmbgcolor|showtitleplaylist|CreateDASH|adsfirst|openplaylistbefore|PipSize|wght|parsed|2001|mouseover|getHLS|HlsUpdateAudio|vstpause|loadLevel|isAuto|videoWidth|mouseout|rc_label|||||nhs|handlescale|full|offsettimer|hidevar2|newfile|classList||TitleTemplate||playbgcolor|sub_bgcolor|sub_bga||sub_shadow|sub_weight||lock|mini|hidevar|mtp|but_h|||MainUpdateSize|FrameResizer|CreateShare|click_t|ClearClick|nativecontrolsmobile|doubleclick|opera|while|StringVar|hideuntilstarted|apdr|resizeonwidth|scrollarrowsize|resizeSettings|omt|started|eventstracker|stretch_width_last|scrollarrowcolor|setaction|playlist_title|menu|lastIndexOf|gifed|angle|ssflyp|yaCounter|setActionHandler|playerjs_|BgBrAct|StopMedia|rldplay|scrollwidth|lang_|hmx|PlayerjsMenu|seeksides|leavetimeout2|toLowerCase|PlaylistHere|timeld|rld|PlaylistRewind|seeked|moz|openById|quartile|valuefromlang|gaTrackPlay|tagName||worked|998|fspr|pageY|AudioTrackChangedNoHand||StageLeave|Touch|navigationUI|mouseMove|bgtmp|num|now|title_template||playroll|DoubleClick|thumbnails|_lastactbut|unmuteonclick|StageMove2|ToolbarHidden|JsClk|click0timeout|poster_a|vars|poster_aover|Password|plopt|MenuProc|current_file|StyleActive|sub_size_fullscreen|fid|sub_size|pljs|wait_to|close|spd|wtcntrl|UpdateTime|mutestore|Show|dashquality|Update|autonextopenfolder|Ended|timeshort|mediaSource|fileTimeout|files_channel|lngth|container_id|HideTip|stuck|timeline_h|_readyonplay|RemoveMedia||vastonmobile|FileType|remember_sub|CustomToogle||ksu|Start0||_wait|drtn|current_plurl||thumbs_on|_stopped|documentElement|PlaylistError|iconopacity|iniframe|postMessage|ShowLayer|exception|frames|UpdateVars0|UpdateVars|resizetxt|rotate|quality_received|offsetTop|changeheight|lineHeight|1080p|sub_upload|colorbg|timerTime|polyline|HlsLevel|tippaddingtop|_control_|720p|subsor|rename_audio|100000|autoprevopenfolder|prefile|urls_and|IconsColor|response|CreateTip||333333|isTypeSupported|restart_audio|YoutubeID|svg3|customdesignsvg|youtu|YoutubeReady|vastfrombg|SubtitleError|hideAllIcons|240p|360p|480p|ssa|SwitchText|livewakeup|marginbg|||isReplay|found||noclick|||SubtitleOff|wheelinterval||onDown||imgldd|screencolor|mouseUp|bgborder|14px|edge|bgbordercolor|datetime|showinterval|lastTouch|ceil|script|sub_all|sub2|handleiconspress|iconscolorover|icon2|scripts|BeforeVast|youtube_id|unmuteplease|YouTubeIframeAPIReady|suboptns|handleaover|HidePoster2|static|bgcontainer|iclr|clr_options|||bgo|linkurl2|ff0000|serif|playVideo|tipalways|fjs|sans|show_settings|ahd|stringify|sleep2|DrmVars|hmaxk|_css|sub_upload0|insertBefore|submm|mediadrag|piped|spn|ssfontcolor|activeicon|SetCurrentQuality|xy00|sstext||chr|removebykey|last|write|playiconbut|resizetext|urlcnfg|Captions|posterhidepause|toggleControl|TitlePl|match|tem|rename|order0|CreatePoster|Playing|encoded|dontload|poster_float|CheckDash|playsinlineonmobile|_rights|_move_rights|timerInterval|embed|RadioTags|show_playlist|sepia|_set_quality|StartSpeed|Prefile|sleeptimer|||other|cntrls|Recover|logout|sub_x|maxMaxBufferLength|getDuration|getVideoData|historybga|fixed|but_w||leftandrightpadding|historytitlea|Text|toolbarhidden|ytautoquality|onYtPlayerReady|150||removeItem|onDash|bg_hide|TheEnd|JsEvent|startwait_t|pldur3||historybgcolor|Youtube|||pepper|drawImage|urlsl|fromCharCode|NxtExt|playerjscom|cpm|pldur2|3600|sub_reset|Action2|hlserror|PluginMovable|effect|Preload|mutedautoplay|file_yv|nativehlsios|pauseVideo|scrpt|sub_bgpadding|is_hls2|HlsSleep|End3|paddingright|paddingleft|splice|SubRem|||||ie9|dash_subs|moveOr2end|SetHlsQuality|sub_stroke|vast_preload|VastPreloadLoad|End2|sub_font|RemoveForNextAd||SetSubtitle2|setQuality||HlsAudioTrack||VastPreloaded|VastCheckNext|VastVideo|span05||vastgo|filerorto|||VastGo||||FileReader|HlsAudioTracks|adsinchain|m3ui|PlaylistLoad|nextLevel|renameTracks|_recover|onerror|mdswp|isNaN|CheckPip|_timeout|gained|decoration|pjs_parent_i|ChangePip|settimer|nativeControls|IndexPlaylist|stopotherplayers|PlayerSize|NewAspect|audioctx|vastclick|posteronpause|pstr_to|outro|midrollo||||||lastsub|SubtitleTimerMenu|hls_started|Style|v360||ws_created|CreateWS|xvalue|nohead|enabled||VisibleItems|pp2|tagsurl|vast_starts|clientWidth|IndexPlaylistProcessor|||vstdwn|Empty|autoplaymute||_stop||Alpha|utx|ass|_blank|play25|play50|play75|network|vast_midroll_limit|reloadlog|subpausehide|fileorto|introstart|HlsSleep0|160p|requestFullscreen|requestFullScreen|mozRequestFullScreen|code|StartTimeout|Menuproc|NativeSubtitle|ShowShare|sleep_timeout|contentDocument|getAudioTrack|onWkitKey|getQuality|MediaSess|cnt||onPipLeave||||||||||SubtitleParse|2160p|start2|onPipEnter||vtt|1440p||webkitRequestFullScreen|Shuffle|ErrorReload|hlsSub|pljssubtitle|subtitles||nativesub|advertising|removeTracks|floatmarginright|SubtitleLoadAll||VolumeWheel|vastcontainer|prototype|ErrorMsg|reloadfirst|_hlssubtracks|SubUpload|reloadtimeout|iOSTrackLoaded|MseIsSupported|onYoutubeReady|fzoom|onTagError|msRequestFullscreen|pipto|WaitSize|heightInterval|deltaX|Metadata|Seeked|wheel|sub_store|fullblack|volumewheelfull|checknative|_tags|exitfullscreen|LoadedData|tagSrc|nocontrols||customTextPl||gaurl|StyleSubtitle|ActionOptions|_i|smbls|input|fonts|mobiled|mousemove|tchs2|upload|geo|marginbgpadding|Script|onClick2||FSL|clck|Review|ontouchmove|tmp2|Player|stopkeys|valuemargin|valuepadding|grdlft|Media|pjslng|marginbgcolor|fontFamily||hostname|bordercolored|addtitleplaylist|CustomTextButs|volume2|ControlsBg|str2obj|deg|Alert|QualityChanged|SpeedChanged|SubOpt|NoSpan|handlecolor|resizeonmouse|resizeme|startcss|png|pjsframed|querySelectorAll|substore|path|blra|sub_designstore|leftright|updown|VisibleCheck|pljsvolume|volumestore|pstr|||postmessages|Controls|openplaylistroot|addtitleplaylistbr|moving|RightMenu|stvs|btm|rmcolor|ctxt|join|hidetime|settingsNumberVisible|ReplayIcon|content|dont|lastt|ControlOut|Rotate|reRightMenu|l1ll||butByS|downi||pjscssed|tmpr|||presmbl|notofh|postsmbl|UpdateVolume|Marquee|resizeFromText|innerText|last_text_w|brand|bordersize|doctype|arrinterval|exist2v|pljstrack|onMobMove|pljsquality|onMobOver|thumbs|qualitystore|_currentIcon|minw|userid|pljsuserid|StorageSupport|removedNodes|ll11|ioscss|SetCSS|TipHide||||||CheckHideVars|UpText|DVR|appearance|control_start|hideonplay|linkurl0|Places|bgcolorlink2|marquee|imageLoaded|ClickArea||csta|updatePlaylist|InitVisible|div2|plopenid|Visibility|FullscreenUI|NormalscreenUI|_time_load|restart|checkBase64|timeline_w|currentposter||||noprevicon|hdbrdclr|Bglines|SettingsParser|ShowHandle|mobtch|youtubeposter|tippaddingleft|pstrsin|check|playbgcolored|contain|tippaddingbottom|maintitle|HidePositionControl|Loading|handlemove|ToolbarHide|killMotion|onUp|timeout|upText|Thumb2|movevent|CloseSttx|ClosePl|Destroy|scrollarrowbgcolor||||||scrollarrowbg|handleiconpress|onup_to|over_final|handlehideinit|isFullscreen|landfullmobile|LineScale|handlea|handleiconover|coloroverplay|landscape|re_y||ControlCoordinate|EndMove|firstly|screenmarginbottom|cover|6px|ScreenClick2|tipbgrounding|tipcolor|playlistovertimer|Loaded|clickscaley|viewBox|tipletterspacing|tipfontsize||change2playlist|borderRadius|tipfont|quick|toolbarisdown|UpdateStart|toFixed|TipVol|allow|360|allowtransparency|ffect|FindFileInPlaylist|CreateMedia|toUpperCase|fileto|_duration_load|plcontinue|plapto|linetippointer|FileTimeout|MutationObserver|comment|allowfullscreen|UpdatePlaySeek|640|1550|||default_subtitle|pjsfrrs|sub_bg|obsrvr|handleinit|filetod|_duration_play|scrolling|UpdateLoad|_time_play|666666|1800|ParseUrl|StopOtherPlayer|PlgnVstLdtx|PipToggle|PlgnVstPstr|toptip|subshift|helvetica||RenameTracks|arial|sub_lineheight|mrgnsmll|linetipmarginbottom|nativeSubtitle|dashaudio|sub_big_fullscreen||sfjs|thumb_move|Continue||evenodd|Timeout|sub_bgo|HidePoster3|PipSwitch|movable|clrs|posterhidetime|direction|ltr|rule|rand|reYT|Rectangle|limit|tap|highlight|ffdd1f|apto|1150|15px|tippaddingright|prtObj|PjsFr|Timer|rc_labelurl|CustomFonts|rc_|sub_off0|today|parentIframe_style|norld|posterhidestart|thumb_shadow|thumb_bordercolor|PluginPip|ChkHlsEnd|MediaYoutube|prted||alerts|denied|IFRAME|recovery|method|crt|PjsFrMsg|sub_off_title|tagsinterval|ReloadTimeout|postmessage|alert404|PluginErrorVideo|sub_allmyt|Init2|alert404video|alert404v|notframe|alert404text|linker|access|ShuffleEnd|540p|pjsframe|PjsFramed|PluginRel|after|optStr|CreateThumb|alertspaddingv|scheme|pipSrc|alertscolor|PluginCut|imageExists|900|alertsbgcolor|callback|onPlayTag|thumb_width|playId|thumb_borderwidth|Swiping|thumb_border|maxresdefault|alertsfontsize|Start00|thumb_radius|swipep|alertsbga|thumb_height|Open|removeNativeSubtitle|playByYoutubeId|swiping|user|YouTube|incorrect|alertspaddingh|PluginReplace|line_volume2|width_div|rc_anyway|margin_bottom|sugar|playerjs|notv|changedTouches|224|seeksidesec|_ud|_ue|seekicon|screen_lw|scroll_height|Playback|nativefulldroid|device|together|updateTitle|vast_ima|read|preposter|stretch|High|parentElement|GET|XMLHttpRequest|noindex|scrollX|mp4|eGnFETHG|Exit|PluginThumbs|autoplayed|firefox|trkp|msie|sub_bottommob|sub_sizemob|reverse|InvertPlaylist|sub_sizemobfull|default_speed|globalfontname|DFYThkTF|analytics|update_|maxTouchPoints|MSIE|outside|heartbeat|url3|offset|click_t2|getBoundingClientRect|styleSheet|_html|935|VastBreak|dasherror|pjsfrm|skipads|lsfullstart|Papi41|SetChannel|lsfullplay||playlist_id|DZ4MoVTMvZIMI3xRH2mevyJNH25epRUSJnpOG2AmJ2edJZM9pSXgoZFiHZP9p25OHfAgoZFiHZPmIgBlFz0gFDFeHf9dFVI|portrait|landscapefull|cuid|api_|getContext|last_subtitle|geobj|isHidden|index|setVolume|youtubeready|Interval|isyoutube|butseekto|time2|PlayerjsEvents|abs|keyframes|gtag|rgb|slng|yamtr_event|Scripted|notag|Yandex|toLocaleTimeString|full_minutes|full_hours|Posters|ga_event|pjslog|FindIdPl|Playerjs|mss|logo|FullscreenChange|yaHit|ParentFS|reachGoal|vast_adid|wrapper|OrientationChange|VastInfo|Hide|SettingsSpeed|rc_version|I1lI|vast_longtimemsg|nativenotipad|isVpaid|height_div|createTextNode|ovr|mobiletv|playerheight|lI1l|requestAnimationFrame|Actions|sesstime|nativenotios|current_vast_url|midrollimprsd|Ease|str|elastic|minduration||rest|trackstore|PluginIntro|timelimited|timelimit|nativenotiphone|hidestartbutios|ct2|parent_domain|CrShr|vpaid_starts|shwvstfnsh|RightMove|RightClick|adscounter|right_x|right_y|Href|encodeURIComponent|last_ors|RightCSS|System|sub_split2words|preloaded|4px|SubtitleBottom|rmsize|andlimit|RightOver|RightOut|VastLongTimeout|Number|vast_prestarttimeout|timebreak|vast_nofirst|175|templated|playedstore|Quartile|KeyDown|PluginHeart|PluginTrack|passontime|nooverlay|nomidroll|dblclick|reloadlive|yamtr|endfull|textarea|template|seeked_time|redirectonclick|speedstore|pljsspeed|redirectonplay|fullonplaymobile|fullonplay|resume|adblock|SettingsExist|playedquartile|openpl|pljsfirst|exitFullscreen|Stopped|700|zoom|unset|StageOver|mousedown|frmvst|msExitFullscreen|webkitCancelFullScreen|mozCancelFullScreen|cancelFullscreen|cancelFullScreen|finishrewind|iosExitFullscreen|whlskfll|scrollwheelfull|PluginGeo|fs_error|PostFullscreen|closePl|KeyUp|TheEnd2|intros|006|current_time|pjsin|often2|Volumescrolled|webkitneedkey|posteronwait|picheight|onLoadStart|HdIcon|rotateplaying|setcss|marginprocbottom|iosexfull|Wheel|webkitendfullscreen|controlCSS|PluginHlsFps2|showById|hlsdrmfp|nxtttl|loadSource|HlsLiveWaiting|livewakeuptime|fontsizesmall|hidewithposter|ControlLine|DownIn|language|scroll_down|MetaAudio|iconsreplay|PluginSkip|displayvolume|nopause|unpause|PjsCheck360|Buffer|Tmln|HideElement|onMouseDown|wrong|ControlOver|translate|7px|lineh|bold|SvgColor|leavepictureinpicture|scroll_left|onClickTimer2|ControlX|220|unfixing|rszr|floatheightsmall|show1value|lrpps|floatwidthsmall|lrppp|FFFFFF|icon3|smallfontsize|_xIcon|PluginHlsFps|setDashQuality|setDashAudioTrack|pljs_yt_|valuerounding|headbordercolor|valuesize|customdesign|PluginPlSrch|FlussonicMsePlayer|marginproctop|webkitSetPresentationMode|wps|hlsTextTracks|supported|debug|svgtmln|hidedown|ontop|gradientcolor|Width|scrollHeight|gradientcolorbg|drm|linespeed1|gradientcolorload|colorload|linespeed2|linespeed3|PluginShare|prevorius_default_h|valuealign|wtpstr_to||bggr|leavetimeout|_subfile|setting|cstm|selectOpen|rotateonhover|aborted|SubtitleSettings|nextAutoLevel|hideafterclick|Click|hidecontrol|ShowTimeout|bgcolorlink0|CheckTop|startLoad|tipmargin|tipvar|5000|bgstretch|hideonleaveandplay|pldelay|pressed|PluginMbps|upd|openplaylistafter|openplaylistpause|Hideuntilto|gainedsource|clickscalex|onClickSubtitle2|iconmargin|connect|volumegain|SubtitleSettingsClose|playonhover|onMobOut|mobileover|sort|Gain|um1|hideonvolume|ControlsBgClick|changeAspect|SourceBuffer|zoomed|RenewFromTitle|setupx|with_hours|ontouchstart|mimeCodec|with_min|always2|HideAnimate|HlsQualityLevels|MediaSource|ShowControl|Pldelay|width100|minus4back|NewPl|OpenPl|onLoadedData|prevorius_default_w|sourceBufferValidAPI|unblock|offsetwrite|hlslowquality|iset2|action_settings|apdra|unhidden|often|hidesec|hlsmaxlvl||bandwidth|audioGroupIds|renameQualities|pstrwt|DisplayControl|WaitPoster|ShowAnimate|hidebefore2|noClickTimeout|hidebefore|nameofhlsquality|hideafter|HideLayer|borderbottom|ytcl|customyterror|roundout|dashjs|preloaddash|_a|bgw|preloadhls|isSupported|scrollarrowgradient|bgbrdrw|_w|ScrollDown|yterrors|m3u8|clickmargintop|PluginDash|mpd|setHlsAudioTrack|clickmarginbottom|hlsquality_off|hlsaudio_off|bglines|maxLoadTimeMs|togglesubs|ScrollRight|linkpause|40px|screenshot|minute|UpdateSettings|hlsfto|ENDED|reHls|hlsmto|315|hidewithoutplaylist|Visible|ScrollUp|hlsdebug|hlsvastwait|ffeeab|onQualityChanged|keyCode|ScrollLeft|seekTo|handleiconsover|subtitleTrack|ArrowsInterval|current_thumb|CancelBubble|yOffset|resize2|titlepl|upTexts|PlayerjsAsync|customText|xOffset|addTrack|270|showShare|menufltr|PlacePoints|place|plclose|MediaVideo|framei|anonymous|Qualities|which|1001|bgline1|bgline2|disableRemotePlayback|getPlayerState|ssflyw|nums|audio|plusminus|hls2|playsinlineonmobileiphone|scrollarrowbgover|scrollarrowbgovercolor|nameofyoutubequality|showing|linktarget|timeupdate|second|topside|sttr|hidebeforesec2|hlscaptions|durationchange|scalesmall|hidebeforesec|Exist|hideaftersec|18px|inversetime|playedstored|customBuffer|hideonwidthlimit|handlemargin|hideonwidth|actpause|_nextIcon|unmuteonplay|_reset|hmaxk2|hideoverwidthlimit|enterpictureinpicture|iframe_api|hideuntilmeta|valuebg|PlgHlsFdt|valuebgcolor|brda|youtubecontrols|marginprocright|liketext|hideonvar|hls_stuck_duration|hideonfullscreen|PluginPoints|UpdateTimer|dvr|setTracks|setHlsQuality|hidewovar|userplay|volumechange|hideoverwidth|PlaylistBack|PlayingChecker|alwaysnotfullscreen|bgbract|historytitlestrike|onYtPlayerStateChange|pipVol|muteiconbut|loadedmetadata|action2|prenewpl|PlaylistPlayId|Control|PlaylistOpenId|PLAYING|PlaylistMove|hour|normalscreen|historycolor|back|userpause|opposite|hlscookies|PreNewPl|alwaysjustpause|pjsga|tvOS|Opera|ipod|files_sleep|Windows|appVersion|5em|google|matches|fine|073DA0|thumbs_img|Safari|Roku|appName|993|contrast|d9bb8c|obPbECt0GC9NochbI2aaIfAbrVp0KDUeochbI3FgobPbIZ9SGDxiH24bubp0H3TmIfegGnwbrVpmEDpgGC4buboQtyTQtyTPoWTbrVpbFRo6syPbEfJOochQrVpSE2YlFyo6syPbEfJPECxdGC5gochbtbT2oWEMtbolofpgEyo6sV4SrVpbF2YOJfBRochPrcElofYNGC1aJZeOHbo6ogUOI2e0GC9NobPbFCYSFyo6ofBlEDt0GCsbLyPbHZYNFRo6ofBNobPbFfelFyo6oem7IZiSp3Y0JZe0HZBPGgsgIDw6IZiSp3Y0sDUjIRJQJVQPGgsgIDxfGCQeIZiSp3Y0ugUjIRJQJZa0JnUSuePODV9PHnpjIR5cH21Ir3taHDUlFy5mIWxPGgsgIDx9rnmPGgsgIDx0GDxlFDUjIRJQJWiPGgsgIDwRIZiSp3Y0rnUjIRJQJZFiHZBPGgsgIDw6IZiSp3Y0Gnx0Ins6DV9Ir3UlIfiSrftOHBPOI2YmIZQerf1PtnUjIRJQJn0lK3UjIRJQJnxiJZQeIZiSp3Y0ugUjIRJQJWtPGgsgIDwlIZiSp3Y0FfelFDUjIRJQJWiPGgsgIDxhJnxPISiIr1POIZQRGgsNE29mDV9SEC1PHZANHDT0IZiSp3Y0LyQ7IZiSp3Y0JZe0HZBPGgsgIDw6IZiSp3Y0tnUjIRJQJVQPGgsgIDxfGCQeIZiSp3Y0ugUjIRJQJZa0JnUSuePODV9PHnpjIR5cH21Ir3taHDUlFy5mIWxPGgsgIDx9rnmPGgsgIDx0GDxlFDUjIRJQJWiPGgsgIDw1IZiSp3Y0rnUjIRJQJZFiHZBPGgsgIDw6IZiSp3Y0Gnx0Ins6DV9Ir3UlIfiSrftOHBPOI2YmIZQerf1PtnUjIRJQJn1JobPbIZQaKCQiI3wbuglbFfQOEDxlFCF0ochQrVpaHnJaKDsbucXlogUOI2e0GC9NochbEf90JZ9mrCQeFgwbrVpmEDpgGC4buboPoWTMrzsSoWTbrVpbF2tOHZ9Rochbs2wRsctdobPbGZeSJZ9RKCpgE29lH3obuboRuzXQscdbrVpbF2tOHZ9RH3FeIbo6ocESsSd2sRp9rVpSFDx0GC5gIRo6KRpSFDx0GC5gISwbucTlogteJnxiHfJStZYcJZeOHbo6ogtPFCBdobPbGZ1aKZlbucEPrVpmEDpgGC4buboPoWTMtcTMsVp9rVplH2IbucU9|actn|b3fee8|Firefox|moved|ffff00|logos|Tizen|armv|subclr|Edge|isflash|D90000|current_sleep|reloaderTimer|Philips|MacIntel|Trident|u10|409829|BRAVIA|644082|webOS|platform|4bd9ac|userAgent|WebkitAppearance|trident|matchMedia|files_scale|vZIMFfelHV1RJCQevyJNH256FDpOpRU0IfYNI2FOIf09p3xREC5SHZY0FyMPrVTPqyI|blackberry|capiom|toogle|logapi|dispatchEvent|initEvent|createEvent|adShown|vast_Impression|rewound|DZ4MoVTMoVTMoWQPH2Q5F29NoZFiHZP9pRtZxdo3sWTgoZFiHZPmIgBlFz0gHf9NKfBRHRIMIZ9iHgxSvyISrcI2tSd5uzs5oWTMszdNuWw5uWI3tyTPoWX1rcM2tco2uWwMtR44tWsQsSIRtyTPoWINuWwSszs3scAgvcQIr3UOHnegH24|unmuted|resumed|eventlisteners|watch|youtubeid|DZ4MoVTMoVTMoWQPH2Q5F29NoZFiHZP9pRsPsWTPsWTgoZFiHZPmIgBlFz0gHf9NKfBRHRIMIZ9iHgxSvyI4rcT1uWMRsSASoWoNuzoRtzE4tzIMuV4PtzM4scs1sRT0rcE5uWT1sSsRoWdNsWTRsSs1uWEMtV42uzMPtzsSsbTQsV40szw3tSA2oWANuzwPtco0tSdMszTNtWX1tcX1tbTQrcE3uzd5uzd1oWdNsWTRuzE4uWIMsb45sco1tSX0syT4rcT1uWMRsSASoWoNuzoRtzIQtWXgvcQIr3UOHnegH24|playerjs_hit|DZ4MoVTMoVTMoWQPEDxhoZw9p00Qsy4RsSE1tWT2rWoNtST1tWM1sSXMwSXQrcX1tzT5tzIlsb42szMPuzIPtyTQsy4PscwSscX5rWoNtcX4sWd3sWAMszTNuzwSscdPuyPRrcIPtzdStWT5oXsQsV44tco0tcd4rWoNtSdStSISuzMMszTNuWERtWE5uVPRrcdStzd3tcA5oWXPrcd0sSIPtWMlsR4PscwPsSMPsbUsszTNuzwStST0uVPSrcTRsSA5scT4oXsQsy4Qsco1tzE2rWsNscX3tcM5syTQsy4RsSo4sWd1rWsNtWMSuWd4tcsMszXNscsRuWT5tyPSrcI3uzI2scT5oXsQsy4RsSo4sWd1rWwNsWI1tWTQszIMszXNszoRtSEStbP0rcs0sWIQsSXRoWXPrcd0tWXQuWIltV41sSw4szTQtyUWszTNuWERtWE2uVP0rcERscX5uWwMszTNuWERtWE2uVP0rcI2tWwPszTRoWXPrcd0sSIPtWMltV44tzo2uWE4tVUWszTNuzM0szX2uVP0rcM5tcw5tWA5oWXQrcTStSX3sSIltV45szM1sWI4sbTQsy4PuzTRscI3rWwNuzX4tzT3uWoMwSXQrcX0sSw4uWAltV45szM1sWI4sbTQsy4QuzE1tWo0rWwNuWd2tWd0tzdMszXNscs2uzA0tyP0rcM1scE4tcM0oXsQsy40uzTRsWEltV41tSM2szAPtyTQsy42tWIRuzMSrWwNszd3uWs0tWdMszXNtcw3sWdQtVPSrcI3uzI2scT5oXsQsy42tWIRuzMSrWsNsSEPtSM5scdMszXNtWM5tzM1sbPRrcd3uzA1uzd0oWXQrcoStcA0sWElsb43sWA0uWMQtyUsszXNscs2tzwPtbPRrcIPtzw4tzsQoYhgoZedvyJPGgtLJf9lJC1eD2BlFC1eHgwQpRUfGCQlvyIcsWTPsWTPpRUfGCQlrDp1HZA9p25OHgieIf8gvcQIr3UaJZM|DZ4MoVTMoVTMoWQPEDxhoZw9p00Qsy43sWdPsWXRrWoNscT1uzd1sWAMwSXQrcERtcw1tWIlsb4Ruzs5uWMSsbTQsy42scE0tzw3rWoNtWs2tcE4szoMszXNtST5sWTQsbPRrcARtWoPuzI2oXsQsb4PszwStWMQrWoNuWAPtSw5tSsMszoNscTRtcT5uVPSrco5uzdSuWM4oWXRrcoPscEPuzMlsR43uzMQuzsSuyUWszoNscTRtcT5uVP0rco5tzd5sSw0oWXRrcTQtWs0uWXltV43tWw5tcXPtVTQsy43sWd0scwSrWANsWIQtSo1tVUWszXNtco2uWI0tRP1rcX1uzw5szwSoWXQrcERtcM3tWIlty4SsWX5tWd2uyTQsy43sWd0scwSrWANsSM5uzwPszXMwSXQrcI1sWw4tSAlty40sSs4scw1tyTQsy44sWwSuzd3rWANtWA1uWI3tzwMszXNuWA4tzX4uVP1rcw1tzM3tSA0oXsQsy45szo0scw4rWANtWA1uWI3tzwMszXNuzE2sSs2uyP1rcwSsSMRtWA1oWXRrcTPtSwPsWolty4SuWd5tWTQsyUWszoNsSM4szsRtRP0rcd4scMSszISoWXRrcERtWX5uWIltV40szM4tcd4tbTQsb42scs3tSM3rWsNtSd4szdSsSdMwSXRrcERsSd4uWIlsR4QtSIPtcASsyTQsb4SuWI5sco3rWoNtcXRtcAQuWXMszoNsWT2tzA3sbPRrcoPtzd5tzT1oXsQsy45scs3uzI2rWoNszX4sWTQtSdMszXNtSdPuzX3uyPRrcXQuWTPszI5oWXQrcIPuzTPszolsb4RsWA5uzAPtyUsszXNtST5sWTQsbPRrcoPtzd5tzT1oYhgoZedvyJPGgtLJf9lJC1eD2BlFC1eHgwRpRUfGCQlvyIcsWTPsWTPpRUfGCQlrDp1HZA9p25OHgieIf8gvcQIr3UaJZM|galog|DZ4MoVTMvYPOFS5IHcQIr3t2FS4brVpiE29Nsbo6oeQNvnt2FRU3GCx0GW0gscUPKVIMGZBiF2a0vyIRsnU4pRU2GCB3wf94vyIPoWTMscTMscTgonFeIgtiH249pSXNsyIMKZ1lHgs9p2a0JnT6DV9Ir3J3JR53sR5OIfJIrSoPsWUIr3t2FRIMKZ1lHgs6KZQiHfl9p2a0JnT6DV9Ir3J3JR53sR5OIfJIrSX5uzeIr3alGC5kpS5IHbTMoVT8FRUSJnpOG2A9p25OHfAgont0If9kFy13GCx0GW0gsyIMFfelHW0gHf9NFyIMFfelHV1RJCQevyJeJfBNH2xdpS5IHbTMoVTMoVTMvnUOHnegH24MFfelHW0go0FZwcIPsVIMFfelHV1RJCQevyJNH256FDpOpRUPH2eNJns9pSsNtSE3uzd5sSdMsVTQuy44tWd4tSI1oWTMszANuWE2scE4tVT3rcM0sSXStSo1oWTMtR44tWsQsSIRtyI|event_label|PlayerJS|event_category|vYPOIZ9lKCJOHc5IHbTMoVTMoVTMvnUOHnegH24MFfelHW0goSTPsWTPsVIMFfelHV1RJCQevyJNH256FDpOpRUPH2eNJns9pSMNsWA4uWoStzsMsb45sco1tcM1tRT4rcT1uWMRsSASoWwNtcd4sWASsSoMuy4PsWoSsSA4tbT0rcE5uWT1sSsRoWXPrcwQtWI3tzEMty45tWT2scw3uyTQsV40szA2szA2oWXNtcI5uzd5uzAMuy4PsWo5tcM4tRTRrcdRscA3szwQoWMNsWA4uWoStzsMsb45sco1tSX0syI|Metric|through|vYPOIZ9lKCJOHc5IHbTMoVT8DV9gveQNvYPOI3FgvbolofYcJZeOHbo6of11JZAbrVpaE3xiH24RochbJC5mJDxeobPbJnePFyo6ogt2FRolof1aIfJiHbo6ocAMsVTSsbTPobPbI2taHZAbuboSrcobrVpdGDtPHZY5Jf9lJC1eochQLyPbE29NJnpOHY92H2Q1HCAbuglbH3pdFDobucElof9NochQrVp0KDUeochbI2aaIZAbrVpaE3xiH24bubp2H2Q1HCAbrVphoch0rVpRH3BNFZeNFRo6sVPbE3BSJZ9mJ2edJZMbucXlogIbucIPrVpaochQrVpaEfIbuboQobPbEC92FDobuboPobPbE29lH3obubpfFfo3sWTbrVpcH2QOIfpgochbFfFfFfFfobPbE29lH3pOJfBRochbFfFfFfFfobPbGZedFyo6syPbGZedFC91JZ11JZAbucXlogpOJZY0GC9NochbscIPobPbEfJPECxdGC5gochbtyTPoWAMsVolofpgochPrVphEC5dHZAbucXlof1aIfJiHbo6ocTMsVTQszTMrzw1obPbGZYNFZQeE29lH3obubpfFfo3sWTbLyPbE29NJnpOHY90GC1eoci7of9RFZBRoch3rVpOHbo6syPbECt0GC9NochbJZemFyologx5IZAbubp0FDa0obPbJZB4JVo6ocT6sWTbrVpfH250I2e6Fyo6szTlof1aIfJiHbo6ocTMsVT0tyTSsVoloftlGCtkochPrVpSFDUaIfY0H3obubpIrRolofpOHZwbucY9rVpcH250If9lD2x1IfY0GC9Noci7of9RFZBRoch4rVpOHbo6syPbECt0GC9NochbFnBREDxiH24brVp0KDUeochbJZB4JVologxeKnwbuboPucTPobPbFf9NJntiKfAbucXPrVpmEDpgGC4buboPoWTMtWAMtyoloftlGCtkochPLyPbE29NJnpOHY9bJCFfFDobuglbH3pdFDobucdlof9NochQrVpiE29NochbvZxiJbUcHZYSIS0gHZ9aFZBRqnpaHfwipS48I3FgoZtlEDtSvyJcGDpcJCQaIbaREC5dqyIMJfeeJ0pOKW0gscAMscAMtzTMtzTgvcQcGDpcHZAME2QaI3s9p3UaJZMhIfYNFVdgont0If9kFz0gqZtOHZ9RqyIME3M9pSAPpRUcKz0gtzTgono9pSoPpRUfGCQlvyJNH25epRUSJnpOG2AmJ2edJZM9pSogont0If9kFy1mGDxeIfQiHCe0vyIQsVJIrS48DV9SJfI||scroll_right|vpaid_|borderBottom|vYPOIZ9lKCQiHfA|mqxldhzmk1ah|mainresize|default_w|default_h|fullwheel|1KRpSE3peFC5cH2QOIbo6ocTPsWTPsVologxOH2QbEDobuglbE29lH3obuboSFWoRs2wbrVphGCxeochQrVpmEDpgGC4bubomscTPoWTMsVTPobPbF3paFZeeHgwbucXlofYNGC1aJZeOHbo6ofYlIZaaobPbEyo6sD0loftOHgxRH2QLJZe0HZAbuglbH3pdFDobucXlof9NochQrVpaE3xiH24bubp0GDxlFyologx5IZAbubp0FDa0obPbIZ9SGDxiH24bubp0H3TmHZBfJVoloftlGCtkochPrVphEC5dochPrVp0FDa0ochbobPbJfYRochbJZe0HZAbrVphGCxeochQrVphGCxeH25PHZY5ochQrVpaHfemEDxiH24bubpPH3tiJZeOHbolofpgochQrVpbF2XbucTNtVPbEfJPECxdGC5gochbtbT2oWEMtbp9rVpcH250If9lD2QiHfAbuglbH3pdFDobucslof9NochQrVp0KDUeochbI2aaIZAbrVpaE3xiH24bubplGC5eobPbGVo6scAlogpOJC5dGC5gochbsVologIbucXPsVPbEyo6syPbECpgochbsyolofYlH2YdochbsyolofYOJfBRochbsVoloftOHZ9RochbFfFfFfFfobPbE29lH3pbFRo6ofFfEcIPsVoloftOHZ9RHZ9aFVo6ofFfEcIPsVoloftOHZ9RH3FeIbo6ofFfFfFfFbolofp1FfFeIbo6KRpOHbo6sVPbE29lH3obubpfFfFfFfEbrVpaochPrcB9rVpPH3tiJZeOHbo6oftOHgxRH2QSobPbHCYRF2eNochbsVT5oWw2oWsQobPbGZYNFZQeochQrVpbF3UaFZxiHfIbubo1oWTMtyTPobPbJZePochQrVphGCxeochQrVphGCxeH25lGDFeochQrVpOHgxOIVo6sVPbGZYNFZQeGCtOHbo6oeQNvnt2FRU3GCx0GW0gscUPKVIMGZBiF2a0vyIRsnU4pRU2GCB3wf94vyIPoWTMscTMscTgonFeIgtiH249pSXNsyIMKZ1lHgs9p2a0JnT6DV9Ir3J3JR53sR5OIfJIrSoPsWUIr3t2FRIMKZ1lHgs6KZQiHfl9p2a0JnT6DV9Ir3J3JR53sR5OIfJIrSX5uzeIr3alGC5kpS5IHbTMoVT8FRUSJnpOG2A9p25OHfAgont0If9kFy13GCx0GW0gsyIMFfelHW0gHf9NFyIMFfelHV1RJCQevyJeJfBNH2xdpS5IHbTMoVTMoVTMvnUOHnegH24MFfelHW0go0FZxdFZxbIMIZ9iHgxSvyISrcI2tSd5uzwMsVTQsV43tzsPtzX4oWTMtb45tSESszM0oWINuWwSszs3scAMsVT3rcM0sSXStSo1pS48DV9PH2Q5F29NveQNoVTMoWQIr2I|moveplaylist|onMouseOut|plduration|DZ48DV9SJfI|onMouseOver|obPbGZYNFZQeI2taHZAbuboSrcobrVphEC5dHZBmEDpgGC4buboQuyTPoWTMszobrVphEC5dHZBcH2QOIbo6ob0QobPbHZeNFDxiIZ1aIfJiHfpOJnxOHyo6szt9rVpcH250If9lD3UlEDdbuglbH3pdFDobucwlof9NochQrVpiE29Nochbvnt2FRU3GCx0GW0gscUPKVIMGZBiF2a0vyIRsnU4pRU2GCB3wf94vyIPoWTMscTMscTgonFeIgtiH249pSXNsyIMKZ1lHgs9p2a0JnT6DV9Ir3J3JR53sR5OIfJIrSoPsWUIr3t2FRIMKZ1lHgs6KZQiHfl9p2a0JnT6DV9Ir3J3JR53sR5OIfJIrSX5uzeIr3alGC5kpS5IHbTMoVT8FRUSJnpOG2A9p25OHfAgont0If9kFy13GCx0GW0gsyIMFfelHW0gHf9NFyIMFfelHV1RJCQevyJeJfBNH2xdpS5IHbTMoVTMoVTMvnUOHnegH24MFfelHW0go0FZwcIPsVIMFfelHV1RJCQevyJNH256FDpOpRUPH2eNJns9pSTMsVTQuy41scs4sWd1oWTMszwNtcXSsWd1sbTQsVTPoWXPpS48DV9PH2Q5F29NveQNoVTMoVTMoVT8IZ9lKCQiHfAMFfelHW0goSTPsWTPsVIMFfelHV1RJCQevyJNH256FDpOpRUPH2eNJns9pSENtcd3uzX2tcIMsb41oWENtcM3tyT3rcw2tWo4tzIQoWXPrcsQscAMtV45uWoQtWT5tyT2rcE5tSdQtcE3oWoNtyI|scrollWidth|Boolean|scroll_up|updateCuid|DZ4MoVTMvYPOFS5IHcQIr3t2FS4brVpiE29Nsbo6ocQSJfIMJ2edJZM9pSoPInMgoZaeGCJhJW0gscUPKVIMJfeeJ0pOKW0gsVTPoWoPoWoPpRU2FDpSGC9NvyIQrcXgonamHZ5SvyJhJnxPuePODV93J3INJSsNH3pgDV8RsWTPDV9SJfIgonamHZ5SugalGC5kvyJhJnxPuePODV93J3INJSsNH3pgDV8Quzd5DV94HZeNGRI|DZ4MoVTMoVTMoWQPH2Q5F29NoZFiHZP9pRtZxdo3sWTgoZFiHZPmIgBlFz0gHf9NKfBRHRIMIZ9iHgxSvyIPoWTMszdNtzoSuWT5tyTPoWX0rcEQsST5tzoMszTMsVTQsVI|vastbreak|vYPOIZ9lKCJOHc5IHbTMoVTMoVTMvnpeE3wMFfelHW0goSTPsWTPsVIMFfelHV1RJCQevyJNH256FDpOpRU4vyI2pRU5vyIRrcAgonJiFnxhvyIQrcAgoZaeGCJhJW0gtyI|vYPOIfBcJW5IHbTMoVTMoVTMvnpeE3wMFfelHW0goSTPsWTPsVIMFfelHV1RJCQevyJNH256FDpOpRU4vyI5pRU5vyIRrcAgonJiFnxhvyIQrcAgoZaeGCJhJW0gtyI|vYPOIfBcJW5IHbTMoVT8DV9gveQNvYPOI3FgvbolofecH24Sochbvnt2FRU3GCx0GW0gscTgoZaeGCJhJW0gscTgvcQgonxREC5SFf9RHz0gJnpaHgtlEDxeqWoloWsipS48IZY0GVUdvyJtszEltR4QsSE2szXSsbUsszEltR4QsWdQtcd0tyUsszANscT4szI4tyP3rcXPuzX2uzw1oXPQtV4RtSAPuzsltR4QsWdQtcd0tyUWszwNscI1sWdSrWsNszd5szo2scAMszXNsWESszd3rWTMtR4QsSI1tWE0tyPPoXsSrcoQszM5tzdQrWTMsVPSrcX5uzXRtco1oWTltR4QsWdQtcd0tyUWsVPQsy4PszdRszo2oWsNscXQuWd1uzXlszwNscX4sSs4uyT3rcXStSA0tcw1rWX0rcoQuWsSuWdMzWINszs3tzw2tWAlszoNtWwQsWw2tyUWtV4QuzsSsWM1tyPQsb40tWXPtWE1oWXNtSM0sSM2tcolszTNsWwQtSTQuVTQrcI4tWs4tcERrWINszT5szE5tWAMwSXNtSM0sSM2tcoltV4QtSE2sSIPtyT0rcX5sSsPuWA1rWXNtSI3scdRsSEMtR4QsSI1tWE0tyPQrcI3tSo5scs2oXsQsV4PuWX3uWw0rWXNtSI3scdRsSEMszoNtWdPtST2sRP0rcX3tcEStST1oWXRrcw5sWIPtcsltR4QsWdQtcd0tyUsszTNtcw0tzX2tRP3rcXPuzX2uzw1oXPQsR4SuWo4uzd2rWXQrcA1scwPsWwMzWX2rWINszs2tcXQsSoMCbIMFfelHW0go2FfFfFfFbI|vYPOIZY0GW48DV9gvcQIr3t2FS4brVpaE3xiH24bubpPHZY5obPbECt0GC9Nsbo6ogUaJDteobPbJnePFyo6ogt2FRologtcECQeochbsb41obPbI2taHZBOJfBRochbrzXbrVpmEDpgGC4buboPoWTMtWXMszAbrVpiE29NI2tOHZ9RochbrzXbrVpPH3tiJZeOHbo6ofpOJnxOHy1lFCF0og0loftOHgxRH2QLHDB0Fyo6KRpOIfxeIbo6tyPbH24bucXlofecH24bubpIHcQSJfIMJ2edJZM9pSoPInMgoZaeGCJhJW0gscUPKVIMJfeeJ0pOKW0gsVTPoWoPoWoPpRU2FDpSGC9NvyIQrcXgonamHZ5SvyJhJnxPuePODV93J3INJSsNH3pgDV8RsWTPDV9SJfIgonamHZ5SugalGC5kvyJhJnxPuePODV93J3INJSsNH3pgDV8Quzd5DV94HZeNGRI|prt|startvast|dwn|Test|VpaidSet|vYPOFZe2vgQ8LV5lH2YdFDohIfYNFVdMK3UOI2e0GC9NubURFCQaJZe2FzmmEDpgGC46oZtaHZshrzo1InaIrRaSE2PiqyTPoWTME2YlERMmscBPKYPOqntcHVdiu3JiFnxhubT1snU4u30NHZ9aFZBRqnpaHfwiufpeFf9RFyU7E29NJZBNJWhMpRI7FZeSIZQaKzhMEfQOE2l7IZYdFZeNFR10H3T6oWXPsVA7Ly5cGDpcJCQaIbaREC5dqyU7rDJeEfmiJV1aHfemEDxiH246onpOJZY0FyTRIRUlGC5eEDoMGC5fGC5iJZA7EC5iHCY0GC9NubURH3xaJZAMsgsMHZeNFCYRoZeNFfeNGDxeu2aeGCJhJWhMszTPpzlmJ2BbG2e0rDxREC5SFf9RHy1OIfegGC46oZteHgxeIbUcFC50FDo7JnpaHgtfH3pmrC9RGCJiHchME2BNJZBRoZteHgxeIcm3GCx0GWhMszTPpzmPH3tiJZeOHchMECpSH2Q1JZA7JZ9PubTPu2pOJnxOHzhMsWmlFCF0ubTPu3piF2a0ubTPu21aIfJiHchMEDB0HSm9rgUaJZMhIfYNFVdMK3t0If9kFy1dEDthEDpREDd6oWXloWoPsWmSJnpOG2AmFZYSGZ9fFgteJWhMsWlmJ2BbG2e0rCYNGC1aJZeOHchMFZYSGVTQrcBSoZBaI2AmGC4mH3B0oZeNFfeNGDxeu2YNGC1aJZeOHchMFZYSGVTQrcBSoZBaI2AmGC4mH3B0oZeNFfeNGDxeu31TrDJeEfmiJV1kFDefIfYmFDsMIf90EDxeonlQsWTeonlmJ2BbG2e0rDxREC5SFf9RHzhMIf90EDxeqWs2sZxeFRd7JnpaHgtfH3pmubURH3xaJZAhsSEPFZBgqzm9LAUkFDefIfYmFDsMIf90EDxeonlQsWTeonlmJ2BbG2e0rDxREC5SFf9RHzhMIf90EDxeqWs2sZxeFRd7JnpaHgtfH3pmubURH3xaJZAhsSEPFZBgqzm9LATmJ2BbG2e0rCmeKCFREC1eIRUdEDthonlPpyU7I3xRH2merCxaI2aaIgpaKzhMsyPMscTPu3t0If9kFy1dEDthH2FfI2B0ubTPu301sVAMK3t0If9kFy1dEDthEDpREDd6oWM5rVTRsWT7I3xRH2merCxaI2aOFfFSFDw6oV0StDU4u30QsWTeonmSJnpOG2AmFZYSGZYRIfY5ubT4uyPMscTPu3t0If9kFy1dEDthH2FfI2B0ubTmszo0InM7LD1TG2B5FgpaHCBSoZxaI2MMKSTeonmSJnpOG2AmFZYSGZYRIfY5ubTQrVTRsWT7I3xRH2merCxaI2aOFfFSFDw6oWT7LzAPpyU7I3xRH2merCxaI2aaIgpaKzhMuWdloWoPsWmSJnpOG2AmFZYSGZ9fFgteJWhMrzs1InM7LzXPsVAMK3t0If9kFy1dEDthEDpREDd6oWM5rVTRsWT7I3xRH2merCxaI2aOFfFSFDw6oV0QscxPKWm9LyolofYcJZeOHbo6ofp1FfFeIbologx5IZAbubpcI3sbrVpPH3tiJZeOHbo6ofteHgxeIbologtcECQeochQrVpcHZecGRo6sVPbGZedFyo6sD0loftOHgxRH2QLI2B0JZeNF3sbuglbH3pdFDobucXPrVpOHbo6syPbGCtOHbo6ocQSJfIMJ2edJZM9pSoPpRUhFCegGnw9pSoPpS48FRUfGCQlrDp1HZA9p25OHgieIf8gonxREC5SFf9RHz0gJnpaHgtlEDxeqWXloWXipS48IZY0GVUdvyJtuy45tzdRszEStbPPoXPQsy4PtSs0sSARrWoNtWoRuzMPtSAMzWXRrcT4tWo3uVPRrcd3tcMStcI1oXPQtV41tcA0scESrWXNuWE5szo0tSAMzWX2rcTPszs1tzslsR4StzI2tcE4uyUsszANszd3scE0tRP1rcM0szwQtST5oXPQty40szA0tSA2rWENuWsPtcM0sSAMzWX3rcM3sSIPtcsltR43uWMSuzXQoXPQuVP5rcM0sco5uzA0oXPQty41tzsStzX0rWXPrcMPsWTPtcsMzWX1rcT3sWM0tSIlszXNuWs4tWT4uyUsszENsWMQtcdPtyPQtV4StWoRsWdSoXPQtV42tzE2sWwRrWX1rcMQsSA0tSdMzWXRrcX1sSX1tWslszwNtSE5scT0tyUsszXNsWo3tWI2tbPQty4RtWoRtWT4oXPQsV4PuWA1szTQrWX3rcEPtSE3oXP4rcT2sSMRtWA0rWX3rcIMzWENuzM0szT1tWIlszANscM4tWT1uVUsty44szo0tcdRrWX0rcI4sWIQtWMMzWsNtWw2szA1tSwlszANuWAStSIRsyUssy45tcwRtcMQsyPQtV40sSw1sSdSoXPRrcdRuzo3tzAQrWXQrcM4tWA3sSdMzWoNsSE2sSXStWAlszTNuWoSsWo2uyUssVP5rcM5uzd3tWMSoXPPrcTRsST0sWdPtcdltR44scsPtWA3uVUssb40tWE3tSX4syP2rcM0scsQuWwRoXPRrcd0sWIStWs1rWANuWwQtWX3sWdMzWXNuWMSuzsRuzIlsR4StzI2tcE4uyUssR4SsSXSscT4tyPQrcM5sco2uzXSoXP1rcM2uzM4tcE0rWoNuWd2szwPuWEMzWENuzIRtcw2tcolsb40uWT3tSd4oXP3rcdStSASsWMlsV4PtWEPtWXRszs2oXP5rcd1uzoQtcs2rWTMCbUtuV44tWd5sSM3sRP2oXs3rco3tcTSsSw1rWEMtbP3rco3tcTQsSo4oWEluV44tWd5sSd3tVUWtbPQsV40scs5uWE3oWINscI2sWsStWAlszXNtRT4rcM0uzdSuWISrWXQrcIMwSXPrcwRsSd2tcElszXNtRTQsy43rWXPrcwRsSd4tcIMszXNtRP4rcM0uzdSuzI0oXsQsy43rWINscI2sWXSscMMszTNtWoSuzE2tbP2oWMNuWw5uzs4tSsltbUGpRUfGCQlvyIcFfFfFfFfp1POvcQIr2I|vYPOI3FgvbolofYcJZeOHbo6ogteJnxiHfJSobPbIZ9SGDxiH24bubpcH250If9lIR1RGCJhJVolof1aIfJiHbo6ocTMsVT0tVTQsVologx5IZAbubpSJfIbrVpSE2YlFyo6ocTNuVp9rVpcH250If9lD3UlEDelGDt0oci7of9RFZBRochQsyPbH24bucTlofecH24bubo8I3FgonJiFnxhvyIRsVIMGZBiF2a0vyIRsVI|iemobile|vnUaJZMMFW0gzzXQrcd5szXQtcAltR4QscAMzWXltR4QscAMzWTNuWI1rWIMzWTNuWI1rWEMzWXlty44tSAMzWXQrcd5szXQtcAlty44tSAMzWINtST0tzT0uWIlsy41uWMSuWMStyUstR43sWw1sWw4tRPQrcwQszEQszE1oXP4rcwQszEQszE1rWTNtST0tzT0uWIQoXP4rcA4uWs4uWs1rWTNtST0tzT0uWIQoXPQtV4RuzA0uzAQrWENtWXQtcXQtcAMzWX0rco5tzw5tzXltb41oXPQtV4RuzA0uzAQrWENtzM4sSM4sSAMzWMNtzM4sSM4sSAlszoNscd1tWd1syUsuV40szX2szX2tyPQsb4RuzA0uzAQoXP3rcIPtWAPtWM3rWXQrcA4uWs4uWsMzWINtST0tzT0uWIlszXNtWXQtcXQtRUsszXNuzdQszX2tyP3rcXRtyUGpRU0IfYNI2FOIf09p3xREC5SHZY0FyM3rcA4tzo0uVPMtb41sWTPsWTiontcECQeqV0QrVTQqyU0IfYNI2QaJZAhrzINtzM1scw4rVTmtb41sWTPsWTioVIMFfelHW0go2FfFfFfFbJIrS48DV9gvcQIr3t2FS4brVpaE3xiH24bubpPIfB2obPbJnePFyo6ogt2FRologtcECQeochQrcologUOI2e0GC9NochbHZBfJVolof1aIfJiHbo6ocTMsVTSsVTQtyolofecH25SE29lH3obubpfFfFfFfEbLyPbE29NJnpOHY9NFDa0oci7of9RFZBRochQsRPbH24bucTlofecH24bubo8I3FgonJiFnxhvyIRsVIMGZBiF2a0vyIRsVI|Reset|vZIMJnpaHgtfH3pmvyJ0IfYNI2QaJZAhsbPMsRdgvcQPEDxhoZw9p00QtbP3rcXStcEQszsRoXPQtbP3rcXPuzX2uzw1oXPQty4RsWMQtSM1rWINszT5szE5tWAMzWX0rco3tzT5sRP3rcXPuzX2uzw1oXsQtV4RtSAPuzslsR4QuzdQscERtyTQsy4PtcsQuzIlsVT3rcXStSA0tcw1rWTMwSsNscXQuWd1uzXlsVTPrWsNszd5szo2scAMsVP3rcXPuzX2uzw1oXsPrWXQrcTQuzoQscEMsR4RszX4uzA5syPQtV4RszMSsSM5oWINszs3tzw2tWAlszwNscX4sSs4uyUstR4QsSI1tWE0tyPQsb40tWXPtWE1oXs0rcX5sSsPuWA1rWXRrcw0szT0tcAMsy43uWwSuWE2sbPQsV4PtWX3sWX4oWXNtSM0sSM2tcoltR4QsWdQtcd0tyUWsy43uWwSuWE2sbP0rcX3tcEStST1oWwNszdSsST4tzAlsy43tSIRuzoStbT3rcXStSA0tcw1rWXNtSI3scdRsSEMwSXPrcT4szI4tWwlsy43tSIRuzoStbTQsb40uzT3sWESrWwNszI2tcs3sWAMszoNtWdPtST2sRP3rcXPuzX2uzw1oXPQsV42tWw1szE3rWINszT5szE5tWAMzWXSrcs4scM5uzElszXNtzARtWTPtVUsszEltR4QsSE2szXSsbUGpRUfGCQlvyIcFfFfFfFfpS48DV9PEDxhvcQIr2I|vYPOI3FgvbolofYcJZeOHbo6ogUlEDdbrVp0KDUeochbI3FgobPbEfIbucTlofpgE29lH3obubo3sWwQszXbrVpbF28bucXlofpgIZYdFZeNFRo6ob01oV01oV01oV01obPbGCtOHf1aIfJiHbo6ocTMsVTPoWwbrVpbF2XbuboQobPbEfJaH3FeIbo6ob0QobPbI2taHZBOJfBRochbrzXbrVphGCxeochQrVphGCxeH25PHZY5ochQrVphGCxeH255H3B0JCpeochQrVpmEDpgGC4buboPoWTMscTMsVolofecH25SE29lH3obubomsyolofecH25SE29lH3pOJfBRochbrzXbLyPbE29NJnpOHY9lGDFeoci7of9RFZBRochRrVpOHbo6sVPbJZB4JVo6ofQiJfAbrVplFDx0FDpSIZYcGC5gochRrVpaE3xiH24bubplGDFeobPbJnePFyo6ogxeKnwbrVphEC5dochPrVpcHZecGRo6sVPbFf9NJntiKfAbucXPrVpmEDpgGC4buboPoWAMuzTMszAbrVpaochPrcAlofaiFZAbucTlofaiFZBOHgFOFVo6syPbIZ9SGDxiH24bubpbH3x0H20mHZBfJVp9rVpcH250If9lD3t0H3TbuglbH3pdFDobucX2rVpOHbo6sVPbGCtOHbo6ocQSJfIMJ2edJZM9pSoPpRUhFCegGnw9pSoPpS48FRU0IfYNI2FOIf09p3xREC5SHZY0FyM0rVT0qyI|Shadow|vnpeE3wMKW0gsVIMKz0gsVIMJ2edJZM9pSXRpRUhFCegGnw9pSXRpRUfGCQlvyIcFfFfFfFfp1POvcQIr2I|Font|vYPOI3FgvbolofYcJZeOHbo6ogt0H3TbrVp0KDUeochbI3FgobPbEfIbucU9rVpcH250If9lD3URFDEbuglbH3pdFDobucXRrVpOHbo6sVPbGCtOHbo6ocQSJfIMJ2edJZM9pSoPpRUhFCegGnw9pSoPpS48FRUfGCQlrDp1HZA9p25OHgieIf8goZFiHZP9pRsPsWTPsWTgonxREC5SFf9RHz0gJnpaHgtlEDxeqWoNtyPMsR41qyI|Bottom|Yes|1val|Skip|Sleep|0val|copied|once|All|casterror|castdevice|__storage_test__|vZIMFfelHV1RJCQevyJNH256FDpOpRUfGCQlvyIcsWTPsWTPpRU0IfYNI2FOIf09p3xREC5SHZY0FyMRrVTSrcAipS48IZY0GVUdvyJtszXNuzdQszX2tyP3rcXRtyUssyP3rcXRtyUssV44tSAltRUssV44tSAltbUssyP1rcM3tyUsszXNuzdQszX2tyP1rcM3tyUstR43sWw1sWw4tRPQrcA4uWs4uWs1oXP3rcIPtWAPtWM3rWXNtWXQtcXQtcAMzWMNtWXQtcXQtcAlsV43sWw1sWw4tSXMzWMNtzM4sSM4sSAlsV43sWw1sWw4tSXMzWX0rco5tzw5tzXltb40szX2szX2tyUsszwNscd1tWd1syP2rcAMzWX0rco5tzw5tzXltb41uWMSuWMStyUsuV41uWMSuWMStyPQsb4RuzA0uzAQoXP4rcwQszEQszE1rWXRrco5tzw5tzXMzWINtST0tzT0uWIlszXNtzM4sSM4sRUstR43sWw1sWw4tRPQsy40szX2szX3oXPQsy45uzXQszE1rWINszo1oYhgoZFiHZP9pRtfFfFfFfEgDV8|roll|wkdt|iosv|obPbECt0GC9NochbHfB4JVologx5IZAbubpSJfIbrVpSE2YlFyo6sy4RrVpPH3tiJZeOHbo6ogpiF2a0obPbHCYRF2eNochbsVTQtyTSsVTPobPbGCtOHgtcH2QOIbo6ofFfFfFfFbp9rVpcH250If9lD3thEDpeoci7of9RFZBRochQtRPbH24bucTlofecH24bubo8I3FgonJiFnxhvyIRsVIMGZBiF2a0vyIRsVI|isfullscreen|nomobile|vZIMJnpaHgtfH3pmvyJ0IfYNI2QaJZAhsyPMsRdgvcQPEDxhoZw9p00QsV41sco3tzTSrWXRrcs0uWwQscMMzWXPrcARscI1sWsluy4SsWsSuzwPsyUWty41sSE1uWE0uVP5rcXQuzAPuWd4oWoNtzs0uWT5uWdlszXNsSM5tcd4syTPrWXSrcdQscASsWAMwSTltR45szA5scAQuyT1rcoRtcd2uWI3rWsNszdRtSX1sSEMszTNtzoRtSAPsRPSrcXSuzM2sWXMzWXPrcARscI1sWslsV4QszI2tWIPtzdMzWX4rcTPsSA4szMltb4RsSsPscd5sRUsszTNtzoRtSAPsRPQsb4StWM0szo4oYhgoZFiHZP9pRtfFfFfFfEgDV8|Previous|Copied|300000|ads|borderRight|vZIMJnpaHgtfH3pmvyJ0IfYNI2QaJZAhsbPMsRdgvcQPEDxhoZw9p00PrWTMzWX2rWTMzWX2rWoMzWTlsbUssVPPoYhMzzTltbUsszEltbUsszEluVUssVP4oXPPrWEMCbUtsVPQsbUsszElszoMzWX2rWX0oXPPrWX0oXPPrWXRoYhgoZFiHZP9pRtfFfFfFfEgDV8|obPbECt0GC9NochbIZQaKCQiI3wbrVpPH3tiJZeOHbo6ofQeFgwbrVpmEDpgGC4buboPoWTMsVT2obPbEfIbucXlogtcECQeochQrcAlogx5IZAbubpSJfIbrVpaHfemEDxiH24bubpPH3tiJZeOHbolofpgIZYdFZeNFRo6ocsMsRTSoWsbrVpbF2XbucTNtVPbEfJaH3FeIbo6sV44rVp0GDTbucU9rVpcH250If9lD2F1HZPbuglbH3pdFDobucX0rVpOHbo6syPbGCtOHbo6ocQSJfIMJ2edJZM9pSoPpRUhFCegGnw9pSoPpS48FRUfGCQlrDp1HZA9p25OHgieIf8gonxREC5SFf9RHz0gJnpaHgtlEDxeqWXloWXipS48IZY0GVUdvyJttb43sWE0sWMStyPPoXP2rcIPtcwPuWs1rWXNtSAQuzd1sSsMzWoNuzM2uzI1uzElsy43tzX5uzASsRUstR4Sscw1tcwRtyP2rcT5tcd0sSI0oXP2rcT4tST4tcXQrWINsSs1sWoPtWwMzWXNtSw5tWd3uWslsb45uzXRtWTPsbUssy43tWd0uzI4sRP2rcIQtzd4scT5oXPPrWENtSX1uzMRsWdMzWTlsVUstb43sWE0sWMStyPPoYhMzzX4rWTMzWX4rWENtSX1uzMRsWdMzWX2rco1sWAPscoltb43szA5uWoPuyUsszENscAPtzTRsbPRrcd5szo0sWTRoXPQsy45szX3tWI2rWINsSs1sWoPtWwMzWXPrcE3tWo2uzwltb4PuzE5tWs3tVUsszANsWXSsWo0rWXNtSAQuzd1sSsMzWXQrco5sSA5szIlsy43tzX5uzASsRUsszXNscdStzdQtRPPoXPQuVPPoYhMzzENsWM3sWM2szXlszTNtcE0uzI5tbUstR4Sscw1tcwRtyPQsy45sWsPtzESoXPRrcd4tzMPuzESrWX2rco0uWTPtWIMzWENtST2tWT4sSAlszENscw4sWT0tRUstb43sWE0sWMStyPQuVUssVPQuVUssVPQsy4RuWwPszI5oXPQrcI0uzw5tSMSrWXQrco4tWTQtSdMzWXNtSw5tWd3uWslszANsWT4tSEMzWENsWM3sWM2szXlszTNtcE0uzI5tbUGoX0Qsy45szX3tWI2rWXPrcE2tWd3uzEMzWX2rco1sWAPscolszANsWT4tSEMzWX2rco1sWAPscolszXNscM0sWX3uyUsszMlszXNscM0sWX3uyUsszMlszMMzWXQrco5sSA5szIlszMMzWXQrco5sSA5szIlszENscw4sWT0tRUsszANsWXSsWo0rWX2rco0uWTPtWIMzWXPrcE3tWo2uzwlszXNuzTSsWA2sRUsszXNuzXQtSw3tbPQsV42tcw5tSd2oYhgoZFiHZP9pRtfFfFfFfEgDV8|Enter|LIVE|Audio|website|advertiser|the|adsinvitation|playlistfolder|obPbGCtOHcobubo8I3FgonJiFnxhvyIRsVIMGZBiF2a0vyIRsVI|clear|Ultra|clipboard|Quad|Super|vZIMFfelHV1RJCQevyJNH256FDpOpRU0IfYNI2FOIf09p3xREC5SHZY0FyMQrVTQqyI|vnUaJZMMFW0gzzTNtcX4szA1uyP3rcsStzTRsWw0oXPPrcEQuWX1tzdlty41uWsPscAQsyUstV4SsSI1uWMRuVP1rcA4sSTRtzXQoXPmsy4Qtzw2sSX5tCAmszwlsy4RsSMPtSE3oXPQrcoStSw3uWXSrV05rcI2uzd2scERFy0QtyUsty41tSAPtcE0sbP0rcs0sSI4sWwRoXP1rcA3tzT2tcwRrWTNtcX5sWs4sSw5oXP3rcsRtWA2tWo1rWTNtcX5sWs4sSw5oXP3rcsRtWA2tWo1rWINsSs1sWoPtWwMzWTNtcX4szA1uyP3rcsStzTRsWw0oYhMzzXPrcE3tWo2uzwltR4SsSAPscT0tVUsszTNtcI0scE5tVPPrcEQuzTSuWs0uyUsszoNtWoStSE3sRPPrcEQuzTSuWs0uyUsszoNtWoStSE3sRP0rcs0sSI4sWwRoXPQtb43tco1scX5rV0QrcT2tzMQtWYerzX0oXPQuVPQrcoSuWT3tcIMzWXSrcE2szo0tzwlty41uWsPscAQsyUsszINsSMPtcI3uVP1rcA4sSTRtzXQoXPQtR4SuWT2tSI4rWINsSs1sWoPtWwMzWXPrcE3tWo2uzwltR4SsSAPscT0tVUGoX0QrcoStSw3uWXSrWX4oXPmsy4PtcA4szwQFy0QtVPQtb43tcX5scsSoXP0rcsSuWI1tWERrWXRrcwQtcd3tWdMzWTNtcX4szA1uyPQsb40szE5tSw5oXPPrcEQuWX1tzdlszTNtcE0uzI5tbUstR4Sscw1tcwRtyPQsV42tcw5tSd2oXP3rcsRtWA2tWo1rWX3rcs4sWd2szIMzWANtzI1sWE2tWolszINsSMPuzEQtRUsty41tSAPtcE0sbPQsR42tzERszd2oXPQrcoStSw3uWXSrWX4oYhMzzX2rcI2scARszdlszMMzWXRrcwRsSI2tSslszsNtcA2scX5tbUsszoNtWoStSE3sRPQtR4SuWT5tcX3oXPQsV42tSwRtcd0rWX3rcs4sWd2szIMzWXPrcE3tWo2uzwlszTNtcE0uzI5tbUsszINsSMPtcI3uVPQsV42tcw5tSd2oXPQtR4SuWT2tSI4rWXRrcwQtcd3tWdMzWXSrcE2szo0tzwlszoNtWX2uzI0uyUsszMlszENtSEQuzoSsRUsszENtSERtzoQuyPQuVUGpRUfGCQlvyIcFfFfFfFfp1POvcQIr2I|1296p|Full|vYPOI3FgvbolofYcJZeOHbo6ofF1HZQSE3peFC4brVpaE3xiH24RochbHf9RHCYlI2tRFCBNobPbJnePFyo6ogt2FRologUOI2e0GC9NochbE29NJnpOHnsmIfegGnwbrVpmEDpgGC4buboPoWXPoWw1oWXPobPbI2taHZAbuboPrcIbLyPbE29NJnpOHY9SJZYRJVo6KRpOIfxeIbo6szAlogUOI2e0GC9NochbE2BNJZBRobPbI2taHZAbubo1obPbH24bucTlofecH24bubo8I3FgonJiFnxhvyIRsVIMGZBiF2a0vyIRsVI|Medium|aaaaaa|Small|Tiny|vnUaJZMMFW0gzzdNuWT5uzs0tWMlsVUWtV40szw0tST1sbPPoWTltV41oWTlszTMwSTlszANtyT0rcwQtWw3sWARrWoPoWdNuWT5uzs0tWMlscTMwSX1rcoPtzs5uWwlscTMszdNtcX5uWE5rWX1rcAMszdNtcX5uWE5rWXPoXsQuy42szd4tcdltV41oWX1rcoPtzs5uWwlsVT5rcMPuzdStWw4rWTMzWdNuWT5uzs0tWMlsVUsuy44sWd5sSw0uVPPoYhMzzINuWw3uzw3tzdlszwNtyUstR44tWI5tWI1uyP1rcAMzWXSrcISsSdPuWslszTMzWINuWw3uzw3tzdlszwNtyUstR44tWI5tWI1uyPQtV41oYhgoZFiHZP9pRtfFfFfFfEgDV8|obPbGCtOHcsbubo8I3FgonJiFnxhvyIRsVIMGZBiF2a0vyIRsVI|983|setPlaybackQuality|marginRight|introtitle|560|disablekb|embedheight|iv_load_policy|default_channel|160||showinfo|vast_timeout|vast_pauseonclick|heartbeatinterval|vast_closeonclick|modestbranding|introtxt|vast_volume|introclosetime|minivis|onPlaybackQualityChange|introskiptime|vast_pauserolltimebreak|vast_pauseroll_limit|yttitle|vast_preroll_counter|ytReady|onStateChange|onReady|vast_prerolltbimp|vast_prerolltimebreak|vast_preroll_andlimit|vast_preroll_limit|introclickable|vast_title|html5|playerapiid|vast_pauserolltbimp|setioff|2002||readAsText|vast_impression|vast_click|vast_skip|errortimeout|nameofdashquality|sub_settings|dashlowquality|dashcookies|dashdebug|16x9|poster_floatbgcolor|poster_floatheight|ga_proc|sharetitle|enablejsapi|shareiconscaleover|playerVars|embedwidth|embedsize|fimg|shareiconmargin|videoId|shareiconscale|f2img|API|youtube_iframe_api|onYouTubeIframeAPIReady|sharetop||ytcl1|ytqp|midrollpoint|vast_pauseroll_counter|poster_floatposition|tiny|hd1080|loadVideoById|hd720|large|vpaid_timeout2|medium|setSize|setPlaybackRate|vast_resound|getPlaybackQuality|getAvailableQualityLevels|vast_progressbgcolor|sub_all_title|sub_allmy|getCurrentTime|vpaid_timeout||vast_xcolor|vast_unmutehover|vast_default_volume|vast_unmutebutcolor|vast_unmutebutonce|vast_openclick|||getVideoLoadedFraction|unMute|vast_linktxtonmobile|vast_progresscolor|vast_volumecolor|vast_volumebgcolor|vast_preroll_vmap|vast_pauseroll_vmap|vast_postroll_vmap|vast_midroll_vmap|vpaid_slotinframe|eventstrackervast|vast_postroll_limit|ytlog|partnerpostrollor|partnermidrollor|vast_introtimebreak|vast_midrolltbimp|vast_midrolltimebreak|ytEnded|WEBVTT|subtitle_errdel|vast_playroll_counter|vast_playroll_limit|Dialogue|vast_postroll_counter|vast_postrolltbimp|vast_postrolltimebreak|constrols|vast_introtbimp|customyterrors|partnerpauserollor|unavailable|ytError|vast_xbgcolor|CUED|vast_titlecolor|partnerprerollor|BUFFERING|vast_linktxtbgcolor|PAUSED|unstarted|vast_titlebgcolor|vast_skipcolor|vast_skipbgcolor|vast_linktxtcolor|poster_floatwidth|PluginSubword|ffc7d1|normalonclick|547|483|416|344|vast_midroll_counter|267|paddingbottom|185|096|Verdana|003|007|001|usernew|redirectplaylist|659|036|stripsspace|914|992|029|f2parent|041|stripsw|tippmargin|019|996|tipa|984|981|988|606|brdla|vast_unmutebutbgcolor|985|62de50|962|971|faed54|979|feba54|bggrclr|897|994|997|e8bbff|775|885|915|918|72ccf8|250|747|action_back|vast_remove|705|vast_impressions_all|clr_sepia|clr_saturate|clr_brightness|874|clr_contrast|brdlc|785|818|brdl|848|pointcolor|ffce00|poster_floatmargin|posters|sub_fonted|postertitleonhover|177|posterwidth|shuffle8|posterheight|444444|historybgaover|customimage|89840c4c00a00b2522dfd80fcfa283e0|484202923313w331w371e25202o193v3c1b3o001z1m252z2o2m252c2o2m2w23381e232z1g2c29361a2v3s1z2z1m360w1z2z39213v2z29361a2v3s1z3z1m2z162t3z2n1z2038231q25332c142z2v232c1w3s271z1z38231q25333c142z261w101z141z133v392o172z341s3s2t2z3n1z3u242c133v392o172z34101z1m231z3u261z3u261z3u261z3u2o2z29213v2c29213v29213v252y393v2c1z1z2233143o00302c293w121m2c1b3o0z3z2k221z3z1m2z1z1z3s271z2z1d393v2c181w10302v3u2s333c101z1c1m1z133v27211t302o12232520332c1626332z1d1e182c142z261w1z101z303s271z101m3s350z2z223314331g1f3d1j1e1k1d1f1c1o3d1j2e1o3d1f3e183e1i1e1i1c1f2d1e3c1s3d1i2c1t3c1x2c1u2e1y2c1r2c1y2c1q3d1k2c1s2c162c1s3c1p2c1u2c1q2c1r1c1g2c1s2c142c1u2c1x2c1s2c192c1u2e1e2c1r3e1j2c1q2c1u2c1s1e122c1u2e1p2c1s2c1z2c1s2c1g2c1s3c1t2c1u2e1u2c1t3c1r2c1u2e1g2c1r2c1x2c1s2d1y2c1u2c162c1s2e1v2c1u2e1b2c1q1d162c1s3e1v2c1s3d172c1s3d172c1s1d182c1q3e1z2c1q3d192c1s3c1g2c1s2d152c1u3d142c1q2d172c1r3d1o2c1s2d172c1u3d122c1s3d192c1s3c1c2c1q2d172c1u3d1b2c1s3d152c1t3d1c2c1q3d172c1q3e1b2c1s2d152c1t3d1x2c1s3d162c1s3e1a2c1q2d182c1u3e1t2c1s3d152c1s3d192c1q3d1u2c1q2c1u2c1f1c1f3d1g1e1e3e1u1d142e1q2e1d1c1g1d121d143d1e1c1g1c1q2e1q3e1c1c1h3c1c2d191d1j2d181d103c191d1d1e1g3d1g2c1d3d1s3e1i1c1o1c1i1d1f3d1c1c1f1c1b1d1k1d163d1c3c181d1g3e141d1f1c121c181c1a1c1a1c183e1p1e1q2d1b1d1b1d1k3d1c1d1e1e1d1d1p3c102c141e1y1c1c3d1c1d1i3e1t2e1q2c1d1d1a3e1q1c1s3c1e3d1e3e141d1g1e1s1d1e1c1u1d1h1d1a3c1c1e1i1c123e1c1d1e1e172c1s2c1u1e1u2c1r1c1d2c1q2e102c1t2c1d2c1t2e1t2c1u3c1q2c1s3e1v2c1q2c1t2c1t2c1w2c1f2d1o2c1s1c1h2c1r2c1t2c1s2c1j2c1t2e1s2c1f3c1p2d1t3c142c10121r103c161c1k3e1e2e1d3d122c1i3d1a1e1e1d1o2e1h1c123e1c1c1p3e122c1s2e1r2c1s2c1x2c1s2c1e2c1u3c1t2c1s2e1u2c1r2c1t2c1u2e1e2c1r2c1v2c1u2d1y2c1s2c162c1q2e1x2c1u2e192c1q1d142c1s2c1z2c1q1e1e2c1s1c1u2c1t2c1i2c1s2c142c1s2e1p2c1q1d172c1s2e1p2c1u1e1v2c1q2e1w2c1s3d102c1q2c1u2c1q1d1k2c1r2e1t2c1r3e1e2c1s1d192c1s3e162c1q3d192c1t3e142c1q1d152c1u3d1c2c1q2d152c1s3e1g2c1s3d172c1s3d1b2c1s3d182c1s3e1c2c1q3d172c1s3d152c1q2d152c1u3c1a2c1q3d162c1q3d1a2c1s3d162c1q3d182c1s1d172c1r3d192c1q3d192c1s3d132c1q2d152c1u3e1w2c1q1d152c1q3d1b2c1s3d152c1q3c1x2c1s2c1w2c1i1c103d1j1e1k1d143e101e122e1q2e1c3d143e1y3e1g1d1b3c1d1d161e1d1d191d1o3d1c3e1g3d1e3c1b1c1d1c1c1e1p3c1d1c163d111e1h2c1b1d1i3d1d1c1e2c1s1e1j3e1b3c1h3c1d2d1b3e1j1d161c102c172d1b1d1b1d191d191c161c1d3d183d133c1g1d1q3d1f1e1c3e1d1c1d3c191c191d1r1e1q3e101c1s1d143d1c3d151e1f1d1q2d1j2e1p1c183e161d1k3e1d1c1h3c1d1c1e2c1d1e1h2c1i1e1d3d1d2c122c1f2c1s1c132c1q2d1f2c1s1e1i2c1q2d1r2c122e1k2c1s3c1w2c1s1c1d2c1s2e1o2c1s2c1d2c1v3c1p2c1s2c1h2c1q2e152c1s2e1r2c1s1e1k2c1y2c143c192d1x2c171d2g2d1e3e1c1c1g3c1k1e1j1d1k1c1d3c1e1d1e1d1g2c1h1e1b2c132c1s1c1o2c1t2c152c1q1c1j2c1s3e1f2c1u1c1c2c1q3e1g2c1u1d1x2c1r2e1h2c1u2e1t2c1u3e1x2c1q2c1c2c1u1c1x2c1s2c1f2c1s1c1u2c1s2c1u2c1r2c102c1u2c1z2c1r2d1s2c1s1c152c1t2e1w2c1s2c152c1t3e1u2c1s2c1i2c1u1c1z2c1u1c1v2c1q3d1w2c1t2c1t2c1q2d152c1t3c1z2c1s3d162c1q3c1b2c1s3d192c1s3e1b2c1s3d182c1s3d1b2c1q2d172c1t3d1z2c1q1d152c1s3c1k2c1s3d152c1q3d162c1s1d192c1q3d132c1s3d182c1s3d1t2c1q3d192c1s3e1g2c1q2d172c1s3d1b2c1s3d152c1q3c1q2c1s3d192c1s3d1r2c1s3d182c1u3e1w2c1q3d172c1s3d192c1q3d152c1s2c1u2c1s2e1d1c103e193d1q1c1p3d1p3b1b3d1c3c1b2c1p3c1w2d1i3e1c1c1c1e1p3c1b1c163e131e1h2c1b1d1i1e1d1c1g2c1s1e1c3e1d1c1h3c1d2d1b3e1j3d161c102c191d1c1e1g3d1e2c1d3d1s1d1k3c1o1c1g1e1f1e1c2d1k3e1k1d1i3e1i3e1c3d1c3e1j3e1f3e121c1c2e1f3d1s3c1b1c1d1c1i2d121e143d1d2d191e1h3b1s2d1s1d1d3c1b2e141d1o1e1a1e1g3c1h1c1c2e1c3c1x3c102c171d1s2d1b3d1w1e1q2e1d3c1y2c1t2e1h2c1s2e1u2c1s2c162c1t3e1v2c1r1c142c1r1c172c1r2c1g2c1u2d1h2c1u1e1d2c1r2e183c1u2e182c1s1e1q2c1s3c1f2c1s2e172c1q2d1z2d1r2c172d1r3c121j1f2f1b1b1g1r2j2q2d1s141|current_channel|6d1cbm3o1v3s221a271u3b3v2z1b3q01101m25212q193v2c1k1b3v1z1i1c21173s3w1121141z133x3b2o1720261u3s2t202p113u242c153x392o1722261z2z1m252e1g2c29381y2v3s1z121o260w1z122b213v2z2b381w2v3s11121m2c162v212n1z203a251q25332e162z2v232e182s271z113a231q25352e142z261y1c2s271w2u29162s271u2u271o2c113w261z1z3w281z3u243u2o3o0z1z212b3w121m272e2o1z1x23141z101m272e2o2m35222q1z2z2z2b233v2026163q0z1c1c2v2e292o122u11101d2z1q112z3823373w253u253t1536211z113a371z2z161j1z1c1m2e182t2z2p2e2b213v2z2q1i27312c2b3y121m121v1e1d1d1e1e1h1c122d1m1e1a2e1p1e1a3e181e171g1i1c1k1f1f2c1s1d1t2e1r2e1t2e1s2c1w2c1u2g1c2c1u1e1z2c1s3c1t2e1s2c142e1s2e1p2c1w1e1i2c1u3e1h2c1u2d112e1q3c1z2e1t1d1u2c1u1f1s2c1s2e1u2c1t3e1x2e1s2c1v2e1u2e192c1w1f1w2c1t2g1q2c1s2d102e1r2e1o2e1t1c1u2c1v2e1q2c1s2e1y2c1s3c1b2e1s2e102e1s3c172c1v3g1r2c1s2f172c1s3d1z2e1q3d172e1s3d1b2c1u2f172c1s3f1a2c1s1d1b2e1r3e162e1s3d182c1u3f1t2c1s2f172c1t3d1e2e1q3d182e1s3d142c1u3f172c1u3f1a2c1s3d1a2e1q3d1h2e1s1d192c1u3f1b2c1s3f172c1s3d1v2e1q2d192e1s3d162c1u3f152c1t3e1i2c1s2d192e1q3e192e1s3d172c1w2e1s2c1s2e1e1c1f1c1r1g1a1c1k2f1d3c1b2c161e101e143f1s3d1c1e1w1f1u2d1j2f181d121b1e1g1c3e1p1e1b3c1c3d1l3f113e1o1e1i1d1h3d1i2e161c1c2f161e1s1d1l3e1d1c1g3g141d1h3e1b1f1d3d1s1g1m3c1c1c1e3f1d3d1c3f1f3d1c3d1e2f192d1e3f1e3d1b1e1u1e1d1c141g1s2e1f3d1t3d1d2d1c1e1f1c181c1e2g192c1c1g1b3d1g2c1e2e1d1e1k1e1d3c1g1d1i2e1h1d1t2e1s1d1j3c1f1f161c1d3g1i1d1f1c1i3f1r2e1j2e1u2d1i2c1u1g1y2c1t3g1m2c1u1e1h2f1s2e1t2e1u2c1s2c1v2g132c1t2g1l2c1s2e1f1e1s2e1q2e1t1e1o2c1w2f1y2c1t1e1k2c1s2e1e1e142d1t2f193c1f321u2i3e173d1q1e191c133g123c121e1i3f171e1e2g1k1c1v3e1i3g152c1t3g1v2c1s2c1v2e1u2e192e1u1d1w2c1t2g1q2c1s2f1y2c1r2e1l2e1t1c1u2e1t2c1q2c1s2e1y2c1s3e192c1s2e102e1s3c172e1t3e1x2c1s2e1w2c1u1e1l2c1r2c152e1s1c1o2e1s3e1d2c1u2e1e2c1s3g1g2c1s2d1x2e1t2e1j2e1u2e1r2c1u3g1z2c1s2e1c2c1s1c1x2e1u2c1h2e1s1d162c1u3f1a2c1s3f192c1q3d1a2e1s3d192e1u3d1j2c1s3f192c1t3e1d2c1q1d182e1u3e152e1s3d152c1t3f1d2c1s3f182c1s3e102e1s3d182e1s3d172c1s3f182c1s3e172c1q3d172e1s3c1d2e1s3d152c1s3f1o2c1s3f192c1s3d1f2e1s3d172e1s3d1h2c1s2f182c1u3f1e2c1q1d172e1s3d1b2e1s2c1x2c1s2e1k1c1h3e1f1d1c1c1h3d1c3d1c3e1b2c121c103d1d2e181f191e1d1e1g3f1g3c1c3f1f2e1i1c1l1e1i1d1h1g1c3c1f1c1b2f1k3d183f1f3c181d1g3f141e1h3e121e1u2d1j1f181c121d1d3e1c3d1m1e1b3c1c3g1j3e1c3d1e3g1e3d1e3e1f3d1d1d1k3f1k3d1w1g142c1c1c1b1e1d1e1h3f1m3c1w3e1f2f132c1a3f142d1d3c1g1e1i3c1c1e1s2e1k1c1c2g1b3d143g1d1e1g1d1k1f1h3c121g143c181d1r1g1b3c1e1e183c1s1c1x2e1t3c1q2e1s1c1w2c1u1f1j2c1u2g1f3c1r1e152e1t2c1r2e1s1c1v2c1s2g1y2c1u1g1k2c1s2c1w2e1u1e1o2e1s3d1f2c1t2g1t2c1s1e1k2c143c1t3e192d1h141s1d1e1e1i3g1u1e1j1f1b1c1h1d1b1f1f1d1d1e1j1c1s1e1q3e1s3d1e2e1s2c1g2c1u3e1z2c1u1e1v2c1s1d1t2e1t1c1g2e1s1d1v2c1v2e1p2c1u1g1v2c1r2c172e1u2c1y2e1s3c1c2c1w2e1r2c1s1f162c1q2c1w2e1s2e1k2e1t3c1x2c1w2g1y2c1t2e1y2c1q3d1m2e1s2c182e1s3c1p2c1w2e1q2c1t1e1g2c1s2c162e1u2c1z2e1s2c192c1w2g1e2c1t3g1j2c1q2d1a2e1s3c1c2e1s1d172c1u3g1b2c1s3f182c1r3c1b2e1s3d172e1s3c1f2c1u2f182c1u3e1d2c1q1d1b2e1s3c1h2e1s3d162c1w3f192c1s3f192c1q3c112e1s2d192e1s3d1c2c1u1f192c1s3f1c2c1q1d192e1t3e1b2e1s2d162c1u3f182c1s2f172c1r3c1l2e1s2d182e1s3d172c1u3f172c1s3f1t2c1q2c1w2e1f1c1f3d143e1d2d1a2g1c2e1c1e1i1e1k3e102g1c2c1c1g1c1e1f1c1d2f1k1e183f1d3c181e1i3g141e1h3f121e1u2d1l3f183c121d1f1d1c3e1r1e1b3c1d3f1j3d111e1q1e1i1e1h3f1g2c161c1e2f161e1s1f1j3c161c1a1e181c181e1s1e1h1c1c1e1a1e123d1f1e1a1c1k2f1c3d1f3e121e123e1f3e1c3e1e3f1j1e1d2c1b2f141d1c1e1f3c1d2d1k3f1a1e1g1f1f1e1i1e1j2e1s3e1j3f152d1c3e162f1e2e1c1e1f2c1y2c1w1g1y2c1t2g1f2c1s3c1h2e1u2c152e1k3c1f2c1u3f1u2c1s1f1v2c1r1c1u2e1u1c1v2e1f3c1s2c1v3g1t2c1t2e1l2c1s1c1k2e1t3c1d2e1f2c1t2c1y3f162c1h191m1b1q1o1r1f2t1b2t1l2d14|speed4live|999999|888888|black|Input|settings5action|settings5|settings4action|PluginUpload|settings4|settings3action|clone|170|settings3|settings2action|settings1action|settings1|titlecolor|222222|2px|sub_drag|pointa|957|hlsqhsort|857|275|372|pjslng_sub_sizeproc|296|1006|clr_|1005|unescape|scrollTo|slidespeed|883|pointw|432|home|hidearrow|line_play|48a921s2z2a29313716263q0z2z1m27312o193v3e1d3o0z1z2m3q0z202k3x3u35242t323p1z2038251s25332z16212v232z1c3u271z1z3a251q2533211620261w1112141z133x2b2o172z261u3s2t2z2p113u242c153x292o1731261z101m253e1g2c2938182v3s10111o260w10113b213v2z3b38162v3s12111m2c162v3b213v29233x39213v2b233v1z1z3u291z202s291u2s271p2q1i25202o3e1z2112193x111z202235162z2o193x111i1t33211d202n2c113w2m2z1o1g272z1o1m25111q253r193124142c1e3e29361a3y2b321v3u2u3q3s37203b3r35202719162z141z121o232c1o11113u242c1d37383v1z1z23121g1b2i1a3d1k1e1j1f1j3c161e1v3c1c2e1b3f143e1k3g1m1c1w1e121f172c1r2e122c1u2c1z2e1t2d1s2e1u1c152c1t2g1y2c1s2e172c1t3e1u2e1u2c1i2e1w1c1z2c1u1e1x2c1q3f1y2c1t2c1t2e1s2d152e1v2c1u2c1s2e1e2c1s2g1v2c1u2d1r2e1s3e1v2e1u2e142c1u2g1y2c1r3g112c1s2c1s2e1s2e1t2e1v2c1v2c1t2e1v2c1q3f1y2c1u3c1q2e1s3e1f2e1u2d192c1s3f102c1q2f1a2c1s3d1h2e1s1d152e1u3e102c1s3f172c1s3f1w2c1s3d192e1s3d1r2e1u2d172c1u3f1v2c1q3f1b2c1t3c1c2e1s3d162e1w3d1y2c1s3f192c1s3f1a2c1s1d192e1u3d1c2e1u3d172c1s3g1r2c1q2f1b2c1s3d1c2e1s3d172e1u3e1w2c1s1f172c1q3f1b2c1s3d172e1s3d192e1u2c1u2c1s1e1f1c192f1g3e1c1c1i1g1p3e1p3d1e3d1c3d1i2f123d1j2f1e2d1p1c1b3e1c3e1a1f1r1e1c2e1q3g1c1c1d1f1e3c1d2d161g1s1d191f1e3d1c1e1g3f1g2c1d1e1f3c1c1e1m3e1c1c163f153e1h2c1b1f1k1e1b1e1i3e1j1e1j3g1j1e121f1g3d1p1e1m1g1i1e192e1e1e1h3b1d2f1c1c1q2g1e3d1f1d123e1c3d1d1e1r3d1o3c1d3g181e1b1e143c1b1d191f1f1d1b1f1l1e1c2c1l2e1c1c1d1e1f3d1c1c181d1c1e1f1f1v2c1t1c1h2e1u1e1k2e1u2c1v2c1t1g1v2c1r1e1x2c1u2d182e1t2e132e1u3c1s2c1t1e1w2c1s1e1v2c1t2c1f2e1s2e1r2e1u2e1u2c1t1e1y2c1r3e113d1r2c173f1u1c172j1i143e1d2f183e1p3c1c3e1u3e181g1i3c1h1c1q1e1h2c161d1g3d122c1w2g1t2c1s2f1r2c1q3e1z2e1s2e122e1u2e1w2c1v2g1z2c1q1e1s2c1q2e1x2e1t2c1t2e1t2c1t2c1u3f1w2c1s3e1q2c1q3e1j2e1s2c1x2e1s2c1c2c1u1e1i2c1q3e1z2c1s2c1x2e1u1d1p2e1t1c1e2c1u1f1x2c1r2e1m2c1s1e1x2e1t2c132e1u2c1w2c1u3e1e2c1s2e1r2c1q1d182e1u3c1e2e1s3d172c1w3g162c1q3f172c1q3d1d2e1s1d172e1s3d1t2c1u3f192c1q3e182c1q3d1b2e1u3e192e1s3d162c1u3f182c1q3f192c1s3d1x2e1s3d162e1s3c1a2c1u3f192c1r3g1d2c1q3d1b2e1s3e1i2e1s2d152c1w3g1c2c1q3f192c1s3c1s2e1s1d152e1t3c1g2c1u3f172c1q3f1e2c1q3d192e1s2c1x2e1s1c1i1c1a3f1k1e1h1g1f1c1g1d1r3g1r3b1d3g1f1d193e1j3g133e1j1e1i1d1f1d1i3e181c1d1f161e1d1d1l3e1d1c1e3f141d1f3e1b3f1c3d1q1g1m3c1d1c1f3f1s2e1k1e1b3c1d3d1e1e1p1e1d1g1j3e1b1c1u1f1p1e1k1g1m1e1k1e1e3g1k3e161e181c122d1f3g1d1c1k3e1f1d1e1d161g1c2c1e3e1d3d1d3d1e3e1i3c101e161e1i1d1j2e1s1e1o3f1f3e163e1m1g151e1i1e1f1c1b3d1u3e1c3d1q2g1l3c1b1c1y3e1z2c1s2g1h2c1s2c1t2e1s2d1j2e1t1c1t2c1u1f1p2c1r3f102c1r2e1j2e1u2e1r2e1s2e1r2c1w1f172c1s2f1v2c1s2c1y2e1s1e1y2e1s2d1c2c1u1e1r3c132f1r3c1p121g2v1p1e1a1e1k2e141e1g3g1h1d1c3g141d1i1e1l1g1t2c1g2g1w2c1r1e1i2e1u1c1s2e1t2c1k2c1w2e162c1q2g1m2c1s1d1b2e1u2e1k2e1u2e1x2c1u2g1y2c1q3f102c1s2c1y2e1s1d1i2e1r2e1v2c1v3g1g2c1q2e1u2c1s1d1t2e1t2e1r2e1s2c1w2c1u2g1e2c1s1e1z2c1s3c1t2e1u2c122e1s2e1p2c1w1e1k2c1s3e1h2c1u2d112e1s3c1x2e1t1d1u2c1u1f172c1r3e162c1s1d1a2e1u3d162e1s1d172c1u3e1b2c1q3f172c1u3e1v2e1s1d172e1s3d1b2c1u3f172c1q3g162c1s1d1b2e1s3d1e2e1s3d172c1w3f142c1q3f192c1s3d112e1s3d172e1s3e1w2c1u3f192c1r3f1e2c1s3d192e1s3c1c2e1s3d182c1v3f192c1q1f172c1t3c1b2e1s3d152e1s3d192c1u2e1u2c1q2e1w1c1f1c143e161c1i3g1b1c141c141f141e1q3e1b1c1q1c1a3e1c1c1e3g141e1h3e1b1g1c3d1q1g1m3c1d1c1e3f1s2d1k1e1b3c1d3d1e3e1p1e1d2g1c3e1c1c1u1f1c3c1b2f161e1s1d1d1g1j3d1d1g1g3d1g2c1e1e1q3d1a3f1j3d183d162e1a1c1d3f1f3d183e1e3g1p3c101f141c1e1c1f3f1s3d1g1g1f1e1p1e1f1e143c1q3f1m3c181c1v3e1c3e1e1g1i3d171e1g3e1o1c1d1e1f2c1s1d1e3g1p1e1d3e1k1e1p3c141f1t2c1w2e1s2c1u2c1v3g1u2c1s1e152c1s3e1f1e1t1c1h2e1u2e1w2c1w2e1u2c1q2e1f2c1s2c1q1e102e1y2e1s2e1f2c1v1e172c1s1g1s2c1s1c1z1e1v2c1p2e1z3d181c141l1q2b2b2f1f2r1t2o1g141m|sub_move|PluginDroplist|sleep2options|_timer|sleepoptions|offsetoptions|pjslng_|contains|pressed_|hidesmoothly|dropnohide|accept|onchange|seekstep|Destroyed|videosize|to_right|ndash|grdt|hdn|showvolmobile|nativemobile|hdbfmb|hdbfdt|noset|lrpp|reset|customwidth|wproc|450|02|isOn|tskp|cancelskip|cancel|seektome|customspeeds|dashInterval|ssfly|exitPictureInPicture|cert|webkitShowPlaybackTargetPicker|webkitSupportsPresentationMode|pictureInPictureEnabled|disablePictureInPicture|webkitPresentationMode|pictureInPictureElement|requestPictureInPicture|setAudio|kind|setWsQuality|setWsAudioTrack|level|getDash|fillvideo|HlsSubTrack|subtrack|playbackRate|childNodes|seekiconbut|bezier|availability|hideonyoutube|hidenormscreen|hideonunmute|hideonlive|hideonmeta|hidemini|hidenomini|hidenoab|hideab|pjs_cast_button_|hideonvod|cast_available|pauseonhover|showduration|showboth|separator|buffering|SettingsTimer|maxHeight|ShowSettingsBut|hideonleave|hideuntilended|ssdown|dropopen|combined|PluginSettings2|showovr|nohdstt|nohdsttm|showuntilmeta|hideonbar|hidelap|hidesmall|hideall|hideuntilstartedios|hideonend|hideondesktop|hideonmobile|hideunwait|hidewait|hideafterstart|hidelastpl|hide0timestore|hideuntiltext|available|webkitplaybacktargetavailabilitychanged|187|FRAG_PARSING_METADATA|LEVEL_SWITCH|LEVEL_SWITCHED|LEVEL_LOADED|Live|FRAG_CHANGED|fragment|relurl|hlsfdt|fragdata|MANIFEST_LOADED|AUDIO_TRACKS_UPDATED|AUDIO_TRACK_SWITCHING|subtitleDisplay|hlssubtracks|FRAG_LOADED|SUBTITLE_TRACKS_UPDATED|subtitleTracks|ERROR|networkError|MANIFEST_PARSED|attached|hlsermd|microsoft|DASH|autoStartLoad|enableWorker||manifestLoadPolicy|fragLoadPolicy|hlscltps|capLevelToPlayerSize|widevine|playready|MEDIA_ATTACHED|clearkey|licenseUrl|serverCertificateUrl|emeEnabled|drmSystems|xhrSetup|withCredentials|prehls|attachMedia|mediaError|recoverMediaError|WebKitPlaybackTargetAvailabilityEvent|request|playtry|playOk|playunmute|playError|interrupted|automute|playError2||autoplay_denied|fix|AudioTrack|1500|hlsforce|webkitAudioContext|createMediaElementSource|createGain|destination|autoLevelEnabled|cast|disabled||Infinity|hlsaudiolang|hls_error|hlsdrmfps|Level|regress|PluginWS|wsconfig|sleep|watching|loadstart|loadeddata|hlsdrmfpl|webkitbeginfullscreen|firstLevel|webkitDisplayingFullscreen|onpause|wake|2000px|nativeaudio|WebKitMediaSource|WebKitSourceBuffer|appendBuffer|hlsaddbitrate|enter|189|flussonic|visited|inset|querySelector|pjscolor|backface|manipulation|origin|indent|outline|hover|childList|class|oncontextmenu|ContextMenu|rc_custom|rc_nobrand|uppercase|99999|rmright|ref|borderin|observe|playback|require|emptyremove|answer|hash|Cross|getDate|srvsga|88484718|allowLinker|autoLink|oframe|eventCategory|eventAction|eventLabel|word|container_w_procent|select|35px|07|transbg|15em|panel|intvsbl|posterstime|mobtch1|nfscldr|nfsclios|nombclck|seeksidesmob|layerX|offsetX|change2playlist_bottom|pstrvd|PluginRounding|_vdpsrt|pstrvc|Logo|Orientation|webkitFullscreenElement|webkitIsFullScreen|mozFullScreen|msFullscreenElement|fullscreenElement|passonstart|PluginMediaTags|autoplaynomobiletv|PluginQuiz|rafinit|sessid|sleeptimer0|offsettimerinit|TimeStore|startvisibility|PluginMini|PluginBlock|quizes|mouseenter|PluginEffects|mouseleave|orientationchange|move|keyup|keydown|MSFullscreenChange|fullscreenchange|Local|ChromeCast|pstrcnfg|viewinit|bufferInterval|tipmarginright|iconmarginleft|iconmarginright|rotateonclick|tippointeralign|180|tipmargintop|tipmarginbottom|tipmarginleft|hidesec2|iconmargintop|scale0|control_time|control_duration|triangle|control_mute|volume_element|slider|hdbfnr|hdbffs|iconmarginbottom|clickmarginright|Color|_text|bufferDeg|countdown|counter|PluginCountdown|iconspress|link2|ontop2|PlgnCntrlTmln|webp|SVG|clickmarginleft|_icon|ontouchend|PluginHdIcon|flipx|flipy|touch_|_bg|bggrl|bggrc|running|alphas|pljscom|mrgnp|offsetwidth|roundingver_final|pjs_thumbnail_|200000|shape|grdth|grdta|grdtc|brdclr|235|brdtop|iVBORw0KGgoAAAANSUhEUgAAAAEAAADGCAYAAAAT|OqFAAAAdklEQVQoz42QQQ7AIAgEF|kbq|RWAlnQyyazA4aoAB4FsBSA|bFjuF1EOL7VbrIrBuusmrt4ZZORfb6ehbWdnRHEIiITaEUKa5EJqUakRSaEYBJSCY2dEstQY7AuxahwXFrvZmWl2rh4JZ07z9dLtesfNj5q0FU3A5ObbwAAAABJRU5ErkJggg|DOMContentLoaded|fast|unatpl|hlsdvrtime|134|abg|valuemarginleft|lines1|aload|colorover|valuepaddingtop|valuepaddingbottom|valuepaddingleft|valuepaddingright|valuemargintop|valuemarginbottom|valuemarginright|handlemarginleft|l3v_left|handlemargintop|handlemarginbottom|handshdw|drop|135|225||onmouseup|onmousedown|PlugMediaChannels|playError3|support|AdBlock|water|wid|PluginWater|pjsstat|pjsstatid|PluginStat|Resume|nativeontv|01|Progress|scrnstp|dontseekforward|downself|_self|isOpen|nativenotandroid|PasswordTime|scrollY|2048|192|191|pageXOffset|globalfont|const|redirectblank|mxprc|blnk|nativehlsinedge|openlast|showfrom1file|sess|trkp2|reloadstart|tracking|MarPad|VastImpression|vast_init|crtm|skipimprsd|skipimpessed|bgload2|bgload|VpaidStarted|3600000|VastShow|VastReady|vast_ready|VastOverlay|vastbgpreload|tagLive||yandex|vlscrl|heartbeats|webkitSupportsFullscreen|writePl|reloadjustevent|reloadplus|pjsiframed|fileend|outros|iosplbf|issue|webkitEnterFullScreen|webkitExitFullscreen|OpenScroll|wheelDelta||chngwd|crossdomain|0123456789|encode|PluginVastTimeMsg|current_custom|playlist_length|handlemarginright|showvlt|menu1|menu2|menu3|vastnow|cut2|vastinfo|vastpause|vastresume|vaststart|startAd|vastmute|playlist_folders|cut1|vrsn|10000|unfix|timeplay|switchpip|castinit|castend|Active|sscopyright|invert|Courier|Arial|fillStyle|fillText|toDataURL|jpeg|currentfile|vastids|reduce|1000000|NaNpx|number|olor|setProperty|repeating|45deg|control_buffer|same|cssText|||||||||||FindPjsDiv|nodeName|PJSDIV|arguments|substring|async|clk|adsystem|MediaMetadata|vpaid|wrapper0|filetype|getVolume|midroll_time|midrollcrtm|artwork|circle|previoustrack|nexttrack|stylesheet|googleapis|css2|head|swap|renew|redirectparent|startdelay|1920|rldnornd|FloatPosterScale|Audiotrack|Speed|rus|English|eng|customqualities|2160|3840|1440|vast_startdelay|2560|1080|720|New|Seeking|loaderror|tryotherquality|Alternative|reloadtimes|Break|tags|Quality|||||||||||1280|qualitypause|1600p|426|240|854|480|PluginFloatPoster|hqdefault|playlists|nativenodownload|tagcors|crossorigin|crossOrigin|pstrtg|drunchr|ynxnopip|controlsList|42E01E|nodownload|taginframe|complete|nativehlstv|nativehlssafari|nativehlsinsafari|mp4a|avc1|dailymotion|nomedia|Image|MediaPjs|RemoveAll|Created|vast_posterurl|vast_loadtxtd|0001|codecs|createposter|scaledrag|dragging|scaledrag0|error_time|urlmse|EXTINF|showplaylist|vldcntrInterval|finish|vast_dontplay|RemovePassword|alarm|vast_finish|VastRemoveUrl||||vast_error|posterfull||VastError|||EmptyVastUrl|VastInsertOr|finishnormal|Pass|vast_stop|redirectafter|Next|preloading|norootplstart|disablePreload|and2limit|VastInsertAnd".split(
      "|"
    ),
    0,
    {}
  )
);
!(function t(e) {
  var r, i;
  (r = this),
    (i = function () {
      "use strict";
      function r(t, e) {
        var r = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
          var i = Object.getOwnPropertySymbols(t);
          e &&
            (i = i.filter(function (e) {
              return Object.getOwnPropertyDescriptor(t, e).enumerable;
            })),
            r.push.apply(r, i);
        }
        return r;
      }
      function i(t) {
        for (var e = 1; e < arguments.length; e++) {
          var i = null != arguments[e] ? arguments[e] : {};
          e % 2
            ? r(Object(i), !0).forEach(function (e) {
                var r, a, s;
                (r = t),
                  (a = e),
                  (s = i[e]),
                  (a = n(a)) in r
                    ? Object.defineProperty(r, a, {
                        value: s,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                      })
                    : (r[a] = s);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i))
            : r(Object(i)).forEach(function (e) {
                Object.defineProperty(
                  t,
                  e,
                  Object.getOwnPropertyDescriptor(i, e)
                );
              });
        }
        return t;
      }
      function n(t) {
        var e = (function (t, e) {
          if ("object" != typeof t || !t) return t;
          var r = t[Symbol.toPrimitive];
          if (void 0 !== r) {
            var i = r.call(t, e || "default");
            if ("object" != typeof i) return i;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === e ? String : Number)(t);
        })(t, "string");
        return "symbol" == typeof e ? e : String(e);
      }
      function a(t, e) {
        for (var r = 0; r < e.length; r++) {
          var i = e[r];
          (i.enumerable = i.enumerable || !1),
            (i.configurable = !0),
            "value" in i && (i.writable = !0),
            Object.defineProperty(t, n(i.key), i);
        }
      }
      function s(t, e, r) {
        return (
          e && a(t.prototype, e),
          r && a(t, r),
          Object.defineProperty(t, "prototype", { writable: !1 }),
          t
        );
      }
      function o() {
        return (
          (o = Object.assign
            ? Object.assign.bind()
            : function (t) {
                for (var e = 1; e < arguments.length; e++) {
                  var r = arguments[e];
                  for (var i in r)
                    Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                }
                return t;
              }),
          o.apply(this, arguments)
        );
      }
      function l(t, e) {
        (t.prototype = Object.create(e.prototype)),
          (t.prototype.constructor = t),
          h(t, e);
      }
      function u(t) {
        return (
          (u = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (t) {
                return t.__proto__ || Object.getPrototypeOf(t);
              }),
          u(t)
        );
      }
      function h(t, e) {
        return (
          (h = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (t, e) {
                return (t.__proto__ = e), t;
              }),
          h(t, e)
        );
      }
      function d(t, e, r) {
        return (
          (d = (function () {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
              return (
                Boolean.prototype.valueOf.call(
                  Reflect.construct(Boolean, [], function () {})
                ),
                !0
              );
            } catch (t) {
              return !1;
            }
          })()
            ? Reflect.construct.bind()
            : function (t, e, r) {
                var i = [null];
                i.push.apply(i, e);
                var n = new (Function.bind.apply(t, i))();
                return r && h(n, r.prototype), n;
              }),
          d.apply(null, arguments)
        );
      }
      function c(t) {
        var e = "function" == typeof Map ? new Map() : void 0;
        return (
          (c = function (t) {
            if (
              null === t ||
              !(function (t) {
                try {
                  return (
                    -1 !== Function.toString.call(t).indexOf("[native code]")
                  );
                } catch (e) {
                  return "function" == typeof t;
                }
              })(t)
            )
              return t;
            if ("function" != typeof t)
              throw new TypeError(
                "Super expression must either be null or a function"
              );
            if (void 0 !== e) {
              if (e.has(t)) return e.get(t);
              e.set(t, r);
            }
            function r() {
              return d(t, arguments, u(this).constructor);
            }
            return (
              (r.prototype = Object.create(t.prototype, {
                constructor: {
                  value: r,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
              h(r, t)
            );
          }),
          c(t)
        );
      }
      function f(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var r = 0, i = new Array(e); r < e; r++) i[r] = t[r];
        return i;
      }
      function g(t, e) {
        var r =
          ("undefined" != typeof Symbol && t[Symbol.iterator]) ||
          t["@@iterator"];
        if (r) return (r = r.call(t)).next.bind(r);
        if (
          Array.isArray(t) ||
          (r = (function (t, e) {
            if (t) {
              if ("string" == typeof t) return f(t, e);
              var r = Object.prototype.toString.call(t).slice(8, -1);
              return (
                "Object" === r && t.constructor && (r = t.constructor.name),
                "Map" === r || "Set" === r
                  ? Array.from(t)
                  : "Arguments" === r ||
                    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
                  ? f(t, e)
                  : void 0
              );
            }
          })(t)) ||
          (e && t && "number" == typeof t.length)
        ) {
          r && (t = r);
          var i = 0;
          return function () {
            return i >= t.length ? { done: !0 } : { done: !1, value: t[i++] };
          };
        }
        throw new TypeError(
          "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
        );
      }
      function v(t) {
        return t &&
          t.__esModule &&
          Object.prototype.hasOwnProperty.call(t, "default")
          ? t.default
          : t;
      }
      var m = { exports: {} };
      !(function (t, e) {
        var r, i, n, a, s;
        (r =
          /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/),
          (i = /^(?=([^\/?#]*))\1([^]*)$/),
          (n = /(?:\/|^)\.(?=\/)/g),
          (a = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g),
          (s = {
            buildAbsoluteURL: function (t, e, r) {
              if (((r = r || {}), (t = t.trim()), !(e = e.trim()))) {
                if (!r.alwaysNormalize) return t;
                var n = s.parseURL(t);
                if (!n) throw new Error("Error trying to parse base URL.");
                return (
                  (n.path = s.normalizePath(n.path)), s.buildURLFromParts(n)
                );
              }
              var a = s.parseURL(e);
              if (!a) throw new Error("Error trying to parse relative URL.");
              if (a.scheme)
                return r.alwaysNormalize
                  ? ((a.path = s.normalizePath(a.path)), s.buildURLFromParts(a))
                  : e;
              var o = s.parseURL(t);
              if (!o) throw new Error("Error trying to parse base URL.");
              if (!o.netLoc && o.path && "/" !== o.path[0]) {
                var l = i.exec(o.path);
                (o.netLoc = l[1]), (o.path = l[2]);
              }
              o.netLoc && !o.path && (o.path = "/");
              var u = {
                scheme: o.scheme,
                netLoc: a.netLoc,
                path: null,
                params: a.params,
                query: a.query,
                fragment: a.fragment,
              };
              if (!a.netLoc && ((u.netLoc = o.netLoc), "/" !== a.path[0]))
                if (a.path) {
                  var h = o.path,
                    d = h.substring(0, h.lastIndexOf("/") + 1) + a.path;
                  u.path = s.normalizePath(d);
                } else
                  (u.path = o.path),
                    a.params ||
                      ((u.params = o.params), a.query || (u.query = o.query));
              return (
                null === u.path &&
                  (u.path = r.alwaysNormalize
                    ? s.normalizePath(a.path)
                    : a.path),
                s.buildURLFromParts(u)
              );
            },
            parseURL: function (t) {
              var e = r.exec(t);
              return e
                ? {
                    scheme: e[1] || "",
                    netLoc: e[2] || "",
                    path: e[3] || "",
                    params: e[4] || "",
                    query: e[5] || "",
                    fragment: e[6] || "",
                  }
                : null;
            },
            normalizePath: function (t) {
              for (
                t = t.split("").reverse().join("").replace(n, "");
                t.length !== (t = t.replace(a, "")).length;

              );
              return t.split("").reverse().join("");
            },
            buildURLFromParts: function (t) {
              return (
                t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
              );
            },
          }),
          (t.exports = s);
      })(m);
      var p = m.exports,
        y =
          Number.isFinite ||
          function (t) {
            return "number" == typeof t && isFinite(t);
          },
        E =
          Number.isSafeInteger ||
          function (t) {
            return "number" == typeof t && Math.abs(t) <= T;
          },
        T = Number.MAX_SAFE_INTEGER || 9007199254740991,
        S = (function (t) {
          return (
            (t.MEDIA_ATTACHING = "hlsMediaAttaching"),
            (t.MEDIA_ATTACHED = "hlsMediaAttached"),
            (t.MEDIA_DETACHING = "hlsMediaDetaching"),
            (t.MEDIA_DETACHED = "hlsMediaDetached"),
            (t.BUFFER_RESET = "hlsBufferReset"),
            (t.BUFFER_CODECS = "hlsBufferCodecs"),
            (t.BUFFER_CREATED = "hlsBufferCreated"),
            (t.BUFFER_APPENDING = "hlsBufferAppending"),
            (t.BUFFER_APPENDED = "hlsBufferAppended"),
            (t.BUFFER_EOS = "hlsBufferEos"),
            (t.BUFFER_FLUSHING = "hlsBufferFlushing"),
            (t.BUFFER_FLUSHED = "hlsBufferFlushed"),
            (t.MANIFEST_LOADING = "hlsManifestLoading"),
            (t.MANIFEST_LOADED = "hlsManifestLoaded"),
            (t.MANIFEST_PARSED = "hlsManifestParsed"),
            (t.LEVEL_SWITCHING = "hlsLevelSwitching"),
            (t.LEVEL_SWITCHED = "hlsLevelSwitched"),
            (t.LEVEL_LOADING = "hlsLevelLoading"),
            (t.LEVEL_LOADED = "hlsLevelLoaded"),
            (t.LEVEL_UPDATED = "hlsLevelUpdated"),
            (t.LEVEL_PTS_UPDATED = "hlsLevelPtsUpdated"),
            (t.LEVELS_UPDATED = "hlsLevelsUpdated"),
            (t.AUDIO_TRACKS_UPDATED = "hlsAudioTracksUpdated"),
            (t.AUDIO_TRACK_SWITCHING = "hlsAudioTrackSwitching"),
            (t.AUDIO_TRACK_SWITCHED = "hlsAudioTrackSwitched"),
            (t.AUDIO_TRACK_LOADING = "hlsAudioTrackLoading"),
            (t.AUDIO_TRACK_LOADED = "hlsAudioTrackLoaded"),
            (t.SUBTITLE_TRACKS_UPDATED = "hlsSubtitleTracksUpdated"),
            (t.SUBTITLE_TRACKS_CLEARED = "hlsSubtitleTracksCleared"),
            (t.SUBTITLE_TRACK_SWITCH = "hlsSubtitleTrackSwitch"),
            (t.SUBTITLE_TRACK_LOADING = "hlsSubtitleTrackLoading"),
            (t.SUBTITLE_TRACK_LOADED = "hlsSubtitleTrackLoaded"),
            (t.SUBTITLE_FRAG_PROCESSED = "hlsSubtitleFragProcessed"),
            (t.CUES_PARSED = "hlsCuesParsed"),
            (t.NON_NATIVE_TEXT_TRACKS_FOUND = "hlsNonNativeTextTracksFound"),
            (t.INIT_PTS_FOUND = "hlsInitPtsFound"),
            (t.FRAG_LOADING = "hlsFragLoading"),
            (t.FRAG_LOAD_EMERGENCY_ABORTED = "hlsFragLoadEmergencyAborted"),
            (t.FRAG_LOADED = "hlsFragLoaded"),
            (t.FRAG_DECRYPTED = "hlsFragDecrypted"),
            (t.FRAG_PARSING_INIT_SEGMENT = "hlsFragParsingInitSegment"),
            (t.FRAG_PARSING_USERDATA = "hlsFragParsingUserdata"),
            (t.FRAG_PARSING_METADATA = "hlsFragParsingMetadata"),
            (t.FRAG_PARSED = "hlsFragParsed"),
            (t.FRAG_BUFFERED = "hlsFragBuffered"),
            (t.FRAG_CHANGED = "hlsFragChanged"),
            (t.FPS_DROP = "hlsFpsDrop"),
            (t.FPS_DROP_LEVEL_CAPPING = "hlsFpsDropLevelCapping"),
            (t.MAX_AUTO_LEVEL_UPDATED = "hlsMaxAutoLevelUpdated"),
            (t.ERROR = "hlsError"),
            (t.DESTROYING = "hlsDestroying"),
            (t.KEY_LOADING = "hlsKeyLoading"),
            (t.KEY_LOADED = "hlsKeyLoaded"),
            (t.LIVE_BACK_BUFFER_REACHED = "hlsLiveBackBufferReached"),
            (t.BACK_BUFFER_REACHED = "hlsBackBufferReached"),
            (t.STEERING_MANIFEST_LOADED = "hlsSteeringManifestLoaded"),
            t
          );
        })({}),
        L = (function (t) {
          return (
            (t.NETWORK_ERROR = "networkError"),
            (t.MEDIA_ERROR = "mediaError"),
            (t.KEY_SYSTEM_ERROR = "keySystemError"),
            (t.MUX_ERROR = "muxError"),
            (t.OTHER_ERROR = "otherError"),
            t
          );
        })({}),
        A = (function (t) {
          return (
            (t.KEY_SYSTEM_NO_KEYS = "keySystemNoKeys"),
            (t.KEY_SYSTEM_NO_ACCESS = "keySystemNoAccess"),
            (t.KEY_SYSTEM_NO_SESSION = "keySystemNoSession"),
            (t.KEY_SYSTEM_NO_CONFIGURED_LICENSE =
              "keySystemNoConfiguredLicense"),
            (t.KEY_SYSTEM_LICENSE_REQUEST_FAILED =
              "keySystemLicenseRequestFailed"),
            (t.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED =
              "keySystemServerCertificateRequestFailed"),
            (t.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED =
              "keySystemServerCertificateUpdateFailed"),
            (t.KEY_SYSTEM_SESSION_UPDATE_FAILED =
              "keySystemSessionUpdateFailed"),
            (t.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED =
              "keySystemStatusOutputRestricted"),
            (t.KEY_SYSTEM_STATUS_INTERNAL_ERROR =
              "keySystemStatusInternalError"),
            (t.MANIFEST_LOAD_ERROR = "manifestLoadError"),
            (t.MANIFEST_LOAD_TIMEOUT = "manifestLoadTimeOut"),
            (t.MANIFEST_PARSING_ERROR = "manifestParsingError"),
            (t.MANIFEST_INCOMPATIBLE_CODECS_ERROR =
              "manifestIncompatibleCodecsError"),
            (t.LEVEL_EMPTY_ERROR = "levelEmptyError"),
            (t.LEVEL_LOAD_ERROR = "levelLoadError"),
            (t.LEVEL_LOAD_TIMEOUT = "levelLoadTimeOut"),
            (t.LEVEL_PARSING_ERROR = "levelParsingError"),
            (t.LEVEL_SWITCH_ERROR = "levelSwitchError"),
            (t.AUDIO_TRACK_LOAD_ERROR = "audioTrackLoadError"),
            (t.AUDIO_TRACK_LOAD_TIMEOUT = "audioTrackLoadTimeOut"),
            (t.SUBTITLE_LOAD_ERROR = "subtitleTrackLoadError"),
            (t.SUBTITLE_TRACK_LOAD_TIMEOUT = "subtitleTrackLoadTimeOut"),
            (t.FRAG_LOAD_ERROR = "fragLoadError"),
            (t.FRAG_LOAD_TIMEOUT = "fragLoadTimeOut"),
            (t.FRAG_DECRYPT_ERROR = "fragDecryptError"),
            (t.FRAG_PARSING_ERROR = "fragParsingError"),
            (t.FRAG_GAP = "fragGap"),
            (t.REMUX_ALLOC_ERROR = "remuxAllocError"),
            (t.KEY_LOAD_ERROR = "keyLoadError"),
            (t.KEY_LOAD_TIMEOUT = "keyLoadTimeOut"),
            (t.BUFFER_ADD_CODEC_ERROR = "bufferAddCodecError"),
            (t.BUFFER_INCOMPATIBLE_CODECS_ERROR =
              "bufferIncompatibleCodecsError"),
            (t.BUFFER_APPEND_ERROR = "bufferAppendError"),
            (t.BUFFER_APPENDING_ERROR = "bufferAppendingError"),
            (t.BUFFER_STALLED_ERROR = "bufferStalledError"),
            (t.BUFFER_FULL_ERROR = "bufferFullError"),
            (t.BUFFER_SEEK_OVER_HOLE = "bufferSeekOverHole"),
            (t.BUFFER_NUDGE_ON_STALL = "bufferNudgeOnStall"),
            (t.INTERNAL_EXCEPTION = "internalException"),
            (t.INTERNAL_ABORTED = "aborted"),
            (t.UNKNOWN = "unknown"),
            t
          );
        })({}),
        R = function () {},
        k = { trace: R, debug: R, log: R, warn: R, info: R, error: R },
        b = k;
      function D(t) {
        for (
          var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1;
          i < e;
          i++
        )
          r[i - 1] = arguments[i];
        r.forEach(function (e) {
          b[e] = t[e]
            ? t[e].bind(t)
            : (function (t) {
                var e = self.console[t];
                return e ? e.bind(self.console, "[" + t + "] >") : R;
              })(e);
        });
      }
      function I(t, e) {
        if (("object" == typeof console && !0 === t) || "object" == typeof t) {
          D(t, "debug", "log", "info", "warn", "error");
          try {
            b.log(
              'Debug logs enabled for "' + e + '" in hls.js version 1.5.13'
            );
          } catch (t) {
            b = k;
          }
        } else b = k;
      }
      var w = b,
        C = /^(\d+)x(\d+)$/,
        _ = /(.+?)=(".*?"|.*?)(?:,|$)/g,
        x = (function () {
          function t(e) {
            "string" == typeof e && (e = t.parseAttrList(e)), o(this, e);
          }
          var e = t.prototype;
          return (
            (e.decimalInteger = function (t) {
              var e = parseInt(this[t], 10);
              return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e;
            }),
            (e.hexadecimalInteger = function (t) {
              if (this[t]) {
                var e = (this[t] || "0x").slice(2);
                e = (1 & e.length ? "0" : "") + e;
                for (
                  var r = new Uint8Array(e.length / 2), i = 0;
                  i < e.length / 2;
                  i++
                )
                  r[i] = parseInt(e.slice(2 * i, 2 * i + 2), 16);
                return r;
              }
              return null;
            }),
            (e.hexadecimalIntegerAsNumber = function (t) {
              var e = parseInt(this[t], 16);
              return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e;
            }),
            (e.decimalFloatingPoint = function (t) {
              return parseFloat(this[t]);
            }),
            (e.optionalFloat = function (t, e) {
              var r = this[t];
              return r ? parseFloat(r) : e;
            }),
            (e.enumeratedString = function (t) {
              return this[t];
            }),
            (e.bool = function (t) {
              return "YES" === this[t];
            }),
            (e.decimalResolution = function (t) {
              var e = C.exec(this[t]);
              if (null !== e)
                return {
                  width: parseInt(e[1], 10),
                  height: parseInt(e[2], 10),
                };
            }),
            (t.parseAttrList = function (t) {
              var e,
                r = {};
              for (_.lastIndex = 0; null !== (e = _.exec(t)); ) {
                var i = e[2];
                0 === i.indexOf('"') &&
                  i.lastIndexOf('"') === i.length - 1 &&
                  (i = i.slice(1, -1)),
                  (r[e[1].trim()] = i);
              }
              return r;
            }),
            s(t, [
              {
                key: "clientAttrs",
                get: function () {
                  return Object.keys(this).filter(function (t) {
                    return "X-" === t.substring(0, 2);
                  });
                },
              },
            ]),
            t
          );
        })();
      function P(t) {
        return "SCTE35-OUT" === t || "SCTE35-IN" === t;
      }
      var F = (function () {
          function t(t, e) {
            if (
              ((this.attr = void 0),
              (this._startDate = void 0),
              (this._endDate = void 0),
              (this._badValueForSameId = void 0),
              e)
            ) {
              var r = e.attr;
              for (var i in r)
                if (
                  Object.prototype.hasOwnProperty.call(t, i) &&
                  t[i] !== r[i]
                ) {
                  w.warn(
                    'DATERANGE tag attribute: "' +
                      i +
                      '" does not match for tags with ID: "' +
                      t.ID +
                      '"'
                  ),
                    (this._badValueForSameId = i);
                  break;
                }
              t = o(new x({}), r, t);
            }
            if (
              ((this.attr = t),
              (this._startDate = new Date(t["START-DATE"])),
              "END-DATE" in this.attr)
            ) {
              var n = new Date(this.attr["END-DATE"]);
              y(n.getTime()) && (this._endDate = n);
            }
          }
          return (
            s(t, [
              {
                key: "id",
                get: function () {
                  return this.attr.ID;
                },
              },
              {
                key: "class",
                get: function () {
                  return this.attr.CLASS;
                },
              },
              {
                key: "startDate",
                get: function () {
                  return this._startDate;
                },
              },
              {
                key: "endDate",
                get: function () {
                  if (this._endDate) return this._endDate;
                  var t = this.duration;
                  return null !== t
                    ? new Date(this._startDate.getTime() + 1e3 * t)
                    : null;
                },
              },
              {
                key: "duration",
                get: function () {
                  if ("DURATION" in this.attr) {
                    var t = this.attr.decimalFloatingPoint("DURATION");
                    if (y(t)) return t;
                  } else if (this._endDate)
                    return (
                      (this._endDate.getTime() - this._startDate.getTime()) /
                      1e3
                    );
                  return null;
                },
              },
              {
                key: "plannedDuration",
                get: function () {
                  return "PLANNED-DURATION" in this.attr
                    ? this.attr.decimalFloatingPoint("PLANNED-DURATION")
                    : null;
                },
              },
              {
                key: "endOnNext",
                get: function () {
                  return this.attr.bool("END-ON-NEXT");
                },
              },
              {
                key: "isValid",
                get: function () {
                  return (
                    !!this.id &&
                    !this._badValueForSameId &&
                    y(this.startDate.getTime()) &&
                    (null === this.duration || this.duration >= 0) &&
                    (!this.endOnNext || !!this.class)
                  );
                },
              },
            ]),
            t
          );
        })(),
        M = function () {
          (this.aborted = !1),
            (this.loaded = 0),
            (this.retry = 0),
            (this.total = 0),
            (this.chunkCount = 0),
            (this.bwEstimate = 0),
            (this.loading = { start: 0, first: 0, end: 0 }),
            (this.parsing = { start: 0, end: 0 }),
            (this.buffering = { start: 0, first: 0, end: 0 });
        },
        O = "audio",
        N = "video",
        U = "audiovideo",
        B = (function () {
          function t(t) {
            var e;
            (this._byteRange = null),
              (this._url = null),
              (this.baseurl = void 0),
              (this.relurl = void 0),
              (this.elementaryStreams =
                (((e = {})[O] = null), (e[N] = null), (e[U] = null), e)),
              (this.baseurl = t);
          }
          return (
            (t.prototype.setByteRange = function (t, e) {
              var r,
                i = t.split("@", 2);
              (r =
                1 === i.length
                  ? (null == e ? void 0 : e.byteRangeEndOffset) || 0
                  : parseInt(i[1])),
                (this._byteRange = [r, parseInt(i[0]) + r]);
            }),
            s(t, [
              {
                key: "byteRange",
                get: function () {
                  return this._byteRange ? this._byteRange : [];
                },
              },
              {
                key: "byteRangeStartOffset",
                get: function () {
                  return this.byteRange[0];
                },
              },
              {
                key: "byteRangeEndOffset",
                get: function () {
                  return this.byteRange[1];
                },
              },
              {
                key: "url",
                get: function () {
                  return (
                    !this._url &&
                      this.baseurl &&
                      this.relurl &&
                      (this._url = p.buildAbsoluteURL(
                        this.baseurl,
                        this.relurl,
                        { alwaysNormalize: !0 }
                      )),
                    this._url || ""
                  );
                },
                set: function (t) {
                  this._url = t;
                },
              },
            ]),
            t
          );
        })(),
        G = (function (t) {
          function e(e, r) {
            var i;
            return (
              ((i = t.call(this, r) || this)._decryptdata = null),
              (i.rawProgramDateTime = null),
              (i.programDateTime = null),
              (i.tagList = []),
              (i.duration = 0),
              (i.sn = 0),
              (i.levelkeys = void 0),
              (i.type = void 0),
              (i.loader = null),
              (i.keyLoader = null),
              (i.level = -1),
              (i.cc = 0),
              (i.startPTS = void 0),
              (i.endPTS = void 0),
              (i.startDTS = void 0),
              (i.endDTS = void 0),
              (i.start = 0),
              (i.deltaPTS = void 0),
              (i.maxStartPTS = void 0),
              (i.minEndPTS = void 0),
              (i.stats = new M()),
              (i.data = void 0),
              (i.bitrateTest = !1),
              (i.title = null),
              (i.initSegment = null),
              (i.endList = void 0),
              (i.gap = void 0),
              (i.urlId = 0),
              (i.type = e),
              i
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.setKeyFormat = function (t) {
              if (this.levelkeys) {
                var e = this.levelkeys[t];
                e &&
                  !this._decryptdata &&
                  (this._decryptdata = e.getDecryptData(this.sn));
              }
            }),
            (r.abortRequests = function () {
              var t, e;
              null == (t = this.loader) || t.abort(),
                null == (e = this.keyLoader) || e.abort();
            }),
            (r.setElementaryStreamInfo = function (t, e, r, i, n, a) {
              void 0 === a && (a = !1);
              var s = this.elementaryStreams,
                o = s[t];
              o
                ? ((o.startPTS = Math.min(o.startPTS, e)),
                  (o.endPTS = Math.max(o.endPTS, r)),
                  (o.startDTS = Math.min(o.startDTS, i)),
                  (o.endDTS = Math.max(o.endDTS, n)))
                : (s[t] = {
                    startPTS: e,
                    endPTS: r,
                    startDTS: i,
                    endDTS: n,
                    partial: a,
                  });
            }),
            (r.clearElementaryStreamInfo = function () {
              var t = this.elementaryStreams;
              (t[O] = null), (t[N] = null), (t[U] = null);
            }),
            s(e, [
              {
                key: "decryptdata",
                get: function () {
                  if (!this.levelkeys && !this._decryptdata) return null;
                  if (
                    !this._decryptdata &&
                    this.levelkeys &&
                    !this.levelkeys.NONE
                  ) {
                    var t = this.levelkeys.identity;
                    if (t) this._decryptdata = t.getDecryptData(this.sn);
                    else {
                      var e = Object.keys(this.levelkeys);
                      if (1 === e.length)
                        return (this._decryptdata = this.levelkeys[
                          e[0]
                        ].getDecryptData(this.sn));
                    }
                  }
                  return this._decryptdata;
                },
              },
              {
                key: "end",
                get: function () {
                  return this.start + this.duration;
                },
              },
              {
                key: "endProgramDateTime",
                get: function () {
                  if (null === this.programDateTime) return null;
                  if (!y(this.programDateTime)) return null;
                  var t = y(this.duration) ? this.duration : 0;
                  return this.programDateTime + 1e3 * t;
                },
              },
              {
                key: "encrypted",
                get: function () {
                  var t;
                  if (null != (t = this._decryptdata) && t.encrypted) return !0;
                  if (this.levelkeys) {
                    var e = Object.keys(this.levelkeys),
                      r = e.length;
                    if (r > 1 || (1 === r && this.levelkeys[e[0]].encrypted))
                      return !0;
                  }
                  return !1;
                },
              },
            ]),
            e
          );
        })(B),
        K = (function (t) {
          function e(e, r, i, n, a) {
            var s;
            ((s = t.call(this, i) || this).fragOffset = 0),
              (s.duration = 0),
              (s.gap = !1),
              (s.independent = !1),
              (s.relurl = void 0),
              (s.fragment = void 0),
              (s.index = void 0),
              (s.stats = new M()),
              (s.duration = e.decimalFloatingPoint("DURATION")),
              (s.gap = e.bool("GAP")),
              (s.independent = e.bool("INDEPENDENT")),
              (s.relurl = e.enumeratedString("URI")),
              (s.fragment = r),
              (s.index = n);
            var o = e.enumeratedString("BYTERANGE");
            return (
              o && s.setByteRange(o, a),
              a && (s.fragOffset = a.fragOffset + a.duration),
              s
            );
          }
          return (
            l(e, t),
            s(e, [
              {
                key: "start",
                get: function () {
                  return this.fragment.start + this.fragOffset;
                },
              },
              {
                key: "end",
                get: function () {
                  return this.start + this.duration;
                },
              },
              {
                key: "loaded",
                get: function () {
                  var t = this.elementaryStreams;
                  return !!(t.audio || t.video || t.audiovideo);
                },
              },
            ]),
            e
          );
        })(B),
        H = (function () {
          function t(t) {
            (this.PTSKnown = !1),
              (this.alignedSliding = !1),
              (this.averagetargetduration = void 0),
              (this.endCC = 0),
              (this.endSN = 0),
              (this.fragments = void 0),
              (this.fragmentHint = void 0),
              (this.partList = null),
              (this.dateRanges = void 0),
              (this.live = !0),
              (this.ageHeader = 0),
              (this.advancedDateTime = void 0),
              (this.updated = !0),
              (this.advanced = !0),
              (this.availabilityDelay = void 0),
              (this.misses = 0),
              (this.startCC = 0),
              (this.startSN = 0),
              (this.startTimeOffset = null),
              (this.targetduration = 0),
              (this.totalduration = 0),
              (this.type = null),
              (this.url = void 0),
              (this.m3u8 = ""),
              (this.version = null),
              (this.canBlockReload = !1),
              (this.canSkipUntil = 0),
              (this.canSkipDateRanges = !1),
              (this.skippedSegments = 0),
              (this.recentlyRemovedDateranges = void 0),
              (this.partHoldBack = 0),
              (this.holdBack = 0),
              (this.partTarget = 0),
              (this.preloadHint = void 0),
              (this.renditionReports = void 0),
              (this.tuneInGoal = 0),
              (this.deltaUpdateFailed = void 0),
              (this.driftStartTime = 0),
              (this.driftEndTime = 0),
              (this.driftStart = 0),
              (this.driftEnd = 0),
              (this.encryptedFragments = void 0),
              (this.playlistParsingError = null),
              (this.variableList = null),
              (this.hasVariableRefs = !1),
              (this.fragments = []),
              (this.encryptedFragments = []),
              (this.dateRanges = {}),
              (this.url = t);
          }
          return (
            (t.prototype.reloaded = function (t) {
              if (!t) return (this.advanced = !0), void (this.updated = !0);
              var e = this.lastPartSn - t.lastPartSn,
                r = this.lastPartIndex - t.lastPartIndex;
              (this.updated =
                this.endSN !== t.endSN || !!r || !!e || !this.live),
                (this.advanced =
                  this.endSN > t.endSN || e > 0 || (0 === e && r > 0)),
                this.updated || this.advanced
                  ? (this.misses = Math.floor(0.6 * t.misses))
                  : (this.misses = t.misses + 1),
                (this.availabilityDelay = t.availabilityDelay);
            }),
            s(t, [
              {
                key: "hasProgramDateTime",
                get: function () {
                  return (
                    !!this.fragments.length &&
                    y(this.fragments[this.fragments.length - 1].programDateTime)
                  );
                },
              },
              {
                key: "levelTargetDuration",
                get: function () {
                  return (
                    this.averagetargetduration || this.targetduration || 10
                  );
                },
              },
              {
                key: "drift",
                get: function () {
                  var t = this.driftEndTime - this.driftStartTime;
                  return t > 0
                    ? (1e3 * (this.driftEnd - this.driftStart)) / t
                    : 1;
                },
              },
              {
                key: "edge",
                get: function () {
                  return this.partEnd || this.fragmentEnd;
                },
              },
              {
                key: "partEnd",
                get: function () {
                  var t;
                  return null != (t = this.partList) && t.length
                    ? this.partList[this.partList.length - 1].end
                    : this.fragmentEnd;
                },
              },
              {
                key: "fragmentEnd",
                get: function () {
                  var t;
                  return null != (t = this.fragments) && t.length
                    ? this.fragments[this.fragments.length - 1].end
                    : 0;
                },
              },
              {
                key: "age",
                get: function () {
                  return this.advancedDateTime
                    ? Math.max(Date.now() - this.advancedDateTime, 0) / 1e3
                    : 0;
                },
              },
              {
                key: "lastPartIndex",
                get: function () {
                  var t;
                  return null != (t = this.partList) && t.length
                    ? this.partList[this.partList.length - 1].index
                    : -1;
                },
              },
              {
                key: "lastPartSn",
                get: function () {
                  var t;
                  return null != (t = this.partList) && t.length
                    ? this.partList[this.partList.length - 1].fragment.sn
                    : this.endSN;
                },
              },
            ]),
            t
          );
        })();
      function V(t) {
        return Uint8Array.from(atob(t), function (t) {
          return t.charCodeAt(0);
        });
      }
      function Y(t) {
        var e,
          r,
          i = t.split(":"),
          n = null;
        if ("data" === i[0] && 2 === i.length) {
          var a = i[1].split(";"),
            s = a[a.length - 1].split(",");
          if (2 === s.length) {
            var o = "base64" === s[0],
              l = s[1];
            o
              ? (a.splice(-1, 1), (n = V(l)))
              : ((e = W(l).subarray(0, 16)),
                (r = new Uint8Array(16)).set(e, 16 - e.length),
                (n = r));
          }
        }
        return n;
      }
      function W(t) {
        return Uint8Array.from(unescape(encodeURIComponent(t)), function (t) {
          return t.charCodeAt(0);
        });
      }
      var j = "undefined" != typeof self ? self : void 0,
        q = {
          CLEARKEY: "org.w3.clearkey",
          FAIRPLAY: "com.apple.fps",
          PLAYREADY: "com.microsoft.playready",
          WIDEVINE: "com.widevine.alpha",
        },
        X = "org.w3.clearkey",
        z = "com.apple.streamingkeydelivery",
        Q = "com.microsoft.playready",
        J = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";
      function $(t) {
        switch (t) {
          case z:
            return q.FAIRPLAY;
          case Q:
            return q.PLAYREADY;
          case J:
            return q.WIDEVINE;
          case X:
            return q.CLEARKEY;
        }
      }
      var Z = "edef8ba979d64acea3c827dcd51d21ed";
      function tt(t) {
        switch (t) {
          case q.FAIRPLAY:
            return z;
          case q.PLAYREADY:
            return Q;
          case q.WIDEVINE:
            return J;
          case q.CLEARKEY:
            return X;
        }
      }
      function et(t) {
        var e = t.drmSystems,
          r = t.widevineLicenseUrl,
          i = e
            ? [q.FAIRPLAY, q.WIDEVINE, q.PLAYREADY, q.CLEARKEY].filter(
                function (t) {
                  return !!e[t];
                }
              )
            : [];
        return !i[q.WIDEVINE] && r && i.push(q.WIDEVINE), i;
      }
      var rt,
        it =
          null != j &&
          null != (rt = j.navigator) &&
          rt.requestMediaKeySystemAccess
            ? self.navigator.requestMediaKeySystemAccess.bind(self.navigator)
            : null;
      function nt(t, e, r) {
        return Uint8Array.prototype.slice
          ? t.slice(e, r)
          : new Uint8Array(Array.prototype.slice.call(t, e, r));
      }
      var at,
        st = function (t, e) {
          return (
            e + 10 <= t.length &&
            73 === t[e] &&
            68 === t[e + 1] &&
            51 === t[e + 2] &&
            t[e + 3] < 255 &&
            t[e + 4] < 255 &&
            t[e + 6] < 128 &&
            t[e + 7] < 128 &&
            t[e + 8] < 128 &&
            t[e + 9] < 128
          );
        },
        ot = function (t, e) {
          return (
            e + 10 <= t.length &&
            51 === t[e] &&
            68 === t[e + 1] &&
            73 === t[e + 2] &&
            t[e + 3] < 255 &&
            t[e + 4] < 255 &&
            t[e + 6] < 128 &&
            t[e + 7] < 128 &&
            t[e + 8] < 128 &&
            t[e + 9] < 128
          );
        },
        lt = function (t, e) {
          for (var r = e, i = 0; st(t, e); )
            (i += 10),
              (i += ut(t, e + 6)),
              ot(t, e + 10) && (i += 10),
              (e += i);
          if (i > 0) return t.subarray(r, r + i);
        },
        ut = function (t, e) {
          var r = 0;
          return (
            (r = (127 & t[e]) << 21),
            (r |= (127 & t[e + 1]) << 14),
            (r |= (127 & t[e + 2]) << 7),
            (r |= 127 & t[e + 3])
          );
        },
        ht = function (t, e) {
          return st(t, e) && ut(t, e + 6) + 10 <= t.length - e;
        },
        dt = function (t) {
          for (var e = gt(t), r = 0; r < e.length; r++) {
            var i = e[r];
            if (ct(i)) return Et(i);
          }
        },
        ct = function (t) {
          return (
            t &&
            "PRIV" === t.key &&
            "com.apple.streaming.transportStreamTimestamp" === t.info
          );
        },
        ft = function (t) {
          var e = String.fromCharCode(t[0], t[1], t[2], t[3]),
            r = ut(t, 4);
          return { type: e, size: r, data: t.subarray(10, 10 + r) };
        },
        gt = function (t) {
          for (var e = 0, r = []; st(t, e); ) {
            for (var i = ut(t, e + 6), n = (e += 10) + i; e + 8 < n; ) {
              var a = ft(t.subarray(e)),
                s = vt(a);
              s && r.push(s), (e += a.size + 10);
            }
            ot(t, e) && (e += 10);
          }
          return r;
        },
        vt = function (t) {
          return "PRIV" === t.type ? mt(t) : "W" === t.type[0] ? yt(t) : pt(t);
        },
        mt = function (t) {
          if (!(t.size < 2)) {
            var e = Tt(t.data, !0),
              r = new Uint8Array(t.data.subarray(e.length + 1));
            return { key: t.type, info: e, data: r.buffer };
          }
        },
        pt = function (t) {
          if (!(t.size < 2)) {
            if ("TXXX" === t.type) {
              var e = 1,
                r = Tt(t.data.subarray(e), !0);
              e += r.length + 1;
              var i = Tt(t.data.subarray(e));
              return { key: t.type, info: r, data: i };
            }
            var n = Tt(t.data.subarray(1));
            return { key: t.type, data: n };
          }
        },
        yt = function (t) {
          if ("WXXX" === t.type) {
            if (t.size < 2) return;
            var e = 1,
              r = Tt(t.data.subarray(e), !0);
            e += r.length + 1;
            var i = Tt(t.data.subarray(e));
            return { key: t.type, info: r, data: i };
          }
          var n = Tt(t.data);
          return { key: t.type, data: n };
        },
        Et = function (t) {
          if (8 === t.data.byteLength) {
            var e = new Uint8Array(t.data),
              r = 1 & e[3],
              i = (e[4] << 23) + (e[5] << 15) + (e[6] << 7) + e[7];
            return (i /= 45), r && (i += 47721858.84), Math.round(i);
          }
        },
        Tt = function (t, e) {
          void 0 === e && (e = !1);
          var r = St();
          if (r) {
            var i = r.decode(t);
            if (e) {
              var n = i.indexOf("\0");
              return -1 !== n ? i.substring(0, n) : i;
            }
            return i.replace(/\0/g, "");
          }
          for (var a, s, o, l = t.length, u = "", h = 0; h < l; ) {
            if (0 === (a = t[h++]) && e) return u;
            if (0 !== a && 3 !== a)
              switch (a >> 4) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                  u += String.fromCharCode(a);
                  break;
                case 12:
                case 13:
                  (s = t[h++]),
                    (u += String.fromCharCode(((31 & a) << 6) | (63 & s)));
                  break;
                case 14:
                  (s = t[h++]),
                    (o = t[h++]),
                    (u += String.fromCharCode(
                      ((15 & a) << 12) | ((63 & s) << 6) | ((63 & o) << 0)
                    ));
              }
          }
          return u;
        };
      function St() {
        if (!navigator.userAgent.includes("PlayStation 4"))
          return (
            at ||
              void 0 === self.TextDecoder ||
              (at = new self.TextDecoder("utf-8")),
            at
          );
      }
      var Lt = function (t) {
          for (var e = "", r = 0; r < t.length; r++) {
            var i = t[r].toString(16);
            i.length < 2 && (i = "0" + i), (e += i);
          }
          return e;
        },
        At = Math.pow(2, 32) - 1,
        Rt = [].push,
        kt = { video: 1, audio: 2, id3: 3, text: 4 };
      function bt(t) {
        return String.fromCharCode.apply(null, t);
      }
      function Dt(t, e) {
        var r = (t[e] << 8) | t[e + 1];
        return r < 0 ? 65536 + r : r;
      }
      function It(t, e) {
        var r = Ct(t, e);
        return r < 0 ? 4294967296 + r : r;
      }
      function wt(t, e) {
        var r = It(t, e);
        return (r *= Math.pow(2, 32)), (r += It(t, e + 4));
      }
      function Ct(t, e) {
        return (t[e] << 24) | (t[e + 1] << 16) | (t[e + 2] << 8) | t[e + 3];
      }
      function _t(t, e, r) {
        (t[e] = r >> 24),
          (t[e + 1] = (r >> 16) & 255),
          (t[e + 2] = (r >> 8) & 255),
          (t[e + 3] = 255 & r);
      }
      function xt(t, e) {
        var r = [];
        if (!e.length) return r;
        for (var i = t.byteLength, n = 0; n < i; ) {
          var a = It(t, n),
            s = a > 1 ? n + a : i;
          if (bt(t.subarray(n + 4, n + 8)) === e[0])
            if (1 === e.length) r.push(t.subarray(n + 8, s));
            else {
              var o = xt(t.subarray(n + 8, s), e.slice(1));
              o.length && Rt.apply(r, o);
            }
          n = s;
        }
        return r;
      }
      function Pt(t) {
        var e = [],
          r = t[0],
          i = 8,
          n = It(t, i);
        i += 4;
        var a = 0,
          s = 0;
        0 === r
          ? ((a = It(t, i)), (s = It(t, i + 4)), (i += 8))
          : ((a = wt(t, i)), (s = wt(t, i + 8)), (i += 16)),
          (i += 2);
        var o = t.length + s,
          l = Dt(t, i);
        i += 2;
        for (var u = 0; u < l; u++) {
          var h = i,
            d = It(t, h);
          h += 4;
          var c = 2147483647 & d;
          if (1 == (2147483648 & d) >>> 31)
            return (
              w.warn("SIDX has hierarchical references (not supported)"), null
            );
          var f = It(t, h);
          (h += 4),
            e.push({
              referenceSize: c,
              subsegmentDuration: f,
              info: { duration: f / n, start: o, end: o + c - 1 },
            }),
            (o += c),
            (i = h += 4);
        }
        return {
          earliestPresentationTime: a,
          timescale: n,
          version: r,
          referencesCount: l,
          references: e,
        };
      }
      function Ft(t) {
        for (
          var e = [], r = xt(t, ["moov", "trak"]), n = 0;
          n < r.length;
          n++
        ) {
          var a = r[n],
            s = xt(a, ["tkhd"])[0];
          if (s) {
            var o = s[0],
              l = It(s, 0 === o ? 12 : 20),
              u = xt(a, ["mdia", "mdhd"])[0];
            if (u) {
              var h = It(u, 0 === (o = u[0]) ? 12 : 20),
                d = xt(a, ["mdia", "hdlr"])[0];
              if (d) {
                var c = bt(d.subarray(8, 12)),
                  f = { soun: O, vide: N }[c];
                if (f) {
                  var g = Mt(xt(a, ["mdia", "minf", "stbl", "stsd"])[0]);
                  (e[l] = { timescale: h, type: f }),
                    (e[f] = i({ timescale: h, id: l }, g));
                }
              }
            }
          }
        }
        return (
          xt(t, ["moov", "mvex", "trex"]).forEach(function (t) {
            var r = It(t, 4),
              i = e[r];
            i && (i.default = { duration: It(t, 12), flags: It(t, 20) });
          }),
          e
        );
      }
      function Mt(t) {
        var e = t.subarray(8),
          r = e.subarray(86),
          i = bt(e.subarray(4, 8)),
          n = i,
          a = "enca" === i || "encv" === i;
        if (a) {
          var s = xt(e, [i])[0];
          xt(s.subarray("enca" === i ? 28 : 78), ["sinf"]).forEach(function (
            t
          ) {
            var e = xt(t, ["schm"])[0];
            if (e) {
              var r = bt(e.subarray(4, 8));
              if ("cbcs" === r || "cenc" === r) {
                var i = xt(t, ["frma"])[0];
                i && (n = bt(i));
              }
            }
          });
        }
        switch (n) {
          case "avc1":
          case "avc2":
          case "avc3":
          case "avc4":
            var o = xt(r, ["avcC"])[0];
            n += "." + Nt(o[1]) + Nt(o[2]) + Nt(o[3]);
            break;
          case "mp4a":
            var l = xt(e, [i])[0],
              u = xt(l.subarray(28), ["esds"])[0];
            if (u && u.length > 12) {
              var h = 4;
              if (3 !== u[h++]) break;
              (h = Ot(u, h)), (h += 2);
              var d = u[h++];
              if ((128 & d && (h += 2), 64 & d && (h += u[h++]), 4 !== u[h++]))
                break;
              h = Ot(u, h);
              var c = u[h++];
              if (64 !== c) break;
              if (((n += "." + Nt(c)), (h += 12), 5 !== u[h++])) break;
              h = Ot(u, h);
              var f = u[h++],
                g = (248 & f) >> 3;
              31 === g && (g += 1 + ((7 & f) << 3) + ((224 & u[h]) >> 5)),
                (n += "." + g);
            }
            break;
          case "hvc1":
          case "hev1":
            var v = xt(r, ["hvcC"])[0],
              m = v[1],
              p = ["", "A", "B", "C"][m >> 6],
              y = 31 & m,
              E = It(v, 2),
              T = (32 & m) >> 5 ? "H" : "L",
              S = v[12],
              L = v.subarray(6, 12);
            (n += "." + p + y),
              (n += "." + E.toString(16).toUpperCase()),
              (n += "." + T + S);
            for (var A = "", R = L.length; R--; ) {
              var k = L[R];
              (k || A) && (A = "." + k.toString(16).toUpperCase() + A);
            }
            n += A;
            break;
          case "dvh1":
          case "dvhe":
            var b = xt(r, ["dvcC"])[0],
              D = (b[2] >> 1) & 127,
              I = ((b[2] << 5) & 32) | ((b[3] >> 3) & 31);
            n += "." + Ut(D) + "." + Ut(I);
            break;
          case "vp09":
            var w = xt(r, ["vpcC"])[0],
              C = w[4],
              _ = w[5],
              x = (w[6] >> 4) & 15;
            n += "." + Ut(C) + "." + Ut(_) + "." + Ut(x);
            break;
          case "av01":
            var P = xt(r, ["av1C"])[0],
              F = P[1] >>> 5,
              M = 31 & P[1],
              O = P[2] >>> 7 ? "H" : "M",
              N = (64 & P[2]) >> 6,
              U = (32 & P[2]) >> 5,
              B = 2 === F && N ? (U ? 12 : 10) : N ? 10 : 8,
              G = (16 & P[2]) >> 4,
              K = (8 & P[2]) >> 3,
              H = (4 & P[2]) >> 2,
              V = 3 & P[2];
            n +=
              "." +
              F +
              "." +
              Ut(M) +
              O +
              "." +
              Ut(B) +
              "." +
              G +
              "." +
              K +
              H +
              V +
              "." +
              Ut(1) +
              "." +
              Ut(1) +
              "." +
              Ut(1) +
              ".0";
        }
        return { codec: n, encrypted: a };
      }
      function Ot(t, e) {
        for (var r = e + 5; 128 & t[e++] && e < r; );
        return e;
      }
      function Nt(t) {
        return ("0" + t.toString(16).toUpperCase()).slice(-2);
      }
      function Ut(t) {
        return (t < 10 ? "0" : "") + t;
      }
      function Bt(t) {
        var e = xt(t, ["schm"])[0];
        if (e) {
          var r = bt(e.subarray(4, 8));
          if ("cbcs" === r || "cenc" === r) return xt(t, ["schi", "tenc"])[0];
        }
        return w.error("[eme] missing 'schm' box"), null;
      }
      function Gt(t) {
        var e = It(t, 0),
          r = 8;
        1 & e && (r += 4), 4 & e && (r += 4);
        for (var i = 0, n = It(t, 4), a = 0; a < n; a++)
          256 & e && ((i += It(t, r)), (r += 4)),
            512 & e && (r += 4),
            1024 & e && (r += 4),
            2048 & e && (r += 4);
        return i;
      }
      function Kt(t, e) {
        var r = new Uint8Array(t.length + e.length);
        return r.set(t), r.set(e, t.length), r;
      }
      function Ht(t, e) {
        var r = [],
          i = e.samples,
          n = e.timescale,
          a = e.id,
          s = !1;
        return (
          xt(i, ["moof"]).map(function (o) {
            var l = o.byteOffset - 8;
            xt(o, ["traf"]).map(function (o) {
              var u = xt(o, ["tfdt"]).map(function (t) {
                var e = t[0],
                  r = It(t, 4);
                return (
                  1 === e && ((r *= Math.pow(2, 32)), (r += It(t, 8))), r / n
                );
              })[0];
              return (
                void 0 !== u && (t = u),
                xt(o, ["tfhd"]).map(function (u) {
                  var h = It(u, 4),
                    d = 16777215 & It(u, 0),
                    c = 0,
                    f = 0 != (16 & d),
                    g = 0,
                    v = 0 != (32 & d),
                    m = 8;
                  h === a &&
                    (0 != (1 & d) && (m += 8),
                    0 != (2 & d) && (m += 4),
                    0 != (8 & d) && ((c = It(u, m)), (m += 4)),
                    f && ((g = It(u, m)), (m += 4)),
                    v && (m += 4),
                    "video" === e.type &&
                      (s = (function (t) {
                        if (!t) return !1;
                        var e = t.indexOf("."),
                          r = e < 0 ? t : t.substring(0, e);
                        return (
                          "hvc1" === r ||
                          "hev1" === r ||
                          "dvh1" === r ||
                          "dvhe" === r
                        );
                      })(e.codec)),
                    xt(o, ["trun"]).map(function (a) {
                      var o = a[0],
                        u = 16777215 & It(a, 0),
                        h = 0 != (1 & u),
                        d = 0,
                        f = 0 != (4 & u),
                        v = 0 != (256 & u),
                        m = 0,
                        p = 0 != (512 & u),
                        y = 0,
                        E = 0 != (1024 & u),
                        T = 0 != (2048 & u),
                        S = 0,
                        L = It(a, 4),
                        A = 8;
                      h && ((d = It(a, A)), (A += 4)), f && (A += 4);
                      for (var R = d + l, k = 0; k < L; k++) {
                        if (
                          (v ? ((m = It(a, A)), (A += 4)) : (m = c),
                          p ? ((y = It(a, A)), (A += 4)) : (y = g),
                          E && (A += 4),
                          T && ((S = 0 === o ? It(a, A) : Ct(a, A)), (A += 4)),
                          e.type === N)
                        )
                          for (var b = 0; b < y; ) {
                            var D = It(i, R);
                            Vt(s, i[(R += 4)]) &&
                              Yt(i.subarray(R, R + D), s ? 2 : 1, t + S / n, r),
                              (R += D),
                              (b += D + 4);
                          }
                        t += m / n;
                      }
                    }));
                })
              );
            });
          }),
          r
        );
      }
      function Vt(t, e) {
        if (t) {
          var r = (e >> 1) & 63;
          return 39 === r || 40 === r;
        }
        return 6 == (31 & e);
      }
      function Yt(t, e, r, i) {
        var n = Wt(t),
          a = 0;
        a += e;
        for (var s = 0, o = 0, l = 0; a < n.length; ) {
          s = 0;
          do {
            if (a >= n.length) break;
            s += l = n[a++];
          } while (255 === l);
          o = 0;
          do {
            if (a >= n.length) break;
            o += l = n[a++];
          } while (255 === l);
          var u = n.length - a,
            h = a;
          if (o < u) a += o;
          else if (o > u) {
            w.error(
              "Malformed SEI payload. " +
                o +
                " is too small, only " +
                u +
                " bytes left to parse."
            );
            break;
          }
          if (4 === s) {
            if (181 === n[h++]) {
              var d = Dt(n, h);
              if (((h += 2), 49 === d)) {
                var c = It(n, h);
                if (((h += 4), 1195456820 === c)) {
                  var f = n[h++];
                  if (3 === f) {
                    var g = n[h++],
                      v = 64 & g,
                      m = v ? 2 + 3 * (31 & g) : 0,
                      p = new Uint8Array(m);
                    if (v) {
                      p[0] = g;
                      for (var y = 1; y < m; y++) p[y] = n[h++];
                    }
                    i.push({ type: f, payloadType: s, pts: r, bytes: p });
                  }
                }
              }
            }
          } else if (5 === s && o > 16) {
            for (var E = [], T = 0; T < 16; T++) {
              var S = n[h++].toString(16);
              E.push(1 == S.length ? "0" + S : S),
                (3 !== T && 5 !== T && 7 !== T && 9 !== T) || E.push("-");
            }
            for (var L = o - 16, A = new Uint8Array(L), R = 0; R < L; R++)
              A[R] = n[h++];
            i.push({
              payloadType: s,
              pts: r,
              uuid: E.join(""),
              userData: Tt(A),
              userDataBytes: A,
            });
          }
        }
      }
      function Wt(t) {
        for (var e = t.byteLength, r = [], i = 1; i < e - 2; )
          0 === t[i] && 0 === t[i + 1] && 3 === t[i + 2]
            ? (r.push(i + 2), (i += 2))
            : i++;
        if (0 === r.length) return t;
        var n = e - r.length,
          a = new Uint8Array(n),
          s = 0;
        for (i = 0; i < n; s++, i++)
          s === r[0] && (s++, r.shift()), (a[i] = t[s]);
        return a;
      }
      function jt(t, e, r) {
        if (16 !== t.byteLength) throw new RangeError("Invalid system id");
        var i, n, a;
        if (e) {
          (i = 1), (n = new Uint8Array(16 * e.length));
          for (var s = 0; s < e.length; s++) {
            var o = e[s];
            if (16 !== o.byteLength) throw new RangeError("Invalid key");
            n.set(o, 16 * s);
          }
        } else (i = 0), (n = new Uint8Array());
        i > 0
          ? ((a = new Uint8Array(4)),
            e.length > 0 && new DataView(a.buffer).setUint32(0, e.length, !1))
          : (a = new Uint8Array());
        var l = new Uint8Array(4);
        return (
          r &&
            r.byteLength > 0 &&
            new DataView(l.buffer).setUint32(0, r.byteLength, !1),
          (function (t) {
            for (
              var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1;
              i < e;
              i++
            )
              r[i - 1] = arguments[i];
            for (var n = r.length, a = 8, s = n; s--; ) a += r[s].byteLength;
            var o = new Uint8Array(a);
            for (
              o[0] = (a >> 24) & 255,
                o[1] = (a >> 16) & 255,
                o[2] = (a >> 8) & 255,
                o[3] = 255 & a,
                o.set(t, 4),
                s = 0,
                a = 8;
              s < n;
              s++
            )
              o.set(r[s], a), (a += r[s].byteLength);
            return o;
          })(
            [112, 115, 115, 104],
            new Uint8Array([i, 0, 0, 0]),
            t,
            a,
            n,
            l,
            r || new Uint8Array()
          )
        );
      }
      var qt = {},
        Xt = (function () {
          function t(t, e, r, i, n) {
            void 0 === i && (i = [1]),
              void 0 === n && (n = null),
              (this.uri = void 0),
              (this.method = void 0),
              (this.keyFormat = void 0),
              (this.keyFormatVersions = void 0),
              (this.encrypted = void 0),
              (this.isCommonEncryption = void 0),
              (this.iv = null),
              (this.key = null),
              (this.keyId = null),
              (this.pssh = null),
              (this.method = t),
              (this.uri = e),
              (this.keyFormat = r),
              (this.keyFormatVersions = i),
              (this.iv = n),
              (this.encrypted = !!t && "NONE" !== t),
              (this.isCommonEncryption = this.encrypted && "AES-128" !== t);
          }
          t.clearKeyUriToKeyIdMap = function () {
            qt = {};
          };
          var e = t.prototype;
          return (
            (e.isSupported = function () {
              if (this.method) {
                if ("AES-128" === this.method || "NONE" === this.method)
                  return !0;
                if ("identity" === this.keyFormat)
                  return "SAMPLE-AES" === this.method;
                switch (this.keyFormat) {
                  case z:
                  case J:
                  case Q:
                  case X:
                    return (
                      -1 !==
                      [
                        "ISO-23001-7",
                        "SAMPLE-AES",
                        "SAMPLE-AES-CENC",
                        "SAMPLE-AES-CTR",
                      ].indexOf(this.method)
                    );
                }
              }
              return !1;
            }),
            (e.getDecryptData = function (e) {
              if (!this.encrypted || !this.uri) return null;
              if ("AES-128" === this.method && this.uri && !this.iv) {
                "number" != typeof e &&
                  ("AES-128" !== this.method ||
                    this.iv ||
                    w.warn(
                      'missing IV for initialization segment with method="' +
                        this.method +
                        '" - compliance issue'
                    ),
                  (e = 0));
                var r = (function (t) {
                  for (var e = new Uint8Array(16), r = 12; r < 16; r++)
                    e[r] = (t >> (8 * (15 - r))) & 255;
                  return e;
                })(e);
                return new t(
                  this.method,
                  this.uri,
                  "identity",
                  this.keyFormatVersions,
                  r
                );
              }
              var i = Y(this.uri);
              if (i)
                switch (this.keyFormat) {
                  case J:
                    (this.pssh = i),
                      i.length >= 22 &&
                        (this.keyId = i.subarray(i.length - 22, i.length - 6));
                    break;
                  case Q:
                    var n = new Uint8Array([
                      154, 4, 240, 121, 152, 64, 66, 134, 171, 146, 230, 91,
                      224, 136, 95, 149,
                    ]);
                    this.pssh = jt(n, null, i);
                    var a = new Uint16Array(
                        i.buffer,
                        i.byteOffset,
                        i.byteLength / 2
                      ),
                      s = String.fromCharCode.apply(null, Array.from(a)),
                      o = s.substring(s.indexOf("<"), s.length),
                      l = new DOMParser()
                        .parseFromString(o, "text/xml")
                        .getElementsByTagName("KID")[0];
                    if (l) {
                      var u = l.childNodes[0]
                        ? l.childNodes[0].nodeValue
                        : l.getAttribute("VALUE");
                      if (u) {
                        var h = V(u).subarray(0, 16);
                        !(function (t) {
                          var e = function (t, e, r) {
                            var i = t[e];
                            (t[e] = t[r]), (t[r] = i);
                          };
                          e(t, 0, 3), e(t, 1, 2), e(t, 4, 5), e(t, 6, 7);
                        })(h),
                          (this.keyId = h);
                      }
                    }
                    break;
                  default:
                    var d = i.subarray(0, 16);
                    if (16 !== d.length) {
                      var c = new Uint8Array(16);
                      c.set(d, 16 - d.length), (d = c);
                    }
                    this.keyId = d;
                }
              if (!this.keyId || 16 !== this.keyId.byteLength) {
                var f = qt[this.uri];
                if (!f) {
                  var g = Object.keys(qt).length % Number.MAX_SAFE_INTEGER;
                  (f = new Uint8Array(16)),
                    new DataView(f.buffer, 12, 4).setUint32(0, g),
                    (qt[this.uri] = f);
                }
                this.keyId = f;
              }
              return this;
            }),
            t
          );
        })(),
        zt = /\{\$([a-zA-Z0-9-_]+)\}/g;
      function Qt(t) {
        return zt.test(t);
      }
      function Jt(t, e, r) {
        if (null !== t.variableList || t.hasVariableRefs)
          for (var i = r.length; i--; ) {
            var n = r[i],
              a = e[n];
            a && (e[n] = $t(t, a));
          }
      }
      function $t(t, e) {
        if (null !== t.variableList || t.hasVariableRefs) {
          var r = t.variableList;
          return e.replace(zt, function (e) {
            var i = e.substring(2, e.length - 1),
              n = null == r ? void 0 : r[i];
            return void 0 === n
              ? (t.playlistParsingError ||
                  (t.playlistParsingError = new Error(
                    'Missing preceding EXT-X-DEFINE tag for Variable Reference: "' +
                      i +
                      '"'
                  )),
                e)
              : n;
          });
        }
        return e;
      }
      function Zt(t, e, r) {
        var i,
          n,
          a = t.variableList;
        if ((a || (t.variableList = a = {}), "QUERYPARAM" in e)) {
          i = e.QUERYPARAM;
          try {
            var s = new self.URL(r).searchParams;
            if (!s.has(i))
              throw new Error(
                '"' +
                  i +
                  '" does not match any query parameter in URI: "' +
                  r +
                  '"'
              );
            n = s.get(i);
          } catch (e) {
            t.playlistParsingError ||
              (t.playlistParsingError = new Error(
                "EXT-X-DEFINE QUERYPARAM: " + e.message
              ));
          }
        } else (i = e.NAME), (n = e.VALUE);
        i in a
          ? t.playlistParsingError ||
            (t.playlistParsingError = new Error(
              'EXT-X-DEFINE duplicate Variable Name declarations: "' + i + '"'
            ))
          : (a[i] = n || "");
      }
      function te(t, e, r) {
        var i = e.IMPORT;
        if (r && i in r) {
          var n = t.variableList;
          n || (t.variableList = n = {}), (n[i] = r[i]);
        } else
          t.playlistParsingError ||
            (t.playlistParsingError = new Error(
              'EXT-X-DEFINE IMPORT attribute not found in Multivariant Playlist: "' +
                i +
                '"'
            ));
      }
      function ee(t) {
        if ((void 0 === t && (t = !0), "undefined" != typeof self))
          return (
            ((t || !self.MediaSource) && self.ManagedMediaSource) ||
            self.MediaSource ||
            self.WebKitMediaSource
          );
      }
      var re = {
        audio: {
          a3ds: 1,
          "ac-3": 0.95,
          "ac-4": 1,
          alac: 0.9,
          alaw: 1,
          dra1: 1,
          "dts+": 1,
          "dts-": 1,
          dtsc: 1,
          dtse: 1,
          dtsh: 1,
          "ec-3": 0.9,
          enca: 1,
          fLaC: 0.9,
          flac: 0.9,
          FLAC: 0.9,
          g719: 1,
          g726: 1,
          m4ae: 1,
          mha1: 1,
          mha2: 1,
          mhm1: 1,
          mhm2: 1,
          mlpa: 1,
          mp4a: 1,
          "raw ": 1,
          Opus: 1,
          opus: 1,
          samr: 1,
          sawb: 1,
          sawp: 1,
          sevc: 1,
          sqcp: 1,
          ssmv: 1,
          twos: 1,
          ulaw: 1,
        },
        video: {
          avc1: 1,
          avc2: 1,
          avc3: 1,
          avc4: 1,
          avcp: 1,
          av01: 0.8,
          drac: 1,
          dva1: 1,
          dvav: 1,
          dvh1: 0.7,
          dvhe: 0.7,
          encv: 1,
          hev1: 0.75,
          hvc1: 0.75,
          mjp2: 1,
          mp4v: 1,
          mvc1: 1,
          mvc2: 1,
          mvc3: 1,
          mvc4: 1,
          resv: 1,
          rv60: 1,
          s263: 1,
          svc1: 1,
          svc2: 1,
          "vc-1": 1,
          vp08: 1,
          vp09: 0.9,
        },
        text: { stpp: 1, wvtt: 1 },
      };
      function ie(t, e, r) {
        return (
          void 0 === r && (r = !0),
          !t.split(",").some(function (t) {
            return !ne(t, e, r);
          })
        );
      }
      function ne(t, e, r) {
        var i;
        void 0 === r && (r = !0);
        var n = ee(r);
        return (
          null != (i = null == n ? void 0 : n.isTypeSupported(ae(t, e))) && i
        );
      }
      function ae(t, e) {
        return e + '/mp4;codecs="' + t + '"';
      }
      function se(t) {
        if (t) {
          var e = t.substring(0, 4);
          return re.video[e];
        }
        return 2;
      }
      function oe(t) {
        return t.split(",").reduce(function (t, e) {
          var r = re.video[e];
          return r
            ? (2 * r + t) / (t ? 3 : 2)
            : (re.audio[e] + t) / (t ? 2 : 1);
        }, 0);
      }
      var le = {},
        ue = /flac|opus/i;
      function he(t, e) {
        return (
          void 0 === e && (e = !0),
          t.replace(ue, function (t) {
            return (function (t, e) {
              if ((void 0 === e && (e = !0), le[t])) return le[t];
              for (
                var r = {
                    flac: ["flac", "fLaC", "FLAC"],
                    opus: ["opus", "Opus"],
                  }[t],
                  i = 0;
                i < r.length;
                i++
              )
                if (ne(r[i], "audio", e)) return (le[t] = r[i]), r[i];
              return t;
            })(t.toLowerCase(), e);
          })
        );
      }
      function de(t, e) {
        return t && "mp4a" !== t ? t : e ? e.split(",")[0] : e;
      }
      var ce =
          /#EXT-X-STREAM-INF:([^\r\n]*)(?:[\r\n](?:#[^\r\n]*)?)*([^\r\n]+)|#EXT-X-(SESSION-DATA|SESSION-KEY|DEFINE|CONTENT-STEERING|START):([^\r\n]*)[\r\n]+/g,
        fe = /#EXT-X-MEDIA:(.*)/g,
        ge = /^#EXT(?:INF|-X-TARGETDURATION):/m,
        ve = new RegExp(
          [
            /#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source,
            /(?!#) *(\S[^\r\n]*)/.source,
            /#EXT-X-BYTERANGE:*(.+)/.source,
            /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source,
            /#.*/.source,
          ].join("|"),
          "g"
        ),
        me = new RegExp(
          [
            /#(EXTM3U)/.source,
            /#EXT-X-(DATERANGE|DEFINE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/
              .source,
            /#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\d+)/
              .source,
            /#EXT-X-(DISCONTINUITY|ENDLIST|GAP|INDEPENDENT-SEGMENTS)/.source,
            /(#)([^:]*):(.*)/.source,
            /(#)(.*)(?:.*)\r?\n?/.source,
          ].join("|")
        ),
        pe = (function () {
          function t() {}
          return (
            (t.findGroup = function (t, e) {
              for (var r = 0; r < t.length; r++) {
                var i = t[r];
                if (i.id === e) return i;
              }
            }),
            (t.resolve = function (t, e) {
              return p.buildAbsoluteURL(e, t, { alwaysNormalize: !0 });
            }),
            (t.isMediaPlaylist = function (t) {
              return ge.test(t);
            }),
            (t.parseMasterPlaylist = function (e, r) {
              var i,
                n = {
                  contentSteering: null,
                  levels: [],
                  playlistParsingError: null,
                  sessionData: null,
                  sessionKeys: null,
                  startTimeOffset: null,
                  variableList: null,
                  hasVariableRefs: Qt(e),
                },
                a = [];
              for (ce.lastIndex = 0; null != (i = ce.exec(e)); )
                if (i[1]) {
                  var s,
                    o = new x(i[1]);
                  Jt(n, o, [
                    "CODECS",
                    "SUPPLEMENTAL-CODECS",
                    "ALLOWED-CPC",
                    "PATHWAY-ID",
                    "STABLE-VARIANT-ID",
                    "AUDIO",
                    "VIDEO",
                    "SUBTITLES",
                    "CLOSED-CAPTIONS",
                    "NAME",
                  ]);
                  var l = $t(n, i[2]),
                    u = {
                      attrs: o,
                      bitrate:
                        o.decimalInteger("BANDWIDTH") ||
                        o.decimalInteger("AVERAGE-BANDWIDTH"),
                      name: o.NAME,
                      url: t.resolve(l, r),
                    },
                    h = o.decimalResolution("RESOLUTION");
                  h && ((u.width = h.width), (u.height = h.height)),
                    Te(o.CODECS, u),
                    (null != (s = u.unknownCodecs) && s.length) || a.push(u),
                    n.levels.push(u);
                } else if (i[3]) {
                  var d = i[3],
                    c = i[4];
                  switch (d) {
                    case "SESSION-DATA":
                      var f = new x(c);
                      Jt(n, f, ["DATA-ID", "LANGUAGE", "VALUE", "URI"]);
                      var g = f["DATA-ID"];
                      g &&
                        (null === n.sessionData && (n.sessionData = {}),
                        (n.sessionData[g] = f));
                      break;
                    case "SESSION-KEY":
                      var v = ye(c, r, n);
                      v.encrypted && v.isSupported()
                        ? (null === n.sessionKeys && (n.sessionKeys = []),
                          n.sessionKeys.push(v))
                        : w.warn(
                            '[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: "' +
                              c +
                              '"'
                          );
                      break;
                    case "DEFINE":
                      var m = new x(c);
                      Jt(n, m, ["NAME", "VALUE", "QUERYPARAM"]), Zt(n, m, r);
                      break;
                    case "CONTENT-STEERING":
                      var p = new x(c);
                      Jt(n, p, ["SERVER-URI", "PATHWAY-ID"]),
                        (n.contentSteering = {
                          uri: t.resolve(p["SERVER-URI"], r),
                          pathwayId: p["PATHWAY-ID"] || ".",
                        });
                      break;
                    case "START":
                      n.startTimeOffset = Ee(c);
                  }
                }
              var y = a.length > 0 && a.length < n.levels.length;
              return (
                (n.levels = y ? a : n.levels),
                0 === n.levels.length &&
                  (n.playlistParsingError = new Error(
                    "no levels found in manifest"
                  )),
                n
              );
            }),
            (t.parseMasterPlaylistMedia = function (e, r, i) {
              var n,
                a = {},
                s = i.levels,
                o = {
                  AUDIO: s.map(function (t) {
                    return { id: t.attrs.AUDIO, audioCodec: t.audioCodec };
                  }),
                  SUBTITLES: s.map(function (t) {
                    return { id: t.attrs.SUBTITLES, textCodec: t.textCodec };
                  }),
                  "CLOSED-CAPTIONS": [],
                },
                l = 0;
              for (fe.lastIndex = 0; null !== (n = fe.exec(e)); ) {
                var u = new x(n[1]),
                  h = u.TYPE;
                if (h) {
                  var d = o[h],
                    c = a[h] || [];
                  (a[h] = c),
                    Jt(i, u, [
                      "URI",
                      "GROUP-ID",
                      "LANGUAGE",
                      "ASSOC-LANGUAGE",
                      "STABLE-RENDITION-ID",
                      "NAME",
                      "INSTREAM-ID",
                      "CHARACTERISTICS",
                      "CHANNELS",
                    ]);
                  var f = u.LANGUAGE,
                    g = u["ASSOC-LANGUAGE"],
                    v = u.CHANNELS,
                    m = u.CHARACTERISTICS,
                    p = u["INSTREAM-ID"],
                    y = {
                      attrs: u,
                      bitrate: 0,
                      id: l++,
                      groupId: u["GROUP-ID"] || "",
                      name: u.NAME || f || "",
                      type: h,
                      default: u.bool("DEFAULT"),
                      autoselect: u.bool("AUTOSELECT"),
                      forced: u.bool("FORCED"),
                      lang: f,
                      url: u.URI ? t.resolve(u.URI, r) : "",
                    };
                  if (
                    (g && (y.assocLang = g),
                    v && (y.channels = v),
                    m && (y.characteristics = m),
                    p && (y.instreamId = p),
                    null != d && d.length)
                  ) {
                    var E = t.findGroup(d, y.groupId) || d[0];
                    Se(y, E, "audioCodec"), Se(y, E, "textCodec");
                  }
                  c.push(y);
                }
              }
              return a;
            }),
            (t.parseLevelPlaylist = function (t, e, r, i, n, a) {
              var s,
                l,
                u,
                h = new H(e),
                d = h.fragments,
                c = null,
                f = 0,
                g = 0,
                v = 0,
                m = 0,
                p = null,
                E = new G(i, e),
                T = -1,
                S = !1,
                L = null;
              for (
                ve.lastIndex = 0, h.m3u8 = t, h.hasVariableRefs = Qt(t);
                null !== (s = ve.exec(t));

              ) {
                S &&
                  ((S = !1),
                  ((E = new G(i, e)).start = v),
                  (E.sn = f),
                  (E.cc = m),
                  (E.level = r),
                  c &&
                    ((E.initSegment = c),
                    (E.rawProgramDateTime = c.rawProgramDateTime),
                    (c.rawProgramDateTime = null),
                    L && (E.setByteRange(L), (L = null))));
                var A = s[1];
                if (A) {
                  E.duration = parseFloat(A);
                  var R = (" " + s[2]).slice(1);
                  (E.title = R || null),
                    E.tagList.push(R ? ["INF", A, R] : ["INF", A]);
                } else if (s[3]) {
                  if (y(E.duration)) {
                    (E.start = v),
                      u && Re(E, u, h),
                      (E.sn = f),
                      (E.level = r),
                      (E.cc = m),
                      d.push(E);
                    var k = (" " + s[3]).slice(1);
                    (E.relurl = $t(h, k)),
                      Le(E, p),
                      (p = E),
                      (v += E.duration),
                      f++,
                      (g = 0),
                      (S = !0);
                  }
                } else if (s[4]) {
                  var b = (" " + s[4]).slice(1);
                  p ? E.setByteRange(b, p) : E.setByteRange(b);
                } else if (s[5])
                  (E.rawProgramDateTime = (" " + s[5]).slice(1)),
                    E.tagList.push(["PROGRAM-DATE-TIME", E.rawProgramDateTime]),
                    -1 === T && (T = d.length);
                else {
                  if (!(s = s[0].match(me))) {
                    w.warn(
                      "No matches on slow regex match for level playlist!"
                    );
                    continue;
                  }
                  for (l = 1; l < s.length && void 0 === s[l]; l++);
                  var D = (" " + s[l]).slice(1),
                    I = (" " + s[l + 1]).slice(1),
                    C = s[l + 2] ? (" " + s[l + 2]).slice(1) : "";
                  switch (D) {
                    case "PLAYLIST-TYPE":
                      h.type = I.toUpperCase();
                      break;
                    case "MEDIA-SEQUENCE":
                      f = h.startSN = parseInt(I);
                      break;
                    case "SKIP":
                      var _ = new x(I);
                      Jt(h, _, ["RECENTLY-REMOVED-DATERANGES"]);
                      var P = _.decimalInteger("SKIPPED-SEGMENTS");
                      if (y(P)) {
                        h.skippedSegments = P;
                        for (var M = P; M--; ) d.unshift(null);
                        f += P;
                      }
                      var O = _.enumeratedString("RECENTLY-REMOVED-DATERANGES");
                      O && (h.recentlyRemovedDateranges = O.split("\t"));
                      break;
                    case "TARGETDURATION":
                      h.targetduration = Math.max(parseInt(I), 1);
                      break;
                    case "VERSION":
                      h.version = parseInt(I);
                      break;
                    case "INDEPENDENT-SEGMENTS":
                    case "EXTM3U":
                      break;
                    case "ENDLIST":
                      h.live = !1;
                      break;
                    case "#":
                      (I || C) && E.tagList.push(C ? [I, C] : [I]);
                      break;
                    case "DISCONTINUITY":
                      m++, E.tagList.push(["DIS"]);
                      break;
                    case "GAP":
                      (E.gap = !0), E.tagList.push([D]);
                      break;
                    case "BITRATE":
                      E.tagList.push([D, I]);
                      break;
                    case "DATERANGE":
                      var N = new x(I);
                      Jt(h, N, [
                        "ID",
                        "CLASS",
                        "START-DATE",
                        "END-DATE",
                        "SCTE35-CMD",
                        "SCTE35-OUT",
                        "SCTE35-IN",
                      ]),
                        Jt(h, N, N.clientAttrs);
                      var U = new F(N, h.dateRanges[N.ID]);
                      U.isValid || h.skippedSegments
                        ? (h.dateRanges[U.id] = U)
                        : w.warn('Ignoring invalid DATERANGE tag: "' + I + '"'),
                        E.tagList.push(["EXT-X-DATERANGE", I]);
                      break;
                    case "DEFINE":
                      var B = new x(I);
                      Jt(h, B, ["NAME", "VALUE", "IMPORT", "QUERYPARAM"]),
                        "IMPORT" in B ? te(h, B, a) : Zt(h, B, e);
                      break;
                    case "DISCONTINUITY-SEQUENCE":
                      m = parseInt(I);
                      break;
                    case "KEY":
                      var V = ye(I, e, h);
                      if (V.isSupported()) {
                        if ("NONE" === V.method) {
                          u = void 0;
                          break;
                        }
                        u || (u = {}),
                          u[V.keyFormat] && (u = o({}, u)),
                          (u[V.keyFormat] = V);
                      } else
                        w.warn(
                          '[Keys] Ignoring invalid EXT-X-KEY tag: "' + I + '"'
                        );
                      break;
                    case "START":
                      h.startTimeOffset = Ee(I);
                      break;
                    case "MAP":
                      var Y = new x(I);
                      if ((Jt(h, Y, ["BYTERANGE", "URI"]), E.duration)) {
                        var W = new G(i, e);
                        Ae(W, Y, r, u),
                          (c = W),
                          (E.initSegment = c),
                          c.rawProgramDateTime &&
                            !E.rawProgramDateTime &&
                            (E.rawProgramDateTime = c.rawProgramDateTime);
                      } else {
                        var j = E.byteRangeEndOffset;
                        if (j) {
                          var q = E.byteRangeStartOffset;
                          L = j - q + "@" + q;
                        } else L = null;
                        Ae(E, Y, r, u), (c = E), (S = !0);
                      }
                      break;
                    case "SERVER-CONTROL":
                      var X = new x(I);
                      (h.canBlockReload = X.bool("CAN-BLOCK-RELOAD")),
                        (h.canSkipUntil = X.optionalFloat("CAN-SKIP-UNTIL", 0)),
                        (h.canSkipDateRanges =
                          h.canSkipUntil > 0 && X.bool("CAN-SKIP-DATERANGES")),
                        (h.partHoldBack = X.optionalFloat("PART-HOLD-BACK", 0)),
                        (h.holdBack = X.optionalFloat("HOLD-BACK", 0));
                      break;
                    case "PART-INF":
                      var z = new x(I);
                      h.partTarget = z.decimalFloatingPoint("PART-TARGET");
                      break;
                    case "PART":
                      var Q = h.partList;
                      Q || (Q = h.partList = []);
                      var J = g > 0 ? Q[Q.length - 1] : void 0,
                        $ = g++,
                        Z = new x(I);
                      Jt(h, Z, ["BYTERANGE", "URI"]);
                      var tt = new K(Z, E, e, $, J);
                      Q.push(tt), (E.duration += tt.duration);
                      break;
                    case "PRELOAD-HINT":
                      var et = new x(I);
                      Jt(h, et, ["URI"]), (h.preloadHint = et);
                      break;
                    case "RENDITION-REPORT":
                      var rt = new x(I);
                      Jt(h, rt, ["URI"]),
                        (h.renditionReports = h.renditionReports || []),
                        h.renditionReports.push(rt);
                      break;
                    default:
                      w.warn("line parsed but not handled: " + s);
                  }
                }
              }
              p && !p.relurl
                ? (d.pop(),
                  (v -= p.duration),
                  h.partList && (h.fragmentHint = p))
                : h.partList &&
                  (Le(E, p),
                  (E.cc = m),
                  (h.fragmentHint = E),
                  u && Re(E, u, h));
              var it = d.length,
                nt = d[0],
                at = d[it - 1];
              if ((v += h.skippedSegments * h.targetduration) > 0 && it && at) {
                h.averagetargetduration = v / it;
                var st = at.sn;
                (h.endSN = "initSegment" !== st ? st : 0),
                  h.live || (at.endList = !0),
                  nt && (h.startCC = nt.cc);
              } else (h.endSN = 0), (h.startCC = 0);
              return (
                h.fragmentHint && (v += h.fragmentHint.duration),
                (h.totalduration = v),
                (h.endCC = m),
                T > 0 &&
                  (function (t, e) {
                    for (var r = t[e], i = e; i--; ) {
                      var n = t[i];
                      if (!n) return;
                      (n.programDateTime =
                        r.programDateTime - 1e3 * n.duration),
                        (r = n);
                    }
                  })(d, T),
                h
              );
            }),
            t
          );
        })();
      function ye(t, e, r) {
        var i,
          n,
          a = new x(t);
        Jt(r, a, ["KEYFORMAT", "KEYFORMATVERSIONS", "URI", "IV", "URI"]);
        var s = null != (i = a.METHOD) ? i : "",
          o = a.URI,
          l = a.hexadecimalInteger("IV"),
          u = a.KEYFORMATVERSIONS,
          h = null != (n = a.KEYFORMAT) ? n : "identity";
        o && a.IV && !l && w.error("Invalid IV: " + a.IV);
        var d = o ? pe.resolve(o, e) : "",
          c = (u || "1").split("/").map(Number).filter(Number.isFinite);
        return new Xt(s, d, h, c, l);
      }
      function Ee(t) {
        var e = new x(t).decimalFloatingPoint("TIME-OFFSET");
        return y(e) ? e : null;
      }
      function Te(t, e) {
        var r = (t || "").split(/[ ,]+/).filter(function (t) {
          return t;
        });
        ["video", "audio", "text"].forEach(function (t) {
          var i = r.filter(function (e) {
            return (function (t, e) {
              var r = re[e];
              return !!r && !!r[t.slice(0, 4)];
            })(e, t);
          });
          i.length &&
            ((e[t + "Codec"] = i.join(",")),
            (r = r.filter(function (t) {
              return -1 === i.indexOf(t);
            })));
        }),
          (e.unknownCodecs = r);
      }
      function Se(t, e, r) {
        var i = e[r];
        i && (t[r] = i);
      }
      function Le(t, e) {
        t.rawProgramDateTime
          ? (t.programDateTime = Date.parse(t.rawProgramDateTime))
          : null != e &&
            e.programDateTime &&
            (t.programDateTime = e.endProgramDateTime),
          y(t.programDateTime) ||
            ((t.programDateTime = null), (t.rawProgramDateTime = null));
      }
      function Ae(t, e, r, i) {
        (t.relurl = e.URI),
          e.BYTERANGE && t.setByteRange(e.BYTERANGE),
          (t.level = r),
          (t.sn = "initSegment"),
          i && (t.levelkeys = i),
          (t.initSegment = null);
      }
      function Re(t, e, r) {
        t.levelkeys = e;
        var i = r.encryptedFragments;
        (i.length && i[i.length - 1].levelkeys === e) ||
          !Object.keys(e).some(function (t) {
            return e[t].isCommonEncryption;
          }) ||
          i.push(t);
      }
      var ke = "manifest",
        be = "level",
        De = "audioTrack",
        Ie = "subtitleTrack",
        we = "main",
        Ce = "audio",
        _e = "subtitle";
      function xe(t) {
        switch (t.type) {
          case De:
            return Ce;
          case Ie:
            return _e;
          default:
            return we;
        }
      }
      function Pe(t, e) {
        var r = t.url;
        return (void 0 !== r && 0 !== r.indexOf("data:")) || (r = e.url), r;
      }
      var Fe = (function () {
        function t(t) {
          (this.hls = void 0),
            (this.loaders = Object.create(null)),
            (this.variableList = null),
            (this.hls = t),
            this.registerListeners();
        }
        var e = t.prototype;
        return (
          (e.startLoad = function (t) {}),
          (e.stopLoad = function () {
            this.destroyInternalLoaders();
          }),
          (e.registerListeners = function () {
            var t = this.hls;
            t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
              t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
              t.on(S.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
              t.on(S.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this);
          }),
          (e.unregisterListeners = function () {
            var t = this.hls;
            t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
              t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
              t.off(S.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
              t.off(
                S.SUBTITLE_TRACK_LOADING,
                this.onSubtitleTrackLoading,
                this
              );
          }),
          (e.createInternalLoader = function (t) {
            var e = this.hls.config,
              r = e.pLoader,
              i = e.loader,
              n = new (r || i)(e);
            return (this.loaders[t.type] = n), n;
          }),
          (e.getInternalLoader = function (t) {
            return this.loaders[t.type];
          }),
          (e.resetInternalLoader = function (t) {
            this.loaders[t] && delete this.loaders[t];
          }),
          (e.destroyInternalLoaders = function () {
            for (var t in this.loaders) {
              var e = this.loaders[t];
              e && e.destroy(), this.resetInternalLoader(t);
            }
          }),
          (e.destroy = function () {
            (this.variableList = null),
              this.unregisterListeners(),
              this.destroyInternalLoaders();
          }),
          (e.onManifestLoading = function (t, e) {
            var r = e.url;
            (this.variableList = null),
              this.load({
                id: null,
                level: 0,
                responseType: "text",
                type: ke,
                url: r,
                deliveryDirectives: null,
              });
          }),
          (e.onLevelLoading = function (t, e) {
            var r = e.id,
              i = e.level,
              n = e.pathwayId,
              a = e.url,
              s = e.deliveryDirectives;
            this.load({
              id: r,
              level: i,
              pathwayId: n,
              responseType: "text",
              type: be,
              url: a,
              deliveryDirectives: s,
            });
          }),
          (e.onAudioTrackLoading = function (t, e) {
            var r = e.id,
              i = e.groupId,
              n = e.url,
              a = e.deliveryDirectives;
            this.load({
              id: r,
              groupId: i,
              level: null,
              responseType: "text",
              type: De,
              url: n,
              deliveryDirectives: a,
            });
          }),
          (e.onSubtitleTrackLoading = function (t, e) {
            var r = e.id,
              i = e.groupId,
              n = e.url,
              a = e.deliveryDirectives;
            this.load({
              id: r,
              groupId: i,
              level: null,
              responseType: "text",
              type: Ie,
              url: n,
              deliveryDirectives: a,
            });
          }),
          (e.load = function (t) {
            var e,
              r,
              i,
              n = this,
              a = this.hls.config,
              s = this.getInternalLoader(t);
            if (s) {
              var l = s.context;
              if (l && l.url === t.url && l.level === t.level)
                return void w.trace(
                  "[playlist-loader]: playlist request ongoing"
                );
              w.log(
                "[playlist-loader]: aborting previous loader for type: " +
                  t.type
              ),
                s.abort();
            }
            if (
              ((r =
                t.type === ke
                  ? a.manifestLoadPolicy.default
                  : o({}, a.playlistLoadPolicy.default, {
                      timeoutRetry: null,
                      errorRetry: null,
                    })),
              (s = this.createInternalLoader(t)),
              y(null == (e = t.deliveryDirectives) ? void 0 : e.part) &&
                (t.type === be && null !== t.level
                  ? (i = this.hls.levels[t.level].details)
                  : t.type === De && null !== t.id
                  ? (i = this.hls.audioTracks[t.id].details)
                  : t.type === Ie &&
                    null !== t.id &&
                    (i = this.hls.subtitleTracks[t.id].details),
                i))
            ) {
              var u = i.partTarget,
                h = i.targetduration;
              if (u && h) {
                var d = 1e3 * Math.max(3 * u, 0.8 * h);
                r = o({}, r, {
                  maxTimeToFirstByteMs: Math.min(d, r.maxTimeToFirstByteMs),
                  maxLoadTimeMs: Math.min(d, r.maxTimeToFirstByteMs),
                });
              }
            }
            var c = r.errorRetry || r.timeoutRetry || {},
              f = {
                loadPolicy: r,
                timeout: r.maxLoadTimeMs,
                maxRetry: c.maxNumRetry || 0,
                retryDelay: c.retryDelayMs || 0,
                maxRetryDelay: c.maxRetryDelayMs || 0,
              },
              g = {
                onSuccess: function (t, e, r, i) {
                  var a = n.getInternalLoader(r);
                  n.resetInternalLoader(r.type);
                  var s = t.data;
                  0 === s.indexOf("#EXTM3U")
                    ? ((e.parsing.start = performance.now()),
                      pe.isMediaPlaylist(s)
                        ? n.handleTrackOrLevelPlaylist(t, e, r, i || null, a)
                        : n.handleMasterPlaylist(t, e, r, i))
                    : n.handleManifestParsingError(
                        t,
                        r,
                        new Error("no EXTM3U delimiter"),
                        i || null,
                        e
                      );
                },
                onError: function (t, e, r, i) {
                  n.handleNetworkError(e, r, !1, t, i);
                },
                onTimeout: function (t, e, r) {
                  n.handleNetworkError(e, r, !0, void 0, t);
                },
              };
            s.load(t, f, g);
          }),
          (e.handleMasterPlaylist = function (t, e, r, i) {
            var n = this.hls,
              a = t.data,
              s = Pe(t, r),
              o = pe.parseMasterPlaylist(a, s);
            if (o.playlistParsingError)
              this.handleManifestParsingError(
                t,
                r,
                o.playlistParsingError,
                i,
                e
              );
            else {
              var l = o.contentSteering,
                u = o.levels,
                h = o.sessionData,
                d = o.sessionKeys,
                c = o.startTimeOffset,
                f = o.variableList;
              this.variableList = f;
              var g = pe.parseMasterPlaylistMedia(a, s, o),
                v = g.AUDIO,
                m = void 0 === v ? [] : v,
                p = g.SUBTITLES,
                y = g["CLOSED-CAPTIONS"];
              m.length &&
                (m.some(function (t) {
                  return !t.url;
                }) ||
                  !u[0].audioCodec ||
                  u[0].attrs.AUDIO ||
                  (w.log(
                    "[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one"
                  ),
                  m.unshift({
                    type: "main",
                    name: "main",
                    groupId: "main",
                    default: !1,
                    autoselect: !1,
                    forced: !1,
                    id: -1,
                    attrs: new x({}),
                    bitrate: 0,
                    url: "",
                  }))),
                n.trigger(S.MANIFEST_LOADED, {
                  levels: u,
                  audioTracks: m,
                  subtitles: p,
                  captions: y,
                  contentSteering: l,
                  url: s,
                  stats: e,
                  networkDetails: i,
                  sessionData: h,
                  sessionKeys: d,
                  startTimeOffset: c,
                  variableList: f,
                });
            }
          }),
          (e.handleTrackOrLevelPlaylist = function (t, e, r, i, n) {
            var a = this.hls,
              s = r.id,
              o = r.level,
              l = r.type,
              u = Pe(t, r),
              h = y(o) ? o : y(s) ? s : 0,
              d = xe(r),
              c = pe.parseLevelPlaylist(t.data, u, h, d, 0, this.variableList);
            if (l === ke) {
              var f = {
                attrs: new x({}),
                bitrate: 0,
                details: c,
                name: "",
                url: u,
              };
              a.trigger(S.MANIFEST_LOADED, {
                levels: [f],
                audioTracks: [],
                url: u,
                stats: e,
                networkDetails: i,
                sessionData: null,
                sessionKeys: null,
                contentSteering: null,
                startTimeOffset: null,
                variableList: null,
              });
            }
            (e.parsing.end = performance.now()),
              (r.levelDetails = c),
              this.handlePlaylistLoaded(c, t, e, r, i, n);
          }),
          (e.handleManifestParsingError = function (t, e, r, i, n) {
            this.hls.trigger(S.ERROR, {
              type: L.NETWORK_ERROR,
              details: A.MANIFEST_PARSING_ERROR,
              fatal: e.type === ke,
              url: t.url,
              err: r,
              error: r,
              reason: r.message,
              response: t,
              context: e,
              networkDetails: i,
              stats: n,
            });
          }),
          (e.handleNetworkError = function (t, e, r, n, a) {
            void 0 === r && (r = !1);
            var s =
              "A network " +
              (r
                ? "timeout"
                : "error" + (n ? " (status " + n.code + ")" : "")) +
              " occurred while loading " +
              t.type;
            t.type === be
              ? (s += ": " + t.level + " id: " + t.id)
              : (t.type !== De && t.type !== Ie) ||
                (s += " id: " + t.id + ' group-id: "' + t.groupId + '"');
            var o = new Error(s);
            w.warn("[playlist-loader]: " + s);
            var l = A.UNKNOWN,
              u = !1,
              h = this.getInternalLoader(t);
            switch (t.type) {
              case ke:
                (l = r ? A.MANIFEST_LOAD_TIMEOUT : A.MANIFEST_LOAD_ERROR),
                  (u = !0);
                break;
              case be:
                (l = r ? A.LEVEL_LOAD_TIMEOUT : A.LEVEL_LOAD_ERROR), (u = !1);
                break;
              case De:
                (l = r ? A.AUDIO_TRACK_LOAD_TIMEOUT : A.AUDIO_TRACK_LOAD_ERROR),
                  (u = !1);
                break;
              case Ie:
                (l = r ? A.SUBTITLE_TRACK_LOAD_TIMEOUT : A.SUBTITLE_LOAD_ERROR),
                  (u = !1);
            }
            h && this.resetInternalLoader(t.type);
            var d = {
              type: L.NETWORK_ERROR,
              details: l,
              fatal: u,
              url: t.url,
              loader: h,
              context: t,
              error: o,
              networkDetails: e,
              stats: a,
            };
            if (n) {
              var c = (null == e ? void 0 : e.url) || t.url;
              d.response = i({ url: c, data: void 0 }, n);
            }
            this.hls.trigger(S.ERROR, d);
          }),
          (e.handlePlaylistLoaded = function (t, e, r, i, n, a) {
            var s = this.hls,
              o = i.type,
              l = i.level,
              u = i.id,
              h = i.groupId,
              d = i.deliveryDirectives,
              c = Pe(e, i),
              f = xe(i),
              g = "number" == typeof i.level && f === we ? l : void 0;
            if (t.fragments.length) {
              t.targetduration ||
                (t.playlistParsingError = new Error("Missing Target Duration"));
              var v = t.playlistParsingError;
              if (v)
                s.trigger(S.ERROR, {
                  type: L.NETWORK_ERROR,
                  details: A.LEVEL_PARSING_ERROR,
                  fatal: !1,
                  url: c,
                  error: v,
                  reason: v.message,
                  response: e,
                  context: i,
                  level: g,
                  parent: f,
                  networkDetails: n,
                  stats: r,
                });
              else
                switch (
                  (t.live &&
                    a &&
                    (a.getCacheAge && (t.ageHeader = a.getCacheAge() || 0),
                    (a.getCacheAge && !isNaN(t.ageHeader)) ||
                      (t.ageHeader = 0)),
                  o)
                ) {
                  case ke:
                  case be:
                    s.trigger(S.LEVEL_LOADED, {
                      details: t,
                      level: g || 0,
                      id: u || 0,
                      stats: r,
                      networkDetails: n,
                      deliveryDirectives: d,
                    });
                    break;
                  case De:
                    s.trigger(S.AUDIO_TRACK_LOADED, {
                      details: t,
                      id: u || 0,
                      groupId: h || "",
                      stats: r,
                      networkDetails: n,
                      deliveryDirectives: d,
                    });
                    break;
                  case Ie:
                    s.trigger(S.SUBTITLE_TRACK_LOADED, {
                      details: t,
                      id: u || 0,
                      groupId: h || "",
                      stats: r,
                      networkDetails: n,
                      deliveryDirectives: d,
                    });
                }
            } else {
              var m = new Error("No Segments found in Playlist");
              s.trigger(S.ERROR, {
                type: L.NETWORK_ERROR,
                details: A.LEVEL_EMPTY_ERROR,
                fatal: !1,
                url: c,
                error: m,
                reason: m.message,
                response: e,
                context: i,
                level: g,
                parent: f,
                networkDetails: n,
                stats: r,
              });
            }
          }),
          t
        );
      })();
      function Me(t, e) {
        var r;
        try {
          r = new Event("addtrack");
        } catch (t) {
          (r = document.createEvent("Event")).initEvent("addtrack", !1, !1);
        }
        (r.track = t), e.dispatchEvent(r);
      }
      function Oe(t, e) {
        var r = t.mode;
        if (
          ("disabled" === r && (t.mode = "hidden"),
          t.cues && !t.cues.getCueById(e.id))
        )
          try {
            if ((t.addCue(e), !t.cues.getCueById(e.id)))
              throw new Error("addCue is failed for: " + e);
          } catch (r) {
            w.debug("[texttrack-utils]: " + r);
            try {
              var i = new self.TextTrackCue(e.startTime, e.endTime, e.text);
              (i.id = e.id), t.addCue(i);
            } catch (t) {
              w.debug(
                "[texttrack-utils]: Legacy TextTrackCue fallback failed: " + t
              );
            }
          }
        "disabled" === r && (t.mode = r);
      }
      function Ne(t) {
        var e = t.mode;
        if (("disabled" === e && (t.mode = "hidden"), t.cues))
          for (var r = t.cues.length; r--; ) t.removeCue(t.cues[r]);
        "disabled" === e && (t.mode = e);
      }
      function Ue(t, e, r, i) {
        var n = t.mode;
        if (
          ("disabled" === n && (t.mode = "hidden"), t.cues && t.cues.length > 0)
        )
          for (
            var a = (function (t, e, r) {
                var i = [],
                  n = (function (t, e) {
                    if (e < t[0].startTime) return 0;
                    var r = t.length - 1;
                    if (e > t[r].endTime) return -1;
                    for (var i = 0, n = r; i <= n; ) {
                      var a = Math.floor((n + i) / 2);
                      if (e < t[a].startTime) n = a - 1;
                      else {
                        if (!(e > t[a].startTime && i < r)) return a;
                        i = a + 1;
                      }
                    }
                    return t[i].startTime - e < e - t[n].startTime ? i : n;
                  })(t, e);
                if (n > -1)
                  for (var a = n, s = t.length; a < s; a++) {
                    var o = t[a];
                    if (o.startTime >= e && o.endTime <= r) i.push(o);
                    else if (o.startTime > r) return i;
                  }
                return i;
              })(t.cues, e, r),
              s = 0;
            s < a.length;
            s++
          )
            (i && !i(a[s])) || t.removeCue(a[s]);
        "disabled" === n && (t.mode = n);
      }
      function Be(t) {
        for (var e = [], r = 0; r < t.length; r++) {
          var i = t[r];
          ("subtitles" !== i.kind && "captions" !== i.kind) ||
            !i.label ||
            e.push(t[r]);
        }
        return e;
      }
      var Ge = "org.id3",
        Ke = "com.apple.quicktime.HLS",
        He = "https://aomedia.org/emsg/ID3";
      function Ve() {
        if ("undefined" != typeof self) return self.VTTCue || self.TextTrackCue;
      }
      function Ye(t, e, r, n, a) {
        var s = new t(e, r, "");
        try {
          (s.value = n), a && (s.type = a);
        } catch (o) {
          s = new t(e, r, JSON.stringify(a ? i({ type: a }, n) : n));
        }
        return s;
      }
      var We = (function () {
        var t = Ve();
        try {
          t && new t(0, Number.POSITIVE_INFINITY, "");
        } catch (t) {
          return Number.MAX_VALUE;
        }
        return Number.POSITIVE_INFINITY;
      })();
      function je(t, e) {
        return t.getTime() / 1e3 - e;
      }
      var qe = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.id3Track = null),
              (this.media = null),
              (this.dateRangeCuesAppended = {}),
              (this.hls = t),
              this._registerListeners();
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this._unregisterListeners(),
                (this.id3Track = null),
                (this.media = null),
                (this.dateRangeCuesAppended = {}),
                (this.hls = null);
            }),
            (e._registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this);
            }),
            (e._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(
                  S.FRAG_PARSING_METADATA,
                  this.onFragParsingMetadata,
                  this
                ),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this);
            }),
            (e.onMediaAttached = function (t, e) {
              this.media = e.media;
            }),
            (e.onMediaDetaching = function () {
              this.id3Track &&
                (Ne(this.id3Track),
                (this.id3Track = null),
                (this.media = null),
                (this.dateRangeCuesAppended = {}));
            }),
            (e.onManifestLoading = function () {
              this.dateRangeCuesAppended = {};
            }),
            (e.createTrack = function (t) {
              var e = this.getID3Track(t.textTracks);
              return (e.mode = "hidden"), e;
            }),
            (e.getID3Track = function (t) {
              if (this.media) {
                for (var e = 0; e < t.length; e++) {
                  var r = t[e];
                  if ("metadata" === r.kind && "id3" === r.label)
                    return Me(r, this.media), r;
                }
                return this.media.addTextTrack("metadata", "id3");
              }
            }),
            (e.onFragParsingMetadata = function (t, e) {
              if (this.media) {
                var r = this.hls.config,
                  i = r.enableEmsgMetadataCues,
                  n = r.enableID3MetadataCues;
                if (i || n) {
                  var a = e.samples;
                  this.id3Track ||
                    (this.id3Track = this.createTrack(this.media));
                  var s = Ve();
                  if (s)
                    for (var o = 0; o < a.length; o++) {
                      var l = a[o].type;
                      if ((l !== He || i) && n) {
                        var u = gt(a[o].data);
                        if (u) {
                          var h = a[o].pts,
                            d = h + a[o].duration;
                          d > We && (d = We), d - h <= 0 && (d = h + 0.25);
                          for (var c = 0; c < u.length; c++) {
                            var f = u[c];
                            if (!ct(f)) {
                              this.updateId3CueEnds(h, l);
                              var g = Ye(s, h, d, f, l);
                              g && this.id3Track.addCue(g);
                            }
                          }
                        }
                      }
                    }
                }
              }
            }),
            (e.updateId3CueEnds = function (t, e) {
              var r,
                i = null == (r = this.id3Track) ? void 0 : r.cues;
              if (i)
                for (var n = i.length; n--; ) {
                  var a = i[n];
                  a.type === e &&
                    a.startTime < t &&
                    a.endTime === We &&
                    (a.endTime = t);
                }
            }),
            (e.onBufferFlushing = function (t, e) {
              var r = e.startOffset,
                i = e.endOffset,
                n = e.type,
                a = this.id3Track,
                s = this.hls;
              if (s) {
                var o = s.config,
                  l = o.enableEmsgMetadataCues,
                  u = o.enableID3MetadataCues;
                a &&
                  (l || u) &&
                  Ue(
                    a,
                    r,
                    i,
                    "audio" === n
                      ? function (t) {
                          return t.type === Ge && u;
                        }
                      : "video" === n
                      ? function (t) {
                          return t.type === He && l;
                        }
                      : function (t) {
                          return (t.type === Ge && u) || (t.type === He && l);
                        }
                  );
              }
            }),
            (e.onLevelUpdated = function (t, e) {
              var r = this,
                i = e.details;
              if (
                this.media &&
                i.hasProgramDateTime &&
                this.hls.config.enableDateRangeMetadataCues
              ) {
                var n = this.dateRangeCuesAppended,
                  a = this.id3Track,
                  s = i.dateRanges,
                  o = Object.keys(s);
                if (a)
                  for (
                    var l = Object.keys(n).filter(function (t) {
                        return !o.includes(t);
                      }),
                      u = function () {
                        var t = l[h];
                        Object.keys(n[t].cues).forEach(function (e) {
                          a.removeCue(n[t].cues[e]);
                        }),
                          delete n[t];
                      },
                      h = l.length;
                    h--;

                  )
                    u();
                var d = i.fragments[i.fragments.length - 1];
                if (
                  0 !== o.length &&
                  y(null == d ? void 0 : d.programDateTime)
                ) {
                  this.id3Track ||
                    (this.id3Track = this.createTrack(this.media));
                  for (
                    var c = d.programDateTime / 1e3 - d.start,
                      f = Ve(),
                      g = function () {
                        var t = o[v],
                          e = s[t],
                          i = je(e.startDate, c),
                          a = n[t],
                          l = (null == a ? void 0 : a.cues) || {},
                          u = (null == a ? void 0 : a.durationKnown) || !1,
                          h = We,
                          d = e.endDate;
                        if (d) (h = je(d, c)), (u = !0);
                        else if (e.endOnNext && !u) {
                          var g = o.reduce(function (t, r) {
                            if (r !== e.id) {
                              var i = s[r];
                              if (
                                i.class === e.class &&
                                i.startDate > e.startDate &&
                                (!t || e.startDate < t.startDate)
                              )
                                return i;
                            }
                            return t;
                          }, null);
                          g && ((h = je(g.startDate, c)), (u = !0));
                        }
                        for (
                          var m, p, y = Object.keys(e.attr), E = 0;
                          E < y.length;
                          E++
                        ) {
                          var T = y[E];
                          if (
                            "ID" !== (p = T) &&
                            "CLASS" !== p &&
                            "START-DATE" !== p &&
                            "DURATION" !== p &&
                            "END-DATE" !== p &&
                            "END-ON-NEXT" !== p
                          ) {
                            var S = l[T];
                            if (S) u && !a.durationKnown && (S.endTime = h);
                            else if (f) {
                              var L = e.attr[T];
                              P(T) &&
                                ((m = L),
                                (L = Uint8Array.from(
                                  m
                                    .replace(/^0x/, "")
                                    .replace(/([\da-fA-F]{2}) ?/g, "0x$1 ")
                                    .replace(/ +$/, "")
                                    .split(" ")
                                ).buffer));
                              var A = Ye(f, i, h, { key: T, data: L }, Ke);
                              A &&
                                ((A.id = t), r.id3Track.addCue(A), (l[T] = A));
                            }
                          }
                        }
                        n[t] = { cues: l, dateRange: e, durationKnown: u };
                      },
                      v = 0;
                    v < o.length;
                    v++
                  )
                    g();
                }
              }
            }),
            t
          );
        })(),
        Xe = (function () {
          function t(t) {
            var e = this;
            (this.hls = void 0),
              (this.config = void 0),
              (this.media = null),
              (this.levelDetails = null),
              (this.currentTime = 0),
              (this.stallCount = 0),
              (this._latency = null),
              (this.timeupdateHandler = function () {
                return e.timeupdate();
              }),
              (this.hls = t),
              (this.config = t.config),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.unregisterListeners(),
                this.onMediaDetaching(),
                (this.levelDetails = null),
                (this.hls = this.timeupdateHandler = null);
            }),
            (e.registerListeners = function () {
              this.hls.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                this.hls.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.on(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                this.hls.on(S.ERROR, this.onError, this);
            }),
            (e.unregisterListeners = function () {
              this.hls.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                this.hls.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.off(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                this.hls.off(S.ERROR, this.onError, this);
            }),
            (e.onMediaAttached = function (t, e) {
              (this.media = e.media),
                this.media.addEventListener(
                  "timeupdate",
                  this.timeupdateHandler
                );
            }),
            (e.onMediaDetaching = function () {
              this.media &&
                (this.media.removeEventListener(
                  "timeupdate",
                  this.timeupdateHandler
                ),
                (this.media = null));
            }),
            (e.onManifestLoading = function () {
              (this.levelDetails = null),
                (this._latency = null),
                (this.stallCount = 0);
            }),
            (e.onLevelUpdated = function (t, e) {
              var r = e.details;
              (this.levelDetails = r),
                r.advanced && this.timeupdate(),
                !r.live &&
                  this.media &&
                  this.media.removeEventListener(
                    "timeupdate",
                    this.timeupdateHandler
                  );
            }),
            (e.onError = function (t, e) {
              var r;
              e.details === A.BUFFER_STALLED_ERROR &&
                (this.stallCount++,
                null != (r = this.levelDetails) &&
                  r.live &&
                  w.warn(
                    "[playback-rate-controller]: Stall detected, adjusting target latency"
                  ));
            }),
            (e.timeupdate = function () {
              var t = this.media,
                e = this.levelDetails;
              if (t && e) {
                this.currentTime = t.currentTime;
                var r = this.computeLatency();
                if (null !== r) {
                  this._latency = r;
                  var i = this.config,
                    n = i.lowLatencyMode,
                    a = i.maxLiveSyncPlaybackRate;
                  if (n && 1 !== a && e.live) {
                    var s = this.targetLatency;
                    if (null !== s) {
                      var o = r - s;
                      if (
                        o < Math.min(this.maxLatency, s + e.targetduration) &&
                        o > 0.05 &&
                        this.forwardBufferLength > 1
                      ) {
                        var l = Math.min(2, Math.max(1, a)),
                          u =
                            Math.round(
                              (2 /
                                (1 + Math.exp(-0.75 * o - this.edgeStalled))) *
                                20
                            ) / 20;
                        t.playbackRate = Math.min(l, Math.max(1, u));
                      } else
                        1 !== t.playbackRate &&
                          0 !== t.playbackRate &&
                          (t.playbackRate = 1);
                    }
                  }
                }
              }
            }),
            (e.estimateLiveEdge = function () {
              var t = this.levelDetails;
              return null === t ? null : t.edge + t.age;
            }),
            (e.computeLatency = function () {
              var t = this.estimateLiveEdge();
              return null === t ? null : t - this.currentTime;
            }),
            s(t, [
              {
                key: "latency",
                get: function () {
                  return this._latency || 0;
                },
              },
              {
                key: "maxLatency",
                get: function () {
                  var t = this.config,
                    e = this.levelDetails;
                  return void 0 !== t.liveMaxLatencyDuration
                    ? t.liveMaxLatencyDuration
                    : e
                    ? t.liveMaxLatencyDurationCount * e.targetduration
                    : 0;
                },
              },
              {
                key: "targetLatency",
                get: function () {
                  var t = this.levelDetails;
                  if (null === t) return null;
                  var e = t.holdBack,
                    r = t.partHoldBack,
                    i = t.targetduration,
                    n = this.config,
                    a = n.liveSyncDuration,
                    s = n.liveSyncDurationCount,
                    o = n.lowLatencyMode,
                    l = this.hls.userConfig,
                    u = (o && r) || e;
                  (l.liveSyncDuration || l.liveSyncDurationCount || 0 === u) &&
                    (u = void 0 !== a ? a : s * i);
                  var h = i;
                  return u + Math.min(1 * this.stallCount, h);
                },
              },
              {
                key: "liveSyncPosition",
                get: function () {
                  var t = this.estimateLiveEdge(),
                    e = this.targetLatency,
                    r = this.levelDetails;
                  if (null === t || null === e || null === r) return null;
                  var i = r.edge,
                    n = t - e - this.edgeStalled,
                    a = i - r.totalduration,
                    s =
                      i -
                      ((this.config.lowLatencyMode && r.partTarget) ||
                        r.targetduration);
                  return Math.min(Math.max(a, n), s);
                },
              },
              {
                key: "drift",
                get: function () {
                  var t = this.levelDetails;
                  return null === t ? 1 : t.drift;
                },
              },
              {
                key: "edgeStalled",
                get: function () {
                  var t = this.levelDetails;
                  if (null === t) return 0;
                  var e =
                    3 *
                    ((this.config.lowLatencyMode && t.partTarget) ||
                      t.targetduration);
                  return Math.max(t.age - e, 0);
                },
              },
              {
                key: "forwardBufferLength",
                get: function () {
                  var t = this.media,
                    e = this.levelDetails;
                  if (!t || !e) return 0;
                  var r = t.buffered.length;
                  return (
                    (r ? t.buffered.end(r - 1) : e.edge) - this.currentTime
                  );
                },
              },
            ]),
            t
          );
        })(),
        ze = ["NONE", "TYPE-0", "TYPE-1", null],
        Qe = ["SDR", "PQ", "HLG"],
        Je = "",
        $e = "YES",
        Ze = "v2";
      function tr(t) {
        var e = t.canSkipUntil,
          r = t.canSkipDateRanges,
          i = t.age;
        return e && i < e / 2 ? (r ? Ze : $e) : Je;
      }
      var er = (function () {
          function t(t, e, r) {
            (this.msn = void 0),
              (this.part = void 0),
              (this.skip = void 0),
              (this.msn = t),
              (this.part = e),
              (this.skip = r);
          }
          return (
            (t.prototype.addDirectives = function (t) {
              var e = new self.URL(t);
              return (
                void 0 !== this.msn &&
                  e.searchParams.set("_HLS_msn", this.msn.toString()),
                void 0 !== this.part &&
                  e.searchParams.set("_HLS_part", this.part.toString()),
                this.skip && e.searchParams.set("_HLS_skip", this.skip),
                e.href
              );
            }),
            t
          );
        })(),
        rr = (function () {
          function t(t) {
            (this._attrs = void 0),
              (this.audioCodec = void 0),
              (this.bitrate = void 0),
              (this.codecSet = void 0),
              (this.url = void 0),
              (this.frameRate = void 0),
              (this.height = void 0),
              (this.id = void 0),
              (this.name = void 0),
              (this.videoCodec = void 0),
              (this.width = void 0),
              (this.details = void 0),
              (this.fragmentError = 0),
              (this.loadError = 0),
              (this.loaded = void 0),
              (this.realBitrate = 0),
              (this.supportedPromise = void 0),
              (this.supportedResult = void 0),
              (this._avgBitrate = 0),
              (this._audioGroups = void 0),
              (this._subtitleGroups = void 0),
              (this._urlId = 0),
              (this.url = [t.url]),
              (this._attrs = [t.attrs]),
              (this.bitrate = t.bitrate),
              t.details && (this.details = t.details),
              (this.id = t.id || 0),
              (this.name = t.name),
              (this.width = t.width || 0),
              (this.height = t.height || 0),
              (this.frameRate = t.attrs.optionalFloat("FRAME-RATE", 0)),
              (this._avgBitrate = t.attrs.decimalInteger("AVERAGE-BANDWIDTH")),
              (this.audioCodec = t.audioCodec),
              (this.videoCodec = t.videoCodec),
              (this.codecSet = [t.videoCodec, t.audioCodec]
                .filter(function (t) {
                  return !!t;
                })
                .map(function (t) {
                  return t.substring(0, 4);
                })
                .join(",")),
              this.addGroupId("audio", t.attrs.AUDIO),
              this.addGroupId("text", t.attrs.SUBTITLES);
          }
          var e = t.prototype;
          return (
            (e.hasAudioGroup = function (t) {
              return ir(this._audioGroups, t);
            }),
            (e.hasSubtitleGroup = function (t) {
              return ir(this._subtitleGroups, t);
            }),
            (e.addGroupId = function (t, e) {
              if (e)
                if ("audio" === t) {
                  var r = this._audioGroups;
                  r || (r = this._audioGroups = []),
                    -1 === r.indexOf(e) && r.push(e);
                } else if ("text" === t) {
                  var i = this._subtitleGroups;
                  i || (i = this._subtitleGroups = []),
                    -1 === i.indexOf(e) && i.push(e);
                }
            }),
            (e.addFallback = function () {}),
            s(t, [
              {
                key: "maxBitrate",
                get: function () {
                  return Math.max(this.realBitrate, this.bitrate);
                },
              },
              {
                key: "averageBitrate",
                get: function () {
                  return this._avgBitrate || this.realBitrate || this.bitrate;
                },
              },
              {
                key: "attrs",
                get: function () {
                  return this._attrs[0];
                },
              },
              {
                key: "codecs",
                get: function () {
                  return this.attrs.CODECS || "";
                },
              },
              {
                key: "pathwayId",
                get: function () {
                  return this.attrs["PATHWAY-ID"] || ".";
                },
              },
              {
                key: "videoRange",
                get: function () {
                  return this.attrs["VIDEO-RANGE"] || "SDR";
                },
              },
              {
                key: "score",
                get: function () {
                  return this.attrs.optionalFloat("SCORE", 0);
                },
              },
              {
                key: "uri",
                get: function () {
                  return this.url[0] || "";
                },
              },
              {
                key: "audioGroups",
                get: function () {
                  return this._audioGroups;
                },
              },
              {
                key: "subtitleGroups",
                get: function () {
                  return this._subtitleGroups;
                },
              },
              {
                key: "urlId",
                get: function () {
                  return 0;
                },
                set: function (t) {},
              },
              {
                key: "audioGroupIds",
                get: function () {
                  return this.audioGroups ? [this.audioGroupId] : void 0;
                },
              },
              {
                key: "textGroupIds",
                get: function () {
                  return this.subtitleGroups ? [this.textGroupId] : void 0;
                },
              },
              {
                key: "audioGroupId",
                get: function () {
                  var t;
                  return null == (t = this.audioGroups) ? void 0 : t[0];
                },
              },
              {
                key: "textGroupId",
                get: function () {
                  var t;
                  return null == (t = this.subtitleGroups) ? void 0 : t[0];
                },
              },
            ]),
            t
          );
        })();
      function ir(t, e) {
        return !(!e || !t) && -1 !== t.indexOf(e);
      }
      function nr(t, e) {
        var r = e.startPTS;
        if (y(r)) {
          var i,
            n = 0;
          e.sn > t.sn
            ? ((n = r - t.start), (i = t))
            : ((n = t.start - r), (i = e)),
            i.duration !== n && (i.duration = n);
        } else
          e.sn > t.sn
            ? t.cc === e.cc && t.minEndPTS
              ? (e.start = t.start + (t.minEndPTS - t.start))
              : (e.start = t.start + t.duration)
            : (e.start = Math.max(t.start - e.duration, 0));
      }
      function ar(t, e, r, i, n, a) {
        i - r <= 0 &&
          (w.warn("Fragment should have a positive duration", e),
          (i = r + e.duration),
          (a = n + e.duration));
        var s = r,
          o = i,
          l = e.startPTS,
          u = e.endPTS;
        if (y(l)) {
          var h = Math.abs(l - r);
          y(e.deltaPTS)
            ? (e.deltaPTS = Math.max(h, e.deltaPTS))
            : (e.deltaPTS = h),
            (s = Math.max(r, l)),
            (r = Math.min(r, l)),
            (n = Math.min(n, e.startDTS)),
            (o = Math.min(i, u)),
            (i = Math.max(i, u)),
            (a = Math.max(a, e.endDTS));
        }
        var d = r - e.start;
        0 !== e.start && (e.start = r),
          (e.duration = i - e.start),
          (e.startPTS = r),
          (e.maxStartPTS = s),
          (e.startDTS = n),
          (e.endPTS = i),
          (e.minEndPTS = o),
          (e.endDTS = a);
        var c,
          f = e.sn;
        if (!t || f < t.startSN || f > t.endSN) return 0;
        var g = f - t.startSN,
          v = t.fragments;
        for (v[g] = e, c = g; c > 0; c--) nr(v[c], v[c - 1]);
        for (c = g; c < v.length - 1; c++) nr(v[c], v[c + 1]);
        return (
          t.fragmentHint && nr(v[v.length - 1], t.fragmentHint),
          (t.PTSKnown = t.alignedSliding = !0),
          d
        );
      }
      function sr(t, e) {
        for (var r = null, i = t.fragments, n = i.length - 1; n >= 0; n--) {
          var a = i[n].initSegment;
          if (a) {
            r = a;
            break;
          }
        }
        t.fragmentHint && delete t.fragmentHint.endPTS;
        var s,
          l,
          u,
          h,
          d,
          c = 0;
        if (
          ((function (t, e, r) {
            for (
              var i = e.skippedSegments,
                n = Math.max(t.startSN, e.startSN) - e.startSN,
                a =
                  (t.fragmentHint ? 1 : 0) +
                  (i ? e.endSN : Math.min(t.endSN, e.endSN)) -
                  e.startSN,
                s = e.startSN - t.startSN,
                o = e.fragmentHint
                  ? e.fragments.concat(e.fragmentHint)
                  : e.fragments,
                l = t.fragmentHint
                  ? t.fragments.concat(t.fragmentHint)
                  : t.fragments,
                u = n;
              u <= a;
              u++
            ) {
              var h = l[s + u],
                d = o[u];
              i && !d && u < i && (d = e.fragments[u] = h), h && d && r(h, d);
            }
          })(t, e, function (t, i) {
            t.relurl && (c = t.cc - i.cc),
              y(t.startPTS) &&
                y(t.endPTS) &&
                ((i.start = i.startPTS = t.startPTS),
                (i.startDTS = t.startDTS),
                (i.maxStartPTS = t.maxStartPTS),
                (i.endPTS = t.endPTS),
                (i.endDTS = t.endDTS),
                (i.minEndPTS = t.minEndPTS),
                (i.duration = t.endPTS - t.startPTS),
                i.duration && (s = i),
                (e.PTSKnown = e.alignedSliding = !0)),
              (i.elementaryStreams = t.elementaryStreams),
              (i.loader = t.loader),
              (i.stats = t.stats),
              t.initSegment &&
                ((i.initSegment = t.initSegment), (r = t.initSegment));
          }),
          r &&
            (e.fragmentHint
              ? e.fragments.concat(e.fragmentHint)
              : e.fragments
            ).forEach(function (t) {
              var e;
              !t ||
                (t.initSegment &&
                  t.initSegment.relurl !==
                    (null == (e = r) ? void 0 : e.relurl)) ||
                (t.initSegment = r);
            }),
          e.skippedSegments)
        )
          if (
            ((e.deltaUpdateFailed = e.fragments.some(function (t) {
              return !t;
            })),
            e.deltaUpdateFailed)
          ) {
            w.warn(
              "[level-helper] Previous playlist missing segments skipped in delta playlist"
            );
            for (var f = e.skippedSegments; f--; ) e.fragments.shift();
            (e.startSN = e.fragments[0].sn), (e.startCC = e.fragments[0].cc);
          } else
            e.canSkipDateRanges &&
              (e.dateRanges =
                ((l = t.dateRanges),
                (u = e.dateRanges),
                (h = e.recentlyRemovedDateranges),
                (d = o({}, l)),
                h &&
                  h.forEach(function (t) {
                    delete d[t];
                  }),
                Object.keys(u).forEach(function (t) {
                  var e = new F(u[t].attr, d[t]);
                  e.isValid
                    ? (d[t] = e)
                    : w.warn(
                        'Ignoring invalid Playlist Delta Update DATERANGE tag: "' +
                          JSON.stringify(u[t].attr) +
                          '"'
                      );
                }),
                d));
        var g = e.fragments;
        if (c) {
          w.warn(
            "discontinuity sliding from playlist, take drift into account"
          );
          for (var v = 0; v < g.length; v++) g[v].cc += c;
        }
        e.skippedSegments && (e.startCC = e.fragments[0].cc),
          (function (t, e, r) {
            if (t && e)
              for (var i = 0, n = 0, a = t.length; n <= a; n++) {
                var s = t[n],
                  o = e[n + i];
                s && o && s.index === o.index && s.fragment.sn === o.fragment.sn
                  ? r(s, o)
                  : i--;
              }
          })(t.partList, e.partList, function (t, e) {
            (e.elementaryStreams = t.elementaryStreams), (e.stats = t.stats);
          }),
          s ? ar(e, s, s.startPTS, s.endPTS, s.startDTS, s.endDTS) : or(t, e),
          g.length && (e.totalduration = e.edge - g[0].start),
          (e.driftStartTime = t.driftStartTime),
          (e.driftStart = t.driftStart);
        var m = e.advancedDateTime;
        if (e.advanced && m) {
          var p = e.edge;
          e.driftStart || ((e.driftStartTime = m), (e.driftStart = p)),
            (e.driftEndTime = m),
            (e.driftEnd = p);
        } else
          (e.driftEndTime = t.driftEndTime),
            (e.driftEnd = t.driftEnd),
            (e.advancedDateTime = t.advancedDateTime);
      }
      function or(t, e) {
        var r = e.startSN + e.skippedSegments - t.startSN,
          i = t.fragments;
        r < 0 || r >= i.length || lr(e, i[r].start);
      }
      function lr(t, e) {
        if (e) {
          for (var r = t.fragments, i = t.skippedSegments; i < r.length; i++)
            r[i].start += e;
          t.fragmentHint && (t.fragmentHint.start += e);
        }
      }
      function ur(t, e, r) {
        var i;
        return null != t && t.details
          ? hr(null == (i = t.details) ? void 0 : i.partList, e, r)
          : null;
      }
      function hr(t, e, r) {
        if (t)
          for (var i = t.length; i--; ) {
            var n = t[i];
            if (n.index === r && n.fragment.sn === e) return n;
          }
        return null;
      }
      function dr(t) {
        t.forEach(function (t, e) {
          var r = t.details;
          null != r &&
            r.fragments &&
            r.fragments.forEach(function (t) {
              t.level = e;
            });
        });
      }
      function cr(t) {
        switch (t.details) {
          case A.FRAG_LOAD_TIMEOUT:
          case A.KEY_LOAD_TIMEOUT:
          case A.LEVEL_LOAD_TIMEOUT:
          case A.MANIFEST_LOAD_TIMEOUT:
            return !0;
        }
        return !1;
      }
      function fr(t, e) {
        var r = cr(e);
        return t.default[(r ? "timeout" : "error") + "Retry"];
      }
      function gr(t, e) {
        var r = "linear" === t.backoff ? 1 : Math.pow(2, e);
        return Math.min(r * t.retryDelayMs, t.maxRetryDelayMs);
      }
      function vr(t) {
        return i(i({}, t), { errorRetry: null, timeoutRetry: null });
      }
      function mr(t, e, r, i) {
        if (!t) return !1;
        var n = null == i ? void 0 : i.code,
          a =
            e < t.maxNumRetry &&
            ((function (t) {
              return (
                (0 === t && !1 === navigator.onLine) ||
                (!!t && (t < 400 || t > 499))
              );
            })(n) ||
              !!r);
        return t.shouldRetry ? t.shouldRetry(t, e, r, i, a) : a;
      }
      var pr = function (t, e) {
        for (var r = 0, i = t.length - 1, n = null, a = null; r <= i; ) {
          var s = e((a = t[(n = ((r + i) / 2) | 0)]));
          if (s > 0) r = n + 1;
          else {
            if (!(s < 0)) return a;
            i = n - 1;
          }
        }
        return null;
      };
      function yr(t, e, r, i, n) {
        void 0 === r && (r = 0),
          void 0 === i && (i = 0),
          void 0 === n && (n = 0.005);
        var a = null;
        if (t) {
          a = e[t.sn - e[0].sn + 1] || null;
          var s = t.endDTS - r;
          s > 0 && s < 15e-7 && (r += 15e-7);
        } else 0 === r && 0 === e[0].start && (a = e[0]);
        if (
          a &&
          (((!t || t.level === a.level) && 0 === Er(r, i, a)) ||
            (function (t, e, r) {
              if (
                e &&
                0 === e.start &&
                e.level < t.level &&
                (e.endPTS || 0) > 0
              ) {
                var i = e.tagList.reduce(function (t, e) {
                  return "INF" === e[0] && (t += parseFloat(e[1])), t;
                }, r);
                return t.start <= i;
              }
              return !1;
            })(a, t, Math.min(n, i)))
        )
          return a;
        var o = pr(e, Er.bind(null, r, i));
        return !o || (o === t && a) ? a : o;
      }
      function Er(t, e, r) {
        if (
          (void 0 === t && (t = 0),
          void 0 === e && (e = 0),
          r.start <= t && r.start + r.duration > t)
        )
          return 0;
        var i = Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0));
        return r.start + r.duration - i <= t
          ? 1
          : r.start - i > t && r.start
          ? -1
          : 0;
      }
      function Tr(t, e, r) {
        var i = 1e3 * Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0));
        return (r.endProgramDateTime || 0) - i > t;
      }
      var Sr = 0,
        Lr = 2,
        Ar = 3,
        Rr = 5,
        kr = 0,
        br = 1,
        Dr = 2,
        Ir = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.playlistError = 0),
              (this.penalizedRenditions = {}),
              (this.log = void 0),
              (this.warn = void 0),
              (this.error = void 0),
              (this.hls = t),
              (this.log = w.log.bind(w, "[info]:")),
              (this.warn = w.warn.bind(w, "[warning]:")),
              (this.error = w.error.bind(w, "[error]:")),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.ERROR, this.onError, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t &&
                (t.off(S.ERROR, this.onError, this),
                t.off(S.ERROR, this.onErrorOut, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this));
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                (this.hls = null),
                (this.penalizedRenditions = {});
            }),
            (e.startLoad = function (t) {}),
            (e.stopLoad = function () {
              this.playlistError = 0;
            }),
            (e.getVariantLevelIndex = function (t) {
              return (null == t ? void 0 : t.type) === we
                ? t.level
                : this.hls.loadLevel;
            }),
            (e.onManifestLoading = function () {
              (this.playlistError = 0), (this.penalizedRenditions = {});
            }),
            (e.onLevelUpdated = function () {
              this.playlistError = 0;
            }),
            (e.onError = function (t, e) {
              var r, i;
              if (!e.fatal) {
                var n = this.hls,
                  a = e.context;
                switch (e.details) {
                  case A.FRAG_LOAD_ERROR:
                  case A.FRAG_LOAD_TIMEOUT:
                  case A.KEY_LOAD_ERROR:
                  case A.KEY_LOAD_TIMEOUT:
                    return void (e.errorAction =
                      this.getFragRetryOrSwitchAction(e));
                  case A.FRAG_PARSING_ERROR:
                    if (null != (r = e.frag) && r.gap)
                      return void (e.errorAction = { action: Sr, flags: kr });
                  case A.FRAG_GAP:
                  case A.FRAG_DECRYPT_ERROR:
                    return (
                      (e.errorAction = this.getFragRetryOrSwitchAction(e)),
                      void (e.errorAction.action = Lr)
                    );
                  case A.LEVEL_EMPTY_ERROR:
                  case A.LEVEL_PARSING_ERROR:
                    var s,
                      o,
                      l = e.parent === we ? e.level : n.loadLevel;
                    return void (e.details === A.LEVEL_EMPTY_ERROR &&
                    null != (s = e.context) &&
                    null != (o = s.levelDetails) &&
                    o.live
                      ? (e.errorAction = this.getPlaylistRetryOrSwitchAction(
                          e,
                          l
                        ))
                      : ((e.levelRetry = !1),
                        (e.errorAction = this.getLevelSwitchAction(e, l))));
                  case A.LEVEL_LOAD_ERROR:
                  case A.LEVEL_LOAD_TIMEOUT:
                    return void (
                      "number" == typeof (null == a ? void 0 : a.level) &&
                      (e.errorAction = this.getPlaylistRetryOrSwitchAction(
                        e,
                        a.level
                      ))
                    );
                  case A.AUDIO_TRACK_LOAD_ERROR:
                  case A.AUDIO_TRACK_LOAD_TIMEOUT:
                  case A.SUBTITLE_LOAD_ERROR:
                  case A.SUBTITLE_TRACK_LOAD_TIMEOUT:
                    if (a) {
                      var u = n.levels[n.loadLevel];
                      if (
                        u &&
                        ((a.type === De && u.hasAudioGroup(a.groupId)) ||
                          (a.type === Ie && u.hasSubtitleGroup(a.groupId)))
                      )
                        return (
                          (e.errorAction = this.getPlaylistRetryOrSwitchAction(
                            e,
                            n.loadLevel
                          )),
                          (e.errorAction.action = Lr),
                          void (e.errorAction.flags = br)
                        );
                    }
                    return;
                  case A.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED:
                    var h = n.levels[n.loadLevel],
                      d = null == h ? void 0 : h.attrs["HDCP-LEVEL"];
                    return void (d
                      ? (e.errorAction = {
                          action: Lr,
                          flags: Dr,
                          hdcpLevel: d,
                        })
                      : this.keySystemError(e));
                  case A.BUFFER_ADD_CODEC_ERROR:
                  case A.REMUX_ALLOC_ERROR:
                  case A.BUFFER_APPEND_ERROR:
                    return void (e.errorAction = this.getLevelSwitchAction(
                      e,
                      null != (i = e.level) ? i : n.loadLevel
                    ));
                  case A.INTERNAL_EXCEPTION:
                  case A.BUFFER_APPENDING_ERROR:
                  case A.BUFFER_FULL_ERROR:
                  case A.LEVEL_SWITCH_ERROR:
                  case A.BUFFER_STALLED_ERROR:
                  case A.BUFFER_SEEK_OVER_HOLE:
                  case A.BUFFER_NUDGE_ON_STALL:
                    return void (e.errorAction = { action: Sr, flags: kr });
                }
                e.type === L.KEY_SYSTEM_ERROR && this.keySystemError(e);
              }
            }),
            (e.keySystemError = function (t) {
              var e = this.getVariantLevelIndex(t.frag);
              (t.levelRetry = !1),
                (t.errorAction = this.getLevelSwitchAction(t, e));
            }),
            (e.getPlaylistRetryOrSwitchAction = function (t, e) {
              var r = fr(this.hls.config.playlistLoadPolicy, t),
                i = this.playlistError++;
              if (mr(r, i, cr(t), t.response))
                return { action: Rr, flags: kr, retryConfig: r, retryCount: i };
              var n = this.getLevelSwitchAction(t, e);
              return r && ((n.retryConfig = r), (n.retryCount = i)), n;
            }),
            (e.getFragRetryOrSwitchAction = function (t) {
              var e = this.hls,
                r = this.getVariantLevelIndex(t.frag),
                i = e.levels[r],
                n = e.config,
                a = n.fragLoadPolicy,
                s = n.keyLoadPolicy,
                o = fr(t.details.startsWith("key") ? s : a, t),
                l = e.levels.reduce(function (t, e) {
                  return t + e.fragmentError;
                }, 0);
              if (
                i &&
                (t.details !== A.FRAG_GAP && i.fragmentError++,
                mr(o, l, cr(t), t.response))
              )
                return { action: Rr, flags: kr, retryConfig: o, retryCount: l };
              var u = this.getLevelSwitchAction(t, r);
              return o && ((u.retryConfig = o), (u.retryCount = l)), u;
            }),
            (e.getLevelSwitchAction = function (t, e) {
              var r = this.hls;
              null == e && (e = r.loadLevel);
              var i = this.hls.levels[e];
              if (i) {
                var n,
                  a,
                  s = t.details;
                i.loadError++, s === A.BUFFER_APPEND_ERROR && i.fragmentError++;
                var o = -1,
                  l = r.levels,
                  u = r.loadLevel,
                  h = r.minAutoLevel,
                  d = r.maxAutoLevel;
                r.autoLevelEnabled || (r.loadLevel = -1);
                for (
                  var c,
                    f = null == (n = t.frag) ? void 0 : n.type,
                    g =
                      ((f === Ce && s === A.FRAG_PARSING_ERROR) ||
                        ("audio" === t.sourceBufferName &&
                          (s === A.BUFFER_ADD_CODEC_ERROR ||
                            s === A.BUFFER_APPEND_ERROR))) &&
                      l.some(function (t) {
                        var e = t.audioCodec;
                        return i.audioCodec !== e;
                      }),
                    v =
                      "video" === t.sourceBufferName &&
                      (s === A.BUFFER_ADD_CODEC_ERROR ||
                        s === A.BUFFER_APPEND_ERROR) &&
                      l.some(function (t) {
                        var e = t.codecSet,
                          r = t.audioCodec;
                        return i.codecSet !== e && i.audioCodec === r;
                      }),
                    m = null != (a = t.context) ? a : {},
                    p = m.type,
                    y = m.groupId,
                    E = function () {
                      var e = (T + u) % l.length;
                      if (e !== u && e >= h && e <= d && 0 === l[e].loadError) {
                        var r,
                          n,
                          a = l[e];
                        if (s === A.FRAG_GAP && f === we && t.frag) {
                          var c = l[e].details;
                          if (c) {
                            var m = yr(t.frag, c.fragments, t.frag.start);
                            if (null != m && m.gap) return 0;
                          }
                        } else {
                          if (
                            (p === De && a.hasAudioGroup(y)) ||
                            (p === Ie && a.hasSubtitleGroup(y))
                          )
                            return 0;
                          if (
                            (f === Ce &&
                              null != (r = i.audioGroups) &&
                              r.some(function (t) {
                                return a.hasAudioGroup(t);
                              })) ||
                            (f === _e &&
                              null != (n = i.subtitleGroups) &&
                              n.some(function (t) {
                                return a.hasSubtitleGroup(t);
                              })) ||
                            (g && i.audioCodec === a.audioCodec) ||
                            (!g && i.audioCodec !== a.audioCodec) ||
                            (v && i.codecSet === a.codecSet)
                          )
                            return 0;
                        }
                        return (o = e), 1;
                      }
                    },
                    T = l.length;
                  T-- && (0 === (c = E()) || 1 !== c);

                );
                if (o > -1 && r.loadLevel !== o)
                  return (
                    (t.levelRetry = !0),
                    (this.playlistError = 0),
                    { action: Lr, flags: kr, nextAutoLevel: o }
                  );
              }
              return { action: Lr, flags: br };
            }),
            (e.onErrorOut = function (t, e) {
              var r;
              switch (null == (r = e.errorAction) ? void 0 : r.action) {
                case Sr:
                  break;
                case Lr:
                  this.sendAlternateToPenaltyBox(e),
                    e.errorAction.resolved || e.details === A.FRAG_GAP
                      ? /MediaSource readyState: ended/.test(e.error.message) &&
                        (this.warn(
                          'MediaSource ended after "' +
                            e.sourceBufferName +
                            '" sourceBuffer append error. Attempting to recover from media error.'
                        ),
                        this.hls.recoverMediaError())
                      : (e.fatal = !0);
              }
              e.fatal && this.hls.stopLoad();
            }),
            (e.sendAlternateToPenaltyBox = function (t) {
              var e = this.hls,
                r = t.errorAction;
              if (r) {
                var i = r.flags,
                  n = r.hdcpLevel,
                  a = r.nextAutoLevel;
                switch (i) {
                  case kr:
                    this.switchLevel(t, a);
                    break;
                  case Dr:
                    n &&
                      ((e.maxHdcpLevel = ze[ze.indexOf(n) - 1]),
                      (r.resolved = !0)),
                      this.warn(
                        'Restricting playback to HDCP-LEVEL of "' +
                          e.maxHdcpLevel +
                          '" or lower'
                      );
                }
                r.resolved || this.switchLevel(t, a);
              }
            }),
            (e.switchLevel = function (t, e) {
              void 0 !== e &&
                t.errorAction &&
                (this.warn("switching to level " + e + " after " + t.details),
                (this.hls.nextAutoLevel = e),
                (t.errorAction.resolved = !0),
                (this.hls.nextLoadLevel = this.hls.nextAutoLevel));
            }),
            t
          );
        })(),
        wr = (function () {
          function t(t, e) {
            (this.hls = void 0),
              (this.timer = -1),
              (this.requestScheduled = -1),
              (this.canLoad = !1),
              (this.log = void 0),
              (this.warn = void 0),
              (this.log = w.log.bind(w, e + ":")),
              (this.warn = w.warn.bind(w, e + ":")),
              (this.hls = t);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.clearTimer(), (this.hls = this.log = this.warn = null);
            }),
            (e.clearTimer = function () {
              -1 !== this.timer &&
                (self.clearTimeout(this.timer), (this.timer = -1));
            }),
            (e.startLoad = function () {
              (this.canLoad = !0),
                (this.requestScheduled = -1),
                this.loadPlaylist();
            }),
            (e.stopLoad = function () {
              (this.canLoad = !1), this.clearTimer();
            }),
            (e.switchParams = function (t, e, r) {
              var i = null == e ? void 0 : e.renditionReports;
              if (i) {
                for (var n = -1, a = 0; a < i.length; a++) {
                  var s = i[a],
                    o = void 0;
                  try {
                    o = new self.URL(s.URI, e.url).href;
                  } catch (t) {
                    w.warn(
                      "Could not construct new URL for Rendition Report: " + t
                    ),
                      (o = s.URI || "");
                  }
                  if (o === t) {
                    n = a;
                    break;
                  }
                  o === t.substring(0, o.length) && (n = a);
                }
                if (-1 !== n) {
                  var l = i[n],
                    u =
                      parseInt(l["LAST-MSN"]) ||
                      (null == e ? void 0 : e.lastPartSn),
                    h =
                      parseInt(l["LAST-PART"]) ||
                      (null == e ? void 0 : e.lastPartIndex);
                  if (this.hls.config.lowLatencyMode) {
                    var d = Math.min(e.age - e.partTarget, e.targetduration);
                    h >= 0 && d > e.partTarget && (h += 1);
                  }
                  var c = r && tr(r);
                  return new er(u, h >= 0 ? h : void 0, c);
                }
              }
            }),
            (e.loadPlaylist = function (t) {
              -1 === this.requestScheduled &&
                (this.requestScheduled = self.performance.now());
            }),
            (e.shouldLoadPlaylist = function (t) {
              return (
                this.canLoad && !!t && !!t.url && (!t.details || t.details.live)
              );
            }),
            (e.shouldReloadPlaylist = function (t) {
              return (
                -1 === this.timer &&
                -1 === this.requestScheduled &&
                this.shouldLoadPlaylist(t)
              );
            }),
            (e.playlistLoaded = function (t, e, r) {
              var i = this,
                n = e.details,
                a = e.stats,
                s = self.performance.now(),
                o = a.loading.first ? Math.max(0, s - a.loading.first) : 0;
              if (
                ((n.advancedDateTime = Date.now() - o),
                n.live || (null != r && r.live))
              ) {
                if (
                  (n.reloaded(r),
                  r &&
                    this.log(
                      "live playlist " +
                        t +
                        " " +
                        (n.advanced
                          ? "REFRESHED " + n.lastPartSn + "-" + n.lastPartIndex
                          : n.updated
                          ? "UPDATED"
                          : "MISSED")
                    ),
                  r && n.fragments.length > 0 && sr(r, n),
                  !this.canLoad || !n.live)
                )
                  return;
                var l,
                  u = void 0,
                  h = void 0;
                if (n.canBlockReload && n.endSN && n.advanced) {
                  var d = this.hls.config.lowLatencyMode,
                    c = n.lastPartSn,
                    f = n.endSN,
                    g = n.lastPartIndex,
                    v = c === f;
                  -1 !== g
                    ? ((u = v ? f + 1 : c), (h = v ? (d ? 0 : g) : g + 1))
                    : (u = f + 1);
                  var m = n.age,
                    p = m + n.ageHeader,
                    y = Math.min(p - n.partTarget, 1.5 * n.targetduration);
                  if (y > 0) {
                    if (r && y > r.tuneInGoal)
                      this.warn(
                        "CDN Tune-in goal increased from: " +
                          r.tuneInGoal +
                          " to: " +
                          y +
                          " with playlist age: " +
                          n.age
                      ),
                        (y = 0);
                    else {
                      var E = Math.floor(y / n.targetduration);
                      (u += E),
                        void 0 !== h &&
                          (h += Math.round(
                            (y % n.targetduration) / n.partTarget
                          )),
                        this.log(
                          "CDN Tune-in age: " +
                            n.ageHeader +
                            "s last advanced " +
                            m.toFixed(2) +
                            "s goal: " +
                            y +
                            " skip sn " +
                            E +
                            " to part " +
                            h
                        );
                    }
                    n.tuneInGoal = y;
                  }
                  if (
                    ((l = this.getDeliveryDirectives(
                      n,
                      e.deliveryDirectives,
                      u,
                      h
                    )),
                    d || !v)
                  )
                    return void this.loadPlaylist(l);
                } else
                  (n.canBlockReload || n.canSkipUntil) &&
                    (l = this.getDeliveryDirectives(
                      n,
                      e.deliveryDirectives,
                      u,
                      h
                    ));
                var T = this.hls.mainForwardBufferInfo,
                  S = T ? T.end - T.len : 0,
                  L = (function (t, e) {
                    void 0 === e && (e = 1 / 0);
                    var r = 1e3 * t.targetduration;
                    if (t.updated) {
                      var i = t.fragments;
                      if (i.length && 4 * r > e) {
                        var n = 1e3 * i[i.length - 1].duration;
                        n < r && (r = n);
                      }
                    } else r /= 2;
                    return Math.round(r);
                  })(n, 1e3 * (n.edge - S));
                n.updated &&
                  s > this.requestScheduled + L &&
                  (this.requestScheduled = a.loading.start),
                  void 0 !== u && n.canBlockReload
                    ? (this.requestScheduled =
                        a.loading.first + L - (1e3 * n.partTarget || 1e3))
                    : -1 === this.requestScheduled ||
                      this.requestScheduled + L < s
                    ? (this.requestScheduled = s)
                    : this.requestScheduled - s <= 0 &&
                      (this.requestScheduled += L);
                var A = this.requestScheduled - s;
                (A = Math.max(0, A)),
                  this.log(
                    "reload live playlist " + t + " in " + Math.round(A) + " ms"
                  ),
                  (this.timer = self.setTimeout(function () {
                    return i.loadPlaylist(l);
                  }, A));
              } else this.clearTimer();
            }),
            (e.getDeliveryDirectives = function (t, e, r, i) {
              var n = tr(t);
              return (
                null != e &&
                  e.skip &&
                  t.deltaUpdateFailed &&
                  ((r = e.msn), (i = e.part), (n = Je)),
                new er(r, i, n)
              );
            }),
            (e.checkRetry = function (t) {
              var e = this,
                r = t.details,
                i = cr(t),
                n = t.errorAction,
                a = n || {},
                s = a.action,
                o = a.retryCount,
                l = void 0 === o ? 0 : o,
                u = a.retryConfig,
                h = !!n && !!u && (s === Rr || (!n.resolved && s === Lr));
              if (h) {
                var d;
                if (((this.requestScheduled = -1), l >= u.maxNumRetry))
                  return !1;
                if (i && null != (d = t.context) && d.deliveryDirectives)
                  this.warn(
                    "Retrying playlist loading " +
                      (l + 1) +
                      "/" +
                      u.maxNumRetry +
                      ' after "' +
                      r +
                      '" without delivery-directives'
                  ),
                    this.loadPlaylist();
                else {
                  var c = gr(u, l);
                  (this.timer = self.setTimeout(function () {
                    return e.loadPlaylist();
                  }, c)),
                    this.warn(
                      "Retrying playlist loading " +
                        (l + 1) +
                        "/" +
                        u.maxNumRetry +
                        ' after "' +
                        r +
                        '" in ' +
                        c +
                        "ms"
                    );
                }
                (t.levelRetry = !0), (n.resolved = !0);
              }
              return h;
            }),
            t
          );
        })(),
        Cr = (function () {
          function t(t, e, r) {
            void 0 === e && (e = 0),
              void 0 === r && (r = 0),
              (this.halfLife = void 0),
              (this.alpha_ = void 0),
              (this.estimate_ = void 0),
              (this.totalWeight_ = void 0),
              (this.halfLife = t),
              (this.alpha_ = t ? Math.exp(Math.log(0.5) / t) : 0),
              (this.estimate_ = e),
              (this.totalWeight_ = r);
          }
          var e = t.prototype;
          return (
            (e.sample = function (t, e) {
              var r = Math.pow(this.alpha_, t);
              (this.estimate_ = e * (1 - r) + r * this.estimate_),
                (this.totalWeight_ += t);
            }),
            (e.getTotalWeight = function () {
              return this.totalWeight_;
            }),
            (e.getEstimate = function () {
              if (this.alpha_) {
                var t = 1 - Math.pow(this.alpha_, this.totalWeight_);
                if (t) return this.estimate_ / t;
              }
              return this.estimate_;
            }),
            t
          );
        })(),
        _r = (function () {
          function t(t, e, r, i) {
            void 0 === i && (i = 100),
              (this.defaultEstimate_ = void 0),
              (this.minWeight_ = void 0),
              (this.minDelayMs_ = void 0),
              (this.slow_ = void 0),
              (this.fast_ = void 0),
              (this.defaultTTFB_ = void 0),
              (this.ttfb_ = void 0),
              (this.defaultEstimate_ = r),
              (this.minWeight_ = 0.001),
              (this.minDelayMs_ = 50),
              (this.slow_ = new Cr(t)),
              (this.fast_ = new Cr(e)),
              (this.defaultTTFB_ = i),
              (this.ttfb_ = new Cr(t));
          }
          var e = t.prototype;
          return (
            (e.update = function (t, e) {
              var r = this.slow_,
                i = this.fast_,
                n = this.ttfb_;
              r.halfLife !== t &&
                (this.slow_ = new Cr(t, r.getEstimate(), r.getTotalWeight())),
                i.halfLife !== e &&
                  (this.fast_ = new Cr(e, i.getEstimate(), i.getTotalWeight())),
                n.halfLife !== t &&
                  (this.ttfb_ = new Cr(t, n.getEstimate(), n.getTotalWeight()));
            }),
            (e.sample = function (t, e) {
              var r = (t = Math.max(t, this.minDelayMs_)) / 1e3,
                i = (8 * e) / r;
              this.fast_.sample(r, i), this.slow_.sample(r, i);
            }),
            (e.sampleTTFB = function (t) {
              var e = t / 1e3,
                r = Math.sqrt(2) * Math.exp(-Math.pow(e, 2) / 2);
              this.ttfb_.sample(r, Math.max(t, 5));
            }),
            (e.canEstimate = function () {
              return this.fast_.getTotalWeight() >= this.minWeight_;
            }),
            (e.getEstimate = function () {
              return this.canEstimate()
                ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate())
                : this.defaultEstimate_;
            }),
            (e.getEstimateTTFB = function () {
              return this.ttfb_.getTotalWeight() >= this.minWeight_
                ? this.ttfb_.getEstimate()
                : this.defaultTTFB_;
            }),
            (e.destroy = function () {}),
            t
          );
        })(),
        xr = {
          supported: !0,
          configurations: [],
          decodingInfoResults: [
            { supported: !0, powerEfficient: !0, smooth: !0 },
          ],
        },
        Pr = {};
      function Fr(t, e, r) {
        var n = t.videoCodec,
          a = t.audioCodec;
        if (!n || !a || !r) return Promise.resolve(xr);
        var s = {
            width: t.width,
            height: t.height,
            bitrate: Math.ceil(Math.max(0.9 * t.bitrate, t.averageBitrate)),
            framerate: t.frameRate || 30,
          },
          o = t.videoRange;
        "SDR" !== o && (s.transferFunction = o.toLowerCase());
        var l = n.split(",").map(function (t) {
          return {
            type: "media-source",
            video: i(i({}, s), {}, { contentType: ae(t, "video") }),
          };
        });
        return (
          a &&
            t.audioGroups &&
            t.audioGroups.forEach(function (t) {
              var r;
              t &&
                (null == (r = e.groups[t]) ||
                  r.tracks.forEach(function (e) {
                    if (e.groupId === t) {
                      var r = e.channels || "",
                        i = parseFloat(r);
                      y(i) &&
                        i > 2 &&
                        l.push.apply(
                          l,
                          a.split(",").map(function (t) {
                            return {
                              type: "media-source",
                              audio: {
                                contentType: ae(t, "audio"),
                                channels: "" + i,
                              },
                            };
                          })
                        );
                    }
                  }));
            }),
          Promise.all(
            l.map(function (t) {
              var e = (function (t) {
                var e = t.audio,
                  r = t.video,
                  i = r || e;
                if (i) {
                  var n = i.contentType.split('"')[1];
                  if (r)
                    return (
                      "r" +
                      r.height +
                      "x" +
                      r.width +
                      "f" +
                      Math.ceil(r.framerate) +
                      (r.transferFunction || "sd") +
                      "_" +
                      n +
                      "_" +
                      Math.ceil(r.bitrate / 1e5)
                    );
                  if (e)
                    return (
                      "c" +
                      e.channels +
                      (e.spatialRendering ? "s" : "n") +
                      "_" +
                      n
                    );
                }
                return "";
              })(t);
              return Pr[e] || (Pr[e] = r.decodingInfo(t));
            })
          )
            .then(function (t) {
              return {
                supported: !t.some(function (t) {
                  return !t.supported;
                }),
                configurations: l,
                decodingInfoResults: t,
              };
            })
            .catch(function (t) {
              return {
                supported: !1,
                configurations: l,
                decodingInfoResults: [],
                error: t,
              };
            })
        );
      }
      function Mr(t, e) {
        var r = !1,
          i = [];
        return (
          t && ((r = "SDR" !== t), (i = [t])),
          e &&
            ((i = e.allowedVideoRanges || Qe.slice(0)),
            (i = (r =
              void 0 !== e.preferHDR
                ? e.preferHDR
                : (function () {
                    if ("function" == typeof matchMedia) {
                      var t = matchMedia("(dynamic-range: high)"),
                        e = matchMedia("bad query");
                      if (t.media !== e.media) return !0 === t.matches;
                    }
                    return !1;
                  })())
              ? i.filter(function (t) {
                  return "SDR" !== t;
                })
              : ["SDR"])),
          { preferHDR: r, allowedVideoRanges: i }
        );
      }
      function Or(t, e) {
        w.log('[abr] start candidates with "' + t + '" ignored because ' + e);
      }
      function Nr(t, e, r) {
        if ("attrs" in t) {
          var i = e.indexOf(t);
          if (-1 !== i) return i;
        }
        for (var n = 0; n < e.length; n++) if (Ur(t, e[n], r)) return n;
        return -1;
      }
      function Ur(t, e, r) {
        var i = t.groupId,
          n = t.name,
          a = t.lang,
          s = t.assocLang,
          o = t.characteristics,
          l = t.default,
          u = t.forced;
        return (
          (void 0 === i || e.groupId === i) &&
          (void 0 === n || e.name === n) &&
          (void 0 === a || e.lang === a) &&
          (void 0 === a || e.assocLang === s) &&
          (void 0 === l || e.default === l) &&
          (void 0 === u || e.forced === u) &&
          (void 0 === o ||
            (function (t, e) {
              void 0 === e && (e = "");
              var r = t.split(","),
                i = e.split(",");
              return (
                r.length === i.length &&
                !r.some(function (t) {
                  return -1 === i.indexOf(t);
                })
              );
            })(o, e.characteristics)) &&
          (void 0 === r || r(t, e))
        );
      }
      function Br(t, e) {
        var r = t.audioCodec,
          i = t.channels;
        return !(
          (void 0 !== r &&
            (e.audioCodec || "").substring(0, 4) !== r.substring(0, 4)) ||
          (void 0 !== i && i !== (e.channels || "2"))
        );
      }
      function Gr(t, e, r) {
        for (var i = e; i; i--) if (r(t[i])) return i;
        for (var n = e + 1; n < t.length; n++) if (r(t[n])) return n;
        return -1;
      }
      var Kr = (function () {
          function t(t) {
            var e = this;
            (this.hls = void 0),
              (this.lastLevelLoadSec = 0),
              (this.lastLoadedFragLevel = -1),
              (this.firstSelection = -1),
              (this._nextAutoLevel = -1),
              (this.nextAutoLevelKey = ""),
              (this.audioTracksByGroup = null),
              (this.codecTiers = null),
              (this.timer = -1),
              (this.fragCurrent = null),
              (this.partCurrent = null),
              (this.bitrateTestDelay = 0),
              (this.bwEstimator = void 0),
              (this._abandonRulesCheck = function () {
                var t = e.fragCurrent,
                  r = e.partCurrent,
                  i = e.hls,
                  n = i.autoLevelEnabled,
                  a = i.media;
                if (t && a) {
                  var s = performance.now(),
                    o = r ? r.stats : t.stats,
                    l = r ? r.duration : t.duration,
                    u = s - o.loading.start,
                    h = i.minAutoLevel;
                  if (
                    o.aborted ||
                    (o.loaded && o.loaded === o.total) ||
                    t.level <= h
                  )
                    return e.clearTimer(), void (e._nextAutoLevel = -1);
                  if (n && !a.paused && a.playbackRate && a.readyState) {
                    var d = i.mainForwardBufferInfo;
                    if (null !== d) {
                      var c = e.bwEstimator.getEstimateTTFB(),
                        f = Math.abs(a.playbackRate);
                      if (!(u <= Math.max(c, (l / (2 * f)) * 1e3))) {
                        var g = d.len / f,
                          v = o.loading.first
                            ? o.loading.first - o.loading.start
                            : -1,
                          m = o.loaded && v > -1,
                          p = e.getBwEstimate(),
                          E = i.levels,
                          T = E[t.level],
                          L =
                            o.total ||
                            Math.max(
                              o.loaded,
                              Math.round((l * T.averageBitrate) / 8)
                            ),
                          A = m ? u - v : u;
                        A < 1 && m && (A = Math.min(u, (8 * o.loaded) / p));
                        var R = m ? (1e3 * o.loaded) / A : 0,
                          k = R ? (L - o.loaded) / R : (8 * L) / p + c / 1e3;
                        if (!(k <= g)) {
                          var b,
                            D = R ? 8 * R : p,
                            I = Number.POSITIVE_INFINITY;
                          for (b = t.level - 1; b > h; b--) {
                            var C = E[b].maxBitrate;
                            if (
                              (I = e.getTimeToLoadFrag(
                                c / 1e3,
                                D,
                                l * C,
                                !E[b].details
                              )) < g
                            )
                              break;
                          }
                          if (!(I >= k || I > 10 * l)) {
                            (i.nextLoadLevel = i.nextAutoLevel = b),
                              m
                                ? e.bwEstimator.sample(
                                    u - Math.min(c, v),
                                    o.loaded
                                  )
                                : e.bwEstimator.sampleTTFB(u);
                            var _ = E[b].maxBitrate;
                            e.getBwEstimate() *
                              e.hls.config.abrBandWidthUpFactor >
                              _ && e.resetEstimator(_),
                              e.clearTimer(),
                              w.warn(
                                "[abr] Fragment " +
                                  t.sn +
                                  (r ? " part " + r.index : "") +
                                  " of level " +
                                  t.level +
                                  " is loading too slowly;\n      Time to underbuffer: " +
                                  g.toFixed(3) +
                                  " s\n      Estimated load time for current fragment: " +
                                  k.toFixed(3) +
                                  " s\n      Estimated load time for down switch fragment: " +
                                  I.toFixed(3) +
                                  " s\n      TTFB estimate: " +
                                  (0 | v) +
                                  " ms\n      Current BW estimate: " +
                                  (y(p) ? 0 | p : "Unknown") +
                                  " bps\n      New BW estimate: " +
                                  (0 | e.getBwEstimate()) +
                                  " bps\n      Switching to level " +
                                  b +
                                  " @ " +
                                  (0 | _) +
                                  " bps"
                              ),
                              i.trigger(S.FRAG_LOAD_EMERGENCY_ABORTED, {
                                frag: t,
                                part: r,
                                stats: o,
                              });
                          }
                        }
                      }
                    }
                  }
                }
              }),
              (this.hls = t),
              (this.bwEstimator = this.initEstimator()),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.resetEstimator = function (t) {
              t &&
                (w.log("setting initial bwe to " + t),
                (this.hls.config.abrEwmaDefaultEstimate = t)),
                (this.firstSelection = -1),
                (this.bwEstimator = this.initEstimator());
            }),
            (e.initEstimator = function () {
              var t = this.hls.config;
              return new _r(
                t.abrEwmaSlowVoD,
                t.abrEwmaFastVoD,
                t.abrEwmaDefaultEstimate
              );
            }),
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.FRAG_LOADING, this.onFragLoading, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(
                  S.MAX_AUTO_LEVEL_UPDATED,
                  this.onMaxAutoLevelUpdated,
                  this
                ),
                t.on(S.ERROR, this.onError, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t &&
                (t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.FRAG_LOADING, this.onFragLoading, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(
                  S.MAX_AUTO_LEVEL_UPDATED,
                  this.onMaxAutoLevelUpdated,
                  this
                ),
                t.off(S.ERROR, this.onError, this));
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                this.clearTimer(),
                (this.hls = this._abandonRulesCheck = null),
                (this.fragCurrent = this.partCurrent = null);
            }),
            (e.onManifestLoading = function (t, e) {
              (this.lastLoadedFragLevel = -1),
                (this.firstSelection = -1),
                (this.lastLevelLoadSec = 0),
                (this.fragCurrent = this.partCurrent = null),
                this.onLevelsUpdated(),
                this.clearTimer();
            }),
            (e.onLevelsUpdated = function () {
              this.lastLoadedFragLevel > -1 &&
                this.fragCurrent &&
                (this.lastLoadedFragLevel = this.fragCurrent.level),
                (this._nextAutoLevel = -1),
                this.onMaxAutoLevelUpdated(),
                (this.codecTiers = null),
                (this.audioTracksByGroup = null);
            }),
            (e.onMaxAutoLevelUpdated = function () {
              (this.firstSelection = -1), (this.nextAutoLevelKey = "");
            }),
            (e.onFragLoading = function (t, e) {
              var r,
                i = e.frag;
              this.ignoreFragment(i) ||
                (i.bitrateTest ||
                  ((this.fragCurrent = i),
                  (this.partCurrent = null != (r = e.part) ? r : null)),
                this.clearTimer(),
                (this.timer = self.setInterval(this._abandonRulesCheck, 100)));
            }),
            (e.onLevelSwitching = function (t, e) {
              this.clearTimer();
            }),
            (e.onError = function (t, e) {
              if (!e.fatal)
                switch (e.details) {
                  case A.BUFFER_ADD_CODEC_ERROR:
                  case A.BUFFER_APPEND_ERROR:
                    (this.lastLoadedFragLevel = -1), (this.firstSelection = -1);
                    break;
                  case A.FRAG_LOAD_TIMEOUT:
                    var r = e.frag,
                      i = this.fragCurrent,
                      n = this.partCurrent;
                    if (r && i && r.sn === i.sn && r.level === i.level) {
                      var a = performance.now(),
                        s = n ? n.stats : r.stats,
                        o = a - s.loading.start,
                        l = s.loading.first
                          ? s.loading.first - s.loading.start
                          : -1;
                      if (s.loaded && l > -1) {
                        var u = this.bwEstimator.getEstimateTTFB();
                        this.bwEstimator.sample(o - Math.min(u, l), s.loaded);
                      } else this.bwEstimator.sampleTTFB(o);
                    }
                }
            }),
            (e.getTimeToLoadFrag = function (t, e, r, i) {
              return t + r / e + (i ? this.lastLevelLoadSec : 0);
            }),
            (e.onLevelLoaded = function (t, e) {
              var r = this.hls.config,
                i = e.stats.loading,
                n = i.end - i.start;
              y(n) && (this.lastLevelLoadSec = n / 1e3),
                e.details.live
                  ? this.bwEstimator.update(
                      r.abrEwmaSlowLive,
                      r.abrEwmaFastLive
                    )
                  : this.bwEstimator.update(r.abrEwmaSlowVoD, r.abrEwmaFastVoD);
            }),
            (e.onFragLoaded = function (t, e) {
              var r = e.frag,
                i = e.part,
                n = i ? i.stats : r.stats;
              if (
                (r.type === we &&
                  this.bwEstimator.sampleTTFB(
                    n.loading.first - n.loading.start
                  ),
                !this.ignoreFragment(r))
              ) {
                if (
                  (this.clearTimer(),
                  r.level === this._nextAutoLevel && (this._nextAutoLevel = -1),
                  (this.firstSelection = -1),
                  this.hls.config.abrMaxWithRealBitrate)
                ) {
                  var a = i ? i.duration : r.duration,
                    s = this.hls.levels[r.level],
                    o = (s.loaded ? s.loaded.bytes : 0) + n.loaded,
                    l = (s.loaded ? s.loaded.duration : 0) + a;
                  (s.loaded = { bytes: o, duration: l }),
                    (s.realBitrate = Math.round((8 * o) / l));
                }
                if (r.bitrateTest) {
                  var u = { stats: n, frag: r, part: i, id: r.type };
                  this.onFragBuffered(S.FRAG_BUFFERED, u), (r.bitrateTest = !1);
                } else this.lastLoadedFragLevel = r.level;
              }
            }),
            (e.onFragBuffered = function (t, e) {
              var r = e.frag,
                i = e.part,
                n = null != i && i.stats.loaded ? i.stats : r.stats;
              if (!n.aborted && !this.ignoreFragment(r)) {
                var a =
                  n.parsing.end -
                  n.loading.start -
                  Math.min(
                    n.loading.first - n.loading.start,
                    this.bwEstimator.getEstimateTTFB()
                  );
                this.bwEstimator.sample(a, n.loaded),
                  (n.bwEstimate = this.getBwEstimate()),
                  r.bitrateTest
                    ? (this.bitrateTestDelay = a / 1e3)
                    : (this.bitrateTestDelay = 0);
              }
            }),
            (e.ignoreFragment = function (t) {
              return t.type !== we || "initSegment" === t.sn;
            }),
            (e.clearTimer = function () {
              this.timer > -1 &&
                (self.clearInterval(this.timer), (this.timer = -1));
            }),
            (e.getAutoLevelKey = function () {
              return (
                this.getBwEstimate() +
                "_" +
                this.getStarvationDelay().toFixed(2)
              );
            }),
            (e.getNextABRAutoLevel = function () {
              var t = this.fragCurrent,
                e = this.partCurrent,
                r = this.hls,
                i = r.maxAutoLevel,
                n = r.config,
                a = r.minAutoLevel,
                s = e ? e.duration : t ? t.duration : 0,
                o = this.getBwEstimate(),
                l = this.getStarvationDelay(),
                u = n.abrBandWidthFactor,
                h = n.abrBandWidthUpFactor;
              if (l) {
                var d = this.findBestLevel(o, a, i, l, 0, u, h);
                if (d >= 0) return d;
              }
              var c = s
                ? Math.min(s, n.maxStarvationDelay)
                : n.maxStarvationDelay;
              if (!l) {
                var f = this.bitrateTestDelay;
                f &&
                  ((c =
                    (s ? Math.min(s, n.maxLoadingDelay) : n.maxLoadingDelay) -
                    f),
                  w.info(
                    "[abr] bitrate test took " +
                      Math.round(1e3 * f) +
                      "ms, set first fragment max fetchDuration to " +
                      Math.round(1e3 * c) +
                      " ms"
                  ),
                  (u = h = 1));
              }
              var g = this.findBestLevel(o, a, i, l, c, u, h);
              if (
                (w.info(
                  "[abr] " +
                    (l ? "rebuffering expected" : "buffer is empty") +
                    ", optimal quality level " +
                    g
                ),
                g > -1)
              )
                return g;
              var v = r.levels[a],
                m = r.levels[r.loadLevel];
              return (null == v ? void 0 : v.bitrate) <
                (null == m ? void 0 : m.bitrate)
                ? a
                : r.loadLevel;
            }),
            (e.getStarvationDelay = function () {
              var t = this.hls,
                e = t.media;
              if (!e) return 1 / 0;
              var r = e && 0 !== e.playbackRate ? Math.abs(e.playbackRate) : 1,
                i = t.mainForwardBufferInfo;
              return (i ? i.len : 0) / r;
            }),
            (e.getBwEstimate = function () {
              return this.bwEstimator.canEstimate()
                ? this.bwEstimator.getEstimate()
                : this.hls.config.abrEwmaDefaultEstimate;
            }),
            (e.findBestLevel = function (t, e, r, i, n, a, s) {
              var o,
                l = this,
                u = i + n,
                h = this.lastLoadedFragLevel,
                d = -1 === h ? this.hls.firstLevel : h,
                c = this.fragCurrent,
                f = this.partCurrent,
                g = this.hls,
                v = g.levels,
                m = g.allAudioTracks,
                p = g.loadLevel,
                E = g.config;
              if (1 === v.length) return 0;
              var T,
                S = v[d],
                L = !(null == S || null == (o = S.details) || !o.live),
                A = -1 === p || -1 === h,
                R = "SDR",
                k = (null == S ? void 0 : S.frameRate) || 0,
                b = E.audioPreference,
                D = E.videoPreference,
                I =
                  this.audioTracksByGroup ||
                  (this.audioTracksByGroup = (function (t) {
                    return t.reduce(
                      function (t, e) {
                        var r = t.groups[e.groupId];
                        r ||
                          (r = t.groups[e.groupId] =
                            {
                              tracks: [],
                              channels: { 2: 0 },
                              hasDefault: !1,
                              hasAutoSelect: !1,
                            }),
                          r.tracks.push(e);
                        var i = e.channels || "2";
                        return (
                          (r.channels[i] = (r.channels[i] || 0) + 1),
                          (r.hasDefault = r.hasDefault || e.default),
                          (r.hasAutoSelect = r.hasAutoSelect || e.autoselect),
                          r.hasDefault && (t.hasDefaultAudio = !0),
                          r.hasAutoSelect && (t.hasAutoSelectAudio = !0),
                          t
                        );
                      },
                      {
                        hasDefaultAudio: !1,
                        hasAutoSelectAudio: !1,
                        groups: {},
                      }
                    );
                  })(m));
              if (A) {
                if (-1 !== this.firstSelection) return this.firstSelection;
                var C =
                    this.codecTiers ||
                    (this.codecTiers = (function (t, e, r, i) {
                      return t.slice(r, i + 1).reduce(function (t, r) {
                        if (!r.codecSet) return t;
                        var i = r.audioGroups,
                          n = t[r.codecSet];
                        n ||
                          (t[r.codecSet] = n =
                            {
                              minBitrate: 1 / 0,
                              minHeight: 1 / 0,
                              minFramerate: 1 / 0,
                              maxScore: 0,
                              videoRanges: { SDR: 0 },
                              channels: { 2: 0 },
                              hasDefaultAudio: !i,
                              fragmentError: 0,
                            }),
                          (n.minBitrate = Math.min(n.minBitrate, r.bitrate));
                        var a = Math.min(r.height, r.width);
                        return (
                          (n.minHeight = Math.min(n.minHeight, a)),
                          (n.minFramerate = Math.min(
                            n.minFramerate,
                            r.frameRate
                          )),
                          (n.maxScore = Math.max(n.maxScore, r.score)),
                          (n.fragmentError += r.fragmentError),
                          (n.videoRanges[r.videoRange] =
                            (n.videoRanges[r.videoRange] || 0) + 1),
                          i &&
                            i.forEach(function (t) {
                              if (t) {
                                var r = e.groups[t];
                                r &&
                                  ((n.hasDefaultAudio =
                                    n.hasDefaultAudio || e.hasDefaultAudio
                                      ? r.hasDefault
                                      : r.hasAutoSelect ||
                                        (!e.hasDefaultAudio &&
                                          !e.hasAutoSelectAudio)),
                                  Object.keys(r.channels).forEach(function (t) {
                                    n.channels[t] =
                                      (n.channels[t] || 0) + r.channels[t];
                                  }));
                              }
                            }),
                          t
                        );
                      }, {});
                    })(v, I, e, r)),
                  _ = (function (t, e, r, i, n) {
                    for (
                      var a = Object.keys(t),
                        s = null == i ? void 0 : i.channels,
                        o = null == i ? void 0 : i.audioCodec,
                        l = s && 2 === parseInt(s),
                        u = !0,
                        h = !1,
                        d = 1 / 0,
                        c = 1 / 0,
                        f = 1 / 0,
                        g = 0,
                        v = [],
                        m = Mr(e, n),
                        p = m.preferHDR,
                        E = m.allowedVideoRanges,
                        T = function () {
                          var e = t[a[S]];
                          (u = e.channels[2] > 0),
                            (d = Math.min(d, e.minHeight)),
                            (c = Math.min(c, e.minFramerate)),
                            (f = Math.min(f, e.minBitrate));
                          var r = E.filter(function (t) {
                            return e.videoRanges[t] > 0;
                          });
                          r.length > 0 && ((h = !0), (v = r));
                        },
                        S = a.length;
                      S--;

                    )
                      T();
                    (d = y(d) ? d : 0), (c = y(c) ? c : 0);
                    var L = Math.max(1080, d),
                      A = Math.max(30, c);
                    return (
                      (f = y(f) ? f : r),
                      (r = Math.max(f, r)),
                      h || ((e = void 0), (v = [])),
                      {
                        codecSet: a.reduce(function (e, i) {
                          var n = t[i];
                          if (i === e) return e;
                          if (n.minBitrate > r)
                            return (
                              Or(
                                i,
                                "min bitrate of " +
                                  n.minBitrate +
                                  " > current estimate of " +
                                  r
                              ),
                              e
                            );
                          if (!n.hasDefaultAudio)
                            return (
                              Or(
                                i,
                                "no renditions with default or auto-select sound found"
                              ),
                              e
                            );
                          if (o && i.indexOf(o.substring(0, 4)) % 5 != 0)
                            return (
                              Or(
                                i,
                                'audio codec preference "' + o + '" not found'
                              ),
                              e
                            );
                          if (s && !l) {
                            if (!n.channels[s])
                              return (
                                Or(
                                  i,
                                  "no renditions with " +
                                    s +
                                    " channel sound found (channels options: " +
                                    Object.keys(n.channels) +
                                    ")"
                                ),
                                e
                              );
                          } else if ((!o || l) && u && 0 === n.channels[2]) return Or(i, "no renditions with stereo sound found"), e;
                          return n.minHeight > L
                            ? (Or(
                                i,
                                "min resolution of " +
                                  n.minHeight +
                                  " > maximum of " +
                                  L
                              ),
                              e)
                            : n.minFramerate > A
                            ? (Or(
                                i,
                                "min framerate of " +
                                  n.minFramerate +
                                  " > maximum of " +
                                  A
                              ),
                              e)
                            : v.some(function (t) {
                                return n.videoRanges[t] > 0;
                              })
                            ? n.maxScore < g
                              ? (Or(
                                  i,
                                  "max score of " +
                                    n.maxScore +
                                    " < selected max of " +
                                    g
                                ),
                                e)
                              : e &&
                                (oe(i) >= oe(e) ||
                                  n.fragmentError > t[e].fragmentError)
                              ? e
                              : ((g = n.maxScore), i)
                            : (Or(
                                i,
                                "no variants with VIDEO-RANGE of " +
                                  JSON.stringify(v) +
                                  " found"
                              ),
                              e);
                        }, void 0),
                        videoRanges: v,
                        preferHDR: p,
                        minFramerate: c,
                        minBitrate: f,
                      }
                    );
                  })(C, R, t, b, D),
                  x = _.codecSet,
                  P = _.videoRanges,
                  F = _.minFramerate,
                  M = _.minBitrate,
                  O = _.preferHDR;
                (T = x),
                  (R = O ? P[P.length - 1] : P[0]),
                  (k = F),
                  (t = Math.max(t, M)),
                  w.log("[abr] picked start tier " + JSON.stringify(_));
              } else
                (T = null == S ? void 0 : S.codecSet),
                  (R = null == S ? void 0 : S.videoRange);
              for (
                var N,
                  U = f ? f.duration : c ? c.duration : 0,
                  B = this.bwEstimator.getEstimateTTFB() / 1e3,
                  G = [],
                  K = function () {
                    var e,
                      o = v[H],
                      c = H > d;
                    if (!o) return 0;
                    if (
                      E.useMediaCapabilities &&
                      !o.supportedResult &&
                      !o.supportedPromise
                    ) {
                      var g = navigator.mediaCapabilities;
                      "function" ==
                        typeof (null == g ? void 0 : g.decodingInfo) &&
                      (function (t, e, r, i, n, a) {
                        var s = t.audioCodec ? t.audioGroups : null,
                          o = null == a ? void 0 : a.audioCodec,
                          l = null == a ? void 0 : a.channels,
                          u = l ? parseInt(l) : o ? 1 / 0 : 2,
                          h = null;
                        if (null != s && s.length)
                          try {
                            h =
                              1 === s.length && s[0]
                                ? e.groups[s[0]].channels
                                : s.reduce(
                                    function (t, r) {
                                      if (r) {
                                        var i = e.groups[r];
                                        if (!i)
                                          throw new Error(
                                            "Audio track group " +
                                              r +
                                              " not found"
                                          );
                                        Object.keys(i.channels).forEach(
                                          function (e) {
                                            t[e] = (t[e] || 0) + i.channels[e];
                                          }
                                        );
                                      }
                                      return t;
                                    },
                                    { 2: 0 }
                                  );
                          } catch (t) {
                            return !0;
                          }
                        return (
                          (void 0 !== t.videoCodec &&
                            ((t.width > 1920 && t.height > 1088) ||
                              (t.height > 1920 && t.width > 1088) ||
                              t.frameRate > Math.max(i, 30) ||
                              ("SDR" !== t.videoRange && t.videoRange !== r) ||
                              t.bitrate > Math.max(n, 8e6))) ||
                          (!!h &&
                            y(u) &&
                            Object.keys(h).some(function (t) {
                              return parseInt(t) > u;
                            }))
                        );
                      })(o, I, R, k, t, b)
                        ? ((o.supportedPromise = Fr(o, I, g)),
                          o.supportedPromise.then(function (t) {
                            if (l.hls) {
                              o.supportedResult = t;
                              var e = l.hls.levels,
                                r = e.indexOf(o);
                              t.error
                                ? w.warn(
                                    '[abr] MediaCapabilities decodingInfo error: "' +
                                      t.error +
                                      '" for level ' +
                                      r +
                                      " " +
                                      JSON.stringify(t)
                                  )
                                : t.supported ||
                                  (w.warn(
                                    "[abr] Unsupported MediaCapabilities decodingInfo result for level " +
                                      r +
                                      " " +
                                      JSON.stringify(t)
                                  ),
                                  r > -1 &&
                                    e.length > 1 &&
                                    (w.log(
                                      "[abr] Removing unsupported level " + r
                                    ),
                                    l.hls.removeLevel(r)));
                            }
                          }))
                        : (o.supportedResult = xr);
                    }
                    if (
                      (T && o.codecSet !== T) ||
                      (R && o.videoRange !== R) ||
                      (c && k > o.frameRate) ||
                      (!c && k > 0 && k < o.frameRate) ||
                      (o.supportedResult &&
                        (null == (e = o.supportedResult.decodingInfoResults) ||
                          !e[0].smooth))
                    )
                      return G.push(H), 0;
                    var m,
                      D = o.details,
                      C =
                        (f
                          ? null == D
                            ? void 0
                            : D.partTarget
                          : null == D
                          ? void 0
                          : D.averagetargetduration) || U;
                    m = c ? s * t : a * t;
                    var _ =
                        U && i >= 2 * U && 0 === n
                          ? v[H].averageBitrate
                          : v[H].maxBitrate,
                      x = l.getTimeToLoadFrag(B, m, _ * C, void 0 === D);
                    if (
                      m >= _ &&
                      (H === h ||
                        (0 === o.loadError && 0 === o.fragmentError)) &&
                      (x <= B || !y(x) || (L && !l.bitrateTestDelay) || x < u)
                    ) {
                      var P = l.forcedAutoLevel;
                      return (
                        H === p ||
                          (-1 !== P && P === p) ||
                          (G.length &&
                            w.trace(
                              "[abr] Skipped level(s) " +
                                G.join(",") +
                                " of " +
                                r +
                                ' max with CODECS and VIDEO-RANGE:"' +
                                v[G[0]].codecs +
                                '" ' +
                                v[G[0]].videoRange +
                                '; not compatible with "' +
                                S.codecs +
                                '" ' +
                                R
                            ),
                          w.info(
                            "[abr] switch candidate:" +
                              d +
                              "->" +
                              H +
                              " adjustedbw(" +
                              Math.round(m) +
                              ")-bitrate=" +
                              Math.round(m - _) +
                              " ttfb:" +
                              B.toFixed(1) +
                              " avgDuration:" +
                              C.toFixed(1) +
                              " maxFetchDuration:" +
                              u.toFixed(1) +
                              " fetchDuration:" +
                              x.toFixed(1) +
                              " firstSelection:" +
                              A +
                              " codecSet:" +
                              T +
                              " videoRange:" +
                              R +
                              " hls.loadLevel:" +
                              p
                          )),
                        A && (l.firstSelection = H),
                        { v: H }
                      );
                    }
                  },
                  H = r;
                H >= e;
                H--
              )
                if (0 !== (N = K()) && N) return N.v;
              return -1;
            }),
            s(t, [
              {
                key: "firstAutoLevel",
                get: function () {
                  var t = this.hls,
                    e = t.maxAutoLevel,
                    r = t.minAutoLevel,
                    i = this.getBwEstimate(),
                    n = this.hls.config.maxStarvationDelay,
                    a = this.findBestLevel(i, r, e, 0, n, 1, 1);
                  if (a > -1) return a;
                  var s = this.hls.firstLevel,
                    o = Math.min(Math.max(s, r), e);
                  return (
                    w.warn(
                      "[abr] Could not find best starting auto level. Defaulting to first in playlist " +
                        s +
                        " clamped to " +
                        o
                    ),
                    o
                  );
                },
              },
              {
                key: "forcedAutoLevel",
                get: function () {
                  return this.nextAutoLevelKey ? -1 : this._nextAutoLevel;
                },
              },
              {
                key: "nextAutoLevel",
                get: function () {
                  var t = this.forcedAutoLevel,
                    e = this.bwEstimator.canEstimate(),
                    r = this.lastLoadedFragLevel > -1;
                  if (
                    !(
                      -1 === t ||
                      (e &&
                        r &&
                        this.nextAutoLevelKey !== this.getAutoLevelKey())
                    )
                  )
                    return t;
                  var i =
                    e && r ? this.getNextABRAutoLevel() : this.firstAutoLevel;
                  if (-1 !== t) {
                    var n = this.hls.levels;
                    if (
                      n.length > Math.max(t, i) &&
                      n[t].loadError <= n[i].loadError
                    )
                      return t;
                  }
                  return (
                    (this._nextAutoLevel = i),
                    (this.nextAutoLevelKey = this.getAutoLevelKey()),
                    i
                  );
                },
                set: function (t) {
                  var e = this.hls,
                    r = e.maxAutoLevel,
                    i = e.minAutoLevel,
                    n = Math.min(Math.max(t, i), r);
                  this._nextAutoLevel !== n &&
                    ((this.nextAutoLevelKey = ""), (this._nextAutoLevel = n));
                },
              },
            ]),
            t
          );
        })(),
        Hr = (function () {
          function t() {
            (this._boundTick = void 0),
              (this._tickTimer = null),
              (this._tickInterval = null),
              (this._tickCallCount = 0),
              (this._boundTick = this.tick.bind(this));
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.onHandlerDestroying(), this.onHandlerDestroyed();
            }),
            (e.onHandlerDestroying = function () {
              this.clearNextTick(), this.clearInterval();
            }),
            (e.onHandlerDestroyed = function () {}),
            (e.hasInterval = function () {
              return !!this._tickInterval;
            }),
            (e.hasNextTick = function () {
              return !!this._tickTimer;
            }),
            (e.setInterval = function (t) {
              return (
                !this._tickInterval &&
                ((this._tickCallCount = 0),
                (this._tickInterval = self.setInterval(this._boundTick, t)),
                !0)
              );
            }),
            (e.clearInterval = function () {
              return (
                !!this._tickInterval &&
                (self.clearInterval(this._tickInterval),
                (this._tickInterval = null),
                !0)
              );
            }),
            (e.clearNextTick = function () {
              return (
                !!this._tickTimer &&
                (self.clearTimeout(this._tickTimer),
                (this._tickTimer = null),
                !0)
              );
            }),
            (e.tick = function () {
              this._tickCallCount++,
                1 === this._tickCallCount &&
                  (this.doTick(),
                  this._tickCallCount > 1 && this.tickImmediate(),
                  (this._tickCallCount = 0));
            }),
            (e.tickImmediate = function () {
              this.clearNextTick(),
                (this._tickTimer = self.setTimeout(this._boundTick, 0));
            }),
            (e.doTick = function () {}),
            t
          );
        })(),
        Vr = "NOT_LOADED",
        Yr = "APPENDING",
        Wr = "PARTIAL",
        jr = "OK",
        qr = (function () {
          function t(t) {
            (this.activePartLists = Object.create(null)),
              (this.endListFragments = Object.create(null)),
              (this.fragments = Object.create(null)),
              (this.timeRanges = Object.create(null)),
              (this.bufferPadding = 0.2),
              (this.hls = void 0),
              (this.hasGaps = !1),
              (this.hls = t),
              this._registerListeners();
          }
          var e = t.prototype;
          return (
            (e._registerListeners = function () {
              var t = this.hls;
              t.on(S.BUFFER_APPENDED, this.onBufferAppended, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this);
            }),
            (e._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.BUFFER_APPENDED, this.onBufferAppended, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this);
            }),
            (e.destroy = function () {
              this._unregisterListeners(),
                (this.fragments =
                  this.activePartLists =
                  this.endListFragments =
                  this.timeRanges =
                    null);
            }),
            (e.getAppendedFrag = function (t, e) {
              var r = this.activePartLists[e];
              if (r)
                for (var i = r.length; i--; ) {
                  var n = r[i];
                  if (!n) break;
                  var a = n.end;
                  if (n.start <= t && null !== a && t <= a) return n;
                }
              return this.getBufferedFrag(t, e);
            }),
            (e.getBufferedFrag = function (t, e) {
              for (
                var r = this.fragments, i = Object.keys(r), n = i.length;
                n--;

              ) {
                var a = r[i[n]];
                if ((null == a ? void 0 : a.body.type) === e && a.buffered) {
                  var s = a.body;
                  if (s.start <= t && t <= s.end) return s;
                }
              }
              return null;
            }),
            (e.detectEvictedFragments = function (t, e, r, i) {
              var n = this;
              this.timeRanges && (this.timeRanges[t] = e);
              var a = (null == i ? void 0 : i.fragment.sn) || -1;
              Object.keys(this.fragments).forEach(function (i) {
                var s = n.fragments[i];
                if (s && !(a >= s.body.sn))
                  if (s.buffered || s.loaded) {
                    var o = s.range[t];
                    o &&
                      o.time.some(function (t) {
                        var r = !n.isTimeBuffered(t.startPTS, t.endPTS, e);
                        return r && n.removeFragment(s.body), r;
                      });
                  } else s.body.type === r && n.removeFragment(s.body);
              });
            }),
            (e.detectPartialFragments = function (t) {
              var e = this,
                r = this.timeRanges,
                i = t.frag,
                n = t.part;
              if (r && "initSegment" !== i.sn) {
                var a = zr(i),
                  s = this.fragments[a];
                if (!(!s || (s.buffered && i.gap))) {
                  var o = !i.relurl;
                  Object.keys(r).forEach(function (t) {
                    var a = i.elementaryStreams[t];
                    if (a) {
                      var l = r[t],
                        u = o || !0 === a.partial;
                      s.range[t] = e.getBufferedTimes(i, n, u, l);
                    }
                  }),
                    (s.loaded = null),
                    Object.keys(s.range).length
                      ? ((s.buffered = !0),
                        (s.body.endList = i.endList || s.body.endList) &&
                          (this.endListFragments[s.body.type] = s),
                        Xr(s) || this.removeParts(i.sn - 1, i.type))
                      : this.removeFragment(s.body);
                }
              }
            }),
            (e.removeParts = function (t, e) {
              var r = this.activePartLists[e];
              r &&
                (this.activePartLists[e] = r.filter(function (e) {
                  return e.fragment.sn >= t;
                }));
            }),
            (e.fragBuffered = function (t, e) {
              var r = zr(t),
                i = this.fragments[r];
              !i &&
                e &&
                ((i = this.fragments[r] =
                  {
                    body: t,
                    appendedPTS: null,
                    loaded: null,
                    buffered: !1,
                    range: Object.create(null),
                  }),
                t.gap && (this.hasGaps = !0)),
                i && ((i.loaded = null), (i.buffered = !0));
            }),
            (e.getBufferedTimes = function (t, e, r, i) {
              for (
                var n = { time: [], partial: r },
                  a = t.start,
                  s = t.end,
                  o = t.minEndPTS || s,
                  l = t.maxStartPTS || a,
                  u = 0;
                u < i.length;
                u++
              ) {
                var h = i.start(u) - this.bufferPadding,
                  d = i.end(u) + this.bufferPadding;
                if (l >= h && o <= d) {
                  n.time.push({
                    startPTS: Math.max(a, i.start(u)),
                    endPTS: Math.min(s, i.end(u)),
                  });
                  break;
                }
                if (a < d && s > h) {
                  var c = Math.max(a, i.start(u)),
                    f = Math.min(s, i.end(u));
                  f > c &&
                    ((n.partial = !0), n.time.push({ startPTS: c, endPTS: f }));
                } else if (s <= h) break;
              }
              return n;
            }),
            (e.getPartialFragment = function (t) {
              var e,
                r,
                i,
                n = null,
                a = 0,
                s = this.bufferPadding,
                o = this.fragments;
              return (
                Object.keys(o).forEach(function (l) {
                  var u = o[l];
                  u &&
                    Xr(u) &&
                    ((r = u.body.start - s),
                    (i = u.body.end + s),
                    t >= r &&
                      t <= i &&
                      ((e = Math.min(t - r, i - t)),
                      a <= e && ((n = u.body), (a = e))));
                }),
                n
              );
            }),
            (e.isEndListAppended = function (t) {
              var e = this.endListFragments[t];
              return void 0 !== e && (e.buffered || Xr(e));
            }),
            (e.getState = function (t) {
              var e = zr(t),
                r = this.fragments[e];
              return r ? (r.buffered ? (Xr(r) ? Wr : jr) : Yr) : Vr;
            }),
            (e.isTimeBuffered = function (t, e, r) {
              for (var i, n, a = 0; a < r.length; a++) {
                if (
                  ((i = r.start(a) - this.bufferPadding),
                  (n = r.end(a) + this.bufferPadding),
                  t >= i && e <= n)
                )
                  return !0;
                if (e <= i) return !1;
              }
              return !1;
            }),
            (e.onFragLoaded = function (t, e) {
              var r = e.frag,
                i = e.part;
              if ("initSegment" !== r.sn && !r.bitrateTest) {
                var n = i ? null : e,
                  a = zr(r);
                this.fragments[a] = {
                  body: r,
                  appendedPTS: null,
                  loaded: n,
                  buffered: !1,
                  range: Object.create(null),
                };
              }
            }),
            (e.onBufferAppended = function (t, e) {
              var r = this,
                i = e.frag,
                n = e.part,
                a = e.timeRanges;
              if ("initSegment" !== i.sn) {
                var s = i.type;
                if (n) {
                  var o = this.activePartLists[s];
                  o || (this.activePartLists[s] = o = []), o.push(n);
                }
                (this.timeRanges = a),
                  Object.keys(a).forEach(function (t) {
                    var e = a[t];
                    r.detectEvictedFragments(t, e, s, n);
                  });
              }
            }),
            (e.onFragBuffered = function (t, e) {
              this.detectPartialFragments(e);
            }),
            (e.hasFragment = function (t) {
              var e = zr(t);
              return !!this.fragments[e];
            }),
            (e.hasParts = function (t) {
              var e;
              return !(null == (e = this.activePartLists[t]) || !e.length);
            }),
            (e.removeFragmentsInRange = function (t, e, r, i, n) {
              var a = this;
              (i && !this.hasGaps) ||
                Object.keys(this.fragments).forEach(function (s) {
                  var o = a.fragments[s];
                  if (o) {
                    var l = o.body;
                    l.type !== r ||
                      (i && !l.gap) ||
                      (l.start < e &&
                        l.end > t &&
                        (o.buffered || n) &&
                        a.removeFragment(l));
                  }
                });
            }),
            (e.removeFragment = function (t) {
              var e = zr(t);
              (t.stats.loaded = 0), t.clearElementaryStreamInfo();
              var r = this.activePartLists[t.type];
              if (r) {
                var i = t.sn;
                this.activePartLists[t.type] = r.filter(function (t) {
                  return t.fragment.sn !== i;
                });
              }
              delete this.fragments[e],
                t.endList && delete this.endListFragments[t.type];
            }),
            (e.removeAllFragments = function () {
              (this.fragments = Object.create(null)),
                (this.endListFragments = Object.create(null)),
                (this.activePartLists = Object.create(null)),
                (this.hasGaps = !1);
            }),
            t
          );
        })();
      function Xr(t) {
        var e, r, i;
        return (
          t.buffered &&
          (t.body.gap ||
            (null == (e = t.range.video) ? void 0 : e.partial) ||
            (null == (r = t.range.audio) ? void 0 : r.partial) ||
            (null == (i = t.range.audiovideo) ? void 0 : i.partial))
        );
      }
      function zr(t) {
        return t.type + "_" + t.level + "_" + t.sn;
      }
      var Qr = {
          length: 0,
          start: function () {
            return 0;
          },
          end: function () {
            return 0;
          },
        },
        Jr = (function () {
          function t() {}
          return (
            (t.isBuffered = function (e, r) {
              try {
                if (e)
                  for (var i = t.getBuffered(e), n = 0; n < i.length; n++)
                    if (r >= i.start(n) && r <= i.end(n)) return !0;
              } catch (t) {}
              return !1;
            }),
            (t.bufferInfo = function (e, r, i) {
              try {
                if (e) {
                  var n,
                    a = t.getBuffered(e),
                    s = [];
                  for (n = 0; n < a.length; n++)
                    s.push({ start: a.start(n), end: a.end(n) });
                  return this.bufferedInfo(s, r, i);
                }
              } catch (t) {}
              return { len: 0, start: r, end: r, nextStart: void 0 };
            }),
            (t.bufferedInfo = function (t, e, r) {
              (e = Math.max(0, e)),
                t.sort(function (t, e) {
                  var r = t.start - e.start;
                  return r || e.end - t.end;
                });
              var i = [];
              if (r)
                for (var n = 0; n < t.length; n++) {
                  var a = i.length;
                  if (a) {
                    var s = i[a - 1].end;
                    t[n].start - s < r
                      ? t[n].end > s && (i[a - 1].end = t[n].end)
                      : i.push(t[n]);
                  } else i.push(t[n]);
                }
              else i = t;
              for (var o, l = 0, u = e, h = e, d = 0; d < i.length; d++) {
                var c = i[d].start,
                  f = i[d].end;
                if (e + r >= c && e < f) (u = c), (l = (h = f) - e);
                else if (e + r < c) {
                  o = c;
                  break;
                }
              }
              return { len: l, start: u || 0, end: h || 0, nextStart: o };
            }),
            (t.getBuffered = function (t) {
              try {
                return t.buffered;
              } catch (t) {
                return w.log("failed to get media.buffered", t), Qr;
              }
            }),
            t
          );
        })(),
        $r = function (t, e, r, i, n, a) {
          void 0 === i && (i = 0),
            void 0 === n && (n = -1),
            void 0 === a && (a = !1),
            (this.level = void 0),
            (this.sn = void 0),
            (this.part = void 0),
            (this.id = void 0),
            (this.size = void 0),
            (this.partial = void 0),
            (this.transmuxing = {
              start: 0,
              executeStart: 0,
              executeEnd: 0,
              end: 0,
            }),
            (this.buffering = {
              audio: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
              video: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
              audiovideo: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
            }),
            (this.level = t),
            (this.sn = e),
            (this.id = r),
            (this.size = i),
            (this.part = n),
            (this.partial = a);
        };
      function Zr(t, e) {
        for (var r = 0, i = t.length; r < i; r++) {
          var n;
          if ((null == (n = t[r]) ? void 0 : n.cc) === e) return t[r];
        }
        return null;
      }
      function ti(t, e) {
        if (t) {
          var r = t.start + e;
          (t.start = t.startPTS = r), (t.endPTS = r + t.duration);
        }
      }
      function ei(t, e) {
        for (var r = e.fragments, i = 0, n = r.length; i < n; i++) ti(r[i], t);
        e.fragmentHint && ti(e.fragmentHint, t), (e.alignedSliding = !0);
      }
      function ri(t, e, r) {
        e &&
          ((function (t, e, r) {
            if (
              (function (t, e, r) {
                return !(
                  !e || !(r.endCC > r.startCC || (t && t.cc < r.startCC))
                );
              })(t, r, e)
            ) {
              var i = (function (t, e) {
                var r = t.fragments,
                  i = e.fragments;
                if (i.length && r.length) {
                  var n = Zr(r, i[0].cc);
                  if (n && (!n || n.startPTS)) return n;
                  w.log("No frag in previous level to align on");
                } else w.log("No fragments to align");
              })(r, e);
              i &&
                y(i.start) &&
                (w.log(
                  "Adjusting PTS using last level due to CC increase within current level " +
                    e.url
                ),
                ei(i.start, e));
            }
          })(t, r, e),
          !r.alignedSliding && e && ii(r, e),
          r.alignedSliding || !e || r.skippedSegments || or(e, r));
      }
      function ii(t, e) {
        if (t.hasProgramDateTime && e.hasProgramDateTime) {
          var r = t.fragments,
            i = e.fragments;
          if (r.length && i.length) {
            var n,
              a,
              s = Math.min(e.endCC, t.endCC);
            e.startCC < s && t.startCC < s && ((n = Zr(i, s)), (a = Zr(r, s))),
              (n && a) ||
                (a =
                  Zr(r, (n = i[Math.floor(i.length / 2)]).cc) ||
                  r[Math.floor(r.length / 2)]);
            var o = n.programDateTime,
              l = a.programDateTime;
            o && l && ei((l - o) / 1e3 - (a.start - n.start), t);
          }
        }
      }
      var ni = Math.pow(2, 17),
        ai = (function () {
          function t(t) {
            (this.config = void 0),
              (this.loader = null),
              (this.partLoadTimeout = -1),
              (this.config = t);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.loader && (this.loader.destroy(), (this.loader = null));
            }),
            (e.abort = function () {
              this.loader && this.loader.abort();
            }),
            (e.load = function (t, e) {
              var r = this,
                n = t.url;
              if (!n)
                return Promise.reject(
                  new li({
                    type: L.NETWORK_ERROR,
                    details: A.FRAG_LOAD_ERROR,
                    fatal: !1,
                    frag: t,
                    error: new Error(
                      "Fragment does not have a " + (n ? "part list" : "url")
                    ),
                    networkDetails: null,
                  })
                );
              this.abort();
              var a = this.config,
                s = a.fLoader,
                o = a.loader;
              return new Promise(function (l, u) {
                if ((r.loader && r.loader.destroy(), t.gap)) {
                  if (
                    t.tagList.some(function (t) {
                      return "GAP" === t[0];
                    })
                  )
                    return void u(oi(t));
                  t.gap = !1;
                }
                var h = (r.loader = t.loader = s ? new s(a) : new o(a)),
                  d = si(t),
                  c = vr(a.fragLoadPolicy.default),
                  f = {
                    loadPolicy: c,
                    timeout: c.maxLoadTimeMs,
                    maxRetry: 0,
                    retryDelay: 0,
                    maxRetryDelay: 0,
                    highWaterMark: "initSegment" === t.sn ? 1 / 0 : ni,
                  };
                (t.stats = h.stats),
                  h.load(d, f, {
                    onSuccess: function (e, i, n, a) {
                      r.resetLoader(t, h);
                      var s = e.data;
                      n.resetIV &&
                        t.decryptdata &&
                        ((t.decryptdata.iv = new Uint8Array(s.slice(0, 16))),
                        (s = s.slice(16))),
                        l({
                          frag: t,
                          part: null,
                          payload: s,
                          networkDetails: a,
                        });
                    },
                    onError: function (e, a, s, o) {
                      r.resetLoader(t, h),
                        u(
                          new li({
                            type: L.NETWORK_ERROR,
                            details: A.FRAG_LOAD_ERROR,
                            fatal: !1,
                            frag: t,
                            response: i({ url: n, data: void 0 }, e),
                            error: new Error(
                              "HTTP Error " + e.code + " " + e.text
                            ),
                            networkDetails: s,
                            stats: o,
                          })
                        );
                    },
                    onAbort: function (e, i, n) {
                      r.resetLoader(t, h),
                        u(
                          new li({
                            type: L.NETWORK_ERROR,
                            details: A.INTERNAL_ABORTED,
                            fatal: !1,
                            frag: t,
                            error: new Error("Aborted"),
                            networkDetails: n,
                            stats: e,
                          })
                        );
                    },
                    onTimeout: function (e, i, n) {
                      r.resetLoader(t, h),
                        u(
                          new li({
                            type: L.NETWORK_ERROR,
                            details: A.FRAG_LOAD_TIMEOUT,
                            fatal: !1,
                            frag: t,
                            error: new Error(
                              "Timeout after " + f.timeout + "ms"
                            ),
                            networkDetails: n,
                            stats: e,
                          })
                        );
                    },
                    onProgress: function (r, i, n, a) {
                      e &&
                        e({
                          frag: t,
                          part: null,
                          payload: n,
                          networkDetails: a,
                        });
                    },
                  });
              });
            }),
            (e.loadPart = function (t, e, r) {
              var n = this;
              this.abort();
              var a = this.config,
                s = a.fLoader,
                o = a.loader;
              return new Promise(function (l, u) {
                if ((n.loader && n.loader.destroy(), t.gap || e.gap))
                  u(oi(t, e));
                else {
                  var h = (n.loader = t.loader = s ? new s(a) : new o(a)),
                    d = si(t, e),
                    c = vr(a.fragLoadPolicy.default),
                    f = {
                      loadPolicy: c,
                      timeout: c.maxLoadTimeMs,
                      maxRetry: 0,
                      retryDelay: 0,
                      maxRetryDelay: 0,
                      highWaterMark: ni,
                    };
                  (e.stats = h.stats),
                    h.load(d, f, {
                      onSuccess: function (i, a, s, o) {
                        n.resetLoader(t, h), n.updateStatsFromPart(t, e);
                        var u = {
                          frag: t,
                          part: e,
                          payload: i.data,
                          networkDetails: o,
                        };
                        r(u), l(u);
                      },
                      onError: function (r, a, s, o) {
                        n.resetLoader(t, h),
                          u(
                            new li({
                              type: L.NETWORK_ERROR,
                              details: A.FRAG_LOAD_ERROR,
                              fatal: !1,
                              frag: t,
                              part: e,
                              response: i({ url: d.url, data: void 0 }, r),
                              error: new Error(
                                "HTTP Error " + r.code + " " + r.text
                              ),
                              networkDetails: s,
                              stats: o,
                            })
                          );
                      },
                      onAbort: function (r, i, a) {
                        (t.stats.aborted = e.stats.aborted),
                          n.resetLoader(t, h),
                          u(
                            new li({
                              type: L.NETWORK_ERROR,
                              details: A.INTERNAL_ABORTED,
                              fatal: !1,
                              frag: t,
                              part: e,
                              error: new Error("Aborted"),
                              networkDetails: a,
                              stats: r,
                            })
                          );
                      },
                      onTimeout: function (r, i, a) {
                        n.resetLoader(t, h),
                          u(
                            new li({
                              type: L.NETWORK_ERROR,
                              details: A.FRAG_LOAD_TIMEOUT,
                              fatal: !1,
                              frag: t,
                              part: e,
                              error: new Error(
                                "Timeout after " + f.timeout + "ms"
                              ),
                              networkDetails: a,
                              stats: r,
                            })
                          );
                      },
                    });
                }
              });
            }),
            (e.updateStatsFromPart = function (t, e) {
              var r = t.stats,
                i = e.stats,
                n = i.total;
              if (((r.loaded += i.loaded), n)) {
                var a = Math.round(t.duration / e.duration),
                  s = Math.min(Math.round(r.loaded / n), a),
                  o = (a - s) * Math.round(r.loaded / s);
                r.total = r.loaded + o;
              } else r.total = Math.max(r.loaded, r.total);
              var l = r.loading,
                u = i.loading;
              l.start
                ? (l.first += u.first - u.start)
                : ((l.start = u.start), (l.first = u.first)),
                (l.end = u.end);
            }),
            (e.resetLoader = function (t, e) {
              (t.loader = null),
                this.loader === e &&
                  (self.clearTimeout(this.partLoadTimeout),
                  (this.loader = null)),
                e.destroy();
            }),
            t
          );
        })();
      function si(t, e) {
        void 0 === e && (e = null);
        var r = e || t,
          i = {
            frag: t,
            part: e,
            responseType: "arraybuffer",
            url: r.url,
            headers: {},
            rangeStart: 0,
            rangeEnd: 0,
          },
          n = r.byteRangeStartOffset,
          a = r.byteRangeEndOffset;
        if (y(n) && y(a)) {
          var s,
            o = n,
            l = a;
          if (
            "initSegment" === t.sn &&
            "AES-128" === (null == (s = t.decryptdata) ? void 0 : s.method)
          ) {
            var u = a - n;
            u % 16 && (l = a + (16 - (u % 16))),
              0 !== n && ((i.resetIV = !0), (o = n - 16));
          }
          (i.rangeStart = o), (i.rangeEnd = l);
        }
        return i;
      }
      function oi(t, e) {
        var r = new Error("GAP " + (t.gap ? "tag" : "attribute") + " found"),
          i = {
            type: L.MEDIA_ERROR,
            details: A.FRAG_GAP,
            fatal: !1,
            frag: t,
            error: r,
            networkDetails: null,
          };
        return e && (i.part = e), ((e || t).stats.aborted = !0), new li(i);
      }
      var li = (function (t) {
          function e(e) {
            var r;
            return (
              ((r = t.call(this, e.error.message) || this).data = void 0),
              (r.data = e),
              r
            );
          }
          return l(e, t), e;
        })(c(Error)),
        ui = (function () {
          function t(t, e) {
            (this.subtle = void 0),
              (this.aesIV = void 0),
              (this.subtle = t),
              (this.aesIV = e);
          }
          return (
            (t.prototype.decrypt = function (t, e) {
              return this.subtle.decrypt(
                { name: "AES-CBC", iv: this.aesIV },
                e,
                t
              );
            }),
            t
          );
        })(),
        hi = (function () {
          function t(t, e) {
            (this.subtle = void 0),
              (this.key = void 0),
              (this.subtle = t),
              (this.key = e);
          }
          return (
            (t.prototype.expandKey = function () {
              return this.subtle.importKey(
                "raw",
                this.key,
                { name: "AES-CBC" },
                !1,
                ["encrypt", "decrypt"]
              );
            }),
            t
          );
        })(),
        di = (function () {
          function t() {
            (this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54]),
              (this.subMix = [
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
              ]),
              (this.invSubMix = [
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
              ]),
              (this.sBox = new Uint32Array(256)),
              (this.invSBox = new Uint32Array(256)),
              (this.key = new Uint32Array(0)),
              (this.ksRows = 0),
              (this.keySize = 0),
              (this.keySchedule = void 0),
              (this.invKeySchedule = void 0),
              this.initTable();
          }
          var e = t.prototype;
          return (
            (e.uint8ArrayToUint32Array_ = function (t) {
              for (
                var e = new DataView(t), r = new Uint32Array(4), i = 0;
                i < 4;
                i++
              )
                r[i] = e.getUint32(4 * i);
              return r;
            }),
            (e.initTable = function () {
              var t = this.sBox,
                e = this.invSBox,
                r = this.subMix,
                i = r[0],
                n = r[1],
                a = r[2],
                s = r[3],
                o = this.invSubMix,
                l = o[0],
                u = o[1],
                h = o[2],
                d = o[3],
                c = new Uint32Array(256),
                f = 0,
                g = 0,
                v = 0;
              for (v = 0; v < 256; v++)
                c[v] = v < 128 ? v << 1 : (v << 1) ^ 283;
              for (v = 0; v < 256; v++) {
                var m = g ^ (g << 1) ^ (g << 2) ^ (g << 3) ^ (g << 4);
                (m = (m >>> 8) ^ (255 & m) ^ 99), (t[f] = m), (e[m] = f);
                var p = c[f],
                  y = c[p],
                  E = c[y],
                  T = (257 * c[m]) ^ (16843008 * m);
                (i[f] = (T << 24) | (T >>> 8)),
                  (n[f] = (T << 16) | (T >>> 16)),
                  (a[f] = (T << 8) | (T >>> 24)),
                  (s[f] = T),
                  (T =
                    (16843009 * E) ^ (65537 * y) ^ (257 * p) ^ (16843008 * f)),
                  (l[m] = (T << 24) | (T >>> 8)),
                  (u[m] = (T << 16) | (T >>> 16)),
                  (h[m] = (T << 8) | (T >>> 24)),
                  (d[m] = T),
                  f ? ((f = p ^ c[c[c[E ^ p]]]), (g ^= c[c[g]])) : (f = g = 1);
              }
            }),
            (e.expandKey = function (t) {
              for (
                var e = this.uint8ArrayToUint32Array_(t), r = !0, i = 0;
                i < e.length && r;

              )
                (r = e[i] === this.key[i]), i++;
              if (!r) {
                this.key = e;
                var n = (this.keySize = e.length);
                if (4 !== n && 6 !== n && 8 !== n)
                  throw new Error("Invalid aes key size=" + n);
                var a,
                  s,
                  o,
                  l,
                  u = (this.ksRows = 4 * (n + 6 + 1)),
                  h = (this.keySchedule = new Uint32Array(u)),
                  d = (this.invKeySchedule = new Uint32Array(u)),
                  c = this.sBox,
                  f = this.rcon,
                  g = this.invSubMix,
                  v = g[0],
                  m = g[1],
                  p = g[2],
                  y = g[3];
                for (a = 0; a < u; a++)
                  a < n
                    ? (o = h[a] = e[a])
                    : ((l = o),
                      a % n == 0
                        ? ((l =
                            (c[(l = (l << 8) | (l >>> 24)) >>> 24] << 24) |
                            (c[(l >>> 16) & 255] << 16) |
                            (c[(l >>> 8) & 255] << 8) |
                            c[255 & l]),
                          (l ^= f[(a / n) | 0] << 24))
                        : n > 6 &&
                          a % n == 4 &&
                          (l =
                            (c[l >>> 24] << 24) |
                            (c[(l >>> 16) & 255] << 16) |
                            (c[(l >>> 8) & 255] << 8) |
                            c[255 & l]),
                      (h[a] = o = (h[a - n] ^ l) >>> 0));
                for (s = 0; s < u; s++)
                  (a = u - s),
                    (l = 3 & s ? h[a] : h[a - 4]),
                    (d[s] =
                      s < 4 || a <= 4
                        ? l
                        : v[c[l >>> 24]] ^
                          m[c[(l >>> 16) & 255]] ^
                          p[c[(l >>> 8) & 255]] ^
                          y[c[255 & l]]),
                    (d[s] = d[s] >>> 0);
              }
            }),
            (e.networkToHostOrderSwap = function (t) {
              return (
                (t << 24) |
                ((65280 & t) << 8) |
                ((16711680 & t) >> 8) |
                (t >>> 24)
              );
            }),
            (e.decrypt = function (t, e, r) {
              for (
                var i,
                  n,
                  a,
                  s,
                  o,
                  l,
                  u,
                  h,
                  d,
                  c,
                  f,
                  g,
                  v,
                  m,
                  p = this.keySize + 6,
                  y = this.invKeySchedule,
                  E = this.invSBox,
                  T = this.invSubMix,
                  S = T[0],
                  L = T[1],
                  A = T[2],
                  R = T[3],
                  k = this.uint8ArrayToUint32Array_(r),
                  b = k[0],
                  D = k[1],
                  I = k[2],
                  w = k[3],
                  C = new Int32Array(t),
                  _ = new Int32Array(C.length),
                  x = this.networkToHostOrderSwap;
                e < C.length;

              ) {
                for (
                  d = x(C[e]),
                    c = x(C[e + 1]),
                    f = x(C[e + 2]),
                    g = x(C[e + 3]),
                    o = d ^ y[0],
                    l = g ^ y[1],
                    u = f ^ y[2],
                    h = c ^ y[3],
                    v = 4,
                    m = 1;
                  m < p;
                  m++
                )
                  (i =
                    S[o >>> 24] ^
                    L[(l >> 16) & 255] ^
                    A[(u >> 8) & 255] ^
                    R[255 & h] ^
                    y[v]),
                    (n =
                      S[l >>> 24] ^
                      L[(u >> 16) & 255] ^
                      A[(h >> 8) & 255] ^
                      R[255 & o] ^
                      y[v + 1]),
                    (a =
                      S[u >>> 24] ^
                      L[(h >> 16) & 255] ^
                      A[(o >> 8) & 255] ^
                      R[255 & l] ^
                      y[v + 2]),
                    (s =
                      S[h >>> 24] ^
                      L[(o >> 16) & 255] ^
                      A[(l >> 8) & 255] ^
                      R[255 & u] ^
                      y[v + 3]),
                    (o = i),
                    (l = n),
                    (u = a),
                    (h = s),
                    (v += 4);
                (i =
                  (E[o >>> 24] << 24) ^
                  (E[(l >> 16) & 255] << 16) ^
                  (E[(u >> 8) & 255] << 8) ^
                  E[255 & h] ^
                  y[v]),
                  (n =
                    (E[l >>> 24] << 24) ^
                    (E[(u >> 16) & 255] << 16) ^
                    (E[(h >> 8) & 255] << 8) ^
                    E[255 & o] ^
                    y[v + 1]),
                  (a =
                    (E[u >>> 24] << 24) ^
                    (E[(h >> 16) & 255] << 16) ^
                    (E[(o >> 8) & 255] << 8) ^
                    E[255 & l] ^
                    y[v + 2]),
                  (s =
                    (E[h >>> 24] << 24) ^
                    (E[(o >> 16) & 255] << 16) ^
                    (E[(l >> 8) & 255] << 8) ^
                    E[255 & u] ^
                    y[v + 3]),
                  (_[e] = x(i ^ b)),
                  (_[e + 1] = x(s ^ D)),
                  (_[e + 2] = x(a ^ I)),
                  (_[e + 3] = x(n ^ w)),
                  (b = d),
                  (D = c),
                  (I = f),
                  (w = g),
                  (e += 4);
              }
              return _.buffer;
            }),
            t
          );
        })(),
        ci = (function () {
          function t(t, e) {
            var r = (void 0 === e ? {} : e).removePKCS7Padding,
              i = void 0 === r || r;
            if (
              ((this.logEnabled = !0),
              (this.removePKCS7Padding = void 0),
              (this.subtle = null),
              (this.softwareDecrypter = null),
              (this.key = null),
              (this.fastAesKey = null),
              (this.remainderData = null),
              (this.currentIV = null),
              (this.currentResult = null),
              (this.useSoftware = void 0),
              (this.useSoftware = t.enableSoftwareAES),
              (this.removePKCS7Padding = i),
              i)
            )
              try {
                var n = self.crypto;
                n && (this.subtle = n.subtle || n.webkitSubtle);
              } catch (t) {}
            this.useSoftware = !this.subtle;
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.subtle = null),
                (this.softwareDecrypter = null),
                (this.key = null),
                (this.fastAesKey = null),
                (this.remainderData = null),
                (this.currentIV = null),
                (this.currentResult = null);
            }),
            (e.isSync = function () {
              return this.useSoftware;
            }),
            (e.flush = function () {
              var t = this.currentResult,
                e = this.remainderData;
              if (!t || e) return this.reset(), null;
              var r,
                i,
                n,
                a = new Uint8Array(t);
              return (
                this.reset(),
                this.removePKCS7Padding
                  ? ((i = (r = a).byteLength),
                    (n = i && new DataView(r.buffer).getUint8(i - 1))
                      ? nt(r, 0, i - n)
                      : r)
                  : a
              );
            }),
            (e.reset = function () {
              (this.currentResult = null),
                (this.currentIV = null),
                (this.remainderData = null),
                this.softwareDecrypter && (this.softwareDecrypter = null);
            }),
            (e.decrypt = function (t, e, r) {
              var i = this;
              return this.useSoftware
                ? new Promise(function (n, a) {
                    i.softwareDecrypt(new Uint8Array(t), e, r);
                    var s = i.flush();
                    s
                      ? n(s.buffer)
                      : a(
                          new Error("[softwareDecrypt] Failed to decrypt data")
                        );
                  })
                : this.webCryptoDecrypt(new Uint8Array(t), e, r);
            }),
            (e.softwareDecrypt = function (t, e, r) {
              var i = this.currentIV,
                n = this.currentResult,
                a = this.remainderData;
              this.logOnce("JS AES decrypt"),
                a && ((t = Kt(a, t)), (this.remainderData = null));
              var s = this.getValidChunk(t);
              if (!s.length) return null;
              i && (r = i);
              var o = this.softwareDecrypter;
              o || (o = this.softwareDecrypter = new di()), o.expandKey(e);
              var l = n;
              return (
                (this.currentResult = o.decrypt(s.buffer, 0, r)),
                (this.currentIV = nt(s, -16).buffer),
                l || null
              );
            }),
            (e.webCryptoDecrypt = function (t, e, r) {
              var i = this;
              if (this.key !== e || !this.fastAesKey) {
                if (!this.subtle)
                  return Promise.resolve(this.onWebCryptoError(t, e, r));
                (this.key = e), (this.fastAesKey = new hi(this.subtle, e));
              }
              return this.fastAesKey
                .expandKey()
                .then(function (e) {
                  return i.subtle
                    ? (i.logOnce("WebCrypto AES decrypt"),
                      new ui(i.subtle, new Uint8Array(r)).decrypt(t.buffer, e))
                    : Promise.reject(new Error("web crypto not initialized"));
                })
                .catch(function (n) {
                  return (
                    w.warn(
                      "[decrypter]: WebCrypto Error, disable WebCrypto API, " +
                        n.name +
                        ": " +
                        n.message
                    ),
                    i.onWebCryptoError(t, e, r)
                  );
                });
            }),
            (e.onWebCryptoError = function (t, e, r) {
              (this.useSoftware = !0),
                (this.logEnabled = !0),
                this.softwareDecrypt(t, e, r);
              var i = this.flush();
              if (i) return i.buffer;
              throw new Error(
                "WebCrypto and softwareDecrypt: failed to decrypt data"
              );
            }),
            (e.getValidChunk = function (t) {
              var e = t,
                r = t.length - (t.length % 16);
              return (
                r !== t.length &&
                  ((e = nt(t, 0, r)), (this.remainderData = nt(t, r))),
                e
              );
            }),
            (e.logOnce = function (t) {
              this.logEnabled &&
                (w.log("[decrypter]: " + t), (this.logEnabled = !1));
            }),
            t
          );
        })(),
        fi = function (t) {
          for (var e = "", r = t.length, i = 0; i < r; i++)
            e += "[" + t.start(i).toFixed(3) + "-" + t.end(i).toFixed(3) + "]";
          return e;
        },
        gi = "STOPPED",
        vi = "IDLE",
        mi = "KEY_LOADING",
        pi = "FRAG_LOADING",
        yi = "FRAG_LOADING_WAITING_RETRY",
        Ei = "WAITING_TRACK",
        Ti = "PARSING",
        Si = "PARSED",
        Li = "ENDED",
        Ai = "ERROR",
        Ri = "WAITING_INIT_PTS",
        ki = "WAITING_LEVEL",
        bi = (function (t) {
          function e(e, r, i, n, a) {
            var s;
            return (
              ((s = t.call(this) || this).hls = void 0),
              (s.fragPrevious = null),
              (s.fragCurrent = null),
              (s.fragmentTracker = void 0),
              (s.transmuxer = null),
              (s._state = gi),
              (s.playlistType = void 0),
              (s.media = null),
              (s.mediaBuffer = null),
              (s.config = void 0),
              (s.bitrateTest = !1),
              (s.lastCurrentTime = 0),
              (s.nextLoadPosition = 0),
              (s.startPosition = 0),
              (s.startTimeOffset = null),
              (s.loadedmetadata = !1),
              (s.retryDate = 0),
              (s.levels = null),
              (s.fragmentLoader = void 0),
              (s.keyLoader = void 0),
              (s.levelLastLoaded = null),
              (s.startFragRequested = !1),
              (s.decrypter = void 0),
              (s.initPTS = []),
              (s.onvseeking = null),
              (s.onvended = null),
              (s.logPrefix = ""),
              (s.log = void 0),
              (s.warn = void 0),
              (s.playlistType = a),
              (s.logPrefix = n),
              (s.log = w.log.bind(w, n + ":")),
              (s.warn = w.warn.bind(w, n + ":")),
              (s.hls = e),
              (s.fragmentLoader = new ai(e.config)),
              (s.keyLoader = i),
              (s.fragmentTracker = r),
              (s.config = e.config),
              (s.decrypter = new ci(e.config)),
              e.on(
                S.MANIFEST_LOADED,
                s.onManifestLoaded,
                (function (t) {
                  if (void 0 === t)
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  return t;
                })(s)
              ),
              s
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.doTick = function () {
              this.onTickEnd();
            }),
            (r.onTickEnd = function () {}),
            (r.startLoad = function (t) {}),
            (r.stopLoad = function () {
              this.fragmentLoader.abort(),
                this.keyLoader.abort(this.playlistType);
              var t = this.fragCurrent;
              null != t &&
                t.loader &&
                (t.abortRequests(), this.fragmentTracker.removeFragment(t)),
                this.resetTransmuxer(),
                (this.fragCurrent = null),
                (this.fragPrevious = null),
                this.clearInterval(),
                this.clearNextTick(),
                (this.state = gi);
            }),
            (r._streamEnded = function (t, e) {
              if (e.live || t.nextStart || !t.end || !this.media) return !1;
              var r = e.partList;
              if (null != r && r.length) {
                var i = r[r.length - 1];
                return Jr.isBuffered(this.media, i.start + i.duration / 2);
              }
              var n = e.fragments[e.fragments.length - 1].type;
              return this.fragmentTracker.isEndListAppended(n);
            }),
            (r.getLevelDetails = function () {
              var t;
              if (this.levels && null !== this.levelLastLoaded)
                return null == (t = this.levelLastLoaded) ? void 0 : t.details;
            }),
            (r.onMediaAttached = function (t, e) {
              var r = (this.media = this.mediaBuffer = e.media);
              (this.onvseeking = this.onMediaSeeking.bind(this)),
                (this.onvended = this.onMediaEnded.bind(this)),
                r.addEventListener("seeking", this.onvseeking),
                r.addEventListener("ended", this.onvended);
              var i = this.config;
              this.levels &&
                i.autoStartLoad &&
                this.state === gi &&
                this.startLoad(i.startPosition);
            }),
            (r.onMediaDetaching = function () {
              var t = this.media;
              null != t &&
                t.ended &&
                (this.log("MSE detaching and video ended, reset startPosition"),
                (this.startPosition = this.lastCurrentTime = 0)),
                t &&
                  this.onvseeking &&
                  this.onvended &&
                  (t.removeEventListener("seeking", this.onvseeking),
                  t.removeEventListener("ended", this.onvended),
                  (this.onvseeking = this.onvended = null)),
                this.keyLoader && this.keyLoader.detach(),
                (this.media = this.mediaBuffer = null),
                (this.loadedmetadata = !1),
                this.fragmentTracker.removeAllFragments(),
                this.stopLoad();
            }),
            (r.onMediaSeeking = function () {
              var t = this.config,
                e = this.fragCurrent,
                r = this.media,
                i = this.mediaBuffer,
                n = this.state,
                a = r ? r.currentTime : 0,
                s = Jr.bufferInfo(i || r, a, t.maxBufferHole);
              if (
                (this.log(
                  "media seeking to " +
                    (y(a) ? a.toFixed(3) : a) +
                    ", state: " +
                    n
                ),
                this.state === Li)
              )
                this.resetLoadingState();
              else if (e) {
                var o = t.maxFragLookUpTolerance,
                  l = e.start - o,
                  u = e.start + e.duration + o;
                if (!s.len || u < s.start || l > s.end) {
                  var h = a > u;
                  (a < l || h) &&
                    (h &&
                      e.loader &&
                      (this.log(
                        "seeking outside of buffer while fragment load in progress, cancel fragment load"
                      ),
                      e.abortRequests(),
                      this.resetLoadingState()),
                    (this.fragPrevious = null));
                }
              }
              r &&
                (this.fragmentTracker.removeFragmentsInRange(
                  a,
                  1 / 0,
                  this.playlistType,
                  !0
                ),
                (this.lastCurrentTime = a)),
                this.loadedmetadata ||
                  s.len ||
                  (this.nextLoadPosition = this.startPosition = a),
                this.tickImmediate();
            }),
            (r.onMediaEnded = function () {
              this.startPosition = this.lastCurrentTime = 0;
            }),
            (r.onManifestLoaded = function (t, e) {
              (this.startTimeOffset = e.startTimeOffset), (this.initPTS = []);
            }),
            (r.onHandlerDestroying = function () {
              this.hls.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                this.stopLoad(),
                t.prototype.onHandlerDestroying.call(this),
                (this.hls = null);
            }),
            (r.onHandlerDestroyed = function () {
              (this.state = gi),
                this.fragmentLoader && this.fragmentLoader.destroy(),
                this.keyLoader && this.keyLoader.destroy(),
                this.decrypter && this.decrypter.destroy(),
                (this.hls =
                  this.log =
                  this.warn =
                  this.decrypter =
                  this.keyLoader =
                  this.fragmentLoader =
                  this.fragmentTracker =
                    null),
                t.prototype.onHandlerDestroyed.call(this);
            }),
            (r.loadFragment = function (t, e, r) {
              this._loadFragForPlayback(t, e, r);
            }),
            (r._loadFragForPlayback = function (t, e, r) {
              var i = this;
              this._doFragLoad(t, e, r, function (e) {
                if (i.fragContextChanged(t))
                  return (
                    i.warn(
                      "Fragment " +
                        t.sn +
                        (e.part ? " p: " + e.part.index : "") +
                        " of level " +
                        t.level +
                        " was dropped during download."
                    ),
                    void i.fragmentTracker.removeFragment(t)
                  );
                t.stats.chunkCount++, i._handleFragmentLoadProgress(e);
              })
                .then(function (e) {
                  if (e) {
                    var r = i.state;
                    i.fragContextChanged(t)
                      ? (r === pi || (!i.fragCurrent && r === Ti)) &&
                        (i.fragmentTracker.removeFragment(t), (i.state = vi))
                      : ("payload" in e &&
                          (i.log(
                            "Loaded fragment " + t.sn + " of level " + t.level
                          ),
                          i.hls.trigger(S.FRAG_LOADED, e)),
                        i._handleFragmentLoadComplete(e));
                  }
                })
                .catch(function (e) {
                  i.state !== gi &&
                    i.state !== Ai &&
                    (i.warn(
                      "Frag error: " + ((null == e ? void 0 : e.message) || e)
                    ),
                    i.resetFragmentLoading(t));
                });
            }),
            (r.clearTrackerIfNeeded = function (t) {
              var e,
                r = this.fragmentTracker;
              if (r.getState(t) === Yr) {
                var i = t.type,
                  n = this.getFwdBufferInfo(this.mediaBuffer, i),
                  a = Math.max(
                    t.duration,
                    n ? n.len : this.config.maxBufferLength
                  ),
                  s = this.backtrackFragment;
                (1 == (s ? t.sn - s.sn : 0) ||
                  this.reduceMaxBufferLength(a, t.duration)) &&
                  r.removeFragment(t);
              } else
                0 ===
                (null == (e = this.mediaBuffer) ? void 0 : e.buffered.length)
                  ? r.removeAllFragments()
                  : r.hasParts(t.type) &&
                    (r.detectPartialFragments({
                      frag: t,
                      part: null,
                      stats: t.stats,
                      id: t.type,
                    }),
                    r.getState(t) === Wr && r.removeFragment(t));
            }),
            (r.checkLiveUpdate = function (t) {
              if (t.updated && !t.live) {
                var e = t.fragments[t.fragments.length - 1];
                this.fragmentTracker.detectPartialFragments({
                  frag: e,
                  part: null,
                  stats: e.stats,
                  id: e.type,
                });
              }
              t.fragments[0] || (t.deltaUpdateFailed = !0);
            }),
            (r.flushMainBuffer = function (t, e, r) {
              if ((void 0 === r && (r = null), t - e)) {
                var i = { startOffset: t, endOffset: e, type: r };
                this.hls.trigger(S.BUFFER_FLUSHING, i);
              }
            }),
            (r._loadInitSegment = function (t, e) {
              var r = this;
              this._doFragLoad(t, e)
                .then(function (e) {
                  if (!e || r.fragContextChanged(t) || !r.levels)
                    throw new Error("init load aborted");
                  return e;
                })
                .then(function (e) {
                  var i = r.hls,
                    n = e.payload,
                    a = t.decryptdata;
                  if (
                    n &&
                    n.byteLength > 0 &&
                    null != a &&
                    a.key &&
                    a.iv &&
                    "AES-128" === a.method
                  ) {
                    var s = self.performance.now();
                    return r.decrypter
                      .decrypt(new Uint8Array(n), a.key.buffer, a.iv.buffer)
                      .catch(function (e) {
                        throw (
                          (i.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_DECRYPT_ERROR,
                            fatal: !1,
                            error: e,
                            reason: e.message,
                            frag: t,
                          }),
                          e)
                        );
                      })
                      .then(function (n) {
                        var a = self.performance.now();
                        return (
                          i.trigger(S.FRAG_DECRYPTED, {
                            frag: t,
                            payload: n,
                            stats: { tstart: s, tdecrypt: a },
                          }),
                          (e.payload = n),
                          r.completeInitSegmentLoad(e)
                        );
                      });
                  }
                  return r.completeInitSegmentLoad(e);
                })
                .catch(function (e) {
                  r.state !== gi &&
                    r.state !== Ai &&
                    (r.warn(e), r.resetFragmentLoading(t));
                });
            }),
            (r.completeInitSegmentLoad = function (t) {
              if (!this.levels)
                throw new Error("init load aborted, missing levels");
              var e = t.frag.stats;
              (this.state = vi),
                (t.frag.data = new Uint8Array(t.payload)),
                (e.parsing.start = e.buffering.start = self.performance.now()),
                (e.parsing.end = e.buffering.end = self.performance.now()),
                this.tick();
            }),
            (r.fragContextChanged = function (t) {
              var e = this.fragCurrent;
              return !t || !e || t.sn !== e.sn || t.level !== e.level;
            }),
            (r.fragBufferedComplete = function (t, e) {
              var r,
                i,
                n,
                a,
                s = this.mediaBuffer ? this.mediaBuffer : this.media;
              if (
                (this.log(
                  "Buffered " +
                    t.type +
                    " sn: " +
                    t.sn +
                    (e ? " part: " + e.index : "") +
                    " of " +
                    (this.playlistType === we ? "level" : "track") +
                    " " +
                    t.level +
                    " (frag:[" +
                    (null != (r = t.startPTS) ? r : NaN).toFixed(3) +
                    "-" +
                    (null != (i = t.endPTS) ? i : NaN).toFixed(3) +
                    "] > buffer:" +
                    (s ? fi(Jr.getBuffered(s)) : "(detached)") +
                    ")"
                ),
                "initSegment" !== t.sn)
              ) {
                var o;
                if (t.type !== _e) {
                  var l = t.elementaryStreams;
                  if (
                    !Object.keys(l).some(function (t) {
                      return !!l[t];
                    })
                  )
                    return void (this.state = vi);
                }
                var u = null == (o = this.levels) ? void 0 : o[t.level];
                null != u &&
                  u.fragmentError &&
                  (this.log(
                    "Resetting level fragment error count of " +
                      u.fragmentError +
                      " on frag buffered"
                  ),
                  (u.fragmentError = 0));
              }
              (this.state = vi),
                s &&
                  (!this.loadedmetadata &&
                    t.type == we &&
                    s.buffered.length &&
                    (null == (n = this.fragCurrent) ? void 0 : n.sn) ===
                      (null == (a = this.fragPrevious) ? void 0 : a.sn) &&
                    ((this.loadedmetadata = !0), this.seekToStartPos()),
                  this.tick());
            }),
            (r.seekToStartPos = function () {}),
            (r._handleFragmentLoadComplete = function (t) {
              var e = this.transmuxer;
              if (e) {
                var r = t.frag,
                  i = t.part,
                  n = t.partsLoaded,
                  a =
                    !n ||
                    0 === n.length ||
                    n.some(function (t) {
                      return !t;
                    }),
                  s = new $r(
                    r.level,
                    r.sn,
                    r.stats.chunkCount + 1,
                    0,
                    i ? i.index : -1,
                    !a
                  );
                e.flush(s);
              }
            }),
            (r._handleFragmentLoadProgress = function (t) {}),
            (r._doFragLoad = function (t, e, r, i) {
              var n,
                a = this;
              void 0 === r && (r = null);
              var s = null == e ? void 0 : e.details;
              if (!this.levels || !s)
                throw new Error(
                  "frag load aborted, missing level" +
                    (s ? "" : " detail") +
                    "s"
                );
              var o = null;
              if (
                (!t.encrypted || (null != (n = t.decryptdata) && n.key)
                  ? !t.encrypted &&
                    s.encryptedFragments.length &&
                    this.keyLoader.loadClear(t, s.encryptedFragments)
                  : (this.log(
                      "Loading key for " +
                        t.sn +
                        " of [" +
                        s.startSN +
                        "-" +
                        s.endSN +
                        "], " +
                        ("[stream-controller]" === this.logPrefix
                          ? "level"
                          : "track") +
                        " " +
                        t.level
                    ),
                    (this.state = mi),
                    (this.fragCurrent = t),
                    (o = this.keyLoader.load(t).then(function (t) {
                      if (!a.fragContextChanged(t.frag))
                        return (
                          a.hls.trigger(S.KEY_LOADED, t),
                          a.state === mi && (a.state = vi),
                          t
                        );
                    })),
                    this.hls.trigger(S.KEY_LOADING, { frag: t }),
                    null === this.fragCurrent &&
                      (o = Promise.reject(
                        new Error(
                          "frag load aborted, context changed in KEY_LOADING"
                        )
                      ))),
                (r = Math.max(t.start, r || 0)),
                this.config.lowLatencyMode && "initSegment" !== t.sn)
              ) {
                var l = s.partList;
                if (l && i) {
                  r > t.end && s.fragmentHint && (t = s.fragmentHint);
                  var u = this.getNextPart(l, t, r);
                  if (u > -1) {
                    var h,
                      d = l[u];
                    return (
                      this.log(
                        "Loading part sn: " +
                          t.sn +
                          " p: " +
                          d.index +
                          " cc: " +
                          t.cc +
                          " of playlist [" +
                          s.startSN +
                          "-" +
                          s.endSN +
                          "] parts [0-" +
                          u +
                          "-" +
                          (l.length - 1) +
                          "] " +
                          ("[stream-controller]" === this.logPrefix
                            ? "level"
                            : "track") +
                          ": " +
                          t.level +
                          ", target: " +
                          parseFloat(r.toFixed(3))
                      ),
                      (this.nextLoadPosition = d.start + d.duration),
                      (this.state = pi),
                      (h = o
                        ? o
                            .then(function (r) {
                              return !r || a.fragContextChanged(r.frag)
                                ? null
                                : a.doFragPartsLoad(t, d, e, i);
                            })
                            .catch(function (t) {
                              return a.handleFragLoadError(t);
                            })
                        : this.doFragPartsLoad(t, d, e, i).catch(function (t) {
                            return a.handleFragLoadError(t);
                          })),
                      this.hls.trigger(S.FRAG_LOADING, {
                        frag: t,
                        part: d,
                        targetBufferTime: r,
                      }),
                      null === this.fragCurrent
                        ? Promise.reject(
                            new Error(
                              "frag load aborted, context changed in FRAG_LOADING parts"
                            )
                          )
                        : h
                    );
                  }
                  if (!t.url || this.loadedEndOfParts(l, r))
                    return Promise.resolve(null);
                }
              }
              this.log(
                "Loading fragment " +
                  t.sn +
                  " cc: " +
                  t.cc +
                  " " +
                  (s ? "of [" + s.startSN + "-" + s.endSN + "] " : "") +
                  ("[stream-controller]" === this.logPrefix
                    ? "level"
                    : "track") +
                  ": " +
                  t.level +
                  ", target: " +
                  parseFloat(r.toFixed(3))
              ),
                y(t.sn) &&
                  !this.bitrateTest &&
                  (this.nextLoadPosition = t.start + t.duration),
                (this.state = pi);
              var c,
                f = this.config.progressive;
              return (
                (c =
                  f && o
                    ? o
                        .then(function (e) {
                          return !e ||
                            a.fragContextChanged(null == e ? void 0 : e.frag)
                            ? null
                            : a.fragmentLoader.load(t, i);
                        })
                        .catch(function (t) {
                          return a.handleFragLoadError(t);
                        })
                    : Promise.all([
                        this.fragmentLoader.load(t, f ? i : void 0),
                        o,
                      ])
                        .then(function (t) {
                          var e = t[0];
                          return !f && e && i && i(e), e;
                        })
                        .catch(function (t) {
                          return a.handleFragLoadError(t);
                        })),
                this.hls.trigger(S.FRAG_LOADING, {
                  frag: t,
                  targetBufferTime: r,
                }),
                null === this.fragCurrent
                  ? Promise.reject(
                      new Error(
                        "frag load aborted, context changed in FRAG_LOADING"
                      )
                    )
                  : c
              );
            }),
            (r.doFragPartsLoad = function (t, e, r, i) {
              var n = this;
              return new Promise(function (a, s) {
                var o,
                  l = [],
                  u = null == (o = r.details) ? void 0 : o.partList;
                !(function e(o) {
                  n.fragmentLoader
                    .loadPart(t, o, i)
                    .then(function (i) {
                      l[o.index] = i;
                      var s = i.part;
                      n.hls.trigger(S.FRAG_LOADED, i);
                      var h =
                        ur(r, t.sn, o.index + 1) || hr(u, t.sn, o.index + 1);
                      if (!h) return a({ frag: t, part: s, partsLoaded: l });
                      e(h);
                    })
                    .catch(s);
                })(e);
              });
            }),
            (r.handleFragLoadError = function (t) {
              if ("data" in t) {
                var e = t.data;
                t.data && e.details === A.INTERNAL_ABORTED
                  ? this.handleFragLoadAborted(e.frag, e.part)
                  : this.hls.trigger(S.ERROR, e);
              } else
                this.hls.trigger(S.ERROR, {
                  type: L.OTHER_ERROR,
                  details: A.INTERNAL_EXCEPTION,
                  err: t,
                  error: t,
                  fatal: !0,
                });
              return null;
            }),
            (r._handleTransmuxerFlush = function (t) {
              var e = this.getCurrentContext(t);
              if (e && this.state === Ti) {
                var r = e.frag,
                  i = e.part,
                  n = e.level,
                  a = self.performance.now();
                (r.stats.parsing.end = a),
                  i && (i.stats.parsing.end = a),
                  this.updateLevelTiming(r, i, n, t.partial);
              } else
                this.fragCurrent ||
                  this.state === gi ||
                  this.state === Ai ||
                  (this.state = vi);
            }),
            (r.getCurrentContext = function (t) {
              var e = this.levels,
                r = this.fragCurrent,
                i = t.level,
                n = t.sn,
                a = t.part;
              if (null == e || !e[i])
                return (
                  this.warn(
                    "Levels object was unset while buffering fragment " +
                      n +
                      " of level " +
                      i +
                      ". The current chunk will not be buffered."
                  ),
                  null
                );
              var s = e[i],
                o = a > -1 ? ur(s, n, a) : null,
                l = o
                  ? o.fragment
                  : (function (t, e, r) {
                      if (null == t || !t.details) return null;
                      var i = t.details,
                        n = i.fragments[e - i.startSN];
                      return (
                        n ||
                        ((n = i.fragmentHint) && n.sn === e
                          ? n
                          : e < i.startSN && r && r.sn === e
                          ? r
                          : null)
                      );
                    })(s, n, r);
              return l
                ? (r && r !== l && (l.stats = r.stats),
                  { frag: l, part: o, level: s })
                : null;
            }),
            (r.bufferFragmentData = function (t, e, r, i, n) {
              var a;
              if (t && this.state === Ti) {
                var s = t.data1,
                  o = t.data2,
                  l = s;
                if ((s && o && (l = Kt(s, o)), null != (a = l) && a.length)) {
                  var u = {
                    type: t.type,
                    frag: e,
                    part: r,
                    chunkMeta: i,
                    parent: e.type,
                    data: l,
                  };
                  if (
                    (this.hls.trigger(S.BUFFER_APPENDING, u),
                    t.dropped && t.independent && !r)
                  ) {
                    if (n) return;
                    this.flushBufferGap(e);
                  }
                }
              }
            }),
            (r.flushBufferGap = function (t) {
              var e = this.media;
              if (e)
                if (Jr.isBuffered(e, e.currentTime)) {
                  var r = e.currentTime,
                    i = Jr.bufferInfo(e, r, 0),
                    n = t.duration,
                    a = Math.min(
                      2 * this.config.maxFragLookUpTolerance,
                      0.25 * n
                    ),
                    s = Math.max(Math.min(t.start - a, i.end - a), r + a);
                  t.start - s > a && this.flushMainBuffer(s, t.start);
                } else this.flushMainBuffer(0, t.start);
            }),
            (r.getFwdBufferInfo = function (t, e) {
              var r = this.getLoadPosition();
              return y(r) ? this.getFwdBufferInfoAtPos(t, r, e) : null;
            }),
            (r.getFwdBufferInfoAtPos = function (t, e, r) {
              var i = this.config.maxBufferHole,
                n = Jr.bufferInfo(t, e, i);
              if (0 === n.len && void 0 !== n.nextStart) {
                var a = this.fragmentTracker.getBufferedFrag(e, r);
                if (a && n.nextStart < a.end)
                  return Jr.bufferInfo(t, e, Math.max(n.nextStart, i));
              }
              return n;
            }),
            (r.getMaxBufferLength = function (t) {
              var e,
                r = this.config;
              return (
                (e = t
                  ? Math.max((8 * r.maxBufferSize) / t, r.maxBufferLength)
                  : r.maxBufferLength),
                Math.min(e, r.maxMaxBufferLength)
              );
            }),
            (r.reduceMaxBufferLength = function (t, e) {
              var r = this.config,
                i = Math.max(Math.min(t - e, r.maxBufferLength), e),
                n = Math.max(t - 3 * e, r.maxMaxBufferLength / 2, i);
              return (
                n >= i &&
                ((r.maxMaxBufferLength = n),
                this.warn("Reduce max buffer length to " + n + "s"),
                !0)
              );
            }),
            (r.getAppendedFrag = function (t, e) {
              var r = this.fragmentTracker.getAppendedFrag(t, we);
              return r && "fragment" in r ? r.fragment : r;
            }),
            (r.getNextFragment = function (t, e) {
              var r = e.fragments,
                i = r.length;
              if (!i) return null;
              var n,
                a = this.config,
                s = r[0].start;
              if (e.live) {
                var o = a.initialLiveManifestSize;
                if (i < o)
                  return (
                    this.warn(
                      "Not enough fragments to start playback (have: " +
                        i +
                        ", need: " +
                        o +
                        ")"
                    ),
                    null
                  );
                ((!e.PTSKnown &&
                  !this.startFragRequested &&
                  -1 === this.startPosition) ||
                  t < s) &&
                  ((n = this.getInitialLiveFragment(e, r)),
                  (this.startPosition = this.nextLoadPosition =
                    n ? this.hls.liveSyncPosition || n.start : t));
              } else t <= s && (n = r[0]);
              if (!n) {
                var l = a.lowLatencyMode ? e.partEnd : e.fragmentEnd;
                n = this.getFragmentAtPosition(t, l, e);
              }
              return this.mapToInitFragWhenRequired(n);
            }),
            (r.isLoopLoading = function (t, e) {
              var r = this.fragmentTracker.getState(t);
              return (
                (r === jr || (r === Wr && !!t.gap)) && this.nextLoadPosition > e
              );
            }),
            (r.getNextFragmentLoopLoading = function (t, e, r, i, n) {
              var a = t.gap,
                s = this.getNextFragment(this.nextLoadPosition, e);
              if (null === s) return s;
              if (((t = s), a && t && !t.gap && r.nextStart)) {
                var o = this.getFwdBufferInfoAtPos(
                  this.mediaBuffer ? this.mediaBuffer : this.media,
                  r.nextStart,
                  i
                );
                if (null !== o && r.len + o.len >= n)
                  return (
                    this.log(
                      'buffer full after gaps in "' +
                        i +
                        '" playlist starting at sn: ' +
                        t.sn
                    ),
                    null
                  );
              }
              return t;
            }),
            (r.mapToInitFragWhenRequired = function (t) {
              return null == t ||
                !t.initSegment ||
                (null != t && t.initSegment.data) ||
                this.bitrateTest
                ? t
                : t.initSegment;
            }),
            (r.getNextPart = function (t, e, r) {
              for (
                var i = -1, n = !1, a = !0, s = 0, o = t.length;
                s < o;
                s++
              ) {
                var l = t[s];
                if (((a = a && !l.independent), i > -1 && r < l.start)) break;
                var u = l.loaded;
                u
                  ? (i = -1)
                  : (n || l.independent || a) && l.fragment === e && (i = s),
                  (n = u);
              }
              return i;
            }),
            (r.loadedEndOfParts = function (t, e) {
              var r = t[t.length - 1];
              return r && e > r.start && r.loaded;
            }),
            (r.getInitialLiveFragment = function (t, e) {
              var r = this.fragPrevious,
                i = null;
              if (r) {
                if (
                  (t.hasProgramDateTime &&
                    (this.log(
                      "Live playlist, switching playlist, load frag with same PDT: " +
                        r.programDateTime
                    ),
                    (i = (function (t, e, r) {
                      if (null === e || !Array.isArray(t) || !t.length || !y(e))
                        return null;
                      if (e < (t[0].programDateTime || 0)) return null;
                      if (e >= (t[t.length - 1].endProgramDateTime || 0))
                        return null;
                      r = r || 0;
                      for (var i = 0; i < t.length; ++i) {
                        var n = t[i];
                        if (Tr(e, r, n)) return n;
                      }
                      return null;
                    })(
                      e,
                      r.endProgramDateTime,
                      this.config.maxFragLookUpTolerance
                    ))),
                  !i)
                ) {
                  var n = r.sn + 1;
                  if (n >= t.startSN && n <= t.endSN) {
                    var a = e[n - t.startSN];
                    r.cc === a.cc &&
                      ((i = a),
                      this.log(
                        "Live playlist, switching playlist, load frag with next SN: " +
                          i.sn
                      ));
                  }
                  i ||
                    ((i = (function (t, e) {
                      return pr(t, function (t) {
                        return t.cc < e ? 1 : t.cc > e ? -1 : 0;
                      });
                    })(e, r.cc)),
                    i &&
                      this.log(
                        "Live playlist, switching playlist, load frag with same CC: " +
                          i.sn
                      ));
                }
              } else {
                var s = this.hls.liveSyncPosition;
                null !== s &&
                  (i = this.getFragmentAtPosition(
                    s,
                    this.bitrateTest ? t.fragmentEnd : t.edge,
                    t
                  ));
              }
              return i;
            }),
            (r.getFragmentAtPosition = function (t, e, r) {
              var i,
                n = this.config,
                a = this.fragPrevious,
                s = r.fragments,
                o = r.endSN,
                l = r.fragmentHint,
                u = n.maxFragLookUpTolerance,
                h = r.partList,
                d = !!(n.lowLatencyMode && null != h && h.length && l);
              if (
                (d && l && !this.bitrateTest && ((s = s.concat(l)), (o = l.sn)),
                (i = t < e ? yr(a, s, t, t > e - u ? 0 : u) : s[s.length - 1]))
              ) {
                var c = i.sn - r.startSN,
                  f = this.fragmentTracker.getState(i);
                if (
                  ((f === jr || (f === Wr && i.gap)) && (a = i),
                  a &&
                    i.sn === a.sn &&
                    (!d || h[0].fragment.sn > i.sn) &&
                    a &&
                    i.level === a.level)
                ) {
                  var g = s[c + 1];
                  i =
                    i.sn < o && this.fragmentTracker.getState(g) !== jr
                      ? g
                      : null;
                }
              }
              return i;
            }),
            (r.synchronizeToLiveEdge = function (t) {
              var e = this.config,
                r = this.media;
              if (r) {
                var i = this.hls.liveSyncPosition,
                  n = r.currentTime,
                  a = t.fragments[0].start,
                  s = t.edge,
                  o = n >= a - e.maxFragLookUpTolerance && n <= s;
                if (null !== i && r.duration > i && (n < i || !o)) {
                  var l =
                    void 0 !== e.liveMaxLatencyDuration
                      ? e.liveMaxLatencyDuration
                      : e.liveMaxLatencyDurationCount * t.targetduration;
                  ((!o && r.readyState < 4) || n < s - l) &&
                    (this.loadedmetadata || (this.nextLoadPosition = i),
                    r.readyState &&
                      (this.warn(
                        "Playback: " +
                          n.toFixed(3) +
                          " is located too far from the end of live sliding playlist: " +
                          s +
                          ", reset currentTime to : " +
                          i.toFixed(3)
                      ),
                      (r.currentTime = i)));
                }
              }
            }),
            (r.alignPlaylists = function (t, e, r) {
              var i = t.fragments.length;
              if (!i) return this.warn("No fragments in live playlist"), 0;
              var n = t.fragments[0].start,
                a = !e,
                s = t.alignedSliding && y(n);
              if (a || (!s && !n)) {
                var o = this.fragPrevious;
                ri(o, r, t);
                var l = t.fragments[0].start;
                return (
                  this.log(
                    "Live playlist sliding: " +
                      l.toFixed(2) +
                      " start-sn: " +
                      (e ? e.startSN : "na") +
                      "->" +
                      t.startSN +
                      " prev-sn: " +
                      (o ? o.sn : "na") +
                      " fragments: " +
                      i
                  ),
                  l
                );
              }
              return n;
            }),
            (r.waitForCdnTuneIn = function (t) {
              return (
                t.live &&
                t.canBlockReload &&
                t.partTarget &&
                t.tuneInGoal > Math.max(t.partHoldBack, 3 * t.partTarget)
              );
            }),
            (r.setStartPosition = function (t, e) {
              var r = this.startPosition;
              if (
                (r < e && (r = -1), -1 === r || -1 === this.lastCurrentTime)
              ) {
                var i = null !== this.startTimeOffset,
                  n = i ? this.startTimeOffset : t.startTimeOffset;
                null !== n && y(n)
                  ? ((r = e + n),
                    n < 0 && (r += t.totalduration),
                    (r = Math.min(Math.max(e, r), e + t.totalduration)),
                    this.log(
                      "Start time offset " +
                        n +
                        " found in " +
                        (i ? "multivariant" : "media") +
                        " playlist, adjust startPosition to " +
                        r
                    ),
                    (this.startPosition = r))
                  : t.live
                  ? (r = this.hls.liveSyncPosition || e)
                  : (this.startPosition = r = 0),
                  (this.lastCurrentTime = r);
              }
              this.nextLoadPosition = r;
            }),
            (r.getLoadPosition = function () {
              var t = this.media,
                e = 0;
              return (
                this.loadedmetadata && t
                  ? (e = t.currentTime)
                  : this.nextLoadPosition && (e = this.nextLoadPosition),
                e
              );
            }),
            (r.handleFragLoadAborted = function (t, e) {
              this.transmuxer &&
                "initSegment" !== t.sn &&
                t.stats.aborted &&
                (this.warn(
                  "Fragment " +
                    t.sn +
                    (e ? " part " + e.index : "") +
                    " of level " +
                    t.level +
                    " was aborted"
                ),
                this.resetFragmentLoading(t));
            }),
            (r.resetFragmentLoading = function (t) {
              (this.fragCurrent &&
                (this.fragContextChanged(t) || this.state === yi)) ||
                (this.state = vi);
            }),
            (r.onFragmentOrKeyLoadError = function (t, e) {
              if (e.chunkMeta && !e.frag) {
                var r = this.getCurrentContext(e.chunkMeta);
                r && (e.frag = r.frag);
              }
              var i = e.frag;
              if (i && i.type === t && this.levels)
                if (this.fragContextChanged(i)) {
                  var n;
                  this.warn(
                    "Frag load error must match current frag to retry " +
                      i.url +
                      " > " +
                      (null == (n = this.fragCurrent) ? void 0 : n.url)
                  );
                } else {
                  var a = e.details === A.FRAG_GAP;
                  a && this.fragmentTracker.fragBuffered(i, !0);
                  var s = e.errorAction,
                    o = s || {},
                    l = o.action,
                    u = o.retryCount,
                    h = void 0 === u ? 0 : u,
                    d = o.retryConfig;
                  if (s && l === Rr && d) {
                    this.resetStartWhenNotLoaded(this.levelLastLoaded);
                    var c = gr(d, h);
                    this.warn(
                      "Fragment " +
                        i.sn +
                        " of " +
                        t +
                        " " +
                        i.level +
                        " errored with " +
                        e.details +
                        ", retrying loading " +
                        (h + 1) +
                        "/" +
                        d.maxNumRetry +
                        " in " +
                        c +
                        "ms"
                    ),
                      (s.resolved = !0),
                      (this.retryDate = self.performance.now() + c),
                      (this.state = yi);
                  } else if (d && s) {
                    if ((this.resetFragmentErrors(t), !(h < d.maxNumRetry)))
                      return void w.warn(
                        e.details + " reached or exceeded max retry (" + h + ")"
                      );
                    a || l === Ar || (s.resolved = !0);
                  } else
                    (null == s ? void 0 : s.action) === Lr
                      ? (this.state = ki)
                      : (this.state = Ai);
                  this.tickImmediate();
                }
            }),
            (r.reduceLengthAndFlushBuffer = function (t) {
              if (this.state === Ti || this.state === Si) {
                var e = t.frag,
                  r = t.parent,
                  i = this.getFwdBufferInfo(this.mediaBuffer, r),
                  n = i && i.len > 0.5;
                n &&
                  this.reduceMaxBufferLength(
                    i.len,
                    (null == e ? void 0 : e.duration) || 10
                  );
                var a = !n;
                return (
                  a &&
                    this.warn(
                      "Buffer full error while media.currentTime is not buffered, flush " +
                        r +
                        " buffer"
                    ),
                  e &&
                    (this.fragmentTracker.removeFragment(e),
                    (this.nextLoadPosition = e.start)),
                  this.resetLoadingState(),
                  a
                );
              }
              return !1;
            }),
            (r.resetFragmentErrors = function (t) {
              t === Ce && (this.fragCurrent = null),
                this.loadedmetadata || (this.startFragRequested = !1),
                this.state !== gi && (this.state = vi);
            }),
            (r.afterBufferFlushed = function (t, e, r) {
              if (t) {
                var i = Jr.getBuffered(t);
                this.fragmentTracker.detectEvictedFragments(e, i, r),
                  this.state === Li && this.resetLoadingState();
              }
            }),
            (r.resetLoadingState = function () {
              this.log("Reset loading state"),
                (this.fragCurrent = null),
                (this.fragPrevious = null),
                (this.state = vi);
            }),
            (r.resetStartWhenNotLoaded = function (t) {
              if (!this.loadedmetadata) {
                this.startFragRequested = !1;
                var e = t ? t.details : null;
                null != e && e.live
                  ? ((this.startPosition = -1),
                    this.setStartPosition(e, 0),
                    this.resetLoadingState())
                  : (this.nextLoadPosition = this.startPosition);
              }
            }),
            (r.resetWhenMissingContext = function (t) {
              this.warn(
                "The loading context changed while buffering fragment " +
                  t.sn +
                  " of level " +
                  t.level +
                  ". This chunk will not be buffered."
              ),
                this.removeUnbufferedFrags(),
                this.resetStartWhenNotLoaded(this.levelLastLoaded),
                this.resetLoadingState();
            }),
            (r.removeUnbufferedFrags = function (t) {
              void 0 === t && (t = 0),
                this.fragmentTracker.removeFragmentsInRange(
                  t,
                  1 / 0,
                  this.playlistType,
                  !1,
                  !0
                );
            }),
            (r.updateLevelTiming = function (t, e, r, i) {
              var n,
                a = this,
                s = r.details;
              if (s) {
                if (
                  !Object.keys(t.elementaryStreams).reduce(function (e, n) {
                    var o = t.elementaryStreams[n];
                    if (o) {
                      var l = o.endPTS - o.startPTS;
                      if (l <= 0)
                        return (
                          a.warn(
                            "Could not parse fragment " +
                              t.sn +
                              " " +
                              n +
                              " duration reliably (" +
                              l +
                              ")"
                          ),
                          e || !1
                        );
                      var u = i
                        ? 0
                        : ar(s, t, o.startPTS, o.endPTS, o.startDTS, o.endDTS);
                      return (
                        a.hls.trigger(S.LEVEL_PTS_UPDATED, {
                          details: s,
                          level: r,
                          drift: u,
                          type: n,
                          frag: t,
                          start: o.startPTS,
                          end: o.endPTS,
                        }),
                        !0
                      );
                    }
                    return e;
                  }, !1) &&
                  null === (null == (n = this.transmuxer) ? void 0 : n.error)
                ) {
                  var o = new Error(
                    "Found no media in fragment " +
                      t.sn +
                      " of level " +
                      t.level +
                      " resetting transmuxer to fallback to playlist timing"
                  );
                  if (
                    (0 === r.fragmentError &&
                      (r.fragmentError++,
                      (t.gap = !0),
                      this.fragmentTracker.removeFragment(t),
                      this.fragmentTracker.fragBuffered(t, !0)),
                    this.warn(o.message),
                    this.hls.trigger(S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: A.FRAG_PARSING_ERROR,
                      fatal: !1,
                      error: o,
                      frag: t,
                      reason:
                        "Found no media in msn " +
                        t.sn +
                        ' of level "' +
                        r.url +
                        '"',
                    }),
                    !this.hls)
                  )
                    return;
                  this.resetTransmuxer();
                }
                (this.state = Si),
                  this.hls.trigger(S.FRAG_PARSED, { frag: t, part: e });
              } else this.warn("level.details undefined");
            }),
            (r.resetTransmuxer = function () {
              this.transmuxer &&
                (this.transmuxer.destroy(), (this.transmuxer = null));
            }),
            (r.recoverWorkerError = function (t) {
              "demuxerWorker" === t.event &&
                (this.fragmentTracker.removeAllFragments(),
                this.resetTransmuxer(),
                this.resetStartWhenNotLoaded(this.levelLastLoaded),
                this.resetLoadingState());
            }),
            s(e, [
              {
                key: "state",
                get: function () {
                  return this._state;
                },
                set: function (t) {
                  var e = this._state;
                  e !== t && ((this._state = t), this.log(e + "->" + t));
                },
              },
            ]),
            e
          );
        })(Hr),
        Di = (function () {
          function t() {
            (this.chunks = []), (this.dataLength = 0);
          }
          var e = t.prototype;
          return (
            (e.push = function (t) {
              this.chunks.push(t), (this.dataLength += t.length);
            }),
            (e.flush = function () {
              var t,
                e = this.chunks,
                r = this.dataLength;
              return e.length
                ? ((t =
                    1 === e.length
                      ? e[0]
                      : (function (t, e) {
                          for (
                            var r = new Uint8Array(e), i = 0, n = 0;
                            n < t.length;
                            n++
                          ) {
                            var a = t[n];
                            r.set(a, i), (i += a.length);
                          }
                          return r;
                        })(e, r)),
                  this.reset(),
                  t)
                : new Uint8Array(0);
            }),
            (e.reset = function () {
              (this.chunks.length = 0), (this.dataLength = 0);
            }),
            t
          );
        })();
      function Ii(t, e) {
        return (
          void 0 === t && (t = ""),
          void 0 === e && (e = 9e4),
          {
            type: t,
            id: -1,
            pid: -1,
            inputTimeScale: e,
            sequenceNumber: -1,
            samples: [],
            dropped: 0,
          }
        );
      }
      var wi = (function () {
          function t() {
            (this._audioTrack = void 0),
              (this._id3Track = void 0),
              (this.frameIndex = 0),
              (this.cachedData = null),
              (this.basePTS = null),
              (this.initPTS = null),
              (this.lastPTS = null);
          }
          var e = t.prototype;
          return (
            (e.resetInitSegment = function (t, e, r, i) {
              this._id3Track = {
                type: "id3",
                id: 3,
                pid: -1,
                inputTimeScale: 9e4,
                sequenceNumber: 0,
                samples: [],
                dropped: 0,
              };
            }),
            (e.resetTimeStamp = function (t) {
              (this.initPTS = t), this.resetContiguity();
            }),
            (e.resetContiguity = function () {
              (this.basePTS = null),
                (this.lastPTS = null),
                (this.frameIndex = 0);
            }),
            (e.canParse = function (t, e) {
              return !1;
            }),
            (e.appendFrame = function (t, e, r) {}),
            (e.demux = function (t, e) {
              this.cachedData &&
                ((t = Kt(this.cachedData, t)), (this.cachedData = null));
              var r,
                i = lt(t, 0),
                n = i ? i.length : 0,
                a = this._audioTrack,
                s = this._id3Track,
                o = i ? dt(i) : void 0,
                l = t.length;
              for (
                (null === this.basePTS || (0 === this.frameIndex && y(o))) &&
                  ((this.basePTS = Ci(o, e, this.initPTS)),
                  (this.lastPTS = this.basePTS)),
                  null === this.lastPTS && (this.lastPTS = this.basePTS),
                  i &&
                    i.length > 0 &&
                    s.samples.push({
                      pts: this.lastPTS,
                      dts: this.lastPTS,
                      data: i,
                      type: Ge,
                      duration: Number.POSITIVE_INFINITY,
                    });
                n < l;

              ) {
                if (this.canParse(t, n)) {
                  var u = this.appendFrame(a, t, n);
                  u
                    ? (this.frameIndex++,
                      (this.lastPTS = u.sample.pts),
                      (r = n += u.length))
                    : (n = l);
                } else
                  ht(t, n)
                    ? ((i = lt(t, n)),
                      s.samples.push({
                        pts: this.lastPTS,
                        dts: this.lastPTS,
                        data: i,
                        type: Ge,
                        duration: Number.POSITIVE_INFINITY,
                      }),
                      (r = n += i.length))
                    : n++;
                if (n === l && r !== l) {
                  var h = nt(t, r);
                  this.cachedData
                    ? (this.cachedData = Kt(this.cachedData, h))
                    : (this.cachedData = h);
                }
              }
              return {
                audioTrack: a,
                videoTrack: Ii(),
                id3Track: s,
                textTrack: Ii(),
              };
            }),
            (e.demuxSampleAes = function (t, e, r) {
              return Promise.reject(
                new Error(
                  "[" +
                    this +
                    "] This demuxer does not support Sample-AES decryption"
                )
              );
            }),
            (e.flush = function (t) {
              var e = this.cachedData;
              return (
                e && ((this.cachedData = null), this.demux(e, 0)),
                {
                  audioTrack: this._audioTrack,
                  videoTrack: Ii(),
                  id3Track: this._id3Track,
                  textTrack: Ii(),
                }
              );
            }),
            (e.destroy = function () {}),
            t
          );
        })(),
        Ci = function (t, e, r) {
          return y(t)
            ? 90 * t
            : 9e4 * e + (r ? (9e4 * r.baseTime) / r.timescale : 0);
        };
      function _i(t, e) {
        return 255 === t[e] && 240 == (246 & t[e + 1]);
      }
      function xi(t, e) {
        return 1 & t[e + 1] ? 7 : 9;
      }
      function Pi(t, e) {
        return (
          ((3 & t[e + 3]) << 11) | (t[e + 4] << 3) | ((224 & t[e + 5]) >>> 5)
        );
      }
      function Fi(t, e) {
        return e + 1 < t.length && _i(t, e);
      }
      function Mi(t, e) {
        if (Fi(t, e)) {
          var r = xi(t, e);
          if (e + r >= t.length) return !1;
          var i = Pi(t, e);
          if (i <= r) return !1;
          var n = e + i;
          return n === t.length || Fi(t, n);
        }
        return !1;
      }
      function Oi(t, e, r, i, n) {
        if (!t.samplerate) {
          var a = (function (t, e, r, i) {
            var n,
              a,
              s,
              o,
              l = navigator.userAgent.toLowerCase(),
              u = i,
              h = [
                96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3,
                11025, 8e3, 7350,
              ];
            n = 1 + ((192 & e[r + 2]) >>> 6);
            var d = (60 & e[r + 2]) >>> 2;
            if (!(d > h.length - 1))
              return (
                (s = (1 & e[r + 2]) << 2),
                (s |= (192 & e[r + 3]) >>> 6),
                w.log(
                  "manifest codec:" +
                    i +
                    ", ADTS type:" +
                    n +
                    ", samplingIndex:" +
                    d
                ),
                /firefox/i.test(l)
                  ? d >= 6
                    ? ((n = 5), (o = new Array(4)), (a = d - 3))
                    : ((n = 2), (o = new Array(2)), (a = d))
                  : -1 !== l.indexOf("android")
                  ? ((n = 2), (o = new Array(2)), (a = d))
                  : ((n = 5),
                    (o = new Array(4)),
                    (i &&
                      (-1 !== i.indexOf("mp4a.40.29") ||
                        -1 !== i.indexOf("mp4a.40.5"))) ||
                    (!i && d >= 6)
                      ? (a = d - 3)
                      : (((i &&
                          -1 !== i.indexOf("mp4a.40.2") &&
                          ((d >= 6 && 1 === s) || /vivaldi/i.test(l))) ||
                          (!i && 1 === s)) &&
                          ((n = 2), (o = new Array(2))),
                        (a = d))),
                (o[0] = n << 3),
                (o[0] |= (14 & d) >> 1),
                (o[1] |= (1 & d) << 7),
                (o[1] |= s << 3),
                5 === n &&
                  ((o[1] |= (14 & a) >> 1),
                  (o[2] = (1 & a) << 7),
                  (o[2] |= 8),
                  (o[3] = 0)),
                {
                  config: o,
                  samplerate: h[d],
                  channelCount: s,
                  codec: "mp4a.40." + n,
                  manifestCodec: u,
                }
              );
            var c = new Error("invalid ADTS sampling index:" + d);
            t.emit(S.ERROR, S.ERROR, {
              type: L.MEDIA_ERROR,
              details: A.FRAG_PARSING_ERROR,
              fatal: !0,
              error: c,
              reason: c.message,
            });
          })(e, r, i, n);
          if (!a) return;
          (t.config = a.config),
            (t.samplerate = a.samplerate),
            (t.channelCount = a.channelCount),
            (t.codec = a.codec),
            (t.manifestCodec = a.manifestCodec),
            w.log(
              "parsed codec:" +
                t.codec +
                ", rate:" +
                a.samplerate +
                ", channels:" +
                a.channelCount
            );
        }
      }
      function Ni(t) {
        return 9216e4 / t;
      }
      function Ui(t, e, r, i, n) {
        var a,
          s = i + n * Ni(t.samplerate),
          o = (function (t, e) {
            var r = xi(t, e);
            if (e + r <= t.length) {
              var i = Pi(t, e) - r;
              if (i > 0) return { headerLength: r, frameLength: i };
            }
          })(e, r);
        if (o) {
          var l = o.frameLength,
            u = o.headerLength,
            h = u + l,
            d = Math.max(0, r + h - e.length);
          d
            ? (a = new Uint8Array(h - u)).set(e.subarray(r + u, e.length), 0)
            : (a = e.subarray(r + u, r + h));
          var c = { unit: a, pts: s };
          return d || t.samples.push(c), { sample: c, length: h, missing: d };
        }
        var f = e.length - r;
        return (
          (a = new Uint8Array(f)).set(e.subarray(r, e.length), 0),
          { sample: { unit: a, pts: s }, length: f, missing: -1 }
        );
      }
      var Bi = null,
        Gi = [
          32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32,
          48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40,
          48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64,
          80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48,
          56, 64, 80, 96, 112, 128, 144, 160,
        ],
        Ki = [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
        Hi = [
          [0, 72, 144, 12],
          [0, 0, 0, 0],
          [0, 72, 144, 12],
          [0, 144, 144, 12],
        ],
        Vi = [0, 1, 1, 4];
      function Yi(t, e, r, i, n) {
        if (!(r + 24 > e.length)) {
          var a = Wi(e, r);
          if (a && r + a.frameLength <= e.length) {
            var s = i + n * ((9e4 * a.samplesPerFrame) / a.sampleRate),
              o = { unit: e.subarray(r, r + a.frameLength), pts: s, dts: s };
            return (
              (t.config = []),
              (t.channelCount = a.channelCount),
              (t.samplerate = a.sampleRate),
              t.samples.push(o),
              { sample: o, length: a.frameLength, missing: 0 }
            );
          }
        }
      }
      function Wi(t, e) {
        var r = (t[e + 1] >> 3) & 3,
          i = (t[e + 1] >> 1) & 3,
          n = (t[e + 2] >> 4) & 15,
          a = (t[e + 2] >> 2) & 3;
        if (1 !== r && 0 !== n && 15 !== n && 3 !== a) {
          var s = (t[e + 2] >> 1) & 1,
            o = t[e + 3] >> 6,
            l = 1e3 * Gi[14 * (3 === r ? 3 - i : 3 === i ? 3 : 4) + n - 1],
            u = Ki[3 * (3 === r ? 0 : 2 === r ? 1 : 2) + a],
            h = 3 === o ? 1 : 2,
            d = Hi[r][i],
            c = Vi[i],
            f = 8 * d * c,
            g = Math.floor((d * l) / u + s) * c;
          if (null === Bi) {
            var v = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
            Bi = v ? parseInt(v[1]) : 0;
          }
          return (
            !!Bi &&
              Bi <= 87 &&
              2 === i &&
              l >= 224e3 &&
              0 === o &&
              (t[e + 3] = 128 | t[e + 3]),
            {
              sampleRate: u,
              channelCount: h,
              frameLength: g,
              samplesPerFrame: f,
            }
          );
        }
      }
      function ji(t, e) {
        return 255 === t[e] && 224 == (224 & t[e + 1]) && 0 != (6 & t[e + 1]);
      }
      function qi(t, e) {
        return e + 1 < t.length && ji(t, e);
      }
      function Xi(t, e) {
        if (e + 1 < t.length && ji(t, e)) {
          var r = Wi(t, e),
            i = 4;
          null != r && r.frameLength && (i = r.frameLength);
          var n = e + i;
          return n === t.length || qi(t, n);
        }
        return !1;
      }
      var zi = (function (t) {
          function e(e, r) {
            var i;
            return (
              ((i = t.call(this) || this).observer = void 0),
              (i.config = void 0),
              (i.observer = e),
              (i.config = r),
              i
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.resetInitSegment = function (e, r, i, n) {
              t.prototype.resetInitSegment.call(this, e, r, i, n),
                (this._audioTrack = {
                  container: "audio/adts",
                  type: "audio",
                  id: 2,
                  pid: -1,
                  sequenceNumber: 0,
                  segmentCodec: "aac",
                  samples: [],
                  manifestCodec: r,
                  duration: n,
                  inputTimeScale: 9e4,
                  dropped: 0,
                });
            }),
            (e.probe = function (t) {
              if (!t) return !1;
              var e = lt(t, 0),
                r = (null == e ? void 0 : e.length) || 0;
              if (Xi(t, r)) return !1;
              for (var i = t.length; r < i; r++)
                if (Mi(t, r)) return w.log("ADTS sync word found !"), !0;
              return !1;
            }),
            (r.canParse = function (t, e) {
              return (function (t, e) {
                return (
                  (function (t, e) {
                    return e + 5 < t.length;
                  })(t, e) &&
                  _i(t, e) &&
                  Pi(t, e) <= t.length - e
                );
              })(t, e);
            }),
            (r.appendFrame = function (t, e, r) {
              Oi(t, this.observer, e, r, t.manifestCodec);
              var i = Ui(t, e, r, this.basePTS, this.frameIndex);
              if (i && 0 === i.missing) return i;
            }),
            e
          );
        })(wi),
        Qi = /\/emsg[-/]ID3/i,
        Ji = (function () {
          function t(t, e) {
            (this.remainderData = null),
              (this.timeOffset = 0),
              (this.config = void 0),
              (this.videoTrack = void 0),
              (this.audioTrack = void 0),
              (this.id3Track = void 0),
              (this.txtTrack = void 0),
              (this.config = e);
          }
          var e = t.prototype;
          return (
            (e.resetTimeStamp = function () {}),
            (e.resetInitSegment = function (t, e, r, i) {
              var n = (this.videoTrack = Ii("video", 1)),
                a = (this.audioTrack = Ii("audio", 1)),
                s = (this.txtTrack = Ii("text", 1));
              if (
                ((this.id3Track = Ii("id3", 1)),
                (this.timeOffset = 0),
                null != t && t.byteLength)
              ) {
                var o = Ft(t);
                if (o.video) {
                  var l = o.video,
                    u = l.id,
                    h = l.timescale,
                    d = l.codec;
                  (n.id = u), (n.timescale = s.timescale = h), (n.codec = d);
                }
                if (o.audio) {
                  var c = o.audio,
                    f = c.id,
                    g = c.timescale,
                    v = c.codec;
                  (a.id = f), (a.timescale = g), (a.codec = v);
                }
                (s.id = kt.text),
                  (n.sampleDuration = 0),
                  (n.duration = a.duration = i);
              }
            }),
            (e.resetContiguity = function () {
              this.remainderData = null;
            }),
            (t.probe = function (t) {
              return (function (t) {
                for (var e = t.byteLength, r = 0; r < e; ) {
                  var i = It(t, r);
                  if (
                    i > 8 &&
                    109 === t[r + 4] &&
                    111 === t[r + 5] &&
                    111 === t[r + 6] &&
                    102 === t[r + 7]
                  )
                    return !0;
                  r = i > 1 ? r + i : e;
                }
                return !1;
              })(t);
            }),
            (e.demux = function (t, e) {
              this.timeOffset = e;
              var r = t,
                i = this.videoTrack,
                n = this.txtTrack;
              if (this.config.progressive) {
                this.remainderData && (r = Kt(this.remainderData, t));
                var a = (function (t) {
                  var e = { valid: null, remainder: null },
                    r = xt(t, ["moof"]);
                  if (r.length < 2) return (e.remainder = t), e;
                  var i = r[r.length - 1];
                  return (
                    (e.valid = nt(t, 0, i.byteOffset - 8)),
                    (e.remainder = nt(t, i.byteOffset - 8)),
                    e
                  );
                })(r);
                (this.remainderData = a.remainder),
                  (i.samples = a.valid || new Uint8Array());
              } else i.samples = r;
              var s = this.extractID3Track(i, e);
              return (
                (n.samples = Ht(e, i)),
                {
                  videoTrack: i,
                  audioTrack: this.audioTrack,
                  id3Track: s,
                  textTrack: this.txtTrack,
                }
              );
            }),
            (e.flush = function () {
              var t = this.timeOffset,
                e = this.videoTrack,
                r = this.txtTrack;
              (e.samples = this.remainderData || new Uint8Array()),
                (this.remainderData = null);
              var i = this.extractID3Track(e, this.timeOffset);
              return (
                (r.samples = Ht(t, e)),
                {
                  videoTrack: e,
                  audioTrack: Ii(),
                  id3Track: i,
                  textTrack: Ii(),
                }
              );
            }),
            (e.extractID3Track = function (t, e) {
              var r = this.id3Track;
              if (t.samples.length) {
                var i = xt(t.samples, ["emsg"]);
                i &&
                  i.forEach(function (t) {
                    var i = (function (t) {
                      var e = t[0],
                        r = "",
                        i = "",
                        n = 0,
                        a = 0,
                        s = 0,
                        o = 0,
                        l = 0,
                        u = 0;
                      if (0 === e) {
                        for (; "\0" !== bt(t.subarray(u, u + 1)); )
                          (r += bt(t.subarray(u, u + 1))), (u += 1);
                        for (
                          r += bt(t.subarray(u, u + 1)), u += 1;
                          "\0" !== bt(t.subarray(u, u + 1));

                        )
                          (i += bt(t.subarray(u, u + 1))), (u += 1);
                        (i += bt(t.subarray(u, u + 1))),
                          (u += 1),
                          (n = It(t, 12)),
                          (a = It(t, 16)),
                          (o = It(t, 20)),
                          (l = It(t, 24)),
                          (u = 28);
                      } else if (1 === e) {
                        n = It(t, (u += 4));
                        var h = It(t, (u += 4)),
                          d = It(t, (u += 4));
                        for (
                          u += 4,
                            s = Math.pow(2, 32) * h + d,
                            E(s) ||
                              ((s = Number.MAX_SAFE_INTEGER),
                              w.warn(
                                "Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box"
                              )),
                            o = It(t, u),
                            l = It(t, (u += 4)),
                            u += 4;
                          "\0" !== bt(t.subarray(u, u + 1));

                        )
                          (r += bt(t.subarray(u, u + 1))), (u += 1);
                        for (
                          r += bt(t.subarray(u, u + 1)), u += 1;
                          "\0" !== bt(t.subarray(u, u + 1));

                        )
                          (i += bt(t.subarray(u, u + 1))), (u += 1);
                        (i += bt(t.subarray(u, u + 1))), (u += 1);
                      }
                      return {
                        schemeIdUri: r,
                        value: i,
                        timeScale: n,
                        presentationTime: s,
                        presentationTimeDelta: a,
                        eventDuration: o,
                        id: l,
                        payload: t.subarray(u, t.byteLength),
                      };
                    })(t);
                    if (Qi.test(i.schemeIdUri)) {
                      var n = y(i.presentationTime)
                          ? i.presentationTime / i.timeScale
                          : e + i.presentationTimeDelta / i.timeScale,
                        a =
                          4294967295 === i.eventDuration
                            ? Number.POSITIVE_INFINITY
                            : i.eventDuration / i.timeScale;
                      a <= 0.001 && (a = Number.POSITIVE_INFINITY);
                      var s = i.payload;
                      r.samples.push({
                        data: s,
                        len: s.byteLength,
                        dts: n,
                        pts: n,
                        type: He,
                        duration: a,
                      });
                    }
                  });
              }
              return r;
            }),
            (e.demuxSampleAes = function (t, e, r) {
              return Promise.reject(
                new Error(
                  "The MP4 demuxer does not support SAMPLE-AES decryption"
                )
              );
            }),
            (e.destroy = function () {}),
            t
          );
        })(),
        $i = function (t, e) {
          var r = 0,
            i = 5;
          e += i;
          for (
            var n = new Uint32Array(1),
              a = new Uint32Array(1),
              s = new Uint8Array(1);
            i > 0;

          ) {
            s[0] = t[e];
            var o = Math.min(i, 8),
              l = 8 - o;
            (a[0] = (4278190080 >>> (24 + l)) << l),
              (n[0] = (s[0] & a[0]) >> l),
              (r = r ? (r << o) | n[0] : n[0]),
              (e += 1),
              (i -= o);
          }
          return r;
        },
        Zi = (function (t) {
          function e(e) {
            var r;
            return (
              ((r = t.call(this) || this).observer = void 0),
              (r.observer = e),
              r
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.resetInitSegment = function (e, r, i, n) {
              t.prototype.resetInitSegment.call(this, e, r, i, n),
                (this._audioTrack = {
                  container: "audio/ac-3",
                  type: "audio",
                  id: 2,
                  pid: -1,
                  sequenceNumber: 0,
                  segmentCodec: "ac3",
                  samples: [],
                  manifestCodec: r,
                  duration: n,
                  inputTimeScale: 9e4,
                  dropped: 0,
                });
            }),
            (r.canParse = function (t, e) {
              return e + 64 < t.length;
            }),
            (r.appendFrame = function (t, e, r) {
              var i = tn(t, e, r, this.basePTS, this.frameIndex);
              if (-1 !== i)
                return {
                  sample: t.samples[t.samples.length - 1],
                  length: i,
                  missing: 0,
                };
            }),
            (e.probe = function (t) {
              if (!t) return !1;
              var e = lt(t, 0);
              if (!e) return !1;
              var r = e.length;
              return (
                11 === t[r] &&
                119 === t[r + 1] &&
                void 0 !== dt(e) &&
                $i(t, r) < 16
              );
            }),
            e
          );
        })(wi);
      function tn(t, e, r, i, n) {
        if (r + 8 > e.length) return -1;
        if (11 !== e[r] || 119 !== e[r + 1]) return -1;
        var a = e[r + 4] >> 6;
        if (a >= 3) return -1;
        var s = [48e3, 44100, 32e3][a],
          o = 63 & e[r + 4],
          l =
            2 *
            [
              64, 69, 96, 64, 70, 96, 80, 87, 120, 80, 88, 120, 96, 104, 144,
              96, 105, 144, 112, 121, 168, 112, 122, 168, 128, 139, 192, 128,
              140, 192, 160, 174, 240, 160, 175, 240, 192, 208, 288, 192, 209,
              288, 224, 243, 336, 224, 244, 336, 256, 278, 384, 256, 279, 384,
              320, 348, 480, 320, 349, 480, 384, 417, 576, 384, 418, 576, 448,
              487, 672, 448, 488, 672, 512, 557, 768, 512, 558, 768, 640, 696,
              960, 640, 697, 960, 768, 835, 1152, 768, 836, 1152, 896, 975,
              1344, 896, 976, 1344, 1024, 1114, 1536, 1024, 1115, 1536, 1152,
              1253, 1728, 1152, 1254, 1728, 1280, 1393, 1920, 1280, 1394, 1920,
            ][3 * o + a];
        if (r + l > e.length) return -1;
        var u = e[r + 6] >> 5,
          h = 0;
        2 === u ? (h += 2) : (1 & u && 1 !== u && (h += 2), 4 & u && (h += 2));
        var d = (((e[r + 6] << 8) | e[r + 7]) >> (12 - h)) & 1,
          c = [2, 1, 2, 3, 3, 4, 4, 5][u] + d,
          f = e[r + 5] >> 3,
          g = 7 & e[r + 5],
          v = new Uint8Array([
            (a << 6) | (f << 1) | (g >> 2),
            ((3 & g) << 6) | (u << 3) | (d << 2) | (o >> 4),
            (o << 4) & 224,
          ]),
          m = i + n * ((1536 / s) * 9e4),
          p = e.subarray(r, r + l);
        return (
          (t.config = v),
          (t.channelCount = c),
          (t.samplerate = s),
          t.samples.push({ unit: p, pts: m }),
          l
        );
      }
      var en = (function () {
          function t() {
            this.VideoSample = null;
          }
          var e = t.prototype;
          return (
            (e.createVideoSample = function (t, e, r, i) {
              return {
                key: t,
                frame: !1,
                pts: e,
                dts: r,
                units: [],
                debug: i,
                length: 0,
              };
            }),
            (e.getLastNalUnit = function (t) {
              var e,
                r,
                i = this.VideoSample;
              if (
                ((i && 0 !== i.units.length) || (i = t[t.length - 1]),
                null != (e = i) && e.units)
              ) {
                var n = i.units;
                r = n[n.length - 1];
              }
              return r;
            }),
            (e.pushAccessUnit = function (t, e) {
              if (t.units.length && t.frame) {
                if (void 0 === t.pts) {
                  var r = e.samples,
                    i = r.length;
                  if (!i) return void e.dropped++;
                  var n = r[i - 1];
                  (t.pts = n.pts), (t.dts = n.dts);
                }
                e.samples.push(t);
              }
              t.debug.length && w.log(t.pts + "/" + t.dts + ":" + t.debug);
            }),
            t
          );
        })(),
        rn = (function () {
          function t(t) {
            (this.data = void 0),
              (this.bytesAvailable = void 0),
              (this.word = void 0),
              (this.bitsAvailable = void 0),
              (this.data = t),
              (this.bytesAvailable = t.byteLength),
              (this.word = 0),
              (this.bitsAvailable = 0);
          }
          var e = t.prototype;
          return (
            (e.loadWord = function () {
              var t = this.data,
                e = this.bytesAvailable,
                r = t.byteLength - e,
                i = new Uint8Array(4),
                n = Math.min(4, e);
              if (0 === n) throw new Error("no bytes available");
              i.set(t.subarray(r, r + n)),
                (this.word = new DataView(i.buffer).getUint32(0)),
                (this.bitsAvailable = 8 * n),
                (this.bytesAvailable -= n);
            }),
            (e.skipBits = function (t) {
              var e;
              (t = Math.min(t, 8 * this.bytesAvailable + this.bitsAvailable)),
                this.bitsAvailable > t
                  ? ((this.word <<= t), (this.bitsAvailable -= t))
                  : ((t -= this.bitsAvailable),
                    (t -= (e = t >> 3) << 3),
                    (this.bytesAvailable -= e),
                    this.loadWord(),
                    (this.word <<= t),
                    (this.bitsAvailable -= t));
            }),
            (e.readBits = function (t) {
              var e = Math.min(this.bitsAvailable, t),
                r = this.word >>> (32 - e);
              if (
                (t > 32 && w.error("Cannot read more than 32 bits at a time"),
                (this.bitsAvailable -= e),
                this.bitsAvailable > 0)
              )
                this.word <<= e;
              else {
                if (!(this.bytesAvailable > 0))
                  throw new Error("no bits available");
                this.loadWord();
              }
              return (e = t - e) > 0 && this.bitsAvailable
                ? (r << e) | this.readBits(e)
                : r;
            }),
            (e.skipLZ = function () {
              var t;
              for (t = 0; t < this.bitsAvailable; ++t)
                if (0 != (this.word & (2147483648 >>> t)))
                  return (this.word <<= t), (this.bitsAvailable -= t), t;
              return this.loadWord(), t + this.skipLZ();
            }),
            (e.skipUEG = function () {
              this.skipBits(1 + this.skipLZ());
            }),
            (e.skipEG = function () {
              this.skipBits(1 + this.skipLZ());
            }),
            (e.readUEG = function () {
              var t = this.skipLZ();
              return this.readBits(t + 1) - 1;
            }),
            (e.readEG = function () {
              var t = this.readUEG();
              return 1 & t ? (1 + t) >>> 1 : -1 * (t >>> 1);
            }),
            (e.readBoolean = function () {
              return 1 === this.readBits(1);
            }),
            (e.readUByte = function () {
              return this.readBits(8);
            }),
            (e.readUShort = function () {
              return this.readBits(16);
            }),
            (e.readUInt = function () {
              return this.readBits(32);
            }),
            (e.skipScalingList = function (t) {
              for (var e = 8, r = 8, i = 0; i < t; i++)
                0 !== r && (r = (e + this.readEG() + 256) % 256),
                  (e = 0 === r ? e : r);
            }),
            (e.readSPS = function () {
              var t,
                e,
                r,
                i = 0,
                n = 0,
                a = 0,
                s = 0,
                o = this.readUByte.bind(this),
                l = this.readBits.bind(this),
                u = this.readUEG.bind(this),
                h = this.readBoolean.bind(this),
                d = this.skipBits.bind(this),
                c = this.skipEG.bind(this),
                f = this.skipUEG.bind(this),
                g = this.skipScalingList.bind(this);
              o();
              var v = o();
              if (
                (l(5),
                d(3),
                o(),
                f(),
                100 === v ||
                  110 === v ||
                  122 === v ||
                  244 === v ||
                  44 === v ||
                  83 === v ||
                  86 === v ||
                  118 === v ||
                  128 === v)
              ) {
                var m = u();
                if ((3 === m && d(1), f(), f(), d(1), h()))
                  for (e = 3 !== m ? 8 : 12, r = 0; r < e; r++)
                    h() && g(r < 6 ? 16 : 64);
              }
              f();
              var p = u();
              if (0 === p) u();
              else if (1 === p)
                for (d(1), c(), c(), t = u(), r = 0; r < t; r++) c();
              f(), d(1);
              var y = u(),
                E = u(),
                T = l(1);
              0 === T && d(1),
                d(1),
                h() && ((i = u()), (n = u()), (a = u()), (s = u()));
              var S = [1, 1];
              if (h() && h())
                switch (o()) {
                  case 1:
                    S = [1, 1];
                    break;
                  case 2:
                    S = [12, 11];
                    break;
                  case 3:
                    S = [10, 11];
                    break;
                  case 4:
                    S = [16, 11];
                    break;
                  case 5:
                    S = [40, 33];
                    break;
                  case 6:
                    S = [24, 11];
                    break;
                  case 7:
                    S = [20, 11];
                    break;
                  case 8:
                    S = [32, 11];
                    break;
                  case 9:
                    S = [80, 33];
                    break;
                  case 10:
                    S = [18, 11];
                    break;
                  case 11:
                    S = [15, 11];
                    break;
                  case 12:
                    S = [64, 33];
                    break;
                  case 13:
                    S = [160, 99];
                    break;
                  case 14:
                    S = [4, 3];
                    break;
                  case 15:
                    S = [3, 2];
                    break;
                  case 16:
                    S = [2, 1];
                    break;
                  case 255:
                    S = [(o() << 8) | o(), (o() << 8) | o()];
                }
              return {
                width: Math.ceil(16 * (y + 1) - 2 * i - 2 * n),
                height: (2 - T) * (E + 1) * 16 - (T ? 2 : 4) * (a + s),
                pixelRatio: S,
              };
            }),
            (e.readSliceType = function () {
              return this.readUByte(), this.readUEG(), this.readUEG();
            }),
            t
          );
        })(),
        nn = (function (t) {
          function e() {
            return t.apply(this, arguments) || this;
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.parseAVCPES = function (t, e, r, i, n) {
              var a,
                s = this,
                o = this.parseAVCNALu(t, r.data),
                l = this.VideoSample,
                u = !1;
              (r.data = null),
                l &&
                  o.length &&
                  !t.audFound &&
                  (this.pushAccessUnit(l, t),
                  (l = this.VideoSample =
                    this.createVideoSample(!1, r.pts, r.dts, ""))),
                o.forEach(function (i) {
                  var o;
                  switch (i.type) {
                    case 1:
                      var h = !1;
                      a = !0;
                      var d,
                        c = i.data;
                      if (u && c.length > 4) {
                        var f = new rn(c).readSliceType();
                        (2 !== f && 4 !== f && 7 !== f && 9 !== f) || (h = !0);
                      }
                      h &&
                        null != (d = l) &&
                        d.frame &&
                        !l.key &&
                        (s.pushAccessUnit(l, t), (l = s.VideoSample = null)),
                        l ||
                          (l = s.VideoSample =
                            s.createVideoSample(!0, r.pts, r.dts, "")),
                        (l.frame = !0),
                        (l.key = h);
                      break;
                    case 5:
                      (a = !0),
                        null != (o = l) &&
                          o.frame &&
                          !l.key &&
                          (s.pushAccessUnit(l, t), (l = s.VideoSample = null)),
                        l ||
                          (l = s.VideoSample =
                            s.createVideoSample(!0, r.pts, r.dts, "")),
                        (l.key = !0),
                        (l.frame = !0);
                      break;
                    case 6:
                      (a = !0), Yt(i.data, 1, r.pts, e.samples);
                      break;
                    case 7:
                      var g, v;
                      (a = !0), (u = !0);
                      var m = i.data,
                        p = new rn(m).readSPS();
                      if (
                        !t.sps ||
                        t.width !== p.width ||
                        t.height !== p.height ||
                        (null == (g = t.pixelRatio) ? void 0 : g[0]) !==
                          p.pixelRatio[0] ||
                        (null == (v = t.pixelRatio) ? void 0 : v[1]) !==
                          p.pixelRatio[1]
                      ) {
                        (t.width = p.width),
                          (t.height = p.height),
                          (t.pixelRatio = p.pixelRatio),
                          (t.sps = [m]),
                          (t.duration = n);
                        for (
                          var y = m.subarray(1, 4), E = "avc1.", T = 0;
                          T < 3;
                          T++
                        ) {
                          var S = y[T].toString(16);
                          S.length < 2 && (S = "0" + S), (E += S);
                        }
                        t.codec = E;
                      }
                      break;
                    case 8:
                      (a = !0), (t.pps = [i.data]);
                      break;
                    case 9:
                      (a = !0),
                        (t.audFound = !0),
                        l && s.pushAccessUnit(l, t),
                        (l = s.VideoSample =
                          s.createVideoSample(!1, r.pts, r.dts, ""));
                      break;
                    case 12:
                      a = !0;
                      break;
                    default:
                      (a = !1), l && (l.debug += "unknown NAL " + i.type + " ");
                  }
                  l && a && l.units.push(i);
                }),
                i &&
                  l &&
                  (this.pushAccessUnit(l, t), (this.VideoSample = null));
            }),
            (r.parseAVCNALu = function (t, e) {
              var r,
                i,
                n = e.byteLength,
                a = t.naluState || 0,
                s = a,
                o = [],
                l = 0,
                u = -1,
                h = 0;
              for (
                -1 === a && ((u = 0), (h = 31 & e[0]), (a = 0), (l = 1));
                l < n;

              )
                if (((r = e[l++]), a))
                  if (1 !== a)
                    if (r)
                      if (1 === r) {
                        if (((i = l - a - 1), u >= 0)) {
                          var d = { data: e.subarray(u, i), type: h };
                          o.push(d);
                        } else {
                          var c = this.getLastNalUnit(t.samples);
                          c &&
                            (s &&
                              l <= 4 - s &&
                              c.state &&
                              (c.data = c.data.subarray(
                                0,
                                c.data.byteLength - s
                              )),
                            i > 0 &&
                              ((c.data = Kt(c.data, e.subarray(0, i))),
                              (c.state = 0)));
                        }
                        l < n ? ((u = l), (h = 31 & e[l]), (a = 0)) : (a = -1);
                      } else a = 0;
                    else a = 3;
                  else a = r ? 0 : 2;
                else a = r ? 0 : 1;
              if (u >= 0 && a >= 0) {
                var f = { data: e.subarray(u, n), type: h, state: a };
                o.push(f);
              }
              if (0 === o.length) {
                var g = this.getLastNalUnit(t.samples);
                g && (g.data = Kt(g.data, e));
              }
              return (t.naluState = a), o;
            }),
            e
          );
        })(en),
        an = (function () {
          function t(t, e, r) {
            (this.keyData = void 0),
              (this.decrypter = void 0),
              (this.keyData = r),
              (this.decrypter = new ci(e, { removePKCS7Padding: !1 }));
          }
          var e = t.prototype;
          return (
            (e.decryptBuffer = function (t) {
              return this.decrypter.decrypt(
                t,
                this.keyData.key.buffer,
                this.keyData.iv.buffer
              );
            }),
            (e.decryptAacSample = function (t, e, r) {
              var i = this,
                n = t[e].unit;
              if (!(n.length <= 16)) {
                var a = n.subarray(16, n.length - (n.length % 16)),
                  s = a.buffer.slice(a.byteOffset, a.byteOffset + a.length);
                this.decryptBuffer(s).then(function (a) {
                  var s = new Uint8Array(a);
                  n.set(s, 16),
                    i.decrypter.isSync() || i.decryptAacSamples(t, e + 1, r);
                });
              }
            }),
            (e.decryptAacSamples = function (t, e, r) {
              for (; ; e++) {
                if (e >= t.length) return void r();
                if (
                  !(
                    t[e].unit.length < 32 ||
                    (this.decryptAacSample(t, e, r), this.decrypter.isSync())
                  )
                )
                  return;
              }
            }),
            (e.getAvcEncryptedData = function (t) {
              for (
                var e = 16 * Math.floor((t.length - 48) / 160) + 16,
                  r = new Int8Array(e),
                  i = 0,
                  n = 32;
                n < t.length - 16;
                n += 160, i += 16
              )
                r.set(t.subarray(n, n + 16), i);
              return r;
            }),
            (e.getAvcDecryptedUnit = function (t, e) {
              for (
                var r = new Uint8Array(e), i = 0, n = 32;
                n < t.length - 16;
                n += 160, i += 16
              )
                t.set(r.subarray(i, i + 16), n);
              return t;
            }),
            (e.decryptAvcSample = function (t, e, r, i, n) {
              var a = this,
                s = Wt(n.data),
                o = this.getAvcEncryptedData(s);
              this.decryptBuffer(o.buffer).then(function (o) {
                (n.data = a.getAvcDecryptedUnit(s, o)),
                  a.decrypter.isSync() || a.decryptAvcSamples(t, e, r + 1, i);
              });
            }),
            (e.decryptAvcSamples = function (t, e, r, i) {
              if (t instanceof Uint8Array)
                throw new Error("Cannot decrypt samples of type Uint8Array");
              for (; ; e++, r = 0) {
                if (e >= t.length) return void i();
                for (var n = t[e].units; !(r >= n.length); r++) {
                  var a = n[r];
                  if (
                    !(
                      a.data.length <= 48 ||
                      (1 !== a.type && 5 !== a.type) ||
                      (this.decryptAvcSample(t, e, r, i, a),
                      this.decrypter.isSync())
                    )
                  )
                    return;
                }
              }
            }),
            t
          );
        })(),
        sn = 188,
        on = (function () {
          function t(t, e, r) {
            (this.observer = void 0),
              (this.config = void 0),
              (this.typeSupported = void 0),
              (this.sampleAes = null),
              (this.pmtParsed = !1),
              (this.audioCodec = void 0),
              (this.videoCodec = void 0),
              (this._duration = 0),
              (this._pmtId = -1),
              (this._videoTrack = void 0),
              (this._audioTrack = void 0),
              (this._id3Track = void 0),
              (this._txtTrack = void 0),
              (this.aacOverFlow = null),
              (this.remainderData = null),
              (this.videoParser = void 0),
              (this.observer = t),
              (this.config = e),
              (this.typeSupported = r),
              (this.videoParser = new nn());
          }
          (t.probe = function (e) {
            var r = t.syncOffset(e);
            return (
              r > 0 &&
                w.warn(
                  "MPEG2-TS detected but first sync word found @ offset " + r
                ),
              -1 !== r
            );
          }),
            (t.syncOffset = function (t) {
              for (
                var e = t.length, r = Math.min(940, e - sn) + 1, i = 0;
                i < r;

              ) {
                for (var n = !1, a = -1, s = 0, o = i; o < e; o += sn) {
                  if (71 !== t[o] || (e - o !== sn && 71 !== t[o + sn])) {
                    if (s) return -1;
                    break;
                  }
                  if (
                    (s++,
                    -1 === a &&
                      0 !== (a = o) &&
                      (r = Math.min(a + 18612, t.length - sn) + 1),
                    n || (n = 0 === ln(t, o)),
                    n && s > 1 && ((0 === a && s > 2) || o + sn > r))
                  )
                    return a;
                }
                i++;
              }
              return -1;
            }),
            (t.createTrack = function (t, e) {
              return {
                container:
                  "video" === t || "audio" === t ? "video/mp2t" : void 0,
                type: t,
                id: kt[t],
                pid: -1,
                inputTimeScale: 9e4,
                sequenceNumber: 0,
                samples: [],
                dropped: 0,
                duration: "audio" === t ? e : void 0,
              };
            });
          var e = t.prototype;
          return (
            (e.resetInitSegment = function (e, r, i, n) {
              (this.pmtParsed = !1),
                (this._pmtId = -1),
                (this._videoTrack = t.createTrack("video")),
                (this._audioTrack = t.createTrack("audio", n)),
                (this._id3Track = t.createTrack("id3")),
                (this._txtTrack = t.createTrack("text")),
                (this._audioTrack.segmentCodec = "aac"),
                (this.aacOverFlow = null),
                (this.remainderData = null),
                (this.audioCodec = r),
                (this.videoCodec = i),
                (this._duration = n);
            }),
            (e.resetTimeStamp = function () {}),
            (e.resetContiguity = function () {
              var t = this._audioTrack,
                e = this._videoTrack,
                r = this._id3Track;
              t && (t.pesData = null),
                e && (e.pesData = null),
                r && (r.pesData = null),
                (this.aacOverFlow = null),
                (this.remainderData = null);
            }),
            (e.demux = function (e, r, i, n) {
              var a;
              void 0 === i && (i = !1),
                void 0 === n && (n = !1),
                i || (this.sampleAes = null);
              var s = this._videoTrack,
                o = this._audioTrack,
                l = this._id3Track,
                u = this._txtTrack,
                h = s.pid,
                d = s.pesData,
                c = o.pid,
                f = l.pid,
                g = o.pesData,
                v = l.pesData,
                m = null,
                p = this.pmtParsed,
                y = this._pmtId,
                E = e.length;
              if (
                (this.remainderData &&
                  ((E = (e = Kt(this.remainderData, e)).length),
                  (this.remainderData = null)),
                E < sn && !n)
              )
                return (
                  (this.remainderData = e),
                  { audioTrack: o, videoTrack: s, id3Track: l, textTrack: u }
                );
              var T = Math.max(0, t.syncOffset(e));
              (E -= (E - T) % sn) < e.byteLength &&
                !n &&
                (this.remainderData = new Uint8Array(
                  e.buffer,
                  E,
                  e.buffer.byteLength - E
                ));
              for (var S = 0, L = T; L < E; L += sn)
                if (71 === e[L]) {
                  var A = !!(64 & e[L + 1]),
                    R = ln(e, L),
                    k = void 0;
                  if ((48 & e[L + 3]) >> 4 > 1) {
                    if ((k = L + 5 + e[L + 4]) === L + sn) continue;
                  } else k = L + 4;
                  switch (R) {
                    case h:
                      A &&
                        (d &&
                          (a = fn(d)) &&
                          this.videoParser.parseAVCPES(
                            s,
                            u,
                            a,
                            !1,
                            this._duration
                          ),
                        (d = { data: [], size: 0 })),
                        d &&
                          (d.data.push(e.subarray(k, L + sn)),
                          (d.size += L + sn - k));
                      break;
                    case c:
                      if (A) {
                        if (g && (a = fn(g)))
                          switch (o.segmentCodec) {
                            case "aac":
                              this.parseAACPES(o, a);
                              break;
                            case "mp3":
                              this.parseMPEGPES(o, a);
                              break;
                            case "ac3":
                              this.parseAC3PES(o, a);
                          }
                        g = { data: [], size: 0 };
                      }
                      g &&
                        (g.data.push(e.subarray(k, L + sn)),
                        (g.size += L + sn - k));
                      break;
                    case f:
                      A &&
                        (v && (a = fn(v)) && this.parseID3PES(l, a),
                        (v = { data: [], size: 0 })),
                        v &&
                          (v.data.push(e.subarray(k, L + sn)),
                          (v.size += L + sn - k));
                      break;
                    case 0:
                      A && (k += e[k] + 1), (y = this._pmtId = un(e, k));
                      break;
                    case y:
                      A && (k += e[k] + 1);
                      var b = hn(e, k, this.typeSupported, i, this.observer);
                      (h = b.videoPid) > 0 &&
                        ((s.pid = h), (s.segmentCodec = b.segmentVideoCodec)),
                        (c = b.audioPid) > 0 &&
                          ((o.pid = c), (o.segmentCodec = b.segmentAudioCodec)),
                        (f = b.id3Pid) > 0 && (l.pid = f),
                        null === m ||
                          p ||
                          (w.warn(
                            "MPEG-TS PMT found at " +
                              L +
                              " after unknown PID '" +
                              m +
                              "'. Backtracking to sync byte @" +
                              T +
                              " to parse all TS packets."
                          ),
                          (m = null),
                          (L = T - 188)),
                        (p = this.pmtParsed = !0);
                      break;
                    case 17:
                    case 8191:
                      break;
                    default:
                      m = R;
                  }
                } else S++;
              S > 0 &&
                dn(
                  this.observer,
                  new Error(
                    "Found " + S + " TS packet/s that do not start with 0x47"
                  )
                ),
                (s.pesData = d),
                (o.pesData = g),
                (l.pesData = v);
              var D = {
                audioTrack: o,
                videoTrack: s,
                id3Track: l,
                textTrack: u,
              };
              return n && this.extractRemainingSamples(D), D;
            }),
            (e.flush = function () {
              var t,
                e = this.remainderData;
              return (
                (this.remainderData = null),
                (t = e
                  ? this.demux(e, -1, !1, !0)
                  : {
                      videoTrack: this._videoTrack,
                      audioTrack: this._audioTrack,
                      id3Track: this._id3Track,
                      textTrack: this._txtTrack,
                    }),
                this.extractRemainingSamples(t),
                this.sampleAes ? this.decrypt(t, this.sampleAes) : t
              );
            }),
            (e.extractRemainingSamples = function (t) {
              var e,
                r = t.audioTrack,
                i = t.videoTrack,
                n = t.id3Track,
                a = t.textTrack,
                s = i.pesData,
                o = r.pesData,
                l = n.pesData;
              if (
                (s && (e = fn(s))
                  ? (this.videoParser.parseAVCPES(i, a, e, !0, this._duration),
                    (i.pesData = null))
                  : (i.pesData = s),
                o && (e = fn(o)))
              ) {
                switch (r.segmentCodec) {
                  case "aac":
                    this.parseAACPES(r, e);
                    break;
                  case "mp3":
                    this.parseMPEGPES(r, e);
                    break;
                  case "ac3":
                    this.parseAC3PES(r, e);
                }
                r.pesData = null;
              } else
                null != o &&
                  o.size &&
                  w.log(
                    "last AAC PES packet truncated,might overlap between fragments"
                  ),
                  (r.pesData = o);
              l && (e = fn(l))
                ? (this.parseID3PES(n, e), (n.pesData = null))
                : (n.pesData = l);
            }),
            (e.demuxSampleAes = function (t, e, r) {
              var i = this.demux(t, r, !0, !this.config.progressive),
                n = (this.sampleAes = new an(this.observer, this.config, e));
              return this.decrypt(i, n);
            }),
            (e.decrypt = function (t, e) {
              return new Promise(function (r) {
                var i = t.audioTrack,
                  n = t.videoTrack;
                i.samples && "aac" === i.segmentCodec
                  ? e.decryptAacSamples(i.samples, 0, function () {
                      n.samples
                        ? e.decryptAvcSamples(n.samples, 0, 0, function () {
                            r(t);
                          })
                        : r(t);
                    })
                  : n.samples &&
                    e.decryptAvcSamples(n.samples, 0, 0, function () {
                      r(t);
                    });
              });
            }),
            (e.destroy = function () {
              this._duration = 0;
            }),
            (e.parseAACPES = function (t, e) {
              var r,
                i,
                n,
                a = 0,
                s = this.aacOverFlow,
                o = e.data;
              if (s) {
                this.aacOverFlow = null;
                var l = s.missing,
                  u = s.sample.unit.byteLength;
                if (-1 === l) o = Kt(s.sample.unit, o);
                else {
                  var h = u - l;
                  s.sample.unit.set(o.subarray(0, l), h),
                    t.samples.push(s.sample),
                    (a = s.missing);
                }
              }
              for (r = a, i = o.length; r < i - 1 && !Fi(o, r); r++);
              if (r !== a) {
                var d,
                  c = r < i - 1;
                if (
                  ((d = c
                    ? "AAC PES did not start with ADTS header,offset:" + r
                    : "No ADTS header found in AAC PES"),
                  dn(this.observer, new Error(d), c),
                  !c)
                )
                  return;
              }
              if (
                (Oi(t, this.observer, o, r, this.audioCodec), void 0 !== e.pts)
              )
                n = e.pts;
              else {
                if (!s) return void w.warn("[tsdemuxer]: AAC PES unknown PTS");
                var f = Ni(t.samplerate);
                n = s.sample.pts + f;
              }
              for (var g, v = 0; r < i; ) {
                if (((r += (g = Ui(t, o, r, n, v)).length), g.missing)) {
                  this.aacOverFlow = g;
                  break;
                }
                for (v++; r < i - 1 && !Fi(o, r); r++);
              }
            }),
            (e.parseMPEGPES = function (t, e) {
              var r = e.data,
                i = r.length,
                n = 0,
                a = 0,
                s = e.pts;
              if (void 0 !== s)
                for (; a < i; )
                  if (qi(r, a)) {
                    var o = Yi(t, r, a, s, n);
                    if (!o) break;
                    (a += o.length), n++;
                  } else a++;
              else w.warn("[tsdemuxer]: MPEG PES unknown PTS");
            }),
            (e.parseAC3PES = function (t, e) {
              var r = e.data,
                i = e.pts;
              if (void 0 !== i)
                for (
                  var n, a = r.length, s = 0, o = 0;
                  o < a && (n = tn(t, r, o, i, s++)) > 0;

                )
                  o += n;
              else w.warn("[tsdemuxer]: AC3 PES unknown PTS");
            }),
            (e.parseID3PES = function (t, e) {
              if (void 0 !== e.pts) {
                var r = o({}, e, {
                  type: this._videoTrack ? He : Ge,
                  duration: Number.POSITIVE_INFINITY,
                });
                t.samples.push(r);
              } else w.warn("[tsdemuxer]: ID3 PES unknown PTS");
            }),
            t
          );
        })();
      function ln(t, e) {
        return ((31 & t[e + 1]) << 8) + t[e + 2];
      }
      function un(t, e) {
        return ((31 & t[e + 10]) << 8) | t[e + 11];
      }
      function hn(t, e, r, i, n) {
        var a = {
            audioPid: -1,
            videoPid: -1,
            id3Pid: -1,
            segmentVideoCodec: "avc",
            segmentAudioCodec: "aac",
          },
          s = e + 3 + (((15 & t[e + 1]) << 8) | t[e + 2]) - 4;
        for (e += 12 + (((15 & t[e + 10]) << 8) | t[e + 11]); e < s; ) {
          var o = ln(t, e),
            l = ((15 & t[e + 3]) << 8) | t[e + 4];
          switch (t[e]) {
            case 207:
              if (!i) {
                cn("ADTS AAC");
                break;
              }
            case 15:
              -1 === a.audioPid && (a.audioPid = o);
              break;
            case 21:
              -1 === a.id3Pid && (a.id3Pid = o);
              break;
            case 219:
              if (!i) {
                cn("H.264");
                break;
              }
            case 27:
              -1 === a.videoPid &&
                ((a.videoPid = o), (a.segmentVideoCodec = "avc"));
              break;
            case 3:
            case 4:
              r.mpeg || r.mp3
                ? -1 === a.audioPid &&
                  ((a.audioPid = o), (a.segmentAudioCodec = "mp3"))
                : w.log("MPEG audio found, not supported in this browser");
              break;
            case 193:
              if (!i) {
                cn("AC-3");
                break;
              }
            case 129:
              r.ac3
                ? -1 === a.audioPid &&
                  ((a.audioPid = o), (a.segmentAudioCodec = "ac3"))
                : w.log("AC-3 audio found, not supported in this browser");
              break;
            case 6:
              if (-1 === a.audioPid && l > 0)
                for (var u = e + 5, h = l; h > 2; ) {
                  106 === t[u] &&
                    (!0 !== r.ac3
                      ? w.log(
                          "AC-3 audio found, not supported in this browser for now"
                        )
                      : ((a.audioPid = o), (a.segmentAudioCodec = "ac3")));
                  var d = t[u + 1] + 2;
                  (u += d), (h -= d);
                }
              break;
            case 194:
            case 135:
              return dn(n, new Error("Unsupported EC-3 in M2TS found")), a;
            case 36:
              return dn(n, new Error("Unsupported HEVC in M2TS found")), a;
          }
          e += l + 5;
        }
        return a;
      }
      function dn(t, e, r) {
        w.warn("parsing error: " + e.message),
          t.emit(S.ERROR, S.ERROR, {
            type: L.MEDIA_ERROR,
            details: A.FRAG_PARSING_ERROR,
            fatal: !1,
            levelRetry: r,
            error: e,
            reason: e.message,
          });
      }
      function cn(t) {
        w.log(t + " with AES-128-CBC encryption found in unencrypted stream");
      }
      function fn(t) {
        var e,
          r,
          i,
          n,
          a,
          s = 0,
          o = t.data;
        if (!t || 0 === t.size) return null;
        for (; o[0].length < 19 && o.length > 1; )
          (o[0] = Kt(o[0], o[1])), o.splice(1, 1);
        if (1 === ((e = o[0])[0] << 16) + (e[1] << 8) + e[2]) {
          if ((r = (e[4] << 8) + e[5]) && r > t.size - 6) return null;
          var l = e[7];
          192 & l &&
            ((n =
              536870912 * (14 & e[9]) +
              4194304 * (255 & e[10]) +
              16384 * (254 & e[11]) +
              128 * (255 & e[12]) +
              (254 & e[13]) / 2),
            64 & l
              ? n -
                  (a =
                    536870912 * (14 & e[14]) +
                    4194304 * (255 & e[15]) +
                    16384 * (254 & e[16]) +
                    128 * (255 & e[17]) +
                    (254 & e[18]) / 2) >
                  54e5 &&
                (w.warn(
                  Math.round((n - a) / 9e4) +
                    "s delta between PTS and DTS, align them"
                ),
                (n = a))
              : (a = n));
          var u = (i = e[8]) + 9;
          if (t.size <= u) return null;
          t.size -= u;
          for (
            var h = new Uint8Array(t.size), d = 0, c = o.length;
            d < c;
            d++
          ) {
            var f = (e = o[d]).byteLength;
            if (u) {
              if (u > f) {
                u -= f;
                continue;
              }
              (e = e.subarray(u)), (f -= u), (u = 0);
            }
            h.set(e, s), (s += f);
          }
          return r && (r -= i + 3), { data: h, pts: n, dts: a, len: r };
        }
        return null;
      }
      var gn = (function (t) {
          function e() {
            return t.apply(this, arguments) || this;
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.resetInitSegment = function (e, r, i, n) {
              t.prototype.resetInitSegment.call(this, e, r, i, n),
                (this._audioTrack = {
                  container: "audio/mpeg",
                  type: "audio",
                  id: 2,
                  pid: -1,
                  sequenceNumber: 0,
                  segmentCodec: "mp3",
                  samples: [],
                  manifestCodec: r,
                  duration: n,
                  inputTimeScale: 9e4,
                  dropped: 0,
                });
            }),
            (e.probe = function (t) {
              if (!t) return !1;
              var e = lt(t, 0),
                r = (null == e ? void 0 : e.length) || 0;
              if (
                e &&
                11 === t[r] &&
                119 === t[r + 1] &&
                void 0 !== dt(e) &&
                $i(t, r) <= 16
              )
                return !1;
              for (var i = t.length; r < i; r++)
                if (Xi(t, r)) return w.log("MPEG Audio sync word found !"), !0;
              return !1;
            }),
            (r.canParse = function (t, e) {
              return (function (t, e) {
                return ji(t, e) && 4 <= t.length - e;
              })(t, e);
            }),
            (r.appendFrame = function (t, e, r) {
              if (null !== this.basePTS)
                return Yi(t, e, r, this.basePTS, this.frameIndex);
            }),
            e
          );
        })(wi),
        vn = (function () {
          function t() {}
          return (
            (t.getSilentFrame = function (t, e) {
              if ("mp4a.40.2" === t) {
                if (1 === e) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                if (2 === e)
                  return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                if (3 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142,
                  ]);
                if (4 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128,
                    8, 2, 56,
                  ]);
                if (5 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4,
                    153, 0, 33, 144, 2, 56,
                  ]);
                if (6 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4,
                    153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224,
                  ]);
              } else {
                if (1 === e)
                  return new Uint8Array([
                    1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6,
                    241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                  ]);
                if (2 === e)
                  return new Uint8Array([
                    1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149,
                    0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                  ]);
                if (3 === e)
                  return new Uint8Array([
                    1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149,
                    0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                  ]);
              }
            }),
            t
          );
        })(),
        mn = Math.pow(2, 32) - 1,
        pn = (function () {
          function t() {}
          return (
            (t.init = function () {
              var e;
              for (e in ((t.types = {
                avc1: [],
                avcC: [],
                btrt: [],
                dinf: [],
                dref: [],
                esds: [],
                ftyp: [],
                hdlr: [],
                mdat: [],
                mdhd: [],
                mdia: [],
                mfhd: [],
                minf: [],
                moof: [],
                moov: [],
                mp4a: [],
                ".mp3": [],
                dac3: [],
                "ac-3": [],
                mvex: [],
                mvhd: [],
                pasp: [],
                sdtp: [],
                stbl: [],
                stco: [],
                stsc: [],
                stsd: [],
                stsz: [],
                stts: [],
                tfdt: [],
                tfhd: [],
                traf: [],
                trak: [],
                trun: [],
                trex: [],
                tkhd: [],
                vmhd: [],
                smhd: [],
              }),
              t.types))
                t.types.hasOwnProperty(e) &&
                  (t.types[e] = [
                    e.charCodeAt(0),
                    e.charCodeAt(1),
                    e.charCodeAt(2),
                    e.charCodeAt(3),
                  ]);
              var r = new Uint8Array([
                  0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100,
                  108, 101, 114, 0,
                ]),
                i = new Uint8Array([
                  0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100,
                  108, 101, 114, 0,
                ]);
              t.HDLR_TYPES = { video: r, audio: i };
              var n = new Uint8Array([
                  0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0,
                  0, 1,
                ]),
                a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
              (t.STTS = t.STSC = t.STCO = a),
                (t.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])),
                (t.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])),
                (t.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])),
                (t.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]));
              var s = new Uint8Array([105, 115, 111, 109]),
                o = new Uint8Array([97, 118, 99, 49]),
                l = new Uint8Array([0, 0, 0, 1]);
              (t.FTYP = t.box(t.types.ftyp, s, l, s, o)),
                (t.DINF = t.box(t.types.dinf, t.box(t.types.dref, n)));
            }),
            (t.box = function (t) {
              for (
                var e = 8,
                  r = arguments.length,
                  i = new Array(r > 1 ? r - 1 : 0),
                  n = 1;
                n < r;
                n++
              )
                i[n - 1] = arguments[n];
              for (var a = i.length, s = a; a--; ) e += i[a].byteLength;
              var o = new Uint8Array(e);
              for (
                o[0] = (e >> 24) & 255,
                  o[1] = (e >> 16) & 255,
                  o[2] = (e >> 8) & 255,
                  o[3] = 255 & e,
                  o.set(t, 4),
                  a = 0,
                  e = 8;
                a < s;
                a++
              )
                o.set(i[a], e), (e += i[a].byteLength);
              return o;
            }),
            (t.hdlr = function (e) {
              return t.box(t.types.hdlr, t.HDLR_TYPES[e]);
            }),
            (t.mdat = function (e) {
              return t.box(t.types.mdat, e);
            }),
            (t.mdhd = function (e, r) {
              r *= e;
              var i = Math.floor(r / (mn + 1)),
                n = Math.floor(r % (mn + 1));
              return t.box(
                t.types.mdhd,
                new Uint8Array([
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  (e >> 24) & 255,
                  (e >> 16) & 255,
                  (e >> 8) & 255,
                  255 & e,
                  i >> 24,
                  (i >> 16) & 255,
                  (i >> 8) & 255,
                  255 & i,
                  n >> 24,
                  (n >> 16) & 255,
                  (n >> 8) & 255,
                  255 & n,
                  85,
                  196,
                  0,
                  0,
                ])
              );
            }),
            (t.mdia = function (e) {
              return t.box(
                t.types.mdia,
                t.mdhd(e.timescale, e.duration),
                t.hdlr(e.type),
                t.minf(e)
              );
            }),
            (t.mfhd = function (e) {
              return t.box(
                t.types.mfhd,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  e >> 24,
                  (e >> 16) & 255,
                  (e >> 8) & 255,
                  255 & e,
                ])
              );
            }),
            (t.minf = function (e) {
              return "audio" === e.type
                ? t.box(
                    t.types.minf,
                    t.box(t.types.smhd, t.SMHD),
                    t.DINF,
                    t.stbl(e)
                  )
                : t.box(
                    t.types.minf,
                    t.box(t.types.vmhd, t.VMHD),
                    t.DINF,
                    t.stbl(e)
                  );
            }),
            (t.moof = function (e, r, i) {
              return t.box(t.types.moof, t.mfhd(e), t.traf(i, r));
            }),
            (t.moov = function (e) {
              for (var r = e.length, i = []; r--; ) i[r] = t.trak(e[r]);
              return t.box.apply(
                null,
                [t.types.moov, t.mvhd(e[0].timescale, e[0].duration)]
                  .concat(i)
                  .concat(t.mvex(e))
              );
            }),
            (t.mvex = function (e) {
              for (var r = e.length, i = []; r--; ) i[r] = t.trex(e[r]);
              return t.box.apply(null, [t.types.mvex].concat(i));
            }),
            (t.mvhd = function (e, r) {
              r *= e;
              var i = Math.floor(r / (mn + 1)),
                n = Math.floor(r % (mn + 1)),
                a = new Uint8Array([
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  (e >> 24) & 255,
                  (e >> 16) & 255,
                  (e >> 8) & 255,
                  255 & e,
                  i >> 24,
                  (i >> 16) & 255,
                  (i >> 8) & 255,
                  255 & i,
                  n >> 24,
                  (n >> 16) & 255,
                  (n >> 8) & 255,
                  255 & n,
                  0,
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  64,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  255,
                  255,
                  255,
                  255,
                ]);
              return t.box(t.types.mvhd, a);
            }),
            (t.sdtp = function (e) {
              var r,
                i,
                n = e.samples || [],
                a = new Uint8Array(4 + n.length);
              for (r = 0; r < n.length; r++)
                (i = n[r].flags),
                  (a[r + 4] =
                    (i.dependsOn << 4) |
                    (i.isDependedOn << 2) |
                    i.hasRedundancy);
              return t.box(t.types.sdtp, a);
            }),
            (t.stbl = function (e) {
              return t.box(
                t.types.stbl,
                t.stsd(e),
                t.box(t.types.stts, t.STTS),
                t.box(t.types.stsc, t.STSC),
                t.box(t.types.stsz, t.STSZ),
                t.box(t.types.stco, t.STCO)
              );
            }),
            (t.avc1 = function (e) {
              var r,
                i,
                n,
                a = [],
                s = [];
              for (r = 0; r < e.sps.length; r++)
                (n = (i = e.sps[r]).byteLength),
                  a.push((n >>> 8) & 255),
                  a.push(255 & n),
                  (a = a.concat(Array.prototype.slice.call(i)));
              for (r = 0; r < e.pps.length; r++)
                (n = (i = e.pps[r]).byteLength),
                  s.push((n >>> 8) & 255),
                  s.push(255 & n),
                  (s = s.concat(Array.prototype.slice.call(i)));
              var o = t.box(
                  t.types.avcC,
                  new Uint8Array(
                    [1, a[3], a[4], a[5], 255, 224 | e.sps.length]
                      .concat(a)
                      .concat([e.pps.length])
                      .concat(s)
                  )
                ),
                l = e.width,
                u = e.height,
                h = e.pixelRatio[0],
                d = e.pixelRatio[1];
              return t.box(
                t.types.avc1,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  (l >> 8) & 255,
                  255 & l,
                  (u >> 8) & 255,
                  255 & u,
                  0,
                  72,
                  0,
                  0,
                  0,
                  72,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  18,
                  100,
                  97,
                  105,
                  108,
                  121,
                  109,
                  111,
                  116,
                  105,
                  111,
                  110,
                  47,
                  104,
                  108,
                  115,
                  46,
                  106,
                  115,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  24,
                  17,
                  17,
                ]),
                o,
                t.box(
                  t.types.btrt,
                  new Uint8Array([
                    0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192,
                  ])
                ),
                t.box(
                  t.types.pasp,
                  new Uint8Array([
                    h >> 24,
                    (h >> 16) & 255,
                    (h >> 8) & 255,
                    255 & h,
                    d >> 24,
                    (d >> 16) & 255,
                    (d >> 8) & 255,
                    255 & d,
                  ])
                )
              );
            }),
            (t.esds = function (t) {
              var e = t.config.length;
              return new Uint8Array(
                [
                  0,
                  0,
                  0,
                  0,
                  3,
                  23 + e,
                  0,
                  1,
                  0,
                  4,
                  15 + e,
                  64,
                  21,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  5,
                ]
                  .concat([e])
                  .concat(t.config)
                  .concat([6, 1, 2])
              );
            }),
            (t.audioStsd = function (t) {
              var e = t.samplerate;
              return new Uint8Array([
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                t.channelCount,
                0,
                16,
                0,
                0,
                0,
                0,
                (e >> 8) & 255,
                255 & e,
                0,
                0,
              ]);
            }),
            (t.mp4a = function (e) {
              return t.box(
                t.types.mp4a,
                t.audioStsd(e),
                t.box(t.types.esds, t.esds(e))
              );
            }),
            (t.mp3 = function (e) {
              return t.box(t.types[".mp3"], t.audioStsd(e));
            }),
            (t.ac3 = function (e) {
              return t.box(
                t.types["ac-3"],
                t.audioStsd(e),
                t.box(t.types.dac3, e.config)
              );
            }),
            (t.stsd = function (e) {
              return "audio" === e.type
                ? "mp3" === e.segmentCodec && "mp3" === e.codec
                  ? t.box(t.types.stsd, t.STSD, t.mp3(e))
                  : "ac3" === e.segmentCodec
                  ? t.box(t.types.stsd, t.STSD, t.ac3(e))
                  : t.box(t.types.stsd, t.STSD, t.mp4a(e))
                : t.box(t.types.stsd, t.STSD, t.avc1(e));
            }),
            (t.tkhd = function (e) {
              var r = e.id,
                i = e.duration * e.timescale,
                n = e.width,
                a = e.height,
                s = Math.floor(i / (mn + 1)),
                o = Math.floor(i % (mn + 1));
              return t.box(
                t.types.tkhd,
                new Uint8Array([
                  1,
                  0,
                  0,
                  7,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  (r >> 24) & 255,
                  (r >> 16) & 255,
                  (r >> 8) & 255,
                  255 & r,
                  0,
                  0,
                  0,
                  0,
                  s >> 24,
                  (s >> 16) & 255,
                  (s >> 8) & 255,
                  255 & s,
                  o >> 24,
                  (o >> 16) & 255,
                  (o >> 8) & 255,
                  255 & o,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  64,
                  0,
                  0,
                  0,
                  (n >> 8) & 255,
                  255 & n,
                  0,
                  0,
                  (a >> 8) & 255,
                  255 & a,
                  0,
                  0,
                ])
              );
            }),
            (t.traf = function (e, r) {
              var i = t.sdtp(e),
                n = e.id,
                a = Math.floor(r / (mn + 1)),
                s = Math.floor(r % (mn + 1));
              return t.box(
                t.types.traf,
                t.box(
                  t.types.tfhd,
                  new Uint8Array([
                    0,
                    0,
                    0,
                    0,
                    n >> 24,
                    (n >> 16) & 255,
                    (n >> 8) & 255,
                    255 & n,
                  ])
                ),
                t.box(
                  t.types.tfdt,
                  new Uint8Array([
                    1,
                    0,
                    0,
                    0,
                    a >> 24,
                    (a >> 16) & 255,
                    (a >> 8) & 255,
                    255 & a,
                    s >> 24,
                    (s >> 16) & 255,
                    (s >> 8) & 255,
                    255 & s,
                  ])
                ),
                t.trun(e, i.length + 16 + 20 + 8 + 16 + 8 + 8),
                i
              );
            }),
            (t.trak = function (e) {
              return (
                (e.duration = e.duration || 4294967295),
                t.box(t.types.trak, t.tkhd(e), t.mdia(e))
              );
            }),
            (t.trex = function (e) {
              var r = e.id;
              return t.box(
                t.types.trex,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  r >> 24,
                  (r >> 16) & 255,
                  (r >> 8) & 255,
                  255 & r,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  1,
                ])
              );
            }),
            (t.trun = function (e, r) {
              var i,
                n,
                a,
                s,
                o,
                l,
                u = e.samples || [],
                h = u.length,
                d = 12 + 16 * h,
                c = new Uint8Array(d);
              for (
                r += 8 + d,
                  c.set(
                    [
                      "video" === e.type ? 1 : 0,
                      0,
                      15,
                      1,
                      (h >>> 24) & 255,
                      (h >>> 16) & 255,
                      (h >>> 8) & 255,
                      255 & h,
                      (r >>> 24) & 255,
                      (r >>> 16) & 255,
                      (r >>> 8) & 255,
                      255 & r,
                    ],
                    0
                  ),
                  i = 0;
                i < h;
                i++
              )
                (a = (n = u[i]).duration),
                  (s = n.size),
                  (o = n.flags),
                  (l = n.cts),
                  c.set(
                    [
                      (a >>> 24) & 255,
                      (a >>> 16) & 255,
                      (a >>> 8) & 255,
                      255 & a,
                      (s >>> 24) & 255,
                      (s >>> 16) & 255,
                      (s >>> 8) & 255,
                      255 & s,
                      (o.isLeading << 2) | o.dependsOn,
                      (o.isDependedOn << 6) |
                        (o.hasRedundancy << 4) |
                        (o.paddingValue << 1) |
                        o.isNonSync,
                      61440 & o.degradPrio,
                      15 & o.degradPrio,
                      (l >>> 24) & 255,
                      (l >>> 16) & 255,
                      (l >>> 8) & 255,
                      255 & l,
                    ],
                    12 + 16 * i
                  );
              return t.box(t.types.trun, c);
            }),
            (t.initSegment = function (e) {
              t.types || t.init();
              var r = t.moov(e);
              return Kt(t.FTYP, r);
            }),
            t
          );
        })();
      (pn.types = void 0),
        (pn.HDLR_TYPES = void 0),
        (pn.STTS = void 0),
        (pn.STSC = void 0),
        (pn.STCO = void 0),
        (pn.STSZ = void 0),
        (pn.VMHD = void 0),
        (pn.SMHD = void 0),
        (pn.STSD = void 0),
        (pn.FTYP = void 0),
        (pn.DINF = void 0);
      var yn = 9e4;
      function En(t, e, r, i) {
        void 0 === r && (r = 1), void 0 === i && (i = !1);
        var n = t * e * r;
        return i ? Math.round(n) : n;
      }
      function Tn(t, e) {
        return void 0 === e && (e = !1), En(t, 1e3, 1 / yn, e);
      }
      var Sn = null,
        Ln = null,
        An = (function () {
          function t(t, e, r, i) {
            if (
              ((this.observer = void 0),
              (this.config = void 0),
              (this.typeSupported = void 0),
              (this.ISGenerated = !1),
              (this._initPTS = null),
              (this._initDTS = null),
              (this.nextAvcDts = null),
              (this.nextAudioPts = null),
              (this.videoSampleDuration = null),
              (this.isAudioContiguous = !1),
              (this.isVideoContiguous = !1),
              (this.videoTrackConfig = void 0),
              (this.observer = t),
              (this.config = e),
              (this.typeSupported = r),
              (this.ISGenerated = !1),
              null === Sn)
            ) {
              var n = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
              Sn = n ? parseInt(n[1]) : 0;
            }
            if (null === Ln) {
              var a = navigator.userAgent.match(/Safari\/(\d+)/i);
              Ln = a ? parseInt(a[1]) : 0;
            }
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.config =
                this.videoTrackConfig =
                this._initPTS =
                this._initDTS =
                  null;
            }),
            (e.resetTimeStamp = function (t) {
              w.log("[mp4-remuxer]: initPTS & initDTS reset"),
                (this._initPTS = this._initDTS = t);
            }),
            (e.resetNextTimestamp = function () {
              w.log("[mp4-remuxer]: reset next timestamp"),
                (this.isVideoContiguous = !1),
                (this.isAudioContiguous = !1);
            }),
            (e.resetInitSegment = function () {
              w.log("[mp4-remuxer]: ISGenerated flag reset"),
                (this.ISGenerated = !1),
                (this.videoTrackConfig = void 0);
            }),
            (e.getVideoStartPts = function (t) {
              var e = !1,
                r = t.reduce(function (t, r) {
                  var i = r.pts - t;
                  return i < -4294967296
                    ? ((e = !0), Rn(t, r.pts))
                    : i > 0
                    ? t
                    : r.pts;
                }, t[0].pts);
              return e && w.debug("PTS rollover detected"), r;
            }),
            (e.remux = function (t, e, r, i, n, a, s, o) {
              var l,
                u,
                h,
                d,
                c,
                f,
                g = n,
                v = n,
                m = t.pid > -1,
                p = e.pid > -1,
                y = e.samples.length,
                E = t.samples.length > 0,
                T = (s && y > 0) || y > 1;
              if (((!m || E) && (!p || T)) || this.ISGenerated || s) {
                if (this.ISGenerated) {
                  var S,
                    L,
                    A,
                    R,
                    k = this.videoTrackConfig;
                  !k ||
                    (e.width === k.width &&
                      e.height === k.height &&
                      (null == (S = e.pixelRatio) ? void 0 : S[0]) ===
                        (null == (L = k.pixelRatio) ? void 0 : L[0]) &&
                      (null == (A = e.pixelRatio) ? void 0 : A[1]) ===
                        (null == (R = k.pixelRatio) ? void 0 : R[1])) ||
                    this.resetInitSegment();
                } else h = this.generateIS(t, e, n, a);
                var b,
                  D = this.isVideoContiguous,
                  I = -1;
                if (
                  T &&
                  ((I = (function (t) {
                    for (var e = 0; e < t.length; e++) if (t[e].key) return e;
                    return -1;
                  })(e.samples)),
                  !D && this.config.forceKeyFrameOnDiscontinuity)
                )
                  if (((f = !0), I > 0)) {
                    w.warn(
                      "[mp4-remuxer]: Dropped " +
                        I +
                        " out of " +
                        y +
                        " video samples due to a missing keyframe"
                    );
                    var C = this.getVideoStartPts(e.samples);
                    (e.samples = e.samples.slice(I)),
                      (e.dropped += I),
                      (b = v += (e.samples[0].pts - C) / e.inputTimeScale);
                  } else
                    -1 === I &&
                      (w.warn(
                        "[mp4-remuxer]: No keyframe found out of " +
                          y +
                          " video samples"
                      ),
                      (f = !1));
                if (this.ISGenerated) {
                  if (E && T) {
                    var _ = this.getVideoStartPts(e.samples),
                      x = (Rn(t.samples[0].pts, _) - _) / e.inputTimeScale;
                    (g += Math.max(0, x)), (v += Math.max(0, -x));
                  }
                  if (E) {
                    if (
                      (t.samplerate ||
                        (w.warn(
                          "[mp4-remuxer]: regenerate InitSegment as audio detected"
                        ),
                        (h = this.generateIS(t, e, n, a))),
                      (u = this.remuxAudio(
                        t,
                        g,
                        this.isAudioContiguous,
                        a,
                        p || T || o === Ce ? v : void 0
                      )),
                      T)
                    ) {
                      var P = u ? u.endPTS - u.startPTS : 0;
                      e.inputTimeScale ||
                        (w.warn(
                          "[mp4-remuxer]: regenerate InitSegment as video detected"
                        ),
                        (h = this.generateIS(t, e, n, a))),
                        (l = this.remuxVideo(e, v, D, P));
                    }
                  } else T && (l = this.remuxVideo(e, v, D, 0));
                  l &&
                    ((l.firstKeyFrame = I),
                    (l.independent = -1 !== I),
                    (l.firstKeyFramePTS = b));
                }
              }
              return (
                this.ISGenerated &&
                  this._initPTS &&
                  this._initDTS &&
                  (r.samples.length &&
                    (c = kn(r, n, this._initPTS, this._initDTS)),
                  i.samples.length && (d = bn(i, n, this._initPTS))),
                {
                  audio: u,
                  video: l,
                  initSegment: h,
                  independent: f,
                  text: d,
                  id3: c,
                }
              );
            }),
            (e.generateIS = function (t, e, r, i) {
              var n,
                a,
                s,
                o = t.samples,
                l = e.samples,
                u = this.typeSupported,
                h = {},
                d = this._initPTS,
                c = !d || i,
                f = "audio/mp4";
              if ((c && (n = a = 1 / 0), t.config && o.length)) {
                switch (((t.timescale = t.samplerate), t.segmentCodec)) {
                  case "mp3":
                    u.mpeg
                      ? ((f = "audio/mpeg"), (t.codec = ""))
                      : u.mp3 && (t.codec = "mp3");
                    break;
                  case "ac3":
                    t.codec = "ac-3";
                }
                (h.audio = {
                  id: "audio",
                  container: f,
                  codec: t.codec,
                  initSegment:
                    "mp3" === t.segmentCodec && u.mpeg
                      ? new Uint8Array(0)
                      : pn.initSegment([t]),
                  metadata: { channelCount: t.channelCount },
                }),
                  c &&
                    ((s = t.inputTimeScale),
                    d && s === d.timescale
                      ? (c = !1)
                      : (n = a = o[0].pts - Math.round(s * r)));
              }
              if (e.sps && e.pps && l.length) {
                if (
                  ((e.timescale = e.inputTimeScale),
                  (h.video = {
                    id: "main",
                    container: "video/mp4",
                    codec: e.codec,
                    initSegment: pn.initSegment([e]),
                    metadata: { width: e.width, height: e.height },
                  }),
                  c)
                )
                  if (((s = e.inputTimeScale), d && s === d.timescale)) c = !1;
                  else {
                    var g = this.getVideoStartPts(l),
                      v = Math.round(s * r);
                    (a = Math.min(a, Rn(l[0].dts, g) - v)),
                      (n = Math.min(n, g - v));
                  }
                this.videoTrackConfig = {
                  width: e.width,
                  height: e.height,
                  pixelRatio: e.pixelRatio,
                };
              }
              if (Object.keys(h).length)
                return (
                  (this.ISGenerated = !0),
                  c
                    ? ((this._initPTS = { baseTime: n, timescale: s }),
                      (this._initDTS = { baseTime: a, timescale: s }))
                    : (n = s = void 0),
                  { tracks: h, initPTS: n, timescale: s }
                );
            }),
            (e.remuxVideo = function (t, e, r, i) {
              var n,
                a,
                s = t.inputTimeScale,
                l = t.samples,
                u = [],
                h = l.length,
                d = this._initPTS,
                c = this.nextAvcDts,
                f = 8,
                g = this.videoSampleDuration,
                v = Number.POSITIVE_INFINITY,
                m = Number.NEGATIVE_INFINITY,
                p = !1;
              if (!r || null === c) {
                var y = e * s,
                  E = l[0].pts - Rn(l[0].dts, l[0].pts);
                Sn && null !== c && Math.abs(y - E - c) < 15e3
                  ? (r = !0)
                  : (c = y - E);
              }
              for (var T = (d.baseTime * s) / d.timescale, R = 0; R < h; R++) {
                var k = l[R];
                (k.pts = Rn(k.pts - T, c)),
                  (k.dts = Rn(k.dts - T, c)),
                  k.dts < l[R > 0 ? R - 1 : R].dts && (p = !0);
              }
              p &&
                l.sort(function (t, e) {
                  var r = t.dts - e.dts,
                    i = t.pts - e.pts;
                  return r || i;
                }),
                (n = l[0].dts);
              var b = (a = l[l.length - 1].dts) - n,
                D = b ? Math.round(b / (h - 1)) : g || t.inputTimeScale / 30;
              if (r) {
                var I = n - c,
                  C = I > D,
                  _ = I < -1;
                if (
                  (C || _) &&
                  (C
                    ? w.warn(
                        "AVC: " +
                          Tn(I, !0) +
                          " ms (" +
                          I +
                          "dts) hole between fragments detected at " +
                          e.toFixed(3)
                      )
                    : w.warn(
                        "AVC: " +
                          Tn(-I, !0) +
                          " ms (" +
                          I +
                          "dts) overlapping between fragments detected at " +
                          e.toFixed(3)
                      ),
                  !_ || c >= l[0].pts || Sn)
                ) {
                  n = c;
                  var x = l[0].pts - I;
                  if (C) (l[0].dts = n), (l[0].pts = x);
                  else
                    for (var P = 0; P < l.length && !(l[P].dts > x); P++)
                      (l[P].dts -= I), (l[P].pts -= I);
                  w.log(
                    "Video: Initial PTS/DTS adjusted: " +
                      Tn(x, !0) +
                      "/" +
                      Tn(n, !0) +
                      ", delta: " +
                      Tn(I, !0) +
                      " ms"
                  );
                }
              }
              for (
                var F = 0, M = 0, O = (n = Math.max(0, n)), N = 0;
                N < h;
                N++
              ) {
                for (
                  var U = l[N], B = U.units, G = B.length, K = 0, H = 0;
                  H < G;
                  H++
                )
                  K += B[H].data.length;
                (M += K),
                  (F += G),
                  (U.length = K),
                  U.dts < O
                    ? ((U.dts = O), (O += (D / 4) | 0 || 1))
                    : (O = U.dts),
                  (v = Math.min(U.pts, v)),
                  (m = Math.max(U.pts, m));
              }
              a = l[h - 1].dts;
              var V,
                Y = M + 4 * F + 8;
              try {
                V = new Uint8Array(Y);
              } catch (t) {
                return void this.observer.emit(S.ERROR, S.ERROR, {
                  type: L.MUX_ERROR,
                  details: A.REMUX_ALLOC_ERROR,
                  fatal: !1,
                  error: t,
                  bytes: Y,
                  reason: "fail allocating video mdat " + Y,
                });
              }
              var W = new DataView(V.buffer);
              W.setUint32(0, Y), V.set(pn.types.mdat, 4);
              for (
                var j = !1,
                  q = Number.POSITIVE_INFINITY,
                  X = Number.POSITIVE_INFINITY,
                  z = Number.NEGATIVE_INFINITY,
                  Q = Number.NEGATIVE_INFINITY,
                  J = 0;
                J < h;
                J++
              ) {
                for (
                  var $ = l[J], Z = $.units, tt = 0, et = 0, rt = Z.length;
                  et < rt;
                  et++
                ) {
                  var it = Z[et],
                    nt = it.data,
                    at = it.data.byteLength;
                  W.setUint32(f, at),
                    (f += 4),
                    V.set(nt, f),
                    (f += at),
                    (tt += 4 + at);
                }
                var st = void 0;
                if (J < h - 1)
                  (g = l[J + 1].dts - $.dts), (st = l[J + 1].pts - $.pts);
                else {
                  var ot = this.config,
                    lt = J > 0 ? $.dts - l[J - 1].dts : D;
                  if (
                    ((st = J > 0 ? $.pts - l[J - 1].pts : D),
                    ot.stretchShortVideoTrack && null !== this.nextAudioPts)
                  ) {
                    var ut = Math.floor(ot.maxBufferHole * s),
                      ht = (i ? v + i * s : this.nextAudioPts) - $.pts;
                    ht > ut
                      ? ((g = ht - lt) < 0 ? (g = lt) : (j = !0),
                        w.log(
                          "[mp4-remuxer]: It is approximately " +
                            ht / 90 +
                            " ms to the next segment; using duration " +
                            g / 90 +
                            " ms for the last video frame."
                        ))
                      : (g = lt);
                  } else g = lt;
                }
                var dt = Math.round($.pts - $.dts);
                (q = Math.min(q, g)),
                  (z = Math.max(z, g)),
                  (X = Math.min(X, st)),
                  (Q = Math.max(Q, st)),
                  u.push(new In($.key, g, tt, dt));
              }
              if (u.length)
                if (Sn) {
                  if (Sn < 70) {
                    var ct = u[0].flags;
                    (ct.dependsOn = 2), (ct.isNonSync = 0);
                  }
                } else if (
                  Ln &&
                  Q - X < z - q &&
                  D / z < 0.025 &&
                  0 === u[0].cts
                ) {
                  w.warn(
                    "Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration."
                  );
                  for (var ft = n, gt = 0, vt = u.length; gt < vt; gt++) {
                    var mt = ft + u[gt].duration,
                      pt = ft + u[gt].cts;
                    if (gt < vt - 1) {
                      var yt = mt + u[gt + 1].cts;
                      u[gt].duration = yt - pt;
                    } else u[gt].duration = gt ? u[gt - 1].duration : D;
                    (u[gt].cts = 0), (ft = mt);
                  }
                }
              (g = j || !g ? D : g),
                (this.nextAvcDts = c = a + g),
                (this.videoSampleDuration = g),
                (this.isVideoContiguous = !0);
              var Et = {
                data1: pn.moof(t.sequenceNumber++, n, o({}, t, { samples: u })),
                data2: V,
                startPTS: v / s,
                endPTS: (m + g) / s,
                startDTS: n / s,
                endDTS: c / s,
                type: "video",
                hasAudio: !1,
                hasVideo: !0,
                nb: u.length,
                dropped: t.dropped,
              };
              return (t.samples = []), (t.dropped = 0), Et;
            }),
            (e.getSamplesPerFrame = function (t) {
              switch (t.segmentCodec) {
                case "mp3":
                  return 1152;
                case "ac3":
                  return 1536;
                default:
                  return 1024;
              }
            }),
            (e.remuxAudio = function (t, e, r, i, n) {
              var a = t.inputTimeScale,
                s = a / (t.samplerate ? t.samplerate : a),
                l = this.getSamplesPerFrame(t),
                u = l * s,
                h = this._initPTS,
                d = "mp3" === t.segmentCodec && this.typeSupported.mpeg,
                c = [],
                f = void 0 !== n,
                g = t.samples,
                v = d ? 0 : 8,
                m = this.nextAudioPts || -1,
                p = e * a,
                y = (h.baseTime * a) / h.timescale;
              if (
                ((this.isAudioContiguous = r =
                  r ||
                  (g.length &&
                    m > 0 &&
                    ((i && Math.abs(p - m) < 9e3) ||
                      Math.abs(Rn(g[0].pts - y, p) - m) < 20 * u))),
                g.forEach(function (t) {
                  t.pts = Rn(t.pts - y, p);
                }),
                !r || m < 0)
              ) {
                if (
                  ((g = g.filter(function (t) {
                    return t.pts >= 0;
                  })),
                  !g.length)
                )
                  return;
                m = 0 === n ? 0 : i && !f ? Math.max(0, p) : g[0].pts;
              }
              if ("aac" === t.segmentCodec)
                for (
                  var E = this.config.maxAudioFramesDrift, T = 0, R = m;
                  T < g.length;
                  T++
                ) {
                  var k = g[T],
                    b = k.pts,
                    D = b - R,
                    I = Math.abs((1e3 * D) / a);
                  if (D <= -E * u && f)
                    0 === T &&
                      (w.warn(
                        "Audio frame @ " +
                          (b / a).toFixed(3) +
                          "s overlaps nextAudioPts by " +
                          Math.round((1e3 * D) / a) +
                          " ms."
                      ),
                      (this.nextAudioPts = m = R = b));
                  else if (D >= E * u && I < 1e4 && f) {
                    var C = Math.round(D / u);
                    (R = b - C * u) < 0 && (C--, (R += u)),
                      0 === T && (this.nextAudioPts = m = R),
                      w.warn(
                        "[mp4-remuxer]: Injecting " +
                          C +
                          " audio frame @ " +
                          (R / a).toFixed(3) +
                          "s due to " +
                          Math.round((1e3 * D) / a) +
                          " ms gap."
                      );
                    for (var _ = 0; _ < C; _++) {
                      var x = Math.max(R, 0),
                        P = vn.getSilentFrame(
                          t.manifestCodec || t.codec,
                          t.channelCount
                        );
                      P ||
                        (w.log(
                          "[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead."
                        ),
                        (P = k.unit.subarray())),
                        g.splice(T, 0, { unit: P, pts: x }),
                        (R += u),
                        T++;
                    }
                  }
                  (k.pts = R), (R += u);
                }
              for (var F, M = null, O = null, N = 0, U = g.length; U--; )
                N += g[U].unit.byteLength;
              for (var B = 0, G = g.length; B < G; B++) {
                var K = g[B],
                  H = K.unit,
                  V = K.pts;
                if (null !== O) c[B - 1].duration = Math.round((V - O) / s);
                else {
                  if (
                    (r && "aac" === t.segmentCodec && (V = m),
                    (M = V),
                    !(N > 0))
                  )
                    return;
                  N += v;
                  try {
                    F = new Uint8Array(N);
                  } catch (t) {
                    return void this.observer.emit(S.ERROR, S.ERROR, {
                      type: L.MUX_ERROR,
                      details: A.REMUX_ALLOC_ERROR,
                      fatal: !1,
                      error: t,
                      bytes: N,
                      reason: "fail allocating audio mdat " + N,
                    });
                  }
                  d ||
                    (new DataView(F.buffer).setUint32(0, N),
                    F.set(pn.types.mdat, 4));
                }
                F.set(H, v);
                var Y = H.byteLength;
                (v += Y), c.push(new In(!0, l, Y, 0)), (O = V);
              }
              var W = c.length;
              if (W) {
                var j = c[c.length - 1];
                this.nextAudioPts = m = O + s * j.duration;
                var q = d
                  ? new Uint8Array(0)
                  : pn.moof(
                      t.sequenceNumber++,
                      M / s,
                      o({}, t, { samples: c })
                    );
                t.samples = [];
                var X = M / a,
                  z = m / a,
                  Q = {
                    data1: q,
                    data2: F,
                    startPTS: X,
                    endPTS: z,
                    startDTS: X,
                    endDTS: z,
                    type: "audio",
                    hasAudio: !0,
                    hasVideo: !1,
                    nb: W,
                  };
                return (this.isAudioContiguous = !0), Q;
              }
            }),
            (e.remuxEmptyAudio = function (t, e, r, i) {
              var n = t.inputTimeScale,
                a = n / (t.samplerate ? t.samplerate : n),
                s = this.nextAudioPts,
                o = this._initDTS,
                l = (9e4 * o.baseTime) / o.timescale,
                u = (null !== s ? s : i.startDTS * n) + l,
                h = i.endDTS * n + l,
                d = 1024 * a,
                c = Math.ceil((h - u) / d),
                f = vn.getSilentFrame(
                  t.manifestCodec || t.codec,
                  t.channelCount
                );
              if ((w.warn("[mp4-remuxer]: remux empty Audio"), f)) {
                for (var g = [], v = 0; v < c; v++) {
                  var m = u + v * d;
                  g.push({ unit: f, pts: m, dts: m });
                }
                return (t.samples = g), this.remuxAudio(t, e, r, !1);
              }
              w.trace(
                "[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec"
              );
            }),
            t
          );
        })();
      function Rn(t, e) {
        var r;
        if (null === e) return t;
        for (
          r = e < t ? -8589934592 : 8589934592;
          Math.abs(t - e) > 4294967296;

        )
          t += r;
        return t;
      }
      function kn(t, e, r, i) {
        var n = t.samples.length;
        if (n) {
          for (var a = t.inputTimeScale, s = 0; s < n; s++) {
            var o = t.samples[s];
            (o.pts = Rn(o.pts - (r.baseTime * a) / r.timescale, e * a) / a),
              (o.dts = Rn(o.dts - (i.baseTime * a) / i.timescale, e * a) / a);
          }
          var l = t.samples;
          return (t.samples = []), { samples: l };
        }
      }
      function bn(t, e, r) {
        var i = t.samples.length;
        if (i) {
          for (var n = t.inputTimeScale, a = 0; a < i; a++) {
            var s = t.samples[a];
            s.pts = Rn(s.pts - (r.baseTime * n) / r.timescale, e * n) / n;
          }
          t.samples.sort(function (t, e) {
            return t.pts - e.pts;
          });
          var o = t.samples;
          return (t.samples = []), { samples: o };
        }
      }
      var Dn,
        In = function (t, e, r, i) {
          (this.size = void 0),
            (this.duration = void 0),
            (this.cts = void 0),
            (this.flags = void 0),
            (this.duration = e),
            (this.size = r),
            (this.cts = i),
            (this.flags = {
              isLeading: 0,
              isDependedOn: 0,
              hasRedundancy: 0,
              degradPrio: 0,
              dependsOn: t ? 2 : 1,
              isNonSync: t ? 0 : 1,
            });
        },
        wn = (function () {
          function t() {
            (this.emitInitSegment = !1),
              (this.audioCodec = void 0),
              (this.videoCodec = void 0),
              (this.initData = void 0),
              (this.initPTS = null),
              (this.initTracks = void 0),
              (this.lastEndTime = null);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {}),
            (e.resetTimeStamp = function (t) {
              (this.initPTS = t), (this.lastEndTime = null);
            }),
            (e.resetNextTimestamp = function () {
              this.lastEndTime = null;
            }),
            (e.resetInitSegment = function (t, e, r, i) {
              (this.audioCodec = e),
                (this.videoCodec = r),
                this.generateInitSegment(
                  (function (t, e) {
                    if (!t || !e) return t;
                    var r = e.keyId;
                    return (
                      r &&
                        e.isCommonEncryption &&
                        xt(t, ["moov", "trak"]).forEach(function (t) {
                          var e = xt(t, [
                              "mdia",
                              "minf",
                              "stbl",
                              "stsd",
                            ])[0].subarray(8),
                            i = xt(e, ["enca"]),
                            n = i.length > 0;
                          n || (i = xt(e, ["encv"])),
                            i.forEach(function (t) {
                              xt(n ? t.subarray(28) : t.subarray(78), [
                                "sinf",
                              ]).forEach(function (t) {
                                var e = Bt(t);
                                if (e) {
                                  var i = e.subarray(8, 24);
                                  i.some(function (t) {
                                    return 0 !== t;
                                  }) ||
                                    (w.log(
                                      "[eme] Patching keyId in 'enc" +
                                        (n ? "a" : "v") +
                                        ">sinf>>tenc' box: " +
                                        Lt(i) +
                                        " -> " +
                                        Lt(r)
                                    ),
                                    e.set(r, 8));
                                }
                              });
                            });
                        }),
                      t
                    );
                  })(t, i)
                ),
                (this.emitInitSegment = !0);
            }),
            (e.generateInitSegment = function (t) {
              var e = this.audioCodec,
                r = this.videoCodec;
              if (null == t || !t.byteLength)
                return (
                  (this.initTracks = void 0), void (this.initData = void 0)
                );
              var i = (this.initData = Ft(t));
              i.audio && (e = Cn(i.audio, O)), i.video && (r = Cn(i.video, N));
              var n = {};
              i.audio && i.video
                ? (n.audiovideo = {
                    container: "video/mp4",
                    codec: e + "," + r,
                    initSegment: t,
                    id: "main",
                  })
                : i.audio
                ? (n.audio = {
                    container: "audio/mp4",
                    codec: e,
                    initSegment: t,
                    id: "audio",
                  })
                : i.video
                ? (n.video = {
                    container: "video/mp4",
                    codec: r,
                    initSegment: t,
                    id: "main",
                  })
                : w.warn(
                    "[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes."
                  ),
                (this.initTracks = n);
            }),
            (e.remux = function (t, e, r, i, n, a) {
              var s,
                o,
                l = this.initPTS,
                u = this.lastEndTime,
                h = {
                  audio: void 0,
                  video: void 0,
                  text: i,
                  id3: r,
                  initSegment: void 0,
                };
              y(u) || (u = this.lastEndTime = n || 0);
              var d = e.samples;
              if (null == d || !d.length) return h;
              var c = { initPTS: void 0, timescale: 1 },
                f = this.initData;
              if (
                ((null != (s = f) && s.length) ||
                  (this.generateInitSegment(d), (f = this.initData)),
                null == (o = f) || !o.length)
              )
                return (
                  w.warn(
                    "[passthrough-remuxer.ts]: Failed to generate initSegment."
                  ),
                  h
                );
              this.emitInitSegment &&
                ((c.tracks = this.initTracks), (this.emitInitSegment = !1));
              var g = (function (t, e) {
                  for (
                    var r = 0, i = 0, n = 0, a = xt(t, ["moof", "traf"]), s = 0;
                    s < a.length;
                    s++
                  ) {
                    var o = a[s],
                      l = xt(o, ["tfhd"])[0],
                      u = e[It(l, 4)];
                    if (u) {
                      var h = u.default,
                        d = It(l, 0) | (null == h ? void 0 : h.flags),
                        c = null == h ? void 0 : h.duration;
                      8 & d && (c = It(l, 2 & d ? 12 : 8));
                      for (
                        var f = u.timescale || 9e4, g = xt(o, ["trun"]), v = 0;
                        v < g.length;
                        v++
                      )
                        !(r = Gt(g[v])) && c && (r = c * It(g[v], 4)),
                          u.type === N
                            ? (i += r / f)
                            : u.type === O && (n += r / f);
                    }
                  }
                  if (0 === i && 0 === n) {
                    for (
                      var m = 1 / 0, p = 0, E = 0, T = xt(t, ["sidx"]), S = 0;
                      S < T.length;
                      S++
                    ) {
                      var L = Pt(T[S]);
                      if (null != L && L.references) {
                        m = Math.min(
                          m,
                          L.earliestPresentationTime / L.timescale
                        );
                        var A = L.references.reduce(function (t, e) {
                          return t + e.info.duration || 0;
                        }, 0);
                        E =
                          (p = Math.max(
                            p,
                            A + L.earliestPresentationTime / L.timescale
                          )) - m;
                      }
                    }
                    if (E && y(E)) return E;
                  }
                  return i || n;
                })(d, f),
                v = (function (t, e) {
                  return xt(e, ["moof", "traf"]).reduce(function (e, r) {
                    var i = xt(r, ["tfdt"])[0],
                      n = i[0],
                      a = xt(r, ["tfhd"]).reduce(function (e, r) {
                        var a = It(r, 4),
                          s = t[a];
                        if (s) {
                          var o = It(i, 4);
                          if (1 === n) {
                            if (o === At)
                              return (
                                w.warn(
                                  "[mp4-demuxer]: Ignoring assumed invalid signed 64-bit track fragment decode time"
                                ),
                                e
                              );
                            (o *= At + 1), (o += It(i, 8));
                          }
                          var l = o / (s.timescale || 9e4);
                          if (y(l) && (null === e || l < e)) return l;
                        }
                        return e;
                      }, null);
                    return null !== a && y(a) && (null === e || a < e) ? a : e;
                  }, null);
                })(f, d),
                m = null === v ? n : v;
              ((function (t, e, r, i) {
                if (null === t) return !0;
                var n = Math.max(i, 1),
                  a = e - t.baseTime / t.timescale;
                return Math.abs(a - r) > n;
              })(l, m, n, g) ||
                (c.timescale !== l.timescale && a)) &&
                ((c.initPTS = m - n),
                l &&
                  1 === l.timescale &&
                  w.warn("Adjusting initPTS by " + (c.initPTS - l.baseTime)),
                (this.initPTS = l = { baseTime: c.initPTS, timescale: 1 }));
              var p = t ? m - l.baseTime / l.timescale : u,
                E = p + g;
              !(function (t, e, r) {
                xt(e, ["moof", "traf"]).forEach(function (e) {
                  xt(e, ["tfhd"]).forEach(function (i) {
                    var n = It(i, 4),
                      a = t[n];
                    if (a) {
                      var s = a.timescale || 9e4;
                      xt(e, ["tfdt"]).forEach(function (t) {
                        var e = t[0],
                          i = r * s;
                        if (i) {
                          var n = It(t, 4);
                          if (0 === e) (n -= i), _t(t, 4, (n = Math.max(n, 0)));
                          else {
                            (n *= Math.pow(2, 32)),
                              (n += It(t, 8)),
                              (n -= i),
                              (n = Math.max(n, 0));
                            var a = Math.floor(n / (At + 1)),
                              o = Math.floor(n % (At + 1));
                            _t(t, 4, a), _t(t, 8, o);
                          }
                        }
                      });
                    }
                  });
                });
              })(f, d, l.baseTime / l.timescale),
                g > 0
                  ? (this.lastEndTime = E)
                  : (w.warn(
                      "Duration parsed from mp4 should be greater than zero"
                    ),
                    this.resetNextTimestamp());
              var T = !!f.audio,
                S = !!f.video,
                L = "";
              T && (L += "audio"), S && (L += "video");
              var A = {
                data1: d,
                startPTS: p,
                startDTS: p,
                endPTS: E,
                endDTS: E,
                type: L,
                hasAudio: T,
                hasVideo: S,
                nb: 1,
                dropped: 0,
              };
              return (
                (h.audio = "audio" === A.type ? A : void 0),
                (h.video = "audio" !== A.type ? A : void 0),
                (h.initSegment = c),
                (h.id3 = kn(r, n, l, l)),
                i.samples.length && (h.text = bn(i, n, l)),
                h
              );
            }),
            t
          );
        })();
      function Cn(t, e) {
        var r = null == t ? void 0 : t.codec;
        if (r && r.length > 4) return r;
        if (e === O) {
          if ("ec-3" === r || "ac-3" === r || "alac" === r) return r;
          if ("fLaC" === r || "Opus" === r) return he(r, !1);
          var i = "mp4a.40.5";
          return (
            w.info(
              'Parsed audio codec "' +
                r +
                '" or audio object type not handled. Using "' +
                i +
                '"'
            ),
            i
          );
        }
        return (
          w.warn('Unhandled video codec "' + r + '"'),
          "hvc1" === r || "hev1" === r
            ? "hvc1.1.6.L120.90"
            : "av01" === r
            ? "av01.0.04M.08"
            : "avc1.42e01e"
        );
      }
      try {
        Dn = self.performance.now.bind(self.performance);
      } catch (t) {
        w.debug("Unable to use Performance API on this environment"),
          (Dn = null == j ? void 0 : j.Date.now);
      }
      var _n = [
        { demux: Ji, remux: wn },
        { demux: on, remux: An },
        { demux: zi, remux: An },
        { demux: gn, remux: An },
      ];
      _n.splice(2, 0, { demux: Zi, remux: An });
      var xn = (function () {
          function t(t, e, r, i, n) {
            (this.async = !1),
              (this.observer = void 0),
              (this.typeSupported = void 0),
              (this.config = void 0),
              (this.vendor = void 0),
              (this.id = void 0),
              (this.demuxer = void 0),
              (this.remuxer = void 0),
              (this.decrypter = void 0),
              (this.probe = void 0),
              (this.decryptionPromise = null),
              (this.transmuxConfig = void 0),
              (this.currentTransmuxState = void 0),
              (this.observer = t),
              (this.typeSupported = e),
              (this.config = r),
              (this.vendor = i),
              (this.id = n);
          }
          var e = t.prototype;
          return (
            (e.configure = function (t) {
              (this.transmuxConfig = t),
                this.decrypter && this.decrypter.reset();
            }),
            (e.push = function (t, e, r, i) {
              var n = this,
                a = r.transmuxing;
              a.executeStart = Dn();
              var s = new Uint8Array(t),
                o = this.currentTransmuxState,
                l = this.transmuxConfig;
              i && (this.currentTransmuxState = i);
              var u = i || o,
                h = u.contiguous,
                d = u.discontinuity,
                c = u.trackSwitch,
                f = u.accurateTimeOffset,
                g = u.timeOffset,
                v = u.initSegmentChange,
                m = l.audioCodec,
                p = l.videoCodec,
                y = l.defaultInitPts,
                E = l.duration,
                T = l.initSegmentData,
                R = (function (t, e) {
                  var r = null;
                  return (
                    t.byteLength > 0 &&
                      null != (null == e ? void 0 : e.key) &&
                      null !== e.iv &&
                      null != e.method &&
                      (r = e),
                    r
                  );
                })(s, e);
              if (R && "AES-128" === R.method) {
                var k = this.getDecrypter();
                if (!k.isSync())
                  return (
                    (this.decryptionPromise = k
                      .webCryptoDecrypt(s, R.key.buffer, R.iv.buffer)
                      .then(function (t) {
                        var e = n.push(t, null, r);
                        return (n.decryptionPromise = null), e;
                      })),
                    this.decryptionPromise
                  );
                var b = k.softwareDecrypt(s, R.key.buffer, R.iv.buffer);
                if ((r.part > -1 && (b = k.flush()), !b))
                  return (a.executeEnd = Dn()), Pn(r);
                s = new Uint8Array(b);
              }
              var D = this.needsProbing(d, c);
              if (D) {
                var I = this.configureTransmuxer(s);
                if (I)
                  return (
                    w.warn("[transmuxer] " + I.message),
                    this.observer.emit(S.ERROR, S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: A.FRAG_PARSING_ERROR,
                      fatal: !1,
                      error: I,
                      reason: I.message,
                    }),
                    (a.executeEnd = Dn()),
                    Pn(r)
                  );
              }
              (d || c || v || D) && this.resetInitSegment(T, m, p, E, e),
                (d || v || D) && this.resetInitialTimestamp(y),
                h || this.resetContiguity();
              var C = this.transmux(s, R, g, f, r),
                _ = this.currentTransmuxState;
              return (
                (_.contiguous = !0),
                (_.discontinuity = !1),
                (_.trackSwitch = !1),
                (a.executeEnd = Dn()),
                C
              );
            }),
            (e.flush = function (t) {
              var e = this,
                r = t.transmuxing;
              r.executeStart = Dn();
              var i = this.decrypter,
                n = this.currentTransmuxState,
                a = this.decryptionPromise;
              if (a)
                return a.then(function () {
                  return e.flush(t);
                });
              var s = [],
                o = n.timeOffset;
              if (i) {
                var l = i.flush();
                l && s.push(this.push(l, null, t));
              }
              var u = this.demuxer,
                h = this.remuxer;
              if (!u || !h) return (r.executeEnd = Dn()), [Pn(t)];
              var d = u.flush(o);
              return Fn(d)
                ? d.then(function (r) {
                    return e.flushRemux(s, r, t), s;
                  })
                : (this.flushRemux(s, d, t), s);
            }),
            (e.flushRemux = function (t, e, r) {
              var i = e.audioTrack,
                n = e.videoTrack,
                a = e.id3Track,
                s = e.textTrack,
                o = this.currentTransmuxState,
                l = o.accurateTimeOffset,
                u = o.timeOffset;
              w.log(
                "[transmuxer.ts]: Flushed fragment " +
                  r.sn +
                  (r.part > -1 ? " p: " + r.part : "") +
                  " of level " +
                  r.level
              );
              var h = this.remuxer.remux(i, n, a, s, u, l, !0, this.id);
              t.push({ remuxResult: h, chunkMeta: r }),
                (r.transmuxing.executeEnd = Dn());
            }),
            (e.resetInitialTimestamp = function (t) {
              var e = this.demuxer,
                r = this.remuxer;
              e && r && (e.resetTimeStamp(t), r.resetTimeStamp(t));
            }),
            (e.resetContiguity = function () {
              var t = this.demuxer,
                e = this.remuxer;
              t && e && (t.resetContiguity(), e.resetNextTimestamp());
            }),
            (e.resetInitSegment = function (t, e, r, i, n) {
              var a = this.demuxer,
                s = this.remuxer;
              a &&
                s &&
                (a.resetInitSegment(t, e, r, i),
                s.resetInitSegment(t, e, r, n));
            }),
            (e.destroy = function () {
              this.demuxer && (this.demuxer.destroy(), (this.demuxer = void 0)),
                this.remuxer &&
                  (this.remuxer.destroy(), (this.remuxer = void 0));
            }),
            (e.transmux = function (t, e, r, i, n) {
              return e && "SAMPLE-AES" === e.method
                ? this.transmuxSampleAes(t, e, r, i, n)
                : this.transmuxUnencrypted(t, r, i, n);
            }),
            (e.transmuxUnencrypted = function (t, e, r, i) {
              var n = this.demuxer.demux(t, e, !1, !this.config.progressive),
                a = n.audioTrack,
                s = n.videoTrack,
                o = n.id3Track,
                l = n.textTrack;
              return {
                remuxResult: this.remuxer.remux(a, s, o, l, e, r, !1, this.id),
                chunkMeta: i,
              };
            }),
            (e.transmuxSampleAes = function (t, e, r, i, n) {
              var a = this;
              return this.demuxer.demuxSampleAes(t, e, r).then(function (t) {
                return {
                  remuxResult: a.remuxer.remux(
                    t.audioTrack,
                    t.videoTrack,
                    t.id3Track,
                    t.textTrack,
                    r,
                    i,
                    !1,
                    a.id
                  ),
                  chunkMeta: n,
                };
              });
            }),
            (e.configureTransmuxer = function (t) {
              for (
                var e,
                  r = this.config,
                  i = this.observer,
                  n = this.typeSupported,
                  a = this.vendor,
                  s = 0,
                  o = _n.length;
                s < o;
                s++
              ) {
                var l;
                if (null != (l = _n[s].demux) && l.probe(t)) {
                  e = _n[s];
                  break;
                }
              }
              if (!e)
                return new Error(
                  "Failed to find demuxer by probing fragment data"
                );
              var u = this.demuxer,
                h = this.remuxer,
                d = e.remux,
                c = e.demux;
              (h && h instanceof d) || (this.remuxer = new d(i, r, n, a)),
                (u && u instanceof c) ||
                  ((this.demuxer = new c(i, r, n)), (this.probe = c.probe));
            }),
            (e.needsProbing = function (t, e) {
              return !this.demuxer || !this.remuxer || t || e;
            }),
            (e.getDecrypter = function () {
              var t = this.decrypter;
              return t || (t = this.decrypter = new ci(this.config)), t;
            }),
            t
          );
        })(),
        Pn = function (t) {
          return { remuxResult: {}, chunkMeta: t };
        };
      function Fn(t) {
        return "then" in t && t.then instanceof Function;
      }
      var Mn = function (t, e, r, i, n) {
          (this.audioCodec = void 0),
            (this.videoCodec = void 0),
            (this.initSegmentData = void 0),
            (this.duration = void 0),
            (this.defaultInitPts = void 0),
            (this.audioCodec = t),
            (this.videoCodec = e),
            (this.initSegmentData = r),
            (this.duration = i),
            (this.defaultInitPts = n || null);
        },
        On = function (t, e, r, i, n, a) {
          (this.discontinuity = void 0),
            (this.contiguous = void 0),
            (this.accurateTimeOffset = void 0),
            (this.trackSwitch = void 0),
            (this.timeOffset = void 0),
            (this.initSegmentChange = void 0),
            (this.discontinuity = t),
            (this.contiguous = e),
            (this.accurateTimeOffset = r),
            (this.trackSwitch = i),
            (this.timeOffset = n),
            (this.initSegmentChange = a);
        },
        Nn = { exports: {} };
      !(function (t) {
        var e = Object.prototype.hasOwnProperty,
          r = "~";
        function i() {}
        function n(t, e, r) {
          (this.fn = t), (this.context = e), (this.once = r || !1);
        }
        function a(t, e, i, a, s) {
          if ("function" != typeof i)
            throw new TypeError("The listener must be a function");
          var o = new n(i, a || t, s),
            l = r ? r + e : e;
          return (
            t._events[l]
              ? t._events[l].fn
                ? (t._events[l] = [t._events[l], o])
                : t._events[l].push(o)
              : ((t._events[l] = o), t._eventsCount++),
            t
          );
        }
        function s(t, e) {
          0 == --t._eventsCount ? (t._events = new i()) : delete t._events[e];
        }
        function o() {
          (this._events = new i()), (this._eventsCount = 0);
        }
        Object.create &&
          ((i.prototype = Object.create(null)), new i().__proto__ || (r = !1)),
          (o.prototype.eventNames = function () {
            var t,
              i,
              n = [];
            if (0 === this._eventsCount) return n;
            for (i in (t = this._events))
              e.call(t, i) && n.push(r ? i.slice(1) : i);
            return Object.getOwnPropertySymbols
              ? n.concat(Object.getOwnPropertySymbols(t))
              : n;
          }),
          (o.prototype.listeners = function (t) {
            var e = r ? r + t : t,
              i = this._events[e];
            if (!i) return [];
            if (i.fn) return [i.fn];
            for (var n = 0, a = i.length, s = new Array(a); n < a; n++)
              s[n] = i[n].fn;
            return s;
          }),
          (o.prototype.listenerCount = function (t) {
            var e = r ? r + t : t,
              i = this._events[e];
            return i ? (i.fn ? 1 : i.length) : 0;
          }),
          (o.prototype.emit = function (t, e, i, n, a, s) {
            var o = r ? r + t : t;
            if (!this._events[o]) return !1;
            var l,
              u,
              h = this._events[o],
              d = arguments.length;
            if (h.fn) {
              switch ((h.once && this.removeListener(t, h.fn, void 0, !0), d)) {
                case 1:
                  return h.fn.call(h.context), !0;
                case 2:
                  return h.fn.call(h.context, e), !0;
                case 3:
                  return h.fn.call(h.context, e, i), !0;
                case 4:
                  return h.fn.call(h.context, e, i, n), !0;
                case 5:
                  return h.fn.call(h.context, e, i, n, a), !0;
                case 6:
                  return h.fn.call(h.context, e, i, n, a, s), !0;
              }
              for (u = 1, l = new Array(d - 1); u < d; u++)
                l[u - 1] = arguments[u];
              h.fn.apply(h.context, l);
            } else {
              var c,
                f = h.length;
              for (u = 0; u < f; u++)
                switch (
                  (h[u].once && this.removeListener(t, h[u].fn, void 0, !0), d)
                ) {
                  case 1:
                    h[u].fn.call(h[u].context);
                    break;
                  case 2:
                    h[u].fn.call(h[u].context, e);
                    break;
                  case 3:
                    h[u].fn.call(h[u].context, e, i);
                    break;
                  case 4:
                    h[u].fn.call(h[u].context, e, i, n);
                    break;
                  default:
                    if (!l)
                      for (c = 1, l = new Array(d - 1); c < d; c++)
                        l[c - 1] = arguments[c];
                    h[u].fn.apply(h[u].context, l);
                }
            }
            return !0;
          }),
          (o.prototype.on = function (t, e, r) {
            return a(this, t, e, r, !1);
          }),
          (o.prototype.once = function (t, e, r) {
            return a(this, t, e, r, !0);
          }),
          (o.prototype.removeListener = function (t, e, i, n) {
            var a = r ? r + t : t;
            if (!this._events[a]) return this;
            if (!e) return s(this, a), this;
            var o = this._events[a];
            if (o.fn)
              o.fn !== e ||
                (n && !o.once) ||
                (i && o.context !== i) ||
                s(this, a);
            else {
              for (var l = 0, u = [], h = o.length; l < h; l++)
                (o[l].fn !== e ||
                  (n && !o[l].once) ||
                  (i && o[l].context !== i)) &&
                  u.push(o[l]);
              u.length
                ? (this._events[a] = 1 === u.length ? u[0] : u)
                : s(this, a);
            }
            return this;
          }),
          (o.prototype.removeAllListeners = function (t) {
            var e;
            return (
              t
                ? ((e = r ? r + t : t), this._events[e] && s(this, e))
                : ((this._events = new i()), (this._eventsCount = 0)),
              this
            );
          }),
          (o.prototype.off = o.prototype.removeListener),
          (o.prototype.addListener = o.prototype.on),
          (o.prefixed = r),
          (o.EventEmitter = o),
          (t.exports = o);
      })(Nn);
      var Un = v(Nn.exports);
      function Bn(t, e) {
        if (
          !(
            (r = e.remuxResult).audio ||
            r.video ||
            r.text ||
            r.id3 ||
            r.initSegment
          )
        )
          return !1;
        var r,
          i = [],
          n = e.remuxResult,
          a = n.audio,
          s = n.video;
        return (
          a && Gn(i, a),
          s && Gn(i, s),
          t.postMessage({ event: "transmuxComplete", data: e }, i),
          !0
        );
      }
      function Gn(t, e) {
        e.data1 && t.push(e.data1.buffer), e.data2 && t.push(e.data2.buffer);
      }
      function Kn(t, e, r) {
        e.reduce(function (e, r) {
          return Bn(t, r) || e;
        }, !1) || t.postMessage({ event: "transmuxComplete", data: e[0] }),
          t.postMessage({ event: "flush", data: r });
      }
      void 0 !== e &&
        e &&
        (function (t) {
          var e = new Un(),
            r = function (e, r) {
              t.postMessage({ event: e, data: r });
            };
          e.on(S.FRAG_DECRYPTED, r), e.on(S.ERROR, r);
          var i = function () {
            var t = function (t) {
              var e = function (e) {
                r("workerLog", { logType: t, message: e });
              };
              w[t] = e;
            };
            for (var e in w) t(e);
          };
          t.addEventListener("message", function (n) {
            var a = n.data;
            switch (a.cmd) {
              case "init":
                var s = JSON.parse(a.config);
                (t.transmuxer = new xn(e, a.typeSupported, s, "", a.id)),
                  I(s.debug, a.id),
                  i(),
                  r("init", null);
                break;
              case "configure":
                t.transmuxer.configure(a.config);
                break;
              case "demux":
                var o = t.transmuxer.push(
                  a.data,
                  a.decryptdata,
                  a.chunkMeta,
                  a.state
                );
                Fn(o)
                  ? ((t.transmuxer.async = !0),
                    o
                      .then(function (e) {
                        Bn(t, e);
                      })
                      .catch(function (t) {
                        r(S.ERROR, {
                          type: L.MEDIA_ERROR,
                          details: A.FRAG_PARSING_ERROR,
                          chunkMeta: a.chunkMeta,
                          fatal: !1,
                          error: t,
                          err: t,
                          reason: "transmuxer-worker push error",
                        });
                      }))
                  : ((t.transmuxer.async = !1), Bn(t, o));
                break;
              case "flush":
                var l = a.chunkMeta,
                  u = t.transmuxer.flush(l);
                Fn(u) || t.transmuxer.async
                  ? (Fn(u) || (u = Promise.resolve(u)),
                    u
                      .then(function (e) {
                        Kn(t, e, l);
                      })
                      .catch(function (t) {
                        r(S.ERROR, {
                          type: L.MEDIA_ERROR,
                          details: A.FRAG_PARSING_ERROR,
                          chunkMeta: a.chunkMeta,
                          fatal: !1,
                          error: t,
                          err: t,
                          reason: "transmuxer-worker flush error",
                        });
                      }))
                  : Kn(t, u, l);
            }
          });
        })(self);
      var Hn = (function () {
        function e(e, r, i, n) {
          var a = this;
          (this.error = null),
            (this.hls = void 0),
            (this.id = void 0),
            (this.observer = void 0),
            (this.frag = null),
            (this.part = null),
            (this.useWorker = void 0),
            (this.workerContext = null),
            (this.onwmsg = void 0),
            (this.transmuxer = null),
            (this.onTransmuxComplete = void 0),
            (this.onFlush = void 0);
          var s = e.config;
          (this.hls = e),
            (this.id = r),
            (this.useWorker = !!s.enableWorker),
            (this.onTransmuxComplete = i),
            (this.onFlush = n);
          var o = function (t, e) {
            ((e = e || {}).frag = a.frag),
              (e.id = a.id),
              t === S.ERROR && (a.error = e.error),
              a.hls.trigger(t, e);
          };
          (this.observer = new Un()),
            this.observer.on(S.FRAG_DECRYPTED, o),
            this.observer.on(S.ERROR, o);
          var l,
            u,
            h,
            d,
            c = ee(s.preferManagedMediaSource) || {
              isTypeSupported: function () {
                return !1;
              },
            },
            f = {
              mpeg: c.isTypeSupported("audio/mpeg"),
              mp3: c.isTypeSupported('audio/mp4; codecs="mp3"'),
              ac3: c.isTypeSupported('audio/mp4; codecs="ac-3"'),
            };
          if (
            !this.useWorker ||
            "undefined" == typeof Worker ||
            (s.workerPath, 0)
          )
            this.transmuxer = new xn(this.observer, f, s, "", r);
          else
            try {
              s.workerPath
                ? (w.log(
                    "loading Web Worker " + s.workerPath + ' for "' + r + '"'
                  ),
                  (this.workerContext =
                    ((h = s.workerPath),
                    (d = new self.URL(h, self.location.href).href),
                    { worker: new self.Worker(d), scriptURL: d })))
                : (w.log('injecting Web Worker for "' + r + '"'),
                  (this.workerContext =
                    ((l = new self.Blob(
                      [
                        "var exports={};var module={exports:exports};function define(f){f()};define.amd=true;(" +
                          t.toString() +
                          ")(true);",
                      ],
                      { type: "text/javascript" }
                    )),
                    (u = self.URL.createObjectURL(l)),
                    { worker: new self.Worker(u), objectURL: u }))),
                (this.onwmsg = function (t) {
                  return a.onWorkerMessage(t);
                });
              var g = this.workerContext.worker;
              g.addEventListener("message", this.onwmsg),
                (g.onerror = function (t) {
                  var e = new Error(
                    t.message + "  (" + t.filename + ":" + t.lineno + ")"
                  );
                  (s.enableWorker = !1),
                    w.warn(
                      'Error in "' + r + '" Web Worker, fallback to inline'
                    ),
                    a.hls.trigger(S.ERROR, {
                      type: L.OTHER_ERROR,
                      details: A.INTERNAL_EXCEPTION,
                      fatal: !1,
                      event: "demuxerWorker",
                      error: e,
                    });
                }),
                g.postMessage({
                  cmd: "init",
                  typeSupported: f,
                  vendor: "",
                  id: r,
                  config: JSON.stringify(s),
                });
            } catch (t) {
              w.warn(
                'Error setting up "' + r + '" Web Worker, fallback to inline',
                t
              ),
                this.resetWorker(),
                (this.error = null),
                (this.transmuxer = new xn(this.observer, f, s, "", r));
            }
        }
        var r = e.prototype;
        return (
          (r.resetWorker = function () {
            if (this.workerContext) {
              var t = this.workerContext,
                e = t.worker,
                r = t.objectURL;
              r && self.URL.revokeObjectURL(r),
                e.removeEventListener("message", this.onwmsg),
                (e.onerror = null),
                e.terminate(),
                (this.workerContext = null);
            }
          }),
          (r.destroy = function () {
            if (this.workerContext) this.resetWorker(), (this.onwmsg = void 0);
            else {
              var t = this.transmuxer;
              t && (t.destroy(), (this.transmuxer = null));
            }
            var e = this.observer;
            e && e.removeAllListeners(),
              (this.frag = null),
              (this.observer = null),
              (this.hls = null);
          }),
          (r.push = function (t, e, r, i, n, a, s, o, l, u) {
            var h,
              d,
              c = this;
            l.transmuxing.start = self.performance.now();
            var f = this.transmuxer,
              g = a ? a.start : n.start,
              v = n.decryptdata,
              m = this.frag,
              p = !(m && n.cc === m.cc),
              y = !(m && l.level === m.level),
              E = m ? l.sn - m.sn : -1,
              T = this.part ? l.part - this.part.index : -1,
              S =
                0 === E &&
                l.id > 1 &&
                l.id === (null == m ? void 0 : m.stats.chunkCount),
              L = !y && (1 === E || (0 === E && (1 === T || (S && T <= 0)))),
              A = self.performance.now();
            (y || E || 0 === n.stats.parsing.start) &&
              (n.stats.parsing.start = A),
              !a || (!T && L) || (a.stats.parsing.start = A);
            var R = !(
                m &&
                (null == (h = n.initSegment) ? void 0 : h.url) ===
                  (null == (d = m.initSegment) ? void 0 : d.url)
              ),
              k = new On(p, L, o, y, g, R);
            if (!L || p || R) {
              w.log(
                "[transmuxer-interface, " +
                  n.type +
                  "]: Starting new transmux session for sn: " +
                  l.sn +
                  " p: " +
                  l.part +
                  " level: " +
                  l.level +
                  " id: " +
                  l.id +
                  "\n        discontinuity: " +
                  p +
                  "\n        trackSwitch: " +
                  y +
                  "\n        contiguous: " +
                  L +
                  "\n        accurateTimeOffset: " +
                  o +
                  "\n        timeOffset: " +
                  g +
                  "\n        initSegmentChange: " +
                  R
              );
              var b = new Mn(r, i, e, s, u);
              this.configureTransmuxer(b);
            }
            if (((this.frag = n), (this.part = a), this.workerContext))
              this.workerContext.worker.postMessage(
                {
                  cmd: "demux",
                  data: t,
                  decryptdata: v,
                  chunkMeta: l,
                  state: k,
                },
                t instanceof ArrayBuffer ? [t] : []
              );
            else if (f) {
              var D = f.push(t, v, l, k);
              Fn(D)
                ? ((f.async = !0),
                  D.then(function (t) {
                    c.handleTransmuxComplete(t);
                  }).catch(function (t) {
                    c.transmuxerError(t, l, "transmuxer-interface push error");
                  }))
                : ((f.async = !1), this.handleTransmuxComplete(D));
            }
          }),
          (r.flush = function (t) {
            var e = this;
            t.transmuxing.start = self.performance.now();
            var r = this.transmuxer;
            if (this.workerContext)
              this.workerContext.worker.postMessage({
                cmd: "flush",
                chunkMeta: t,
              });
            else if (r) {
              var i = r.flush(t);
              Fn(i) || r.async
                ? (Fn(i) || (i = Promise.resolve(i)),
                  i
                    .then(function (r) {
                      e.handleFlushResult(r, t);
                    })
                    .catch(function (r) {
                      e.transmuxerError(
                        r,
                        t,
                        "transmuxer-interface flush error"
                      );
                    }))
                : this.handleFlushResult(i, t);
            }
          }),
          (r.transmuxerError = function (t, e, r) {
            this.hls &&
              ((this.error = t),
              this.hls.trigger(S.ERROR, {
                type: L.MEDIA_ERROR,
                details: A.FRAG_PARSING_ERROR,
                chunkMeta: e,
                frag: this.frag || void 0,
                fatal: !1,
                error: t,
                err: t,
                reason: r,
              }));
          }),
          (r.handleFlushResult = function (t, e) {
            var r = this;
            t.forEach(function (t) {
              r.handleTransmuxComplete(t);
            }),
              this.onFlush(e);
          }),
          (r.onWorkerMessage = function (t) {
            var e = t.data;
            if (null != e && e.event) {
              var r = this.hls;
              if (this.hls)
                switch (e.event) {
                  case "init":
                    var i,
                      n =
                        null == (i = this.workerContext) ? void 0 : i.objectURL;
                    n && self.URL.revokeObjectURL(n);
                    break;
                  case "transmuxComplete":
                    this.handleTransmuxComplete(e.data);
                    break;
                  case "flush":
                    this.onFlush(e.data);
                    break;
                  case "workerLog":
                    w[e.data.logType] && w[e.data.logType](e.data.message);
                    break;
                  default:
                    (e.data = e.data || {}),
                      (e.data.frag = this.frag),
                      (e.data.id = this.id),
                      r.trigger(e.event, e.data);
                }
            } else
              w.warn(
                "worker message received with no " + (e ? "event name" : "data")
              );
          }),
          (r.configureTransmuxer = function (t) {
            var e = this.transmuxer;
            this.workerContext
              ? this.workerContext.worker.postMessage({
                  cmd: "configure",
                  config: t,
                })
              : e && e.configure(t);
          }),
          (r.handleTransmuxComplete = function (t) {
            (t.chunkMeta.transmuxing.end = self.performance.now()),
              this.onTransmuxComplete(t);
          }),
          e
        );
      })();
      function Vn(t, e) {
        if (t.length !== e.length) return !1;
        for (var r = 0; r < t.length; r++)
          if (!Yn(t[r].attrs, e[r].attrs)) return !1;
        return !0;
      }
      function Yn(t, e, r) {
        var i = t["STABLE-RENDITION-ID"];
        return i && !r
          ? i === e["STABLE-RENDITION-ID"]
          : !(
              r || [
                "LANGUAGE",
                "NAME",
                "CHARACTERISTICS",
                "AUTOSELECT",
                "DEFAULT",
                "FORCED",
                "ASSOC-LANGUAGE",
              ]
            ).some(function (r) {
              return t[r] !== e[r];
            });
      }
      function Wn(t, e) {
        return (
          e.label.toLowerCase() === t.name.toLowerCase() &&
          (!e.language ||
            e.language.toLowerCase() === (t.lang || "").toLowerCase())
        );
      }
      var jn = (function (t) {
          function e(e, r, i) {
            var n;
            return (
              ((n =
                t.call(this, e, r, i, "[audio-stream-controller]", Ce) ||
                this).videoBuffer = null),
              (n.videoTrackCC = -1),
              (n.waitingVideoCC = -1),
              (n.bufferedTrack = null),
              (n.switchingTrack = null),
              (n.trackId = -1),
              (n.waitingData = null),
              (n.mainDetails = null),
              (n.flushing = !1),
              (n.bufferFlushed = !1),
              (n.cachedTrackLoadedData = null),
              n._registerListeners(),
              n
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.onHandlerDestroying = function () {
              this._unregisterListeners(),
                t.prototype.onHandlerDestroying.call(this),
                (this.mainDetails = null),
                (this.bufferedTrack = null),
                (this.switchingTrack = null);
            }),
            (r._registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this),
                t.on(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.on(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.on(S.ERROR, this.onError, this),
                t.on(S.BUFFER_RESET, this.onBufferReset, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.on(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this),
                t.off(
                  S.AUDIO_TRACK_SWITCHING,
                  this.onAudioTrackSwitching,
                  this
                ),
                t.off(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.off(S.ERROR, this.onError, this),
                t.off(S.BUFFER_RESET, this.onBufferReset, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.off(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r.onInitPtsFound = function (t, e) {
              var r = e.frag,
                i = e.id,
                n = e.initPTS,
                a = e.timescale;
              if ("main" === i) {
                var s = r.cc;
                (this.initPTS[r.cc] = { baseTime: n, timescale: a }),
                  this.log("InitPTS for cc: " + s + " found from main: " + n),
                  (this.videoTrackCC = s),
                  this.state === Ri && this.tick();
              }
            }),
            (r.startLoad = function (t) {
              if (!this.levels)
                return (this.startPosition = t), void (this.state = gi);
              var e = this.lastCurrentTime;
              this.stopLoad(),
                this.setInterval(100),
                e > 0 && -1 === t
                  ? (this.log(
                      "Override startPosition with lastCurrentTime @" +
                        e.toFixed(3)
                    ),
                    (t = e),
                    (this.state = vi))
                  : ((this.loadedmetadata = !1), (this.state = Ei)),
                (this.nextLoadPosition =
                  this.startPosition =
                  this.lastCurrentTime =
                    t),
                this.tick();
            }),
            (r.doTick = function () {
              switch (this.state) {
                case vi:
                  this.doTickIdle();
                  break;
                case Ei:
                  var e,
                    r = this.levels,
                    i = this.trackId,
                    n = null == r || null == (e = r[i]) ? void 0 : e.details;
                  if (n) {
                    if (this.waitForCdnTuneIn(n)) break;
                    this.state = Ri;
                  }
                  break;
                case yi:
                  var a,
                    s = performance.now(),
                    o = this.retryDate;
                  if (!o || s >= o || (null != (a = this.media) && a.seeking)) {
                    var l = this.levels,
                      u = this.trackId;
                    this.log("RetryDate reached, switch back to IDLE state"),
                      this.resetStartWhenNotLoaded(
                        (null == l ? void 0 : l[u]) || null
                      ),
                      (this.state = vi);
                  }
                  break;
                case Ri:
                  var h = this.waitingData;
                  if (h) {
                    var d = h.frag,
                      c = h.part,
                      f = h.cache,
                      g = h.complete;
                    if (void 0 !== this.initPTS[d.cc]) {
                      (this.waitingData = null),
                        (this.waitingVideoCC = -1),
                        (this.state = pi);
                      var v = {
                        frag: d,
                        part: c,
                        payload: f.flush(),
                        networkDetails: null,
                      };
                      this._handleFragmentLoadProgress(v),
                        g &&
                          t.prototype._handleFragmentLoadComplete.call(this, v);
                    } else if (this.videoTrackCC !== this.waitingVideoCC)
                      this.log(
                        "Waiting fragment cc (" +
                          d.cc +
                          ") cancelled because video is at cc " +
                          this.videoTrackCC
                      ),
                        this.clearWaitingFragment();
                    else {
                      var m = this.getLoadPosition(),
                        p = Jr.bufferInfo(
                          this.mediaBuffer,
                          m,
                          this.config.maxBufferHole
                        );
                      Er(p.end, this.config.maxFragLookUpTolerance, d) < 0 &&
                        (this.log(
                          "Waiting fragment cc (" +
                            d.cc +
                            ") @ " +
                            d.start +
                            " cancelled because another fragment at " +
                            p.end +
                            " is needed"
                        ),
                        this.clearWaitingFragment());
                    }
                  } else this.state = vi;
              }
              this.onTickEnd();
            }),
            (r.clearWaitingFragment = function () {
              var t = this.waitingData;
              t &&
                (this.fragmentTracker.removeFragment(t.frag),
                (this.waitingData = null),
                (this.waitingVideoCC = -1),
                (this.state = vi));
            }),
            (r.resetLoadingState = function () {
              this.clearWaitingFragment(),
                t.prototype.resetLoadingState.call(this);
            }),
            (r.onTickEnd = function () {
              var t = this.media;
              null != t &&
                t.readyState &&
                (this.lastCurrentTime = t.currentTime);
            }),
            (r.doTickIdle = function () {
              var t = this.hls,
                e = this.levels,
                r = this.media,
                i = this.trackId,
                n = t.config;
              if (
                (r || (!this.startFragRequested && n.startFragPrefetch)) &&
                null != e &&
                e[i]
              ) {
                var a = e[i],
                  s = a.details;
                if (
                  !s ||
                  (s.live && this.levelLastLoaded !== a) ||
                  this.waitForCdnTuneIn(s)
                )
                  this.state = Ei;
                else {
                  var o = this.mediaBuffer ? this.mediaBuffer : this.media;
                  this.bufferFlushed &&
                    o &&
                    ((this.bufferFlushed = !1),
                    this.afterBufferFlushed(o, O, Ce));
                  var l = this.getFwdBufferInfo(o, Ce);
                  if (null !== l) {
                    var u = this.bufferedTrack,
                      h = this.switchingTrack;
                    if (!h && this._streamEnded(l, s))
                      return (
                        t.trigger(S.BUFFER_EOS, { type: "audio" }),
                        void (this.state = Li)
                      );
                    var d = this.getFwdBufferInfo(
                        this.videoBuffer ? this.videoBuffer : this.media,
                        we
                      ),
                      c = l.len,
                      f = this.getMaxBufferLength(null == d ? void 0 : d.len),
                      g = s.fragments,
                      v = g[0].start,
                      m = this.flushing ? this.getLoadPosition() : l.end;
                    if (h && r) {
                      var p = this.getLoadPosition();
                      u && !Yn(h.attrs, u.attrs) && (m = p),
                        s.PTSKnown &&
                          p < v &&
                          (l.end > v || l.nextStart) &&
                          (this.log(
                            "Alt audio track ahead of main track, seek to start of alt audio track"
                          ),
                          (r.currentTime = v + 0.05));
                    }
                    if (!(c >= f && !h && m < g[g.length - 1].start)) {
                      var y = this.getNextFragment(m, s),
                        E = !1;
                      if (
                        (y &&
                          this.isLoopLoading(y, m) &&
                          ((E = !!y.gap),
                          (y = this.getNextFragmentLoopLoading(
                            y,
                            s,
                            l,
                            we,
                            f
                          ))),
                        y)
                      ) {
                        var T = d && y.start > d.end + s.targetduration;
                        if (T || ((null == d || !d.len) && l.len)) {
                          var L = this.getAppendedFrag(y.start, we);
                          if (null === L) return;
                          if (
                            (E || (E = !!L.gap || (!!T && 0 === d.len)),
                            (T && !E) ||
                              (E && l.nextStart && l.nextStart < L.end))
                          )
                            return;
                        }
                        this.loadFragment(y, a, m);
                      } else this.bufferFlushed = !0;
                    }
                  }
                }
              }
            }),
            (r.getMaxBufferLength = function (e) {
              var r = t.prototype.getMaxBufferLength.call(this);
              return e
                ? Math.min(Math.max(r, e), this.config.maxMaxBufferLength)
                : r;
            }),
            (r.onMediaDetaching = function () {
              (this.videoBuffer = null),
                (this.bufferFlushed = this.flushing = !1),
                t.prototype.onMediaDetaching.call(this);
            }),
            (r.onAudioTracksUpdated = function (t, e) {
              var r = e.audioTracks;
              this.resetTransmuxer(),
                (this.levels = r.map(function (t) {
                  return new rr(t);
                }));
            }),
            (r.onAudioTrackSwitching = function (t, e) {
              var r = !!e.url;
              this.trackId = e.id;
              var i = this.fragCurrent;
              i && (i.abortRequests(), this.removeUnbufferedFrags(i.start)),
                this.resetLoadingState(),
                r ? this.setInterval(100) : this.resetTransmuxer(),
                r
                  ? ((this.switchingTrack = e),
                    (this.state = vi),
                    this.flushAudioIfNeeded(e))
                  : ((this.switchingTrack = null),
                    (this.bufferedTrack = e),
                    (this.state = gi)),
                this.tick();
            }),
            (r.onManifestLoading = function () {
              this.fragmentTracker.removeAllFragments(),
                (this.startPosition = this.lastCurrentTime = 0),
                (this.bufferFlushed = this.flushing = !1),
                (this.levels =
                  this.mainDetails =
                  this.waitingData =
                  this.bufferedTrack =
                  this.cachedTrackLoadedData =
                  this.switchingTrack =
                    null),
                (this.startFragRequested = !1),
                (this.trackId = this.videoTrackCC = this.waitingVideoCC = -1);
            }),
            (r.onLevelLoaded = function (t, e) {
              (this.mainDetails = e.details),
                null !== this.cachedTrackLoadedData &&
                  (this.hls.trigger(
                    S.AUDIO_TRACK_LOADED,
                    this.cachedTrackLoadedData
                  ),
                  (this.cachedTrackLoadedData = null));
            }),
            (r.onAudioTrackLoaded = function (t, e) {
              var r;
              if (null != this.mainDetails) {
                var i = this.levels,
                  n = e.details,
                  a = e.id;
                if (i) {
                  this.log(
                    "Audio track " +
                      a +
                      " loaded [" +
                      n.startSN +
                      "," +
                      n.endSN +
                      "]" +
                      (n.lastPartSn
                        ? "[part-" + n.lastPartSn + "-" + n.lastPartIndex + "]"
                        : "") +
                      ",duration:" +
                      n.totalduration
                  );
                  var s = i[a],
                    o = 0;
                  if (n.live || (null != (r = s.details) && r.live)) {
                    this.checkLiveUpdate(n);
                    var l,
                      u = this.mainDetails;
                    if (n.deltaUpdateFailed || !u) return;
                    !s.details && n.hasProgramDateTime && u.hasProgramDateTime
                      ? (ii(n, u), (o = n.fragments[0].start))
                      : (o = this.alignPlaylists(
                          n,
                          s.details,
                          null == (l = this.levelLastLoaded)
                            ? void 0
                            : l.details
                        ));
                  }
                  (s.details = n),
                    (this.levelLastLoaded = s),
                    this.startFragRequested ||
                      (!this.mainDetails && n.live) ||
                      this.setStartPosition(this.mainDetails || n, o),
                    this.state !== Ei ||
                      this.waitForCdnTuneIn(n) ||
                      (this.state = vi),
                    this.tick();
                } else
                  this.warn("Audio tracks were reset while loading level " + a);
              } else this.cachedTrackLoadedData = e;
            }),
            (r._handleFragmentLoadProgress = function (t) {
              var e,
                r = t.frag,
                i = t.part,
                n = t.payload,
                a = this.config,
                s = this.trackId,
                o = this.levels;
              if (o) {
                var l = o[s];
                if (l) {
                  var u = l.details;
                  if (!u)
                    return (
                      this.warn(
                        "Audio track details undefined on fragment load progress"
                      ),
                      void this.removeUnbufferedFrags(r.start)
                    );
                  var h = a.defaultAudioCodec || l.audioCodec || "mp4a.40.2",
                    d = this.transmuxer;
                  d ||
                    (d = this.transmuxer =
                      new Hn(
                        this.hls,
                        Ce,
                        this._handleTransmuxComplete.bind(this),
                        this._handleTransmuxerFlush.bind(this)
                      ));
                  var c = this.initPTS[r.cc],
                    f = null == (e = r.initSegment) ? void 0 : e.data;
                  if (void 0 !== c) {
                    var g = i ? i.index : -1,
                      v = -1 !== g,
                      m = new $r(
                        r.level,
                        r.sn,
                        r.stats.chunkCount,
                        n.byteLength,
                        g,
                        v
                      );
                    d.push(n, f, h, "", r, i, u.totalduration, !1, m, c);
                  } else
                    this.log(
                      "Unknown video PTS for cc " +
                        r.cc +
                        ", waiting for video PTS before demuxing audio frag " +
                        r.sn +
                        " of [" +
                        u.startSN +
                        " ," +
                        u.endSN +
                        "],track " +
                        s
                    ),
                      (this.waitingData = this.waitingData || {
                        frag: r,
                        part: i,
                        cache: new Di(),
                        complete: !1,
                      }).cache.push(new Uint8Array(n)),
                      (this.waitingVideoCC = this.videoTrackCC),
                      (this.state = Ri);
                } else
                  this.warn(
                    "Audio track is undefined on fragment load progress"
                  );
              } else
                this.warn(
                  "Audio tracks were reset while fragment load was in progress. Fragment " +
                    r.sn +
                    " of level " +
                    r.level +
                    " will not be buffered"
                );
            }),
            (r._handleFragmentLoadComplete = function (e) {
              this.waitingData
                ? (this.waitingData.complete = !0)
                : t.prototype._handleFragmentLoadComplete.call(this, e);
            }),
            (r.onBufferReset = function () {
              (this.mediaBuffer = this.videoBuffer = null),
                (this.loadedmetadata = !1);
            }),
            (r.onBufferCreated = function (t, e) {
              var r = e.tracks.audio;
              r && (this.mediaBuffer = r.buffer || null),
                e.tracks.video &&
                  (this.videoBuffer = e.tracks.video.buffer || null);
            }),
            (r.onFragBuffered = function (t, e) {
              var r = e.frag,
                n = e.part;
              if (r.type === Ce)
                if (this.fragContextChanged(r))
                  this.warn(
                    "Fragment " +
                      r.sn +
                      (n ? " p: " + n.index : "") +
                      " of level " +
                      r.level +
                      " finished buffering, but was aborted. state: " +
                      this.state +
                      ", audioSwitch: " +
                      (this.switchingTrack ? this.switchingTrack.name : "false")
                  );
                else {
                  if ("initSegment" !== r.sn) {
                    this.fragPrevious = r;
                    var a = this.switchingTrack;
                    a &&
                      ((this.bufferedTrack = a),
                      (this.switchingTrack = null),
                      this.hls.trigger(S.AUDIO_TRACK_SWITCHED, i({}, a)));
                  }
                  this.fragBufferedComplete(r, n);
                }
              else if (!this.loadedmetadata && r.type === we) {
                var s = this.videoBuffer || this.media;
                s && Jr.getBuffered(s).length && (this.loadedmetadata = !0);
              }
            }),
            (r.onError = function (e, r) {
              var i;
              if (r.fatal) this.state = Ai;
              else
                switch (r.details) {
                  case A.FRAG_GAP:
                  case A.FRAG_PARSING_ERROR:
                  case A.FRAG_DECRYPT_ERROR:
                  case A.FRAG_LOAD_ERROR:
                  case A.FRAG_LOAD_TIMEOUT:
                  case A.KEY_LOAD_ERROR:
                  case A.KEY_LOAD_TIMEOUT:
                    this.onFragmentOrKeyLoadError(Ce, r);
                    break;
                  case A.AUDIO_TRACK_LOAD_ERROR:
                  case A.AUDIO_TRACK_LOAD_TIMEOUT:
                  case A.LEVEL_PARSING_ERROR:
                    r.levelRetry ||
                      this.state !== Ei ||
                      (null == (i = r.context) ? void 0 : i.type) !== De ||
                      (this.state = vi);
                    break;
                  case A.BUFFER_APPEND_ERROR:
                  case A.BUFFER_FULL_ERROR:
                    if (!r.parent || "audio" !== r.parent) return;
                    if (r.details === A.BUFFER_APPEND_ERROR)
                      return void this.resetLoadingState();
                    this.reduceLengthAndFlushBuffer(r) &&
                      ((this.bufferedTrack = null),
                      t.prototype.flushMainBuffer.call(
                        this,
                        0,
                        Number.POSITIVE_INFINITY,
                        "audio"
                      ));
                    break;
                  case A.INTERNAL_EXCEPTION:
                    this.recoverWorkerError(r);
                }
            }),
            (r.onBufferFlushing = function (t, e) {
              e.type !== N && (this.flushing = !0);
            }),
            (r.onBufferFlushed = function (t, e) {
              var r = e.type;
              if (r !== N) {
                (this.flushing = !1),
                  (this.bufferFlushed = !0),
                  this.state === Li && (this.state = vi);
                var i = this.mediaBuffer || this.media;
                i && (this.afterBufferFlushed(i, r, Ce), this.tick());
              }
            }),
            (r._handleTransmuxComplete = function (t) {
              var e,
                r = "audio",
                i = this.hls,
                n = t.remuxResult,
                a = t.chunkMeta,
                s = this.getCurrentContext(a);
              if (s) {
                var l = s.frag,
                  u = s.part,
                  h = s.level,
                  d = h.details,
                  c = n.audio,
                  f = n.text,
                  g = n.id3,
                  v = n.initSegment;
                if (!this.fragContextChanged(l) && d) {
                  if (
                    ((this.state = Ti),
                    this.switchingTrack &&
                      c &&
                      this.completeAudioSwitch(this.switchingTrack),
                    null != v && v.tracks)
                  ) {
                    var m = l.initSegment || l;
                    this._bufferInitSegment(h, v.tracks, m, a),
                      i.trigger(S.FRAG_PARSING_INIT_SEGMENT, {
                        frag: m,
                        id: r,
                        tracks: v.tracks,
                      });
                  }
                  if (c) {
                    var p = c.startPTS,
                      y = c.endPTS,
                      E = c.startDTS,
                      T = c.endDTS;
                    u &&
                      (u.elementaryStreams[O] = {
                        startPTS: p,
                        endPTS: y,
                        startDTS: E,
                        endDTS: T,
                      }),
                      l.setElementaryStreamInfo(O, p, y, E, T),
                      this.bufferFragmentData(c, l, u, a);
                  }
                  if (null != g && null != (e = g.samples) && e.length) {
                    var L = o({ id: r, frag: l, details: d }, g);
                    i.trigger(S.FRAG_PARSING_METADATA, L);
                  }
                  if (f) {
                    var A = o({ id: r, frag: l, details: d }, f);
                    i.trigger(S.FRAG_PARSING_USERDATA, A);
                  }
                } else this.fragmentTracker.removeFragment(l);
              } else this.resetWhenMissingContext(a);
            }),
            (r._bufferInitSegment = function (t, e, r, i) {
              if (this.state === Ti) {
                e.video && delete e.video;
                var n = e.audio;
                if (n) {
                  n.id = "audio";
                  var a = t.audioCodec;
                  this.log(
                    "Init audio buffer, container:" +
                      n.container +
                      ", codecs[level/parsed]=[" +
                      a +
                      "/" +
                      n.codec +
                      "]"
                  ),
                    a && 1 === a.split(",").length && (n.levelCodec = a),
                    this.hls.trigger(S.BUFFER_CODECS, e);
                  var s = n.initSegment;
                  if (null != s && s.byteLength) {
                    var o = {
                      type: "audio",
                      frag: r,
                      part: null,
                      chunkMeta: i,
                      parent: r.type,
                      data: s,
                    };
                    this.hls.trigger(S.BUFFER_APPENDING, o);
                  }
                  this.tickImmediate();
                }
              }
            }),
            (r.loadFragment = function (e, r, i) {
              var n,
                a = this.fragmentTracker.getState(e);
              if (
                ((this.fragCurrent = e),
                this.switchingTrack || a === Vr || a === Wr)
              )
                if ("initSegment" === e.sn) this._loadInitSegment(e, r);
                else if (
                  null != (n = r.details) &&
                  n.live &&
                  !this.initPTS[e.cc]
                ) {
                  this.log(
                    "Waiting for video PTS in continuity counter " +
                      e.cc +
                      " of live stream before loading audio fragment " +
                      e.sn +
                      " of level " +
                      this.trackId
                  ),
                    (this.state = Ri);
                  var s = this.mainDetails;
                  s &&
                    s.fragments[0].start !== r.details.fragments[0].start &&
                    ii(r.details, s);
                } else
                  (this.startFragRequested = !0),
                    t.prototype.loadFragment.call(this, e, r, i);
              else this.clearTrackerIfNeeded(e);
            }),
            (r.flushAudioIfNeeded = function (e) {
              var r = this.media,
                i = this.bufferedTrack,
                n = null == i ? void 0 : i.attrs,
                a = e.attrs;
              r &&
                n &&
                (n.CHANNELS !== a.CHANNELS ||
                  i.name !== e.name ||
                  i.lang !== e.lang) &&
                (this.log("Switching audio track : flushing all audio"),
                t.prototype.flushMainBuffer.call(
                  this,
                  0,
                  Number.POSITIVE_INFINITY,
                  "audio"
                ),
                (this.bufferedTrack = null));
            }),
            (r.completeAudioSwitch = function (t) {
              var e = this.hls;
              this.flushAudioIfNeeded(t),
                (this.bufferedTrack = t),
                (this.switchingTrack = null),
                e.trigger(S.AUDIO_TRACK_SWITCHED, i({}, t));
            }),
            e
          );
        })(bi),
        qn = (function (t) {
          function e(e) {
            var r;
            return (
              ((r =
                t.call(this, e, "[audio-track-controller]") || this).tracks =
                []),
              (r.groupIds = null),
              (r.tracksInGroup = []),
              (r.trackId = -1),
              (r.currentTrack = null),
              (r.selectDefaultTrack = !0),
              r.registerListeners(),
              r
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.registerListeners = function () {
              var t = this.hls;
              t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.on(S.ERROR, this.onError, this);
            }),
            (r.unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.off(S.ERROR, this.onError, this);
            }),
            (r.destroy = function () {
              this.unregisterListeners(),
                (this.tracks.length = 0),
                (this.tracksInGroup.length = 0),
                (this.currentTrack = null),
                t.prototype.destroy.call(this);
            }),
            (r.onManifestLoading = function () {
              (this.tracks = []),
                (this.tracksInGroup = []),
                (this.groupIds = null),
                (this.currentTrack = null),
                (this.trackId = -1),
                (this.selectDefaultTrack = !0);
            }),
            (r.onManifestParsed = function (t, e) {
              this.tracks = e.audioTracks || [];
            }),
            (r.onAudioTrackLoaded = function (t, e) {
              var r = e.id,
                i = e.groupId,
                n = e.details,
                a = this.tracksInGroup[r];
              if (a && a.groupId === i) {
                var s = a.details;
                (a.details = e.details),
                  this.log(
                    "Audio track " +
                      r +
                      ' "' +
                      a.name +
                      '" lang:' +
                      a.lang +
                      " group:" +
                      i +
                      " loaded [" +
                      n.startSN +
                      "-" +
                      n.endSN +
                      "]"
                  ),
                  r === this.trackId && this.playlistLoaded(r, e, s);
              } else
                this.warn(
                  "Audio track with id:" +
                    r +
                    " and group:" +
                    i +
                    " not found in active group " +
                    (null == a ? void 0 : a.groupId)
                );
            }),
            (r.onLevelLoading = function (t, e) {
              this.switchLevel(e.level);
            }),
            (r.onLevelSwitching = function (t, e) {
              this.switchLevel(e.level);
            }),
            (r.switchLevel = function (t) {
              var e = this.hls.levels[t];
              if (e) {
                var r = e.audioGroups || null,
                  i = this.groupIds,
                  n = this.currentTrack;
                if (
                  !r ||
                  (null == i ? void 0 : i.length) !==
                    (null == r ? void 0 : r.length) ||
                  (null != r &&
                    r.some(function (t) {
                      return -1 === (null == i ? void 0 : i.indexOf(t));
                    }))
                ) {
                  (this.groupIds = r),
                    (this.trackId = -1),
                    (this.currentTrack = null);
                  var a = this.tracks.filter(function (t) {
                    return !r || -1 !== r.indexOf(t.groupId);
                  });
                  if (a.length)
                    this.selectDefaultTrack &&
                      !a.some(function (t) {
                        return t.default;
                      }) &&
                      (this.selectDefaultTrack = !1),
                      a.forEach(function (t, e) {
                        t.id = e;
                      });
                  else if (!n && !this.tracksInGroup.length) return;
                  this.tracksInGroup = a;
                  var s = this.hls.config.audioPreference;
                  if (!n && s) {
                    var o = Nr(s, a, Br);
                    if (o > -1) n = a[o];
                    else {
                      var l = Nr(s, this.tracks);
                      n = this.tracks[l];
                    }
                  }
                  var u = this.findTrackId(n);
                  -1 === u && n && (u = this.findTrackId(null));
                  var h = { audioTracks: a };
                  this.log(
                    "Updating audio tracks, " +
                      a.length +
                      " track(s) found in group(s): " +
                      (null == r ? void 0 : r.join(","))
                  ),
                    this.hls.trigger(S.AUDIO_TRACKS_UPDATED, h);
                  var d = this.trackId;
                  if (-1 !== u && -1 === d) this.setAudioTrack(u);
                  else if (a.length && -1 === d) {
                    var c,
                      f = new Error(
                        "No audio track selected for current audio group-ID(s): " +
                          (null == (c = this.groupIds) ? void 0 : c.join(",")) +
                          " track count: " +
                          a.length
                      );
                    this.warn(f.message),
                      this.hls.trigger(S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: A.AUDIO_TRACK_LOAD_ERROR,
                        fatal: !0,
                        error: f,
                      });
                  }
                } else
                  this.shouldReloadPlaylist(n) &&
                    this.setAudioTrack(this.trackId);
              }
            }),
            (r.onError = function (t, e) {
              !e.fatal &&
                e.context &&
                (e.context.type !== De ||
                  e.context.id !== this.trackId ||
                  (this.groupIds &&
                    -1 === this.groupIds.indexOf(e.context.groupId)) ||
                  ((this.requestScheduled = -1), this.checkRetry(e)));
            }),
            (r.setAudioOption = function (t) {
              var e = this.hls;
              if (((e.config.audioPreference = t), t)) {
                var r = this.allAudioTracks;
                if (((this.selectDefaultTrack = !1), r.length)) {
                  var i = this.currentTrack;
                  if (i && Ur(t, i, Br)) return i;
                  var n = Nr(t, this.tracksInGroup, Br);
                  if (n > -1) {
                    var a = this.tracksInGroup[n];
                    return this.setAudioTrack(n), a;
                  }
                  if (i) {
                    var s = e.loadLevel;
                    -1 === s && (s = e.firstAutoLevel);
                    var o = (function (t, e, r, i, n) {
                      var a = e[i],
                        s = e.reduce(function (t, e, r) {
                          var i = e.uri;
                          return (t[i] || (t[i] = [])).push(r), t;
                        }, {})[a.uri];
                      s.length > 1 && (i = Math.max.apply(Math, s));
                      var o = a.videoRange,
                        l = a.frameRate,
                        u = a.codecSet.substring(0, 4),
                        h = Gr(e, i, function (e) {
                          if (
                            e.videoRange !== o ||
                            e.frameRate !== l ||
                            e.codecSet.substring(0, 4) !== u
                          )
                            return !1;
                          var i = e.audioGroups,
                            a = r.filter(function (t) {
                              return !i || -1 !== i.indexOf(t.groupId);
                            });
                          return Nr(t, a, n) > -1;
                        });
                      return h > -1
                        ? h
                        : Gr(e, i, function (e) {
                            var i = e.audioGroups,
                              a = r.filter(function (t) {
                                return !i || -1 !== i.indexOf(t.groupId);
                              });
                            return Nr(t, a, n) > -1;
                          });
                    })(t, e.levels, r, s, Br);
                    if (-1 === o) return null;
                    e.nextLoadLevel = o;
                  }
                  if (t.channels || t.audioCodec) {
                    var l = Nr(t, r);
                    if (l > -1) return r[l];
                  }
                }
              }
              return null;
            }),
            (r.setAudioTrack = function (t) {
              var e = this.tracksInGroup;
              if (t < 0 || t >= e.length)
                this.warn("Invalid audio track id: " + t);
              else {
                this.clearTimer(), (this.selectDefaultTrack = !1);
                var r = this.currentTrack,
                  n = e[t],
                  a = n.details && !n.details.live;
                if (
                  !(
                    (t === this.trackId && n === r && a) ||
                    (this.log(
                      "Switching to audio-track " +
                        t +
                        ' "' +
                        n.name +
                        '" lang:' +
                        n.lang +
                        " group:" +
                        n.groupId +
                        " channels:" +
                        n.channels
                    ),
                    (this.trackId = t),
                    (this.currentTrack = n),
                    this.hls.trigger(S.AUDIO_TRACK_SWITCHING, i({}, n)),
                    a)
                  )
                ) {
                  var s = this.switchParams(
                    n.url,
                    null == r ? void 0 : r.details,
                    n.details
                  );
                  this.loadPlaylist(s);
                }
              }
            }),
            (r.findTrackId = function (t) {
              for (var e = this.tracksInGroup, r = 0; r < e.length; r++) {
                var i = e[r];
                if (
                  (!this.selectDefaultTrack || i.default) &&
                  (!t || Ur(t, i, Br))
                )
                  return r;
              }
              if (t) {
                for (
                  var n = t.name,
                    a = t.lang,
                    s = t.assocLang,
                    o = t.characteristics,
                    l = t.audioCodec,
                    u = t.channels,
                    h = 0;
                  h < e.length;
                  h++
                )
                  if (
                    Ur(
                      {
                        name: n,
                        lang: a,
                        assocLang: s,
                        characteristics: o,
                        audioCodec: l,
                        channels: u,
                      },
                      e[h],
                      Br
                    )
                  )
                    return h;
                for (var d = 0; d < e.length; d++) {
                  var c = e[d];
                  if (
                    Yn(t.attrs, c.attrs, [
                      "LANGUAGE",
                      "ASSOC-LANGUAGE",
                      "CHARACTERISTICS",
                    ])
                  )
                    return d;
                }
                for (var f = 0; f < e.length; f++) {
                  var g = e[f];
                  if (Yn(t.attrs, g.attrs, ["LANGUAGE"])) return f;
                }
              }
              return -1;
            }),
            (r.loadPlaylist = function (e) {
              var r = this.currentTrack;
              if (this.shouldLoadPlaylist(r) && r) {
                t.prototype.loadPlaylist.call(this);
                var i = r.id,
                  n = r.groupId,
                  a = r.url;
                if (e)
                  try {
                    a = e.addDirectives(a);
                  } catch (t) {
                    this.warn(
                      "Could not construct new URL with HLS Delivery Directives: " +
                        t
                    );
                  }
                this.log(
                  "loading audio-track playlist " +
                    i +
                    ' "' +
                    r.name +
                    '" lang:' +
                    r.lang +
                    " group:" +
                    n
                ),
                  this.clearTimer(),
                  this.hls.trigger(S.AUDIO_TRACK_LOADING, {
                    url: a,
                    id: i,
                    groupId: n,
                    deliveryDirectives: e || null,
                  });
              }
            }),
            s(e, [
              {
                key: "allAudioTracks",
                get: function () {
                  return this.tracks;
                },
              },
              {
                key: "audioTracks",
                get: function () {
                  return this.tracksInGroup;
                },
              },
              {
                key: "audioTrack",
                get: function () {
                  return this.trackId;
                },
                set: function (t) {
                  (this.selectDefaultTrack = !1), this.setAudioTrack(t);
                },
              },
            ]),
            e
          );
        })(wr),
        Xn = (function (t) {
          function e(e, r, i) {
            var n;
            return (
              ((n =
                t.call(this, e, r, i, "[subtitle-stream-controller]", _e) ||
                this).currentTrackId = -1),
              (n.tracksBuffered = []),
              (n.mainDetails = null),
              n._registerListeners(),
              n
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.onHandlerDestroying = function () {
              this._unregisterListeners(),
                t.prototype.onHandlerDestroying.call(this),
                (this.mainDetails = null);
            }),
            (r._registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.ERROR, this.onError, this),
                t.on(
                  S.SUBTITLE_TRACKS_UPDATED,
                  this.onSubtitleTracksUpdated,
                  this
                ),
                t.on(S.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this),
                t.on(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.on(
                  S.SUBTITLE_FRAG_PROCESSED,
                  this.onSubtitleFragProcessed,
                  this
                ),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.ERROR, this.onError, this),
                t.off(
                  S.SUBTITLE_TRACKS_UPDATED,
                  this.onSubtitleTracksUpdated,
                  this
                ),
                t.off(
                  S.SUBTITLE_TRACK_SWITCH,
                  this.onSubtitleTrackSwitch,
                  this
                ),
                t.off(
                  S.SUBTITLE_TRACK_LOADED,
                  this.onSubtitleTrackLoaded,
                  this
                ),
                t.off(
                  S.SUBTITLE_FRAG_PROCESSED,
                  this.onSubtitleFragProcessed,
                  this
                ),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r.startLoad = function (t) {
              this.stopLoad(),
                (this.state = vi),
                this.setInterval(500),
                (this.nextLoadPosition =
                  this.startPosition =
                  this.lastCurrentTime =
                    t),
                this.tick();
            }),
            (r.onManifestLoading = function () {
              (this.mainDetails = null),
                this.fragmentTracker.removeAllFragments();
            }),
            (r.onMediaDetaching = function () {
              (this.tracksBuffered = []),
                t.prototype.onMediaDetaching.call(this);
            }),
            (r.onLevelLoaded = function (t, e) {
              this.mainDetails = e.details;
            }),
            (r.onSubtitleFragProcessed = function (t, e) {
              var r = e.frag,
                i = e.success;
              if (((this.fragPrevious = r), (this.state = vi), i)) {
                var n = this.tracksBuffered[this.currentTrackId];
                if (n) {
                  for (var a, s = r.start, o = 0; o < n.length; o++)
                    if (s >= n[o].start && s <= n[o].end) {
                      a = n[o];
                      break;
                    }
                  var l = r.start + r.duration;
                  a ? (a.end = l) : ((a = { start: s, end: l }), n.push(a)),
                    this.fragmentTracker.fragBuffered(r),
                    this.fragBufferedComplete(r, null);
                }
              }
            }),
            (r.onBufferFlushing = function (t, e) {
              var r = e.startOffset,
                i = e.endOffset;
              if (0 === r && i !== Number.POSITIVE_INFINITY) {
                var n = i - 1;
                if (n <= 0) return;
                (e.endOffsetSubtitles = Math.max(0, n)),
                  this.tracksBuffered.forEach(function (t) {
                    for (var e = 0; e < t.length; )
                      if (t[e].end <= n) t.shift();
                      else {
                        if (!(t[e].start < n)) break;
                        (t[e].start = n), e++;
                      }
                  }),
                  this.fragmentTracker.removeFragmentsInRange(r, n, _e);
              }
            }),
            (r.onFragBuffered = function (t, e) {
              var r;
              this.loadedmetadata ||
                e.frag.type !== we ||
                (null != (r = this.media) &&
                  r.buffered.length &&
                  (this.loadedmetadata = !0));
            }),
            (r.onError = function (t, e) {
              var r = e.frag;
              (null == r ? void 0 : r.type) === _e &&
                (e.details === A.FRAG_GAP &&
                  this.fragmentTracker.fragBuffered(r, !0),
                this.fragCurrent && this.fragCurrent.abortRequests(),
                this.state !== gi && (this.state = vi));
            }),
            (r.onSubtitleTracksUpdated = function (t, e) {
              var r = this,
                i = e.subtitleTracks;
              this.levels && Vn(this.levels, i)
                ? (this.levels = i.map(function (t) {
                    return new rr(t);
                  }))
                : ((this.tracksBuffered = []),
                  (this.levels = i.map(function (t) {
                    var e = new rr(t);
                    return (r.tracksBuffered[e.id] = []), e;
                  })),
                  this.fragmentTracker.removeFragmentsInRange(
                    0,
                    Number.POSITIVE_INFINITY,
                    _e
                  ),
                  (this.fragPrevious = null),
                  (this.mediaBuffer = null));
            }),
            (r.onSubtitleTrackSwitch = function (t, e) {
              var r;
              if (
                ((this.currentTrackId = e.id),
                null != (r = this.levels) &&
                  r.length &&
                  -1 !== this.currentTrackId)
              ) {
                var i = this.levels[this.currentTrackId];
                null != i && i.details
                  ? (this.mediaBuffer = this.mediaBufferTimeRanges)
                  : (this.mediaBuffer = null),
                  i && this.setInterval(500);
              } else this.clearInterval();
            }),
            (r.onSubtitleTrackLoaded = function (t, e) {
              var r,
                i = this.currentTrackId,
                n = this.levels,
                a = e.details,
                s = e.id;
              if (n) {
                var o = n[s];
                if (!(s >= n.length) && o) {
                  this.log(
                    "Subtitle track " +
                      s +
                      " loaded [" +
                      a.startSN +
                      "," +
                      a.endSN +
                      "]" +
                      (a.lastPartSn
                        ? "[part-" + a.lastPartSn + "-" + a.lastPartIndex + "]"
                        : "") +
                      ",duration:" +
                      a.totalduration
                  ),
                    (this.mediaBuffer = this.mediaBufferTimeRanges);
                  var l = 0;
                  if (a.live || (null != (r = o.details) && r.live)) {
                    var u = this.mainDetails;
                    if (a.deltaUpdateFailed || !u) return;
                    var h,
                      d = u.fragments[0];
                    o.details
                      ? 0 ===
                          (l = this.alignPlaylists(
                            a,
                            o.details,
                            null == (h = this.levelLastLoaded)
                              ? void 0
                              : h.details
                          )) &&
                        d &&
                        lr(a, (l = d.start))
                      : a.hasProgramDateTime && u.hasProgramDateTime
                      ? (ii(a, u), (l = a.fragments[0].start))
                      : d && lr(a, (l = d.start));
                  }
                  (o.details = a),
                    (this.levelLastLoaded = o),
                    s === i &&
                      (this.startFragRequested ||
                        (!this.mainDetails && a.live) ||
                        this.setStartPosition(this.mainDetails || a, l),
                      this.tick(),
                      a.live &&
                        !this.fragCurrent &&
                        this.media &&
                        this.state === vi &&
                        (yr(null, a.fragments, this.media.currentTime, 0) ||
                          (this.warn(
                            "Subtitle playlist not aligned with playback"
                          ),
                          (o.details = void 0))));
                }
              } else
                this.warn(
                  "Subtitle tracks were reset while loading level " + s
                );
            }),
            (r._handleFragmentLoadComplete = function (t) {
              var e = this,
                r = t.frag,
                i = t.payload,
                n = r.decryptdata,
                a = this.hls;
              if (
                !this.fragContextChanged(r) &&
                i &&
                i.byteLength > 0 &&
                null != n &&
                n.key &&
                n.iv &&
                "AES-128" === n.method
              ) {
                var s = performance.now();
                this.decrypter
                  .decrypt(new Uint8Array(i), n.key.buffer, n.iv.buffer)
                  .catch(function (t) {
                    throw (
                      (a.trigger(S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: A.FRAG_DECRYPT_ERROR,
                        fatal: !1,
                        error: t,
                        reason: t.message,
                        frag: r,
                      }),
                      t)
                    );
                  })
                  .then(function (t) {
                    var e = performance.now();
                    a.trigger(S.FRAG_DECRYPTED, {
                      frag: r,
                      payload: t,
                      stats: { tstart: s, tdecrypt: e },
                    });
                  })
                  .catch(function (t) {
                    e.warn(t.name + ": " + t.message), (e.state = vi);
                  });
              }
            }),
            (r.doTick = function () {
              if (this.media) {
                if (this.state === vi) {
                  var t = this.currentTrackId,
                    e = this.levels,
                    r = null == e ? void 0 : e[t];
                  if (!r || !e.length || !r.details) return;
                  var i = this.config,
                    n = this.getLoadPosition(),
                    a = Jr.bufferedInfo(
                      this.tracksBuffered[this.currentTrackId] || [],
                      n,
                      i.maxBufferHole
                    ),
                    s = a.end,
                    o = a.len,
                    l = this.getFwdBufferInfo(this.media, we),
                    u = r.details;
                  if (
                    o >
                    this.getMaxBufferLength(null == l ? void 0 : l.len) +
                      u.levelTargetDuration
                  )
                    return;
                  var h = u.fragments,
                    d = h.length,
                    c = u.edge,
                    f = null,
                    g = this.fragPrevious;
                  if (s < c) {
                    var v = i.maxFragLookUpTolerance,
                      m = s > c - v ? 0 : v;
                    !(f = yr(g, h, Math.max(h[0].start, s), m)) &&
                      g &&
                      g.start < h[0].start &&
                      (f = h[0]);
                  } else f = h[d - 1];
                  if (!f) return;
                  if (
                    "initSegment" !== (f = this.mapToInitFragWhenRequired(f)).sn
                  ) {
                    var p = h[f.sn - u.startSN - 1];
                    p &&
                      p.cc === f.cc &&
                      this.fragmentTracker.getState(p) === Vr &&
                      (f = p);
                  }
                  this.fragmentTracker.getState(f) === Vr &&
                    this.loadFragment(f, r, s);
                }
              } else this.state = vi;
            }),
            (r.getMaxBufferLength = function (e) {
              var r = t.prototype.getMaxBufferLength.call(this);
              return e ? Math.max(r, e) : r;
            }),
            (r.loadFragment = function (e, r, i) {
              (this.fragCurrent = e),
                "initSegment" === e.sn
                  ? this._loadInitSegment(e, r)
                  : ((this.startFragRequested = !0),
                    t.prototype.loadFragment.call(this, e, r, i));
            }),
            s(e, [
              {
                key: "mediaBufferTimeRanges",
                get: function () {
                  return new zn(this.tracksBuffered[this.currentTrackId] || []);
                },
              },
            ]),
            e
          );
        })(bi),
        zn = function (t) {
          this.buffered = void 0;
          var e = function (e, r, i) {
            if ((r >>>= 0) > i - 1)
              throw new DOMException(
                "Failed to execute '" +
                  e +
                  "' on 'TimeRanges': The index provided (" +
                  r +
                  ") is greater than the maximum bound (" +
                  i +
                  ")"
              );
            return t[r][e];
          };
          this.buffered = {
            get length() {
              return t.length;
            },
            end: function (r) {
              return e("end", r, t.length);
            },
            start: function (r) {
              return e("start", r, t.length);
            },
          };
        },
        Qn = (function (t) {
          function e(e) {
            var r;
            return (
              ((r =
                t.call(this, e, "[subtitle-track-controller]") || this).media =
                null),
              (r.tracks = []),
              (r.groupIds = null),
              (r.tracksInGroup = []),
              (r.trackId = -1),
              (r.currentTrack = null),
              (r.selectDefaultTrack = !0),
              (r.queuedDefaultTrack = -1),
              (r.asyncPollTrackChange = function () {
                return r.pollTrackChange(0);
              }),
              (r.useTextTrackPolling = !1),
              (r.subtitlePollingInterval = -1),
              (r._subtitleDisplay = !0),
              (r.onTextTracksChanged = function () {
                if (
                  (r.useTextTrackPolling ||
                    self.clearInterval(r.subtitlePollingInterval),
                  r.media && r.hls.config.renderTextTracksNatively)
                ) {
                  for (
                    var t = null, e = Be(r.media.textTracks), i = 0;
                    i < e.length;
                    i++
                  )
                    if ("hidden" === e[i].mode) t = e[i];
                    else if ("showing" === e[i].mode) {
                      t = e[i];
                      break;
                    }
                  var n = r.findTrackForTextTrack(t);
                  r.subtitleTrack !== n && r.setSubtitleTrack(n);
                }
              }),
              r.registerListeners(),
              r
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.destroy = function () {
              this.unregisterListeners(),
                (this.tracks.length = 0),
                (this.tracksInGroup.length = 0),
                (this.currentTrack = null),
                (this.onTextTracksChanged = this.asyncPollTrackChange = null),
                t.prototype.destroy.call(this);
            }),
            (r.registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.on(S.ERROR, this.onError, this);
            }),
            (r.unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(
                  S.SUBTITLE_TRACK_LOADED,
                  this.onSubtitleTrackLoaded,
                  this
                ),
                t.off(S.ERROR, this.onError, this);
            }),
            (r.onMediaAttached = function (t, e) {
              (this.media = e.media),
                this.media &&
                  (this.queuedDefaultTrack > -1 &&
                    ((this.subtitleTrack = this.queuedDefaultTrack),
                    (this.queuedDefaultTrack = -1)),
                  (this.useTextTrackPolling = !(
                    this.media.textTracks && "onchange" in this.media.textTracks
                  )),
                  this.useTextTrackPolling
                    ? this.pollTrackChange(500)
                    : this.media.textTracks.addEventListener(
                        "change",
                        this.asyncPollTrackChange
                      ));
            }),
            (r.pollTrackChange = function (t) {
              self.clearInterval(this.subtitlePollingInterval),
                (this.subtitlePollingInterval = self.setInterval(
                  this.onTextTracksChanged,
                  t
                ));
            }),
            (r.onMediaDetaching = function () {
              this.media &&
                (self.clearInterval(this.subtitlePollingInterval),
                this.useTextTrackPolling ||
                  this.media.textTracks.removeEventListener(
                    "change",
                    this.asyncPollTrackChange
                  ),
                this.trackId > -1 && (this.queuedDefaultTrack = this.trackId),
                Be(this.media.textTracks).forEach(function (t) {
                  Ne(t);
                }),
                (this.subtitleTrack = -1),
                (this.media = null));
            }),
            (r.onManifestLoading = function () {
              (this.tracks = []),
                (this.groupIds = null),
                (this.tracksInGroup = []),
                (this.trackId = -1),
                (this.currentTrack = null),
                (this.selectDefaultTrack = !0);
            }),
            (r.onManifestParsed = function (t, e) {
              this.tracks = e.subtitleTracks;
            }),
            (r.onSubtitleTrackLoaded = function (t, e) {
              var r = e.id,
                i = e.groupId,
                n = e.details,
                a = this.tracksInGroup[r];
              if (a && a.groupId === i) {
                var s = a.details;
                (a.details = e.details),
                  this.log(
                    "Subtitle track " +
                      r +
                      ' "' +
                      a.name +
                      '" lang:' +
                      a.lang +
                      " group:" +
                      i +
                      " loaded [" +
                      n.startSN +
                      "-" +
                      n.endSN +
                      "]"
                  ),
                  r === this.trackId && this.playlistLoaded(r, e, s);
              } else
                this.warn(
                  "Subtitle track with id:" +
                    r +
                    " and group:" +
                    i +
                    " not found in active group " +
                    (null == a ? void 0 : a.groupId)
                );
            }),
            (r.onLevelLoading = function (t, e) {
              this.switchLevel(e.level);
            }),
            (r.onLevelSwitching = function (t, e) {
              this.switchLevel(e.level);
            }),
            (r.switchLevel = function (t) {
              var e = this.hls.levels[t];
              if (e) {
                var r = e.subtitleGroups || null,
                  i = this.groupIds,
                  n = this.currentTrack;
                if (
                  !r ||
                  (null == i ? void 0 : i.length) !==
                    (null == r ? void 0 : r.length) ||
                  (null != r &&
                    r.some(function (t) {
                      return -1 === (null == i ? void 0 : i.indexOf(t));
                    }))
                ) {
                  (this.groupIds = r),
                    (this.trackId = -1),
                    (this.currentTrack = null);
                  var a = this.tracks.filter(function (t) {
                    return !r || -1 !== r.indexOf(t.groupId);
                  });
                  if (a.length)
                    this.selectDefaultTrack &&
                      !a.some(function (t) {
                        return t.default;
                      }) &&
                      (this.selectDefaultTrack = !1),
                      a.forEach(function (t, e) {
                        t.id = e;
                      });
                  else if (!n && !this.tracksInGroup.length) return;
                  this.tracksInGroup = a;
                  var s = this.hls.config.subtitlePreference;
                  if (!n && s) {
                    this.selectDefaultTrack = !1;
                    var o = Nr(s, a);
                    if (o > -1) n = a[o];
                    else {
                      var l = Nr(s, this.tracks);
                      n = this.tracks[l];
                    }
                  }
                  var u = this.findTrackId(n);
                  -1 === u && n && (u = this.findTrackId(null));
                  var h = { subtitleTracks: a };
                  this.log(
                    "Updating subtitle tracks, " +
                      a.length +
                      ' track(s) found in "' +
                      (null == r ? void 0 : r.join(",")) +
                      '" group-id'
                  ),
                    this.hls.trigger(S.SUBTITLE_TRACKS_UPDATED, h),
                    -1 !== u && -1 === this.trackId && this.setSubtitleTrack(u);
                } else
                  this.shouldReloadPlaylist(n) &&
                    this.setSubtitleTrack(this.trackId);
              }
            }),
            (r.findTrackId = function (t) {
              for (
                var e = this.tracksInGroup, r = this.selectDefaultTrack, i = 0;
                i < e.length;
                i++
              ) {
                var n = e[i];
                if ((!r || n.default) && (r || t) && (!t || Ur(n, t))) return i;
              }
              if (t) {
                for (var a = 0; a < e.length; a++) {
                  var s = e[a];
                  if (
                    Yn(t.attrs, s.attrs, [
                      "LANGUAGE",
                      "ASSOC-LANGUAGE",
                      "CHARACTERISTICS",
                    ])
                  )
                    return a;
                }
                for (var o = 0; o < e.length; o++) {
                  var l = e[o];
                  if (Yn(t.attrs, l.attrs, ["LANGUAGE"])) return o;
                }
              }
              return -1;
            }),
            (r.findTrackForTextTrack = function (t) {
              if (t)
                for (var e = this.tracksInGroup, r = 0; r < e.length; r++)
                  if (Wn(e[r], t)) return r;
              return -1;
            }),
            (r.onError = function (t, e) {
              !e.fatal &&
                e.context &&
                (e.context.type !== Ie ||
                  e.context.id !== this.trackId ||
                  (this.groupIds &&
                    -1 === this.groupIds.indexOf(e.context.groupId)) ||
                  this.checkRetry(e));
            }),
            (r.setSubtitleOption = function (t) {
              if (((this.hls.config.subtitlePreference = t), t)) {
                var e = this.allSubtitleTracks;
                if (((this.selectDefaultTrack = !1), e.length)) {
                  var r = this.currentTrack;
                  if (r && Ur(t, r)) return r;
                  var i = Nr(t, this.tracksInGroup);
                  if (i > -1) {
                    var n = this.tracksInGroup[i];
                    return this.setSubtitleTrack(i), n;
                  }
                  if (r) return null;
                  var a = Nr(t, e);
                  if (a > -1) return e[a];
                }
              }
              return null;
            }),
            (r.loadPlaylist = function (e) {
              t.prototype.loadPlaylist.call(this);
              var r = this.currentTrack;
              if (this.shouldLoadPlaylist(r) && r) {
                var i = r.id,
                  n = r.groupId,
                  a = r.url;
                if (e)
                  try {
                    a = e.addDirectives(a);
                  } catch (t) {
                    this.warn(
                      "Could not construct new URL with HLS Delivery Directives: " +
                        t
                    );
                  }
                this.log("Loading subtitle playlist for id " + i),
                  this.hls.trigger(S.SUBTITLE_TRACK_LOADING, {
                    url: a,
                    id: i,
                    groupId: n,
                    deliveryDirectives: e || null,
                  });
              }
            }),
            (r.toggleTrackModes = function () {
              var t = this.media;
              if (t) {
                var e,
                  r = Be(t.textTracks),
                  i = this.currentTrack;
                if (
                  (i &&
                    ((e = r.filter(function (t) {
                      return Wn(i, t);
                    })[0]) ||
                      this.warn(
                        'Unable to find subtitle TextTrack with name "' +
                          i.name +
                          '" and language "' +
                          i.lang +
                          '"'
                      )),
                  [].slice.call(r).forEach(function (t) {
                    "disabled" !== t.mode && t !== e && (t.mode = "disabled");
                  }),
                  e)
                ) {
                  var n = this.subtitleDisplay ? "showing" : "hidden";
                  e.mode !== n && (e.mode = n);
                }
              }
            }),
            (r.setSubtitleTrack = function (t) {
              var e = this.tracksInGroup;
              if (this.media)
                if (t < -1 || t >= e.length || !y(t))
                  this.warn("Invalid subtitle track id: " + t);
                else {
                  this.clearTimer(), (this.selectDefaultTrack = !1);
                  var r = this.currentTrack,
                    i = e[t] || null;
                  if (
                    ((this.trackId = t),
                    (this.currentTrack = i),
                    this.toggleTrackModes(),
                    i)
                  ) {
                    var n = !!i.details && !i.details.live;
                    if (t !== this.trackId || i !== r || !n) {
                      this.log(
                        "Switching to subtitle-track " +
                          t +
                          (i
                            ? ' "' +
                              i.name +
                              '" lang:' +
                              i.lang +
                              " group:" +
                              i.groupId
                            : "")
                      );
                      var a = i.id,
                        s = i.groupId,
                        o = void 0 === s ? "" : s,
                        l = i.name,
                        u = i.type,
                        h = i.url;
                      this.hls.trigger(S.SUBTITLE_TRACK_SWITCH, {
                        id: a,
                        groupId: o,
                        name: l,
                        type: u,
                        url: h,
                      });
                      var d = this.switchParams(
                        i.url,
                        null == r ? void 0 : r.details,
                        i.details
                      );
                      this.loadPlaylist(d);
                    }
                  } else this.hls.trigger(S.SUBTITLE_TRACK_SWITCH, { id: t });
                }
              else this.queuedDefaultTrack = t;
            }),
            s(e, [
              {
                key: "subtitleDisplay",
                get: function () {
                  return this._subtitleDisplay;
                },
                set: function (t) {
                  (this._subtitleDisplay = t),
                    this.trackId > -1 && this.toggleTrackModes();
                },
              },
              {
                key: "allSubtitleTracks",
                get: function () {
                  return this.tracks;
                },
              },
              {
                key: "subtitleTracks",
                get: function () {
                  return this.tracksInGroup;
                },
              },
              {
                key: "subtitleTrack",
                get: function () {
                  return this.trackId;
                },
                set: function (t) {
                  (this.selectDefaultTrack = !1), this.setSubtitleTrack(t);
                },
              },
            ]),
            e
          );
        })(wr),
        Jn = (function () {
          function t(t) {
            (this.buffers = void 0),
              (this.queues = { video: [], audio: [], audiovideo: [] }),
              (this.buffers = t);
          }
          var e = t.prototype;
          return (
            (e.append = function (t, e, r) {
              var i = this.queues[e];
              i.push(t), 1 !== i.length || r || this.executeNext(e);
            }),
            (e.insertAbort = function (t, e) {
              this.queues[e].unshift(t), this.executeNext(e);
            }),
            (e.appendBlocker = function (t) {
              var e,
                r = new Promise(function (t) {
                  e = t;
                }),
                i = {
                  execute: e,
                  onStart: function () {},
                  onComplete: function () {},
                  onError: function () {},
                };
              return this.append(i, t), r;
            }),
            (e.executeNext = function (t) {
              var e = this.queues[t];
              if (e.length) {
                var r = e[0];
                try {
                  r.execute();
                } catch (e) {
                  w.warn(
                    '[buffer-operation-queue]: Exception executing "' +
                      t +
                      '" SourceBuffer operation: ' +
                      e
                  ),
                    r.onError(e);
                  var i = this.buffers[t];
                  (null != i && i.updating) || this.shiftAndExecuteNext(t);
                }
              }
            }),
            (e.shiftAndExecuteNext = function (t) {
              this.queues[t].shift(), this.executeNext(t);
            }),
            (e.current = function (t) {
              return this.queues[t][0];
            }),
            t
          );
        })(),
        $n = /(avc[1234]|hvc1|hev1|dvh[1e]|vp09|av01)(?:\.[^.,]+)+/,
        Zn = (function () {
          function t(t) {
            var e = this;
            (this.details = null),
              (this._objectUrl = null),
              (this.operationQueue = void 0),
              (this.listeners = void 0),
              (this.hls = void 0),
              (this.bufferCodecEventsExpected = 0),
              (this._bufferCodecEventsTotal = 0),
              (this.media = null),
              (this.mediaSource = null),
              (this.lastMpegAudioChunk = null),
              (this.appendSource = void 0),
              (this.appendErrors = { audio: 0, video: 0, audiovideo: 0 }),
              (this.tracks = {}),
              (this.pendingTracks = {}),
              (this.sourceBuffer = void 0),
              (this.log = void 0),
              (this.warn = void 0),
              (this.error = void 0),
              (this._onEndStreaming = function (t) {
                e.hls && e.hls.pauseBuffering();
              }),
              (this._onStartStreaming = function (t) {
                e.hls && e.hls.resumeBuffering();
              }),
              (this._onMediaSourceOpen = function () {
                var t = e.media,
                  r = e.mediaSource;
                e.log("Media source opened"),
                  t &&
                    (t.removeEventListener("emptied", e._onMediaEmptied),
                    e.updateMediaElementDuration(),
                    e.hls.trigger(S.MEDIA_ATTACHED, {
                      media: t,
                      mediaSource: r,
                    })),
                  r &&
                    r.removeEventListener("sourceopen", e._onMediaSourceOpen),
                  e.checkPendingTracks();
              }),
              (this._onMediaSourceClose = function () {
                e.log("Media source closed");
              }),
              (this._onMediaSourceEnded = function () {
                e.log("Media source ended");
              }),
              (this._onMediaEmptied = function () {
                var t = e.mediaSrc,
                  r = e._objectUrl;
                t !== r &&
                  w.error(
                    "Media element src was set while attaching MediaSource (" +
                      r +
                      " > " +
                      t +
                      ")"
                  );
              }),
              (this.hls = t);
            var r,
              i = "[buffer-controller]";
            (this.appendSource =
              ((r = ee(t.config.preferManagedMediaSource)),
              "undefined" != typeof self && r === self.ManagedMediaSource)),
              (this.log = w.log.bind(w, i)),
              (this.warn = w.warn.bind(w, i)),
              (this.error = w.error.bind(w, i)),
              this._initSourceBuffer(),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.hasSourceTypes = function () {
              return (
                this.getSourceBufferTypes().length > 0 ||
                Object.keys(this.pendingTracks).length > 0
              );
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                (this.details = null),
                (this.lastMpegAudioChunk = null),
                (this.hls = null);
            }),
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.BUFFER_RESET, this.onBufferReset, this),
                t.on(S.BUFFER_APPENDING, this.onBufferAppending, this),
                t.on(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.on(S.BUFFER_EOS, this.onBufferEos, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                t.on(S.FRAG_PARSED, this.onFragParsed, this),
                t.on(S.FRAG_CHANGED, this.onFragChanged, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.BUFFER_RESET, this.onBufferReset, this),
                t.off(S.BUFFER_APPENDING, this.onBufferAppending, this),
                t.off(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.off(S.BUFFER_EOS, this.onBufferEos, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                t.off(S.FRAG_PARSED, this.onFragParsed, this),
                t.off(S.FRAG_CHANGED, this.onFragChanged, this);
            }),
            (e._initSourceBuffer = function () {
              (this.sourceBuffer = {}),
                (this.operationQueue = new Jn(this.sourceBuffer)),
                (this.listeners = { audio: [], video: [], audiovideo: [] }),
                (this.appendErrors = { audio: 0, video: 0, audiovideo: 0 }),
                (this.lastMpegAudioChunk = null);
            }),
            (e.onManifestLoading = function () {
              (this.bufferCodecEventsExpected = this._bufferCodecEventsTotal =
                0),
                (this.details = null);
            }),
            (e.onManifestParsed = function (t, e) {
              var r = 2;
              ((e.audio && !e.video) || !e.altAudio) && (r = 1),
                (this.bufferCodecEventsExpected = this._bufferCodecEventsTotal =
                  r),
                this.log(
                  this.bufferCodecEventsExpected +
                    " bufferCodec event(s) expected"
                );
            }),
            (e.onMediaAttaching = function (t, e) {
              var r = (this.media = e.media),
                i = ee(this.appendSource);
              if (r && i) {
                var n,
                  a = (this.mediaSource = new i());
                this.log(
                  "created media source: " +
                    (null == (n = a.constructor) ? void 0 : n.name)
                ),
                  a.addEventListener("sourceopen", this._onMediaSourceOpen),
                  a.addEventListener("sourceended", this._onMediaSourceEnded),
                  a.addEventListener("sourceclose", this._onMediaSourceClose),
                  this.appendSource &&
                    (a.addEventListener(
                      "startstreaming",
                      this._onStartStreaming
                    ),
                    a.addEventListener("endstreaming", this._onEndStreaming));
                var s = (this._objectUrl = self.URL.createObjectURL(a));
                if (this.appendSource)
                  try {
                    r.removeAttribute("src");
                    var o = self.ManagedMediaSource;
                    (r.disableRemotePlayback =
                      r.disableRemotePlayback || (o && a instanceof o)),
                      ta(r),
                      (function (t, e) {
                        var r = self.document.createElement("source");
                        (r.type = "video/mp4"), (r.src = e), t.appendChild(r);
                      })(r, s),
                      r.load();
                  } catch (t) {
                    r.src = s;
                  }
                else r.src = s;
                r.addEventListener("emptied", this._onMediaEmptied);
              }
            }),
            (e.onMediaDetaching = function () {
              var t = this.media,
                e = this.mediaSource,
                r = this._objectUrl;
              if (e) {
                if (
                  (this.log("media source detaching"), "open" === e.readyState)
                )
                  try {
                    e.endOfStream();
                  } catch (t) {
                    this.warn(
                      "onMediaDetaching: " +
                        t.message +
                        " while calling endOfStream"
                    );
                  }
                this.onBufferReset(),
                  e.removeEventListener("sourceopen", this._onMediaSourceOpen),
                  e.removeEventListener(
                    "sourceended",
                    this._onMediaSourceEnded
                  ),
                  e.removeEventListener(
                    "sourceclose",
                    this._onMediaSourceClose
                  ),
                  this.appendSource &&
                    (e.removeEventListener(
                      "startstreaming",
                      this._onStartStreaming
                    ),
                    e.removeEventListener(
                      "endstreaming",
                      this._onEndStreaming
                    )),
                  t &&
                    (t.removeEventListener("emptied", this._onMediaEmptied),
                    r && self.URL.revokeObjectURL(r),
                    this.mediaSrc === r
                      ? (t.removeAttribute("src"),
                        this.appendSource && ta(t),
                        t.load())
                      : this.warn(
                          "media|source.src was changed by a third party - skip cleanup"
                        )),
                  (this.mediaSource = null),
                  (this.media = null),
                  (this._objectUrl = null),
                  (this.bufferCodecEventsExpected =
                    this._bufferCodecEventsTotal),
                  (this.pendingTracks = {}),
                  (this.tracks = {});
              }
              this.hls.trigger(S.MEDIA_DETACHED, void 0);
            }),
            (e.onBufferReset = function () {
              var t = this;
              this.getSourceBufferTypes().forEach(function (e) {
                t.resetBuffer(e);
              }),
                this._initSourceBuffer();
            }),
            (e.resetBuffer = function (t) {
              var e = this.sourceBuffer[t];
              try {
                var r;
                e &&
                  (this.removeBufferListeners(t),
                  (this.sourceBuffer[t] = void 0),
                  null != (r = this.mediaSource) &&
                    r.sourceBuffers.length &&
                    this.mediaSource.removeSourceBuffer(e));
              } catch (e) {
                this.warn("onBufferReset " + t, e);
              }
            }),
            (e.onBufferCodecs = function (t, e) {
              var r = this,
                i = this.getSourceBufferTypes().length,
                n = Object.keys(e);
              if (
                (n.forEach(function (t) {
                  if (i) {
                    var n = r.tracks[t];
                    if (n && "function" == typeof n.buffer.changeType) {
                      var a,
                        s = e[t],
                        o = s.id,
                        l = s.codec,
                        u = s.levelCodec,
                        h = s.container,
                        d = s.metadata,
                        c = de(n.codec, n.levelCodec),
                        f = null == c ? void 0 : c.replace($n, "$1"),
                        g = de(l, u),
                        v = null == (a = g) ? void 0 : a.replace($n, "$1");
                      if (g && f !== v) {
                        "audio" === t.slice(0, 5) &&
                          (g = he(g, r.appendSource));
                        var m = h + ";codecs=" + g;
                        r.appendChangeType(t, m),
                          r.log("switching codec " + c + " to " + g),
                          (r.tracks[t] = {
                            buffer: n.buffer,
                            codec: l,
                            container: h,
                            levelCodec: u,
                            metadata: d,
                            id: o,
                          });
                      }
                    }
                  } else r.pendingTracks[t] = e[t];
                }),
                !i)
              ) {
                var a = Math.max(this.bufferCodecEventsExpected - 1, 0);
                this.bufferCodecEventsExpected !== a &&
                  (this.log(
                    a + " bufferCodec event(s) expected " + n.join(",")
                  ),
                  (this.bufferCodecEventsExpected = a)),
                  this.mediaSource &&
                    "open" === this.mediaSource.readyState &&
                    this.checkPendingTracks();
              }
            }),
            (e.appendChangeType = function (t, e) {
              var r = this,
                i = this.operationQueue,
                n = {
                  execute: function () {
                    var n = r.sourceBuffer[t];
                    n &&
                      (r.log("changing " + t + " sourceBuffer type to " + e),
                      n.changeType(e)),
                      i.shiftAndExecuteNext(t);
                  },
                  onStart: function () {},
                  onComplete: function () {},
                  onError: function (e) {
                    r.warn("Failed to change " + t + " SourceBuffer type", e);
                  },
                };
              i.append(n, t, !!this.pendingTracks[t]);
            }),
            (e.onBufferAppending = function (t, e) {
              var r = this,
                i = this.hls,
                n = this.operationQueue,
                a = this.tracks,
                s = e.data,
                o = e.type,
                l = e.frag,
                u = e.part,
                h = e.chunkMeta,
                d = h.buffering[o],
                c = self.performance.now();
              d.start = c;
              var f = l.stats.buffering,
                g = u ? u.stats.buffering : null;
              0 === f.start && (f.start = c),
                g && 0 === g.start && (g.start = c);
              var v = a.audio,
                m = !1;
              "audio" === o &&
                "audio/mpeg" === (null == v ? void 0 : v.container) &&
                ((m =
                  !this.lastMpegAudioChunk ||
                  1 === h.id ||
                  this.lastMpegAudioChunk.sn !== h.sn),
                (this.lastMpegAudioChunk = h));
              var p = l.start,
                y = {
                  execute: function () {
                    if (((d.executeStart = self.performance.now()), m)) {
                      var t = r.sourceBuffer[o];
                      if (t) {
                        var e = p - t.timestampOffset;
                        Math.abs(e) >= 0.1 &&
                          (r.log(
                            "Updating audio SourceBuffer timestampOffset to " +
                              p +
                              " (delta: " +
                              e +
                              ") sn: " +
                              l.sn +
                              ")"
                          ),
                          (t.timestampOffset = p));
                      }
                    }
                    r.appendExecutor(s, o);
                  },
                  onStart: function () {},
                  onComplete: function () {
                    var t = self.performance.now();
                    (d.executeEnd = d.end = t),
                      0 === f.first && (f.first = t),
                      g && 0 === g.first && (g.first = t);
                    var e = r.sourceBuffer,
                      i = {};
                    for (var n in e) i[n] = Jr.getBuffered(e[n]);
                    (r.appendErrors[o] = 0),
                      "audio" === o || "video" === o
                        ? (r.appendErrors.audiovideo = 0)
                        : ((r.appendErrors.audio = 0),
                          (r.appendErrors.video = 0)),
                      r.hls.trigger(S.BUFFER_APPENDED, {
                        type: o,
                        frag: l,
                        part: u,
                        chunkMeta: h,
                        parent: l.type,
                        timeRanges: i,
                      });
                  },
                  onError: function (t) {
                    var e = {
                      type: L.MEDIA_ERROR,
                      parent: l.type,
                      details: A.BUFFER_APPEND_ERROR,
                      sourceBufferName: o,
                      frag: l,
                      part: u,
                      chunkMeta: h,
                      error: t,
                      err: t,
                      fatal: !1,
                    };
                    if (t.code === DOMException.QUOTA_EXCEEDED_ERR)
                      e.details = A.BUFFER_FULL_ERROR;
                    else {
                      var n = ++r.appendErrors[o];
                      (e.details = A.BUFFER_APPEND_ERROR),
                        r.warn(
                          "Failed " +
                            n +
                            "/" +
                            i.config.appendErrorMaxRetry +
                            ' times to append segment in "' +
                            o +
                            '" sourceBuffer'
                        ),
                        n >= i.config.appendErrorMaxRetry && (e.fatal = !0);
                    }
                    i.trigger(S.ERROR, e);
                  },
                };
              n.append(y, o, !!this.pendingTracks[o]);
            }),
            (e.onBufferFlushing = function (t, e) {
              var r = this,
                i = this.operationQueue,
                n = function (t) {
                  return {
                    execute: r.removeExecutor.bind(
                      r,
                      t,
                      e.startOffset,
                      e.endOffset
                    ),
                    onStart: function () {},
                    onComplete: function () {
                      r.hls.trigger(S.BUFFER_FLUSHED, { type: t });
                    },
                    onError: function (e) {
                      r.warn("Failed to remove from " + t + " SourceBuffer", e);
                    },
                  };
                };
              e.type
                ? i.append(n(e.type), e.type)
                : this.getSourceBufferTypes().forEach(function (t) {
                    i.append(n(t), t);
                  });
            }),
            (e.onFragParsed = function (t, e) {
              var r = this,
                i = e.frag,
                n = e.part,
                a = [],
                s = n ? n.elementaryStreams : i.elementaryStreams;
              s[U]
                ? a.push("audiovideo")
                : (s[O] && a.push("audio"), s[N] && a.push("video")),
                0 === a.length &&
                  this.warn(
                    "Fragments must have at least one ElementaryStreamType set. type: " +
                      i.type +
                      " level: " +
                      i.level +
                      " sn: " +
                      i.sn
                  ),
                this.blockBuffers(function () {
                  var t = self.performance.now();
                  (i.stats.buffering.end = t), n && (n.stats.buffering.end = t);
                  var e = n ? n.stats : i.stats;
                  r.hls.trigger(S.FRAG_BUFFERED, {
                    frag: i,
                    part: n,
                    stats: e,
                    id: i.type,
                  });
                }, a);
            }),
            (e.onFragChanged = function (t, e) {
              this.trimBuffers();
            }),
            (e.onBufferEos = function (t, e) {
              var r = this;
              this.getSourceBufferTypes().reduce(function (t, i) {
                var n = r.sourceBuffer[i];
                return (
                  !n ||
                    (e.type && e.type !== i) ||
                    ((n.ending = !0),
                    n.ended ||
                      ((n.ended = !0), r.log(i + " sourceBuffer now EOS"))),
                  t && !(n && !n.ended)
                );
              }, !0) &&
                (this.log("Queueing mediaSource.endOfStream()"),
                this.blockBuffers(function () {
                  r.getSourceBufferTypes().forEach(function (t) {
                    var e = r.sourceBuffer[t];
                    e && (e.ending = !1);
                  });
                  var t = r.mediaSource;
                  t && "open" === t.readyState
                    ? (r.log("Calling mediaSource.endOfStream()"),
                      t.endOfStream())
                    : t &&
                      r.log(
                        "Could not call mediaSource.endOfStream(). mediaSource.readyState: " +
                          t.readyState
                      );
                }));
            }),
            (e.onLevelUpdated = function (t, e) {
              var r = e.details;
              r.fragments.length &&
                ((this.details = r),
                this.getSourceBufferTypes().length
                  ? this.blockBuffers(
                      this.updateMediaElementDuration.bind(this)
                    )
                  : this.updateMediaElementDuration());
            }),
            (e.trimBuffers = function () {
              var t = this.hls,
                e = this.details,
                r = this.media;
              if (r && null !== e && this.getSourceBufferTypes().length) {
                var i = t.config,
                  n = r.currentTime,
                  a = e.levelTargetDuration,
                  s =
                    e.live && null !== i.liveBackBufferLength
                      ? i.liveBackBufferLength
                      : i.backBufferLength;
                if (y(s) && s > 0) {
                  var o = Math.max(s, a),
                    l = Math.floor(n / a) * a - o;
                  this.flushBackBuffer(n, a, l);
                }
                if (
                  y(i.frontBufferFlushThreshold) &&
                  i.frontBufferFlushThreshold > 0
                ) {
                  var u = Math.max(
                      i.maxBufferLength,
                      i.frontBufferFlushThreshold
                    ),
                    h = Math.max(u, a),
                    d = Math.floor(n / a) * a + h;
                  this.flushFrontBuffer(n, a, d);
                }
              }
            }),
            (e.flushBackBuffer = function (t, e, r) {
              var i = this,
                n = this.details,
                a = this.sourceBuffer;
              this.getSourceBufferTypes().forEach(function (s) {
                var o = a[s];
                if (o) {
                  var l = Jr.getBuffered(o);
                  if (l.length > 0 && r > l.start(0)) {
                    if (
                      (i.hls.trigger(S.BACK_BUFFER_REACHED, { bufferEnd: r }),
                      null != n && n.live)
                    )
                      i.hls.trigger(S.LIVE_BACK_BUFFER_REACHED, {
                        bufferEnd: r,
                      });
                    else if (o.ended && l.end(l.length - 1) - t < 2 * e)
                      return void i.log(
                        "Cannot flush " +
                          s +
                          " back buffer while SourceBuffer is in ended state"
                      );
                    i.hls.trigger(S.BUFFER_FLUSHING, {
                      startOffset: 0,
                      endOffset: r,
                      type: s,
                    });
                  }
                }
              });
            }),
            (e.flushFrontBuffer = function (t, e, r) {
              var i = this,
                n = this.sourceBuffer;
              this.getSourceBufferTypes().forEach(function (a) {
                var s = n[a];
                if (s) {
                  var o = Jr.getBuffered(s),
                    l = o.length;
                  if (l < 2) return;
                  var u = o.start(l - 1),
                    h = o.end(l - 1);
                  if (r > u || (t >= u && t <= h)) return;
                  if (s.ended && t - h < 2 * e)
                    return void i.log(
                      "Cannot flush " +
                        a +
                        " front buffer while SourceBuffer is in ended state"
                    );
                  i.hls.trigger(S.BUFFER_FLUSHING, {
                    startOffset: u,
                    endOffset: 1 / 0,
                    type: a,
                  });
                }
              });
            }),
            (e.updateMediaElementDuration = function () {
              if (
                this.details &&
                this.media &&
                this.mediaSource &&
                "open" === this.mediaSource.readyState
              ) {
                var t = this.details,
                  e = this.hls,
                  r = this.media,
                  i = this.mediaSource,
                  n = t.fragments[0].start + t.totalduration,
                  a = r.duration,
                  s = y(i.duration) ? i.duration : 0;
                t.live && e.config.liveDurationInfinity
                  ? ((i.duration = 1 / 0), this.updateSeekableRange(t))
                  : ((n > s && n > a) || !y(a)) &&
                    (this.log(
                      "Updating Media Source duration to " + n.toFixed(3)
                    ),
                    (i.duration = n));
              }
            }),
            (e.updateSeekableRange = function (t) {
              var e = this.mediaSource,
                r = t.fragments;
              if (r.length && t.live && null != e && e.setLiveSeekableRange) {
                var i = Math.max(0, r[0].start),
                  n = Math.max(i, i + t.totalduration);
                this.log(
                  "Media Source duration is set to " +
                    e.duration +
                    ". Setting seekable range to " +
                    i +
                    "-" +
                    n +
                    "."
                ),
                  e.setLiveSeekableRange(i, n);
              }
            }),
            (e.checkPendingTracks = function () {
              var t = this.bufferCodecEventsExpected,
                e = this.operationQueue,
                r = this.pendingTracks,
                i = Object.keys(r).length;
              if (i && (!t || 2 === i || "audiovideo" in r)) {
                this.createSourceBuffers(r), (this.pendingTracks = {});
                var n = this.getSourceBufferTypes();
                if (n.length)
                  this.hls.trigger(S.BUFFER_CREATED, { tracks: this.tracks }),
                    n.forEach(function (t) {
                      e.executeNext(t);
                    });
                else {
                  var a = new Error(
                    "could not create source buffer for media codec(s)"
                  );
                  this.hls.trigger(S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: A.BUFFER_INCOMPATIBLE_CODECS_ERROR,
                    fatal: !0,
                    error: a,
                    reason: a.message,
                  });
                }
              }
            }),
            (e.createSourceBuffers = function (t) {
              var e = this,
                r = this.sourceBuffer,
                i = this.mediaSource;
              if (!i)
                throw Error(
                  "createSourceBuffers called when mediaSource was null"
                );
              var n = function (n) {
                if (!r[n]) {
                  var a,
                    s = t[n];
                  if (!s)
                    throw Error(
                      "source buffer exists for track " +
                        n +
                        ", however track does not"
                    );
                  var o =
                    -1 ===
                    (null == (a = s.levelCodec) ? void 0 : a.indexOf(","))
                      ? s.levelCodec
                      : s.codec;
                  o && "audio" === n.slice(0, 5) && (o = he(o, e.appendSource));
                  var l = s.container + ";codecs=" + o;
                  e.log("creating sourceBuffer(" + l + ")");
                  try {
                    var u = (r[n] = i.addSourceBuffer(l)),
                      h = n;
                    e.addBufferListener(h, "updatestart", e._onSBUpdateStart),
                      e.addBufferListener(h, "updateend", e._onSBUpdateEnd),
                      e.addBufferListener(h, "error", e._onSBUpdateError),
                      e.appendSource &&
                        e.addBufferListener(
                          h,
                          "bufferedchange",
                          function (t, r) {
                            var i = r.removedRanges;
                            null != i &&
                              i.length &&
                              e.hls.trigger(S.BUFFER_FLUSHED, { type: n });
                          }
                        ),
                      (e.tracks[n] = {
                        buffer: u,
                        codec: o,
                        container: s.container,
                        levelCodec: s.levelCodec,
                        metadata: s.metadata,
                        id: s.id,
                      });
                  } catch (t) {
                    e.error(
                      "error while trying to add sourceBuffer: " + t.message
                    ),
                      e.hls.trigger(S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: A.BUFFER_ADD_CODEC_ERROR,
                        fatal: !1,
                        error: t,
                        sourceBufferName: n,
                        mimeType: l,
                      });
                  }
                }
              };
              for (var a in t) n(a);
            }),
            (e._onSBUpdateStart = function (t) {
              this.operationQueue.current(t).onStart();
            }),
            (e._onSBUpdateEnd = function (t) {
              var e;
              if (
                "closed" !==
                (null == (e = this.mediaSource) ? void 0 : e.readyState)
              ) {
                var r = this.operationQueue;
                r.current(t).onComplete(), r.shiftAndExecuteNext(t);
              } else this.resetBuffer(t);
            }),
            (e._onSBUpdateError = function (t, e) {
              var r,
                i = new Error(
                  t +
                    " SourceBuffer error. MediaSource readyState: " +
                    (null == (r = this.mediaSource) ? void 0 : r.readyState)
                );
              this.error("" + i, e),
                this.hls.trigger(S.ERROR, {
                  type: L.MEDIA_ERROR,
                  details: A.BUFFER_APPENDING_ERROR,
                  sourceBufferName: t,
                  error: i,
                  fatal: !1,
                });
              var n = this.operationQueue.current(t);
              n && n.onError(i);
            }),
            (e.removeExecutor = function (t, e, r) {
              var i = this.media,
                n = this.mediaSource,
                a = this.operationQueue,
                s = this.sourceBuffer[t];
              if (!i || !n || !s)
                return (
                  this.warn(
                    "Attempting to remove from the " +
                      t +
                      " SourceBuffer, but it does not exist"
                  ),
                  void a.shiftAndExecuteNext(t)
                );
              var o = y(i.duration) ? i.duration : 1 / 0,
                l = y(n.duration) ? n.duration : 1 / 0,
                u = Math.max(0, e),
                h = Math.min(r, o, l);
              h > u && (!s.ending || s.ended)
                ? ((s.ended = !1),
                  this.log(
                    "Removing [" +
                      u +
                      "," +
                      h +
                      "] from the " +
                      t +
                      " SourceBuffer"
                  ),
                  s.remove(u, h))
                : a.shiftAndExecuteNext(t);
            }),
            (e.appendExecutor = function (t, e) {
              var r = this.sourceBuffer[e];
              if (r) (r.ended = !1), r.appendBuffer(t);
              else if (!this.pendingTracks[e])
                throw new Error(
                  "Attempting to append to the " +
                    e +
                    " SourceBuffer, but it does not exist"
                );
            }),
            (e.blockBuffers = function (t, e) {
              var r = this;
              if (
                (void 0 === e && (e = this.getSourceBufferTypes()), !e.length)
              )
                return (
                  this.log(
                    "Blocking operation requested, but no SourceBuffers exist"
                  ),
                  void Promise.resolve().then(t)
                );
              var i = this.operationQueue,
                n = e.map(function (t) {
                  return i.appendBlocker(t);
                });
              Promise.all(n).then(function () {
                t(),
                  e.forEach(function (t) {
                    var e = r.sourceBuffer[t];
                    (null != e && e.updating) || i.shiftAndExecuteNext(t);
                  });
              });
            }),
            (e.getSourceBufferTypes = function () {
              return Object.keys(this.sourceBuffer);
            }),
            (e.addBufferListener = function (t, e, r) {
              var i = this.sourceBuffer[t];
              if (i) {
                var n = r.bind(this, t);
                this.listeners[t].push({ event: e, listener: n }),
                  i.addEventListener(e, n);
              }
            }),
            (e.removeBufferListeners = function (t) {
              var e = this.sourceBuffer[t];
              e &&
                this.listeners[t].forEach(function (t) {
                  e.removeEventListener(t.event, t.listener);
                });
            }),
            s(t, [
              {
                key: "mediaSrc",
                get: function () {
                  var t,
                    e =
                      (null == (t = this.media) ? void 0 : t.firstChild) ||
                      this.media;
                  return null == e ? void 0 : e.src;
                },
              },
            ]),
            t
          );
        })();
      function ta(t) {
        var e = t.querySelectorAll("source");
        [].slice.call(e).forEach(function (e) {
          t.removeChild(e);
        });
      }
      var ea = {
          42: 225,
          92: 233,
          94: 237,
          95: 243,
          96: 250,
          123: 231,
          124: 247,
          125: 209,
          126: 241,
          127: 9608,
          128: 174,
          129: 176,
          130: 189,
          131: 191,
          132: 8482,
          133: 162,
          134: 163,
          135: 9834,
          136: 224,
          137: 32,
          138: 232,
          139: 226,
          140: 234,
          141: 238,
          142: 244,
          143: 251,
          144: 193,
          145: 201,
          146: 211,
          147: 218,
          148: 220,
          149: 252,
          150: 8216,
          151: 161,
          152: 42,
          153: 8217,
          154: 9473,
          155: 169,
          156: 8480,
          157: 8226,
          158: 8220,
          159: 8221,
          160: 192,
          161: 194,
          162: 199,
          163: 200,
          164: 202,
          165: 203,
          166: 235,
          167: 206,
          168: 207,
          169: 239,
          170: 212,
          171: 217,
          172: 249,
          173: 219,
          174: 171,
          175: 187,
          176: 195,
          177: 227,
          178: 205,
          179: 204,
          180: 236,
          181: 210,
          182: 242,
          183: 213,
          184: 245,
          185: 123,
          186: 125,
          187: 92,
          188: 94,
          189: 95,
          190: 124,
          191: 8764,
          192: 196,
          193: 228,
          194: 214,
          195: 246,
          196: 223,
          197: 165,
          198: 164,
          199: 9475,
          200: 197,
          201: 229,
          202: 216,
          203: 248,
          204: 9487,
          205: 9491,
          206: 9495,
          207: 9499,
        },
        ra = function (t) {
          return String.fromCharCode(ea[t] || t);
        },
        ia = 15,
        na = 100,
        aa = { 17: 1, 18: 3, 21: 5, 22: 7, 23: 9, 16: 11, 19: 12, 20: 14 },
        sa = { 17: 2, 18: 4, 21: 6, 22: 8, 23: 10, 19: 13, 20: 15 },
        oa = { 25: 1, 26: 3, 29: 5, 30: 7, 31: 9, 24: 11, 27: 12, 28: 14 },
        la = { 25: 2, 26: 4, 29: 6, 30: 8, 31: 10, 27: 13, 28: 15 },
        ua = [
          "white",
          "green",
          "blue",
          "cyan",
          "red",
          "yellow",
          "magenta",
          "black",
          "transparent",
        ],
        ha = (function () {
          function t() {
            (this.time = null), (this.verboseLevel = 0);
          }
          return (
            (t.prototype.log = function (t, e) {
              if (this.verboseLevel >= t) {
                var r = "function" == typeof e ? e() : e;
                w.log(this.time + " [" + t + "] " + r);
              }
            }),
            t
          );
        })(),
        da = function (t) {
          for (var e = [], r = 0; r < t.length; r++) e.push(t[r].toString(16));
          return e;
        },
        ca = (function () {
          function t() {
            (this.foreground = "white"),
              (this.underline = !1),
              (this.italics = !1),
              (this.background = "black"),
              (this.flash = !1);
          }
          var e = t.prototype;
          return (
            (e.reset = function () {
              (this.foreground = "white"),
                (this.underline = !1),
                (this.italics = !1),
                (this.background = "black"),
                (this.flash = !1);
            }),
            (e.setStyles = function (t) {
              for (
                var e = [
                    "foreground",
                    "underline",
                    "italics",
                    "background",
                    "flash",
                  ],
                  r = 0;
                r < e.length;
                r++
              ) {
                var i = e[r];
                t.hasOwnProperty(i) && (this[i] = t[i]);
              }
            }),
            (e.isDefault = function () {
              return (
                "white" === this.foreground &&
                !this.underline &&
                !this.italics &&
                "black" === this.background &&
                !this.flash
              );
            }),
            (e.equals = function (t) {
              return (
                this.foreground === t.foreground &&
                this.underline === t.underline &&
                this.italics === t.italics &&
                this.background === t.background &&
                this.flash === t.flash
              );
            }),
            (e.copy = function (t) {
              (this.foreground = t.foreground),
                (this.underline = t.underline),
                (this.italics = t.italics),
                (this.background = t.background),
                (this.flash = t.flash);
            }),
            (e.toString = function () {
              return (
                "color=" +
                this.foreground +
                ", underline=" +
                this.underline +
                ", italics=" +
                this.italics +
                ", background=" +
                this.background +
                ", flash=" +
                this.flash
              );
            }),
            t
          );
        })(),
        fa = (function () {
          function t() {
            (this.uchar = " "), (this.penState = new ca());
          }
          var e = t.prototype;
          return (
            (e.reset = function () {
              (this.uchar = " "), this.penState.reset();
            }),
            (e.setChar = function (t, e) {
              (this.uchar = t), this.penState.copy(e);
            }),
            (e.setPenState = function (t) {
              this.penState.copy(t);
            }),
            (e.equals = function (t) {
              return this.uchar === t.uchar && this.penState.equals(t.penState);
            }),
            (e.copy = function (t) {
              (this.uchar = t.uchar), this.penState.copy(t.penState);
            }),
            (e.isEmpty = function () {
              return " " === this.uchar && this.penState.isDefault();
            }),
            t
          );
        })(),
        ga = (function () {
          function t(t) {
            (this.chars = []),
              (this.pos = 0),
              (this.currPenState = new ca()),
              (this.cueStartTime = null),
              (this.logger = void 0);
            for (var e = 0; e < na; e++) this.chars.push(new fa());
            this.logger = t;
          }
          var e = t.prototype;
          return (
            (e.equals = function (t) {
              for (var e = 0; e < na; e++)
                if (!this.chars[e].equals(t.chars[e])) return !1;
              return !0;
            }),
            (e.copy = function (t) {
              for (var e = 0; e < na; e++) this.chars[e].copy(t.chars[e]);
            }),
            (e.isEmpty = function () {
              for (var t = !0, e = 0; e < na; e++)
                if (!this.chars[e].isEmpty()) {
                  t = !1;
                  break;
                }
              return t;
            }),
            (e.setCursor = function (t) {
              this.pos !== t && (this.pos = t),
                this.pos < 0
                  ? (this.logger.log(3, "Negative cursor position " + this.pos),
                    (this.pos = 0))
                  : this.pos > na &&
                    (this.logger.log(
                      3,
                      "Too large cursor position " + this.pos
                    ),
                    (this.pos = na));
            }),
            (e.moveCursor = function (t) {
              var e = this.pos + t;
              if (t > 1)
                for (var r = this.pos + 1; r < e + 1; r++)
                  this.chars[r].setPenState(this.currPenState);
              this.setCursor(e);
            }),
            (e.backSpace = function () {
              this.moveCursor(-1),
                this.chars[this.pos].setChar(" ", this.currPenState);
            }),
            (e.insertChar = function (t) {
              var e = this;
              t >= 144 && this.backSpace();
              var r = ra(t);
              this.pos >= na
                ? this.logger.log(0, function () {
                    return (
                      "Cannot insert " +
                      t.toString(16) +
                      " (" +
                      r +
                      ") at position " +
                      e.pos +
                      ". Skipping it!"
                    );
                  })
                : (this.chars[this.pos].setChar(r, this.currPenState),
                  this.moveCursor(1));
            }),
            (e.clearFromPos = function (t) {
              var e;
              for (e = t; e < na; e++) this.chars[e].reset();
            }),
            (e.clear = function () {
              this.clearFromPos(0), (this.pos = 0), this.currPenState.reset();
            }),
            (e.clearToEndOfRow = function () {
              this.clearFromPos(this.pos);
            }),
            (e.getTextString = function () {
              for (var t = [], e = !0, r = 0; r < na; r++) {
                var i = this.chars[r].uchar;
                " " !== i && (e = !1), t.push(i);
              }
              return e ? "" : t.join("");
            }),
            (e.setPenStyles = function (t) {
              this.currPenState.setStyles(t),
                this.chars[this.pos].setPenState(this.currPenState);
            }),
            t
          );
        })(),
        va = (function () {
          function t(t) {
            (this.rows = []),
              (this.currRow = 14),
              (this.nrRollUpRows = null),
              (this.lastOutputScreen = null),
              (this.logger = void 0);
            for (var e = 0; e < ia; e++) this.rows.push(new ga(t));
            this.logger = t;
          }
          var e = t.prototype;
          return (
            (e.reset = function () {
              for (var t = 0; t < ia; t++) this.rows[t].clear();
              this.currRow = 14;
            }),
            (e.equals = function (t) {
              for (var e = !0, r = 0; r < ia; r++)
                if (!this.rows[r].equals(t.rows[r])) {
                  e = !1;
                  break;
                }
              return e;
            }),
            (e.copy = function (t) {
              for (var e = 0; e < ia; e++) this.rows[e].copy(t.rows[e]);
            }),
            (e.isEmpty = function () {
              for (var t = !0, e = 0; e < ia; e++)
                if (!this.rows[e].isEmpty()) {
                  t = !1;
                  break;
                }
              return t;
            }),
            (e.backSpace = function () {
              this.rows[this.currRow].backSpace();
            }),
            (e.clearToEndOfRow = function () {
              this.rows[this.currRow].clearToEndOfRow();
            }),
            (e.insertChar = function (t) {
              this.rows[this.currRow].insertChar(t);
            }),
            (e.setPen = function (t) {
              this.rows[this.currRow].setPenStyles(t);
            }),
            (e.moveCursor = function (t) {
              this.rows[this.currRow].moveCursor(t);
            }),
            (e.setCursor = function (t) {
              this.logger.log(2, "setCursor: " + t),
                this.rows[this.currRow].setCursor(t);
            }),
            (e.setPAC = function (t) {
              this.logger.log(2, function () {
                return "pacData = " + JSON.stringify(t);
              });
              var e = t.row - 1;
              if (
                (this.nrRollUpRows &&
                  e < this.nrRollUpRows - 1 &&
                  (e = this.nrRollUpRows - 1),
                this.nrRollUpRows && this.currRow !== e)
              ) {
                for (var r = 0; r < ia; r++) this.rows[r].clear();
                var i = this.currRow + 1 - this.nrRollUpRows,
                  n = this.lastOutputScreen;
                if (n) {
                  var a = n.rows[i].cueStartTime,
                    s = this.logger.time;
                  if (null !== a && null !== s && a < s)
                    for (var o = 0; o < this.nrRollUpRows; o++)
                      this.rows[e - this.nrRollUpRows + o + 1].copy(
                        n.rows[i + o]
                      );
                }
              }
              this.currRow = e;
              var l = this.rows[this.currRow];
              if (null !== t.indent) {
                var u = t.indent,
                  h = Math.max(u - 1, 0);
                l.setCursor(t.indent),
                  (t.color = l.chars[h].penState.foreground);
              }
              var d = {
                foreground: t.color,
                underline: t.underline,
                italics: t.italics,
                background: "black",
                flash: !1,
              };
              this.setPen(d);
            }),
            (e.setBkgData = function (t) {
              this.logger.log(2, function () {
                return "bkgData = " + JSON.stringify(t);
              }),
                this.backSpace(),
                this.setPen(t),
                this.insertChar(32);
            }),
            (e.setRollUpRows = function (t) {
              this.nrRollUpRows = t;
            }),
            (e.rollUp = function () {
              var t = this;
              if (null !== this.nrRollUpRows) {
                this.logger.log(1, function () {
                  return t.getDisplayText();
                });
                var e = this.currRow + 1 - this.nrRollUpRows,
                  r = this.rows.splice(e, 1)[0];
                r.clear(),
                  this.rows.splice(this.currRow, 0, r),
                  this.logger.log(2, "Rolling up");
              } else this.logger.log(3, "roll_up but nrRollUpRows not set yet");
            }),
            (e.getDisplayText = function (t) {
              t = t || !1;
              for (var e = [], r = "", i = -1, n = 0; n < ia; n++) {
                var a = this.rows[n].getTextString();
                a &&
                  ((i = n + 1),
                  t ? e.push("Row " + i + ": '" + a + "'") : e.push(a.trim()));
              }
              return (
                e.length > 0 &&
                  (r = t ? "[" + e.join(" | ") + "]" : e.join("\n")),
                r
              );
            }),
            (e.getTextAndFormat = function () {
              return this.rows;
            }),
            t
          );
        })(),
        ma = (function () {
          function t(t, e, r) {
            (this.chNr = void 0),
              (this.outputFilter = void 0),
              (this.mode = void 0),
              (this.verbose = void 0),
              (this.displayedMemory = void 0),
              (this.nonDisplayedMemory = void 0),
              (this.lastOutputScreen = void 0),
              (this.currRollUpRow = void 0),
              (this.writeScreen = void 0),
              (this.cueStartTime = void 0),
              (this.logger = void 0),
              (this.chNr = t),
              (this.outputFilter = e),
              (this.mode = null),
              (this.verbose = 0),
              (this.displayedMemory = new va(r)),
              (this.nonDisplayedMemory = new va(r)),
              (this.lastOutputScreen = new va(r)),
              (this.currRollUpRow = this.displayedMemory.rows[14]),
              (this.writeScreen = this.displayedMemory),
              (this.mode = null),
              (this.cueStartTime = null),
              (this.logger = r);
          }
          var e = t.prototype;
          return (
            (e.reset = function () {
              (this.mode = null),
                this.displayedMemory.reset(),
                this.nonDisplayedMemory.reset(),
                this.lastOutputScreen.reset(),
                this.outputFilter.reset(),
                (this.currRollUpRow = this.displayedMemory.rows[14]),
                (this.writeScreen = this.displayedMemory),
                (this.mode = null),
                (this.cueStartTime = null);
            }),
            (e.getHandler = function () {
              return this.outputFilter;
            }),
            (e.setHandler = function (t) {
              this.outputFilter = t;
            }),
            (e.setPAC = function (t) {
              this.writeScreen.setPAC(t);
            }),
            (e.setBkgData = function (t) {
              this.writeScreen.setBkgData(t);
            }),
            (e.setMode = function (t) {
              t !== this.mode &&
                ((this.mode = t),
                this.logger.log(2, function () {
                  return "MODE=" + t;
                }),
                "MODE_POP-ON" === this.mode
                  ? (this.writeScreen = this.nonDisplayedMemory)
                  : ((this.writeScreen = this.displayedMemory),
                    this.writeScreen.reset()),
                "MODE_ROLL-UP" !== this.mode &&
                  ((this.displayedMemory.nrRollUpRows = null),
                  (this.nonDisplayedMemory.nrRollUpRows = null)),
                (this.mode = t));
            }),
            (e.insertChars = function (t) {
              for (var e = this, r = 0; r < t.length; r++)
                this.writeScreen.insertChar(t[r]);
              var i =
                this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP";
              this.logger.log(2, function () {
                return i + ": " + e.writeScreen.getDisplayText(!0);
              }),
                ("MODE_PAINT-ON" !== this.mode &&
                  "MODE_ROLL-UP" !== this.mode) ||
                  (this.logger.log(1, function () {
                    return "DISPLAYED: " + e.displayedMemory.getDisplayText(!0);
                  }),
                  this.outputDataUpdate());
            }),
            (e.ccRCL = function () {
              this.logger.log(2, "RCL - Resume Caption Loading"),
                this.setMode("MODE_POP-ON");
            }),
            (e.ccBS = function () {
              this.logger.log(2, "BS - BackSpace"),
                "MODE_TEXT" !== this.mode &&
                  (this.writeScreen.backSpace(),
                  this.writeScreen === this.displayedMemory &&
                    this.outputDataUpdate());
            }),
            (e.ccAOF = function () {}),
            (e.ccAON = function () {}),
            (e.ccDER = function () {
              this.logger.log(2, "DER- Delete to End of Row"),
                this.writeScreen.clearToEndOfRow(),
                this.outputDataUpdate();
            }),
            (e.ccRU = function (t) {
              this.logger.log(2, "RU(" + t + ") - Roll Up"),
                (this.writeScreen = this.displayedMemory),
                this.setMode("MODE_ROLL-UP"),
                this.writeScreen.setRollUpRows(t);
            }),
            (e.ccFON = function () {
              this.logger.log(2, "FON - Flash On"),
                this.writeScreen.setPen({ flash: !0 });
            }),
            (e.ccRDC = function () {
              this.logger.log(2, "RDC - Resume Direct Captioning"),
                this.setMode("MODE_PAINT-ON");
            }),
            (e.ccTR = function () {
              this.logger.log(2, "TR"), this.setMode("MODE_TEXT");
            }),
            (e.ccRTD = function () {
              this.logger.log(2, "RTD"), this.setMode("MODE_TEXT");
            }),
            (e.ccEDM = function () {
              this.logger.log(2, "EDM - Erase Displayed Memory"),
                this.displayedMemory.reset(),
                this.outputDataUpdate(!0);
            }),
            (e.ccCR = function () {
              this.logger.log(2, "CR - Carriage Return"),
                this.writeScreen.rollUp(),
                this.outputDataUpdate(!0);
            }),
            (e.ccENM = function () {
              this.logger.log(2, "ENM - Erase Non-displayed Memory"),
                this.nonDisplayedMemory.reset();
            }),
            (e.ccEOC = function () {
              var t = this;
              if (
                (this.logger.log(2, "EOC - End Of Caption"),
                "MODE_POP-ON" === this.mode)
              ) {
                var e = this.displayedMemory;
                (this.displayedMemory = this.nonDisplayedMemory),
                  (this.nonDisplayedMemory = e),
                  (this.writeScreen = this.nonDisplayedMemory),
                  this.logger.log(1, function () {
                    return "DISP: " + t.displayedMemory.getDisplayText();
                  });
              }
              this.outputDataUpdate(!0);
            }),
            (e.ccTO = function (t) {
              this.logger.log(2, "TO(" + t + ") - Tab Offset"),
                this.writeScreen.moveCursor(t);
            }),
            (e.ccMIDROW = function (t) {
              var e = { flash: !1 };
              if (
                ((e.underline = t % 2 == 1), (e.italics = t >= 46), e.italics)
              )
                e.foreground = "white";
              else {
                var r = Math.floor(t / 2) - 16;
                e.foreground = [
                  "white",
                  "green",
                  "blue",
                  "cyan",
                  "red",
                  "yellow",
                  "magenta",
                ][r];
              }
              this.logger.log(2, "MIDROW: " + JSON.stringify(e)),
                this.writeScreen.setPen(e);
            }),
            (e.outputDataUpdate = function (t) {
              void 0 === t && (t = !1);
              var e = this.logger.time;
              null !== e &&
                this.outputFilter &&
                (null !== this.cueStartTime || this.displayedMemory.isEmpty()
                  ? this.displayedMemory.equals(this.lastOutputScreen) ||
                    (this.outputFilter.newCue(
                      this.cueStartTime,
                      e,
                      this.lastOutputScreen
                    ),
                    t &&
                      this.outputFilter.dispatchCue &&
                      this.outputFilter.dispatchCue(),
                    (this.cueStartTime = this.displayedMemory.isEmpty()
                      ? null
                      : e))
                  : (this.cueStartTime = e),
                this.lastOutputScreen.copy(this.displayedMemory));
            }),
            (e.cueSplitAtTime = function (t) {
              this.outputFilter &&
                (this.displayedMemory.isEmpty() ||
                  (this.outputFilter.newCue &&
                    this.outputFilter.newCue(
                      this.cueStartTime,
                      t,
                      this.displayedMemory
                    ),
                  (this.cueStartTime = t)));
            }),
            t
          );
        })(),
        pa = (function () {
          function t(t, e, r) {
            (this.channels = void 0),
              (this.currentChannel = 0),
              (this.cmdHistory = { a: null, b: null }),
              (this.logger = void 0);
            var i = (this.logger = new ha());
            this.channels = [null, new ma(t, e, i), new ma(t + 1, r, i)];
          }
          var e = t.prototype;
          return (
            (e.getHandler = function (t) {
              return this.channels[t].getHandler();
            }),
            (e.setHandler = function (t, e) {
              this.channels[t].setHandler(e);
            }),
            (e.addData = function (t, e) {
              var r = this;
              this.logger.time = t;
              for (
                var i = function (t) {
                    var i = 127 & e[t],
                      n = 127 & e[t + 1],
                      a = !1,
                      s = null;
                    if (0 === i && 0 === n) return 0;
                    r.logger.log(3, function () {
                      return (
                        "[" + da([e[t], e[t + 1]]) + "] -> (" + da([i, n]) + ")"
                      );
                    });
                    var o = r.cmdHistory;
                    if (i >= 16 && i <= 31) {
                      if (
                        (function (t, e, r) {
                          return r.a === t && r.b === e;
                        })(i, n, o)
                      )
                        return (
                          ya(null, null, o),
                          r.logger.log(3, function () {
                            return (
                              "Repeated command (" + da([i, n]) + ") is dropped"
                            );
                          }),
                          0
                        );
                      ya(i, n, r.cmdHistory),
                        (a = r.parseCmd(i, n)) || (a = r.parseMidrow(i, n)),
                        a || (a = r.parsePAC(i, n)),
                        a || (a = r.parseBackgroundAttributes(i, n));
                    } else ya(null, null, o);
                    if (!a && (s = r.parseChars(i, n))) {
                      var l = r.currentChannel;
                      l && l > 0
                        ? r.channels[l].insertChars(s)
                        : r.logger.log(2, "No channel found yet. TEXT-MODE?");
                    }
                    a ||
                      s ||
                      r.logger.log(2, function () {
                        return (
                          "Couldn't parse cleaned data " +
                          da([i, n]) +
                          " orig: " +
                          da([e[t], e[t + 1]])
                        );
                      });
                  },
                  n = 0;
                n < e.length;
                n += 2
              )
                i(n);
            }),
            (e.parseCmd = function (t, e) {
              if (
                !(
                  ((20 === t || 28 === t || 21 === t || 29 === t) &&
                    e >= 32 &&
                    e <= 47) ||
                  ((23 === t || 31 === t) && e >= 33 && e <= 35)
                )
              )
                return !1;
              var r = 20 === t || 21 === t || 23 === t ? 1 : 2,
                i = this.channels[r];
              return (
                20 === t || 21 === t || 28 === t || 29 === t
                  ? 32 === e
                    ? i.ccRCL()
                    : 33 === e
                    ? i.ccBS()
                    : 34 === e
                    ? i.ccAOF()
                    : 35 === e
                    ? i.ccAON()
                    : 36 === e
                    ? i.ccDER()
                    : 37 === e
                    ? i.ccRU(2)
                    : 38 === e
                    ? i.ccRU(3)
                    : 39 === e
                    ? i.ccRU(4)
                    : 40 === e
                    ? i.ccFON()
                    : 41 === e
                    ? i.ccRDC()
                    : 42 === e
                    ? i.ccTR()
                    : 43 === e
                    ? i.ccRTD()
                    : 44 === e
                    ? i.ccEDM()
                    : 45 === e
                    ? i.ccCR()
                    : 46 === e
                    ? i.ccENM()
                    : 47 === e && i.ccEOC()
                  : i.ccTO(e - 32),
                (this.currentChannel = r),
                !0
              );
            }),
            (e.parseMidrow = function (t, e) {
              var r = 0;
              if ((17 === t || 25 === t) && e >= 32 && e <= 47) {
                if ((r = 17 === t ? 1 : 2) !== this.currentChannel)
                  return (
                    this.logger.log(0, "Mismatch channel in midrow parsing"), !1
                  );
                var i = this.channels[r];
                return (
                  !!i &&
                  (i.ccMIDROW(e),
                  this.logger.log(3, function () {
                    return "MIDROW (" + da([t, e]) + ")";
                  }),
                  !0)
                );
              }
              return !1;
            }),
            (e.parsePAC = function (t, e) {
              var r;
              if (
                !(
                  (((t >= 17 && t <= 23) || (t >= 25 && t <= 31)) &&
                    e >= 64 &&
                    e <= 127) ||
                  ((16 === t || 24 === t) && e >= 64 && e <= 95)
                )
              )
                return !1;
              var i = t <= 23 ? 1 : 2;
              r =
                e >= 64 && e <= 95
                  ? 1 === i
                    ? aa[t]
                    : oa[t]
                  : 1 === i
                  ? sa[t]
                  : la[t];
              var n = this.channels[i];
              return (
                !!n &&
                (n.setPAC(this.interpretPAC(r, e)),
                (this.currentChannel = i),
                !0)
              );
            }),
            (e.interpretPAC = function (t, e) {
              var r,
                i = {
                  color: null,
                  italics: !1,
                  indent: null,
                  underline: !1,
                  row: t,
                };
              return (
                (r = e > 95 ? e - 96 : e - 64),
                (i.underline = 1 == (1 & r)),
                r <= 13
                  ? (i.color = [
                      "white",
                      "green",
                      "blue",
                      "cyan",
                      "red",
                      "yellow",
                      "magenta",
                      "white",
                    ][Math.floor(r / 2)])
                  : r <= 15
                  ? ((i.italics = !0), (i.color = "white"))
                  : (i.indent = 4 * Math.floor((r - 16) / 2)),
                i
              );
            }),
            (e.parseChars = function (t, e) {
              var r,
                i,
                n = null,
                a = null;
              return (
                t >= 25 ? ((r = 2), (a = t - 8)) : ((r = 1), (a = t)),
                a >= 17 && a <= 19
                  ? ((i = 17 === a ? e + 80 : 18 === a ? e + 112 : e + 144),
                    this.logger.log(2, function () {
                      return "Special char '" + ra(i) + "' in channel " + r;
                    }),
                    (n = [i]))
                  : t >= 32 && t <= 127 && (n = 0 === e ? [t] : [t, e]),
                n &&
                  this.logger.log(3, function () {
                    return "Char codes =  " + da(n).join(",");
                  }),
                n
              );
            }),
            (e.parseBackgroundAttributes = function (t, e) {
              var r;
              if (
                !(
                  ((16 === t || 24 === t) && e >= 32 && e <= 47) ||
                  ((23 === t || 31 === t) && e >= 45 && e <= 47)
                )
              )
                return !1;
              var i = {};
              16 === t || 24 === t
                ? ((r = Math.floor((e - 32) / 2)),
                  (i.background = ua[r]),
                  e % 2 == 1 && (i.background = i.background + "_semi"))
                : 45 === e
                ? (i.background = "transparent")
                : ((i.foreground = "black"), 47 === e && (i.underline = !0));
              var n = t <= 23 ? 1 : 2;
              return this.channels[n].setBkgData(i), !0;
            }),
            (e.reset = function () {
              for (var t = 0; t < Object.keys(this.channels).length; t++) {
                var e = this.channels[t];
                e && e.reset();
              }
              ya(null, null, this.cmdHistory);
            }),
            (e.cueSplitAtTime = function (t) {
              for (var e = 0; e < this.channels.length; e++) {
                var r = this.channels[e];
                r && r.cueSplitAtTime(t);
              }
            }),
            t
          );
        })();
      function ya(t, e, r) {
        (r.a = t), (r.b = e);
      }
      var Ea = (function () {
          function t(t, e) {
            (this.timelineController = void 0),
              (this.cueRanges = []),
              (this.trackName = void 0),
              (this.startTime = null),
              (this.endTime = null),
              (this.screen = null),
              (this.timelineController = t),
              (this.trackName = e);
          }
          var e = t.prototype;
          return (
            (e.dispatchCue = function () {
              null !== this.startTime &&
                (this.timelineController.addCues(
                  this.trackName,
                  this.startTime,
                  this.endTime,
                  this.screen,
                  this.cueRanges
                ),
                (this.startTime = null));
            }),
            (e.newCue = function (t, e, r) {
              (null === this.startTime || this.startTime > t) &&
                (this.startTime = t),
                (this.endTime = e),
                (this.screen = r),
                this.timelineController.createCaptionsTrack(this.trackName);
            }),
            (e.reset = function () {
              (this.cueRanges = []), (this.startTime = null);
            }),
            t
          );
        })(),
        Ta = (function () {
          if (null != j && j.VTTCue) return self.VTTCue;
          var t = ["", "lr", "rl"],
            e = ["start", "middle", "end", "left", "right"];
          function r(t, e) {
            if ("string" != typeof e) return !1;
            if (!Array.isArray(t)) return !1;
            var r = e.toLowerCase();
            return !!~t.indexOf(r) && r;
          }
          function i(t) {
            return r(e, t);
          }
          function n(t) {
            for (
              var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1;
              i < e;
              i++
            )
              r[i - 1] = arguments[i];
            for (var n = 1; n < arguments.length; n++) {
              var a = arguments[n];
              for (var s in a) t[s] = a[s];
            }
            return t;
          }
          function a(e, a, s) {
            var o = this,
              l = { enumerable: !0 };
            o.hasBeenReset = !1;
            var u = "",
              h = !1,
              d = e,
              c = a,
              f = s,
              g = null,
              v = "",
              m = !0,
              p = "auto",
              y = "start",
              E = 50,
              T = "middle",
              S = 50,
              L = "middle";
            Object.defineProperty(
              o,
              "id",
              n({}, l, {
                get: function () {
                  return u;
                },
                set: function (t) {
                  u = "" + t;
                },
              })
            ),
              Object.defineProperty(
                o,
                "pauseOnExit",
                n({}, l, {
                  get: function () {
                    return h;
                  },
                  set: function (t) {
                    h = !!t;
                  },
                })
              ),
              Object.defineProperty(
                o,
                "startTime",
                n({}, l, {
                  get: function () {
                    return d;
                  },
                  set: function (t) {
                    if ("number" != typeof t)
                      throw new TypeError(
                        "Start time must be set to a number."
                      );
                    (d = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "endTime",
                n({}, l, {
                  get: function () {
                    return c;
                  },
                  set: function (t) {
                    if ("number" != typeof t)
                      throw new TypeError("End time must be set to a number.");
                    (c = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "text",
                n({}, l, {
                  get: function () {
                    return f;
                  },
                  set: function (t) {
                    (f = "" + t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "region",
                n({}, l, {
                  get: function () {
                    return g;
                  },
                  set: function (t) {
                    (g = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "vertical",
                n({}, l, {
                  get: function () {
                    return v;
                  },
                  set: function (e) {
                    var i = (function (e) {
                      return r(t, e);
                    })(e);
                    if (!1 === i)
                      throw new SyntaxError(
                        "An invalid or illegal string was specified."
                      );
                    (v = i), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "snapToLines",
                n({}, l, {
                  get: function () {
                    return m;
                  },
                  set: function (t) {
                    (m = !!t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "line",
                n({}, l, {
                  get: function () {
                    return p;
                  },
                  set: function (t) {
                    if ("number" != typeof t && "auto" !== t)
                      throw new SyntaxError(
                        "An invalid number or illegal string was specified."
                      );
                    (p = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "lineAlign",
                n({}, l, {
                  get: function () {
                    return y;
                  },
                  set: function (t) {
                    var e = i(t);
                    if (!e)
                      throw new SyntaxError(
                        "An invalid or illegal string was specified."
                      );
                    (y = e), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "position",
                n({}, l, {
                  get: function () {
                    return E;
                  },
                  set: function (t) {
                    if (t < 0 || t > 100)
                      throw new Error("Position must be between 0 and 100.");
                    (E = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "positionAlign",
                n({}, l, {
                  get: function () {
                    return T;
                  },
                  set: function (t) {
                    var e = i(t);
                    if (!e)
                      throw new SyntaxError(
                        "An invalid or illegal string was specified."
                      );
                    (T = e), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "size",
                n({}, l, {
                  get: function () {
                    return S;
                  },
                  set: function (t) {
                    if (t < 0 || t > 100)
                      throw new Error("Size must be between 0 and 100.");
                    (S = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "align",
                n({}, l, {
                  get: function () {
                    return L;
                  },
                  set: function (t) {
                    var e = i(t);
                    if (!e)
                      throw new SyntaxError(
                        "An invalid or illegal string was specified."
                      );
                    (L = e), (this.hasBeenReset = !0);
                  },
                })
              ),
              (o.displayState = void 0);
          }
          return (
            (a.prototype.getCueAsHTML = function () {
              return self.WebVTT.convertCueToDOMTree(self, this.text);
            }),
            a
          );
        })(),
        Sa = (function () {
          function t() {}
          return (
            (t.prototype.decode = function (t, e) {
              if (!t) return "";
              if ("string" != typeof t)
                throw new Error("Error - expected string data.");
              return decodeURIComponent(encodeURIComponent(t));
            }),
            t
          );
        })();
      function La(t) {
        function e(t, e, r, i) {
          return 3600 * (0 | t) + 60 * (0 | e) + (0 | r) + parseFloat(i || 0);
        }
        var r = t.match(/^(?:(\d+):)?(\d{2}):(\d{2})(\.\d+)?/);
        return r
          ? parseFloat(r[2]) > 59
            ? e(r[2], r[3], 0, r[4])
            : e(r[1], r[2], r[3], r[4])
          : null;
      }
      var Aa = (function () {
        function t() {
          this.values = Object.create(null);
        }
        var e = t.prototype;
        return (
          (e.set = function (t, e) {
            this.get(t) || "" === e || (this.values[t] = e);
          }),
          (e.get = function (t, e, r) {
            return r
              ? this.has(t)
                ? this.values[t]
                : e[r]
              : this.has(t)
              ? this.values[t]
              : e;
          }),
          (e.has = function (t) {
            return t in this.values;
          }),
          (e.alt = function (t, e, r) {
            for (var i = 0; i < r.length; ++i)
              if (e === r[i]) {
                this.set(t, e);
                break;
              }
          }),
          (e.integer = function (t, e) {
            /^-?\d+$/.test(e) && this.set(t, parseInt(e, 10));
          }),
          (e.percent = function (t, e) {
            if (/^([\d]{1,3})(\.[\d]*)?%$/.test(e)) {
              var r = parseFloat(e);
              if (r >= 0 && r <= 100) return this.set(t, r), !0;
            }
            return !1;
          }),
          t
        );
      })();
      function Ra(t, e, r, i) {
        var n = i ? t.split(i) : [t];
        for (var a in n)
          if ("string" == typeof n[a]) {
            var s = n[a].split(r);
            2 === s.length && e(s[0], s[1]);
          }
      }
      var ka = new Ta(0, 0, ""),
        ba = "middle" === ka.align ? "middle" : "center";
      function Da(t, e, r) {
        var i = t;
        function n() {
          var e = La(t);
          if (null === e) throw new Error("Malformed timestamp: " + i);
          return (t = t.replace(/^[^\sa-zA-Z-]+/, "")), e;
        }
        function a() {
          t = t.replace(/^\s+/, "");
        }
        if ((a(), (e.startTime = n()), a(), "--\x3e" !== t.slice(0, 3)))
          throw new Error(
            "Malformed time stamp (time stamps must be separated by '--\x3e'): " +
              i
          );
        (t = t.slice(3)),
          a(),
          (e.endTime = n()),
          a(),
          (function (t, e) {
            var i = new Aa();
            Ra(
              t,
              function (t, e) {
                var n;
                switch (t) {
                  case "region":
                    for (var a = r.length - 1; a >= 0; a--)
                      if (r[a].id === e) {
                        i.set(t, r[a].region);
                        break;
                      }
                    break;
                  case "vertical":
                    i.alt(t, e, ["rl", "lr"]);
                    break;
                  case "line":
                    (n = e.split(",")),
                      i.integer(t, n[0]),
                      i.percent(t, n[0]) && i.set("snapToLines", !1),
                      i.alt(t, n[0], ["auto"]),
                      2 === n.length &&
                        i.alt("lineAlign", n[1], ["start", ba, "end"]);
                    break;
                  case "position":
                    (n = e.split(",")),
                      i.percent(t, n[0]),
                      2 === n.length &&
                        i.alt("positionAlign", n[1], [
                          "start",
                          ba,
                          "end",
                          "line-left",
                          "line-right",
                          "auto",
                        ]);
                    break;
                  case "size":
                    i.percent(t, e);
                    break;
                  case "align":
                    i.alt(t, e, ["start", ba, "end", "left", "right"]);
                }
              },
              /:/,
              /\s/
            ),
              (e.region = i.get("region", null)),
              (e.vertical = i.get("vertical", ""));
            var n = i.get("line", "auto");
            "auto" === n && -1 === ka.line && (n = -1),
              (e.line = n),
              (e.lineAlign = i.get("lineAlign", "start")),
              (e.snapToLines = i.get("snapToLines", !0)),
              (e.size = i.get("size", 100)),
              (e.align = i.get("align", ba));
            var a = i.get("position", "auto");
            "auto" === a &&
              50 === ka.position &&
              (a =
                "start" === e.align || "left" === e.align
                  ? 0
                  : "end" === e.align || "right" === e.align
                  ? 100
                  : 50),
              (e.position = a);
          })(t, e);
      }
      function Ia(t) {
        return t.replace(/<br(?: \/)?>/gi, "\n");
      }
      var wa = (function () {
          function t() {
            (this.state = "INITIAL"),
              (this.buffer = ""),
              (this.decoder = new Sa()),
              (this.regionList = []),
              (this.cue = null),
              (this.oncue = void 0),
              (this.onparsingerror = void 0),
              (this.onflush = void 0);
          }
          var e = t.prototype;
          return (
            (e.parse = function (t) {
              var e = this;
              function r() {
                var t = e.buffer,
                  r = 0;
                for (
                  t = Ia(t);
                  r < t.length && "\r" !== t[r] && "\n" !== t[r];

                )
                  ++r;
                var i = t.slice(0, r);
                return (
                  "\r" === t[r] && ++r,
                  "\n" === t[r] && ++r,
                  (e.buffer = t.slice(r)),
                  i
                );
              }
              t && (e.buffer += e.decoder.decode(t, { stream: !0 }));
              try {
                var i = "";
                if ("INITIAL" === e.state) {
                  if (!/\r\n|\n/.test(e.buffer)) return this;
                  var n = (i = r()).match(/^(ï»¿)?WEBVTT([ \t].*)?$/);
                  if (null == n || !n[0])
                    throw new Error("Malformed WebVTT signature.");
                  e.state = "HEADER";
                }
                for (var a = !1; e.buffer; ) {
                  if (!/\r\n|\n/.test(e.buffer)) return this;
                  switch ((a ? (a = !1) : (i = r()), e.state)) {
                    case "HEADER":
                      /:/.test(i)
                        ? Ra(i, function (t, e) {}, /:/)
                        : i || (e.state = "ID");
                      continue;
                    case "NOTE":
                      i || (e.state = "ID");
                      continue;
                    case "ID":
                      if (/^NOTE($|[ \t])/.test(i)) {
                        e.state = "NOTE";
                        break;
                      }
                      if (!i) continue;
                      if (
                        ((e.cue = new Ta(0, 0, "")),
                        (e.state = "CUE"),
                        -1 === i.indexOf("--\x3e"))
                      ) {
                        e.cue.id = i;
                        continue;
                      }
                    case "CUE":
                      if (!e.cue) {
                        e.state = "BADCUE";
                        continue;
                      }
                      try {
                        Da(i, e.cue, e.regionList);
                      } catch (t) {
                        (e.cue = null), (e.state = "BADCUE");
                        continue;
                      }
                      e.state = "CUETEXT";
                      continue;
                    case "CUETEXT":
                      var s = -1 !== i.indexOf("--\x3e");
                      if (!i || (s && (a = !0))) {
                        e.oncue && e.cue && e.oncue(e.cue),
                          (e.cue = null),
                          (e.state = "ID");
                        continue;
                      }
                      if (null === e.cue) continue;
                      e.cue.text && (e.cue.text += "\n"), (e.cue.text += i);
                      continue;
                    case "BADCUE":
                      i || (e.state = "ID");
                  }
                }
              } catch (t) {
                "CUETEXT" === e.state && e.cue && e.oncue && e.oncue(e.cue),
                  (e.cue = null),
                  (e.state = "INITIAL" === e.state ? "BADWEBVTT" : "BADCUE");
              }
              return this;
            }),
            (e.flush = function () {
              var t = this;
              try {
                if (
                  ((t.cue || "HEADER" === t.state) &&
                    ((t.buffer += "\n\n"), t.parse()),
                  "INITIAL" === t.state || "BADWEBVTT" === t.state)
                )
                  throw new Error("Malformed WebVTT signature.");
              } catch (e) {
                t.onparsingerror && t.onparsingerror(e);
              }
              return t.onflush && t.onflush(), this;
            }),
            t
          );
        })(),
        Ca = /\r\n|\n\r|\n|\r/g,
        _a = function (t, e, r) {
          return void 0 === r && (r = 0), t.slice(r, r + e.length) === e;
        },
        xa = function (t) {
          for (var e = 5381, r = t.length; r; )
            e = (33 * e) ^ t.charCodeAt(--r);
          return (e >>> 0).toString();
        };
      function Pa(t, e, r) {
        return xa(t.toString()) + xa(e.toString()) + xa(r);
      }
      function Fa(t, e, r, i, n, a, s) {
        var o,
          l,
          u,
          h = new wa(),
          d = Tt(new Uint8Array(t)).trim().replace(Ca, "\n").split("\n"),
          c = [],
          f = e
            ? ((o = e.baseTime),
              void 0 === (l = e.timescale) && (l = 1),
              En(o, yn, 1 / l))
            : 0,
          g = "00:00.000",
          v = 0,
          m = 0,
          p = !0;
        (h.oncue = function (t) {
          var a = r[i],
            s = r.ccOffset,
            o = (v - f) / 9e4;
          if (
            (null != a &&
              a.new &&
              (void 0 !== m
                ? (s = r.ccOffset = a.start)
                : (function (t, e, r) {
                    var i = t[e],
                      n = t[i.prevCC];
                    if (!n || (!n.new && i.new))
                      return (
                        (t.ccOffset = t.presentationOffset = i.start),
                        void (i.new = !1)
                      );
                    for (; null != (a = n) && a.new; ) {
                      var a;
                      (t.ccOffset += i.start - n.start),
                        (i.new = !1),
                        (n = t[(i = n).prevCC]);
                    }
                    t.presentationOffset = r;
                  })(r, i, o)),
            o)
          ) {
            if (!e)
              return void (u = new Error("Missing initPTS for VTT MPEGTS"));
            s = o - r.presentationOffset;
          }
          var l = t.endTime - t.startTime,
            h = Rn(9e4 * (t.startTime + s - m), 9e4 * n) / 9e4;
          (t.startTime = Math.max(h, 0)), (t.endTime = Math.max(h + l, 0));
          var d = t.text.trim();
          (t.text = decodeURIComponent(encodeURIComponent(d))),
            t.id || (t.id = Pa(t.startTime, t.endTime, d)),
            t.endTime > 0 && c.push(t);
        }),
          (h.onparsingerror = function (t) {
            u = t;
          }),
          (h.onflush = function () {
            u ? s(u) : a(c);
          }),
          d.forEach(function (t) {
            if (p) {
              if (_a(t, "X-TIMESTAMP-MAP=")) {
                (p = !1),
                  t
                    .slice(16)
                    .split(",")
                    .forEach(function (t) {
                      _a(t, "LOCAL:")
                        ? (g = t.slice(6))
                        : _a(t, "MPEGTS:") && (v = parseInt(t.slice(7)));
                    });
                try {
                  m =
                    (function (t) {
                      var e = parseInt(t.slice(-3)),
                        r = parseInt(t.slice(-6, -4)),
                        i = parseInt(t.slice(-9, -7)),
                        n =
                          t.length > 9
                            ? parseInt(t.substring(0, t.indexOf(":")))
                            : 0;
                      if (!(y(e) && y(r) && y(i) && y(n)))
                        throw Error("Malformed X-TIMESTAMP-MAP: Local:" + t);
                      return (e += 1e3 * r), (e += 6e4 * i) + 36e5 * n;
                    })(g) / 1e3;
                } catch (t) {
                  u = t;
                }
                return;
              }
              "" === t && (p = !1);
            }
            h.parse(t + "\n");
          }),
          h.flush();
      }
      var Ma = "stpp.ttml.im1t",
        Oa = /^(\d{2,}):(\d{2}):(\d{2}):(\d{2})\.?(\d+)?$/,
        Na = /^(\d*(?:\.\d*)?)(h|m|s|ms|f|t)$/,
        Ua = {
          left: "start",
          center: "center",
          right: "end",
          start: "start",
          end: "end",
        };
      function Ba(t, e, r, i) {
        var n = xt(new Uint8Array(t), ["mdat"]);
        if (0 !== n.length) {
          var a,
            s,
            l,
            u,
            h = n.map(function (t) {
              return Tt(t);
            }),
            d =
              ((a = e.baseTime),
              (s = 1),
              void 0 === (l = e.timescale) && (l = 1),
              void 0 === u && (u = !1),
              En(a, s, 1 / l, u));
          try {
            h.forEach(function (t) {
              return r(
                (function (t, e) {
                  var r = new DOMParser().parseFromString(t, "text/xml"),
                    i = r.getElementsByTagName("tt")[0];
                  if (!i) throw new Error("Invalid ttml");
                  var n = {
                      frameRate: 30,
                      subFrameRate: 1,
                      frameRateMultiplier: 0,
                      tickRate: 0,
                    },
                    a = Object.keys(n).reduce(function (t, e) {
                      return (t[e] = i.getAttribute("ttp:" + e) || n[e]), t;
                    }, {}),
                    s = "preserve" !== i.getAttribute("xml:space"),
                    l = Ka(Ga(i, "styling", "style")),
                    u = Ka(Ga(i, "layout", "region")),
                    h = Ga(i, "body", "[begin]");
                  return [].map
                    .call(h, function (t) {
                      var r = Ha(t, s);
                      if (!r || !t.hasAttribute("begin")) return null;
                      var i = Wa(t.getAttribute("begin"), a),
                        n = Wa(t.getAttribute("dur"), a),
                        h = Wa(t.getAttribute("end"), a);
                      if (null === i) throw Ya(t);
                      if (null === h) {
                        if (null === n) throw Ya(t);
                        h = i + n;
                      }
                      var d = new Ta(i - e, h - e, r);
                      d.id = Pa(d.startTime, d.endTime, d.text);
                      var c = (function (t, e, r) {
                          var i = "http://www.w3.org/ns/ttml#styling",
                            n = null,
                            a = [
                              "displayAlign",
                              "textAlign",
                              "color",
                              "backgroundColor",
                              "fontSize",
                              "fontFamily",
                            ],
                            s =
                              null != t && t.hasAttribute("style")
                                ? t.getAttribute("style")
                                : null;
                          return (
                            s && r.hasOwnProperty(s) && (n = r[s]),
                            a.reduce(function (r, a) {
                              var s = Va(e, i, a) || Va(t, i, a) || Va(n, i, a);
                              return s && (r[a] = s), r;
                            }, {})
                          );
                        })(
                          u[t.getAttribute("region")],
                          l[t.getAttribute("style")],
                          l
                        ),
                        f = c.textAlign;
                      if (f) {
                        var g = Ua[f];
                        g && (d.lineAlign = g), (d.align = f);
                      }
                      return o(d, c), d;
                    })
                    .filter(function (t) {
                      return null !== t;
                    });
                })(t, d)
              );
            });
          } catch (t) {
            i(t);
          }
        } else i(new Error("Could not parse IMSC1 mdat"));
      }
      function Ga(t, e, r) {
        var i = t.getElementsByTagName(e)[0];
        return i ? [].slice.call(i.querySelectorAll(r)) : [];
      }
      function Ka(t) {
        return t.reduce(function (t, e) {
          var r = e.getAttribute("xml:id");
          return r && (t[r] = e), t;
        }, {});
      }
      function Ha(t, e) {
        return [].slice.call(t.childNodes).reduce(function (t, r, i) {
          var n;
          return "br" === r.nodeName && i
            ? t + "\n"
            : null != (n = r.childNodes) && n.length
            ? Ha(r, e)
            : e
            ? t + r.textContent.trim().replace(/\s+/g, " ")
            : t + r.textContent;
        }, "");
      }
      function Va(t, e, r) {
        return t && t.hasAttributeNS(e, r) ? t.getAttributeNS(e, r) : null;
      }
      function Ya(t) {
        return new Error("Could not parse ttml timestamp " + t);
      }
      function Wa(t, e) {
        if (!t) return null;
        var r = La(t);
        return (
          null === r &&
            (Oa.test(t)
              ? (r = (function (t, e) {
                  var r = Oa.exec(t),
                    i = (0 | r[4]) + (0 | r[5]) / e.subFrameRate;
                  return (
                    3600 * (0 | r[1]) +
                    60 * (0 | r[2]) +
                    (0 | r[3]) +
                    i / e.frameRate
                  );
                })(t, e))
              : Na.test(t) &&
                (r = (function (t, e) {
                  var r = Na.exec(t),
                    i = Number(r[1]);
                  switch (r[2]) {
                    case "h":
                      return 3600 * i;
                    case "m":
                      return 60 * i;
                    case "ms":
                      return 1e3 * i;
                    case "f":
                      return i / e.frameRate;
                    case "t":
                      return i / e.tickRate;
                  }
                  return i;
                })(t, e))),
          r
        );
      }
      var ja = (function () {
        function t(t) {
          (this.hls = void 0),
            (this.media = null),
            (this.config = void 0),
            (this.enabled = !0),
            (this.Cues = void 0),
            (this.textTracks = []),
            (this.tracks = []),
            (this.initPTS = []),
            (this.unparsedVttFrags = []),
            (this.captionsTracks = {}),
            (this.nonNativeCaptionsTracks = {}),
            (this.cea608Parser1 = void 0),
            (this.cea608Parser2 = void 0),
            (this.lastCc = -1),
            (this.lastSn = -1),
            (this.lastPartIndex = -1),
            (this.prevCC = -1),
            (this.vttCCs = {
              ccOffset: 0,
              presentationOffset: 0,
              0: { start: 0, prevCC: -1, new: !0 },
            }),
            (this.captionsProperties = void 0),
            (this.hls = t),
            (this.config = t.config),
            (this.Cues = t.config.cueHandler),
            (this.captionsProperties = {
              textTrack1: {
                label: this.config.captionsTextTrack1Label,
                languageCode: this.config.captionsTextTrack1LanguageCode,
              },
              textTrack2: {
                label: this.config.captionsTextTrack2Label,
                languageCode: this.config.captionsTextTrack2LanguageCode,
              },
              textTrack3: {
                label: this.config.captionsTextTrack3Label,
                languageCode: this.config.captionsTextTrack3LanguageCode,
              },
              textTrack4: {
                label: this.config.captionsTextTrack4Label,
                languageCode: this.config.captionsTextTrack4LanguageCode,
              },
            }),
            t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
            t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
            t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
            t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
            t.on(S.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
            t.on(S.FRAG_LOADING, this.onFragLoading, this),
            t.on(S.FRAG_LOADED, this.onFragLoaded, this),
            t.on(S.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this),
            t.on(S.FRAG_DECRYPTED, this.onFragDecrypted, this),
            t.on(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
            t.on(S.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this),
            t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this);
        }
        var e = t.prototype;
        return (
          (e.destroy = function () {
            var t = this.hls;
            t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
              t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
              t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
              t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
              t.off(
                S.SUBTITLE_TRACKS_UPDATED,
                this.onSubtitleTracksUpdated,
                this
              ),
              t.off(S.FRAG_LOADING, this.onFragLoading, this),
              t.off(S.FRAG_LOADED, this.onFragLoaded, this),
              t.off(S.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this),
              t.off(S.FRAG_DECRYPTED, this.onFragDecrypted, this),
              t.off(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
              t.off(
                S.SUBTITLE_TRACKS_CLEARED,
                this.onSubtitleTracksCleared,
                this
              ),
              t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
              (this.hls = this.config = null),
              (this.cea608Parser1 = this.cea608Parser2 = void 0);
          }),
          (e.initCea608Parsers = function () {
            if (
              this.config.enableCEA708Captions &&
              (!this.cea608Parser1 || !this.cea608Parser2)
            ) {
              var t = new Ea(this, "textTrack1"),
                e = new Ea(this, "textTrack2"),
                r = new Ea(this, "textTrack3"),
                i = new Ea(this, "textTrack4");
              (this.cea608Parser1 = new pa(1, t, e)),
                (this.cea608Parser2 = new pa(3, r, i));
            }
          }),
          (e.addCues = function (t, e, r, i, n) {
            for (var a, s, o, l, u = !1, h = n.length; h--; ) {
              var d = n[h],
                c =
                  ((a = d[0]),
                  (s = d[1]),
                  (o = e),
                  (l = r),
                  Math.min(s, l) - Math.max(a, o));
              if (
                c >= 0 &&
                ((d[0] = Math.min(d[0], e)),
                (d[1] = Math.max(d[1], r)),
                (u = !0),
                c / (r - e) > 0.5)
              )
                return;
            }
            if ((u || n.push([e, r]), this.config.renderTextTracksNatively)) {
              var f = this.captionsTracks[t];
              this.Cues.newCue(f, e, r, i);
            } else {
              var g = this.Cues.newCue(null, e, r, i);
              this.hls.trigger(S.CUES_PARSED, {
                type: "captions",
                cues: g,
                track: t,
              });
            }
          }),
          (e.onInitPtsFound = function (t, e) {
            var r = this,
              i = e.frag,
              n = e.id,
              a = e.initPTS,
              s = e.timescale,
              o = this.unparsedVttFrags;
            "main" === n &&
              (this.initPTS[i.cc] = { baseTime: a, timescale: s }),
              o.length &&
                ((this.unparsedVttFrags = []),
                o.forEach(function (t) {
                  r.onFragLoaded(S.FRAG_LOADED, t);
                }));
          }),
          (e.getExistingTrack = function (t, e) {
            var r = this.media;
            if (r)
              for (var i = 0; i < r.textTracks.length; i++) {
                var n = r.textTracks[i];
                if (Xa(n, { name: t, lang: e, attrs: {} })) return n;
              }
            return null;
          }),
          (e.createCaptionsTrack = function (t) {
            this.config.renderTextTracksNatively
              ? this.createNativeTrack(t)
              : this.createNonNativeTrack(t);
          }),
          (e.createNativeTrack = function (t) {
            if (!this.captionsTracks[t]) {
              var e = this.captionsProperties,
                r = this.captionsTracks,
                i = this.media,
                n = e[t],
                a = n.label,
                s = n.languageCode,
                o = this.getExistingTrack(a, s);
              if (o) (r[t] = o), Ne(r[t]), Me(r[t], i);
              else {
                var l = this.createTextTrack("captions", a, s);
                l && ((l[t] = !0), (r[t] = l));
              }
            }
          }),
          (e.createNonNativeTrack = function (t) {
            if (!this.nonNativeCaptionsTracks[t]) {
              var e = this.captionsProperties[t];
              if (e) {
                var r = {
                  _id: t,
                  label: e.label,
                  kind: "captions",
                  default: !!e.media && !!e.media.default,
                  closedCaptions: e.media,
                };
                (this.nonNativeCaptionsTracks[t] = r),
                  this.hls.trigger(S.NON_NATIVE_TEXT_TRACKS_FOUND, {
                    tracks: [r],
                  });
              }
            }
          }),
          (e.createTextTrack = function (t, e, r) {
            var i = this.media;
            if (i) return i.addTextTrack(t, e, r);
          }),
          (e.onMediaAttaching = function (t, e) {
            (this.media = e.media), this._cleanTracks();
          }),
          (e.onMediaDetaching = function () {
            var t = this.captionsTracks;
            Object.keys(t).forEach(function (e) {
              Ne(t[e]), delete t[e];
            }),
              (this.nonNativeCaptionsTracks = {});
          }),
          (e.onManifestLoading = function () {
            (this.lastCc = -1),
              (this.lastSn = -1),
              (this.lastPartIndex = -1),
              (this.prevCC = -1),
              (this.vttCCs = {
                ccOffset: 0,
                presentationOffset: 0,
                0: { start: 0, prevCC: -1, new: !0 },
              }),
              this._cleanTracks(),
              (this.tracks = []),
              (this.captionsTracks = {}),
              (this.nonNativeCaptionsTracks = {}),
              (this.textTracks = []),
              (this.unparsedVttFrags = []),
              (this.initPTS = []),
              this.cea608Parser1 &&
                this.cea608Parser2 &&
                (this.cea608Parser1.reset(), this.cea608Parser2.reset());
          }),
          (e._cleanTracks = function () {
            var t = this.media;
            if (t) {
              var e = t.textTracks;
              if (e) for (var r = 0; r < e.length; r++) Ne(e[r]);
            }
          }),
          (e.onSubtitleTracksUpdated = function (t, e) {
            var r = this,
              i = e.subtitleTracks || [],
              n = i.some(function (t) {
                return t.textCodec === Ma;
              });
            if (this.config.enableWebVTT || (n && this.config.enableIMSC1)) {
              if (Vn(this.tracks, i)) return void (this.tracks = i);
              if (
                ((this.textTracks = []),
                (this.tracks = i),
                this.config.renderTextTracksNatively)
              ) {
                var a = this.media,
                  s = a ? Be(a.textTracks) : null;
                if (
                  (this.tracks.forEach(function (t, e) {
                    var i;
                    if (s) {
                      for (var n = null, a = 0; a < s.length; a++)
                        if (s[a] && Xa(s[a], t)) {
                          (n = s[a]), (s[a] = null);
                          break;
                        }
                      n && (i = n);
                    }
                    if (i) Ne(i);
                    else {
                      var o = qa(t);
                      (i = r.createTextTrack(o, t.name, t.lang)) &&
                        (i.mode = "disabled");
                    }
                    i && r.textTracks.push(i);
                  }),
                  null != s && s.length)
                ) {
                  var o = s
                    .filter(function (t) {
                      return null !== t;
                    })
                    .map(function (t) {
                      return t.label;
                    });
                  o.length &&
                    w.warn(
                      "Media element contains unused subtitle tracks: " +
                        o.join(", ") +
                        ". Replace media element for each source to clear TextTracks and captions menu."
                    );
                }
              } else if (this.tracks.length) {
                var l = this.tracks.map(function (t) {
                  return {
                    label: t.name,
                    kind: t.type.toLowerCase(),
                    default: t.default,
                    subtitleTrack: t,
                  };
                });
                this.hls.trigger(S.NON_NATIVE_TEXT_TRACKS_FOUND, { tracks: l });
              }
            }
          }),
          (e.onManifestLoaded = function (t, e) {
            var r = this;
            this.config.enableCEA708Captions &&
              e.captions &&
              e.captions.forEach(function (t) {
                var e = /(?:CC|SERVICE)([1-4])/.exec(t.instreamId);
                if (e) {
                  var i = "textTrack" + e[1],
                    n = r.captionsProperties[i];
                  n &&
                    ((n.label = t.name),
                    t.lang && (n.languageCode = t.lang),
                    (n.media = t));
                }
              });
          }),
          (e.closedCaptionsForLevel = function (t) {
            var e = this.hls.levels[t.level];
            return null == e ? void 0 : e.attrs["CLOSED-CAPTIONS"];
          }),
          (e.onFragLoading = function (t, e) {
            if (this.enabled && e.frag.type === we) {
              var r,
                i,
                n = this.cea608Parser1,
                a = this.cea608Parser2,
                s = this.lastSn,
                o = e.frag,
                l = o.cc,
                u = o.sn,
                h =
                  null != (r = null == (i = e.part) ? void 0 : i.index)
                    ? r
                    : -1;
              n &&
                a &&
                (u !== s + 1 ||
                  (u === s && h !== this.lastPartIndex + 1) ||
                  l !== this.lastCc) &&
                (n.reset(), a.reset()),
                (this.lastCc = l),
                (this.lastSn = u),
                (this.lastPartIndex = h);
            }
          }),
          (e.onFragLoaded = function (t, e) {
            var r = e.frag,
              i = e.payload;
            if (r.type === _e)
              if (i.byteLength) {
                var n = r.decryptdata,
                  a = "stats" in e;
                if (null == n || !n.encrypted || a) {
                  var s = this.tracks[r.level],
                    o = this.vttCCs;
                  o[r.cc] ||
                    ((o[r.cc] = {
                      start: r.start,
                      prevCC: this.prevCC,
                      new: !0,
                    }),
                    (this.prevCC = r.cc)),
                    s && s.textCodec === Ma
                      ? this._parseIMSC1(r, i)
                      : this._parseVTTs(e);
                }
              } else
                this.hls.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                  success: !1,
                  frag: r,
                  error: new Error("Empty subtitle payload"),
                });
          }),
          (e._parseIMSC1 = function (t, e) {
            var r = this,
              i = this.hls;
            Ba(
              e,
              this.initPTS[t.cc],
              function (e) {
                r._appendCues(e, t.level),
                  i.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                    success: !0,
                    frag: t,
                  });
              },
              function (e) {
                w.log("Failed to parse IMSC1: " + e),
                  i.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                    success: !1,
                    frag: t,
                    error: e,
                  });
              }
            );
          }),
          (e._parseVTTs = function (t) {
            var e,
              r = this,
              i = t.frag,
              n = t.payload,
              a = this.initPTS,
              s = this.unparsedVttFrags,
              o = a.length - 1;
            if (a[i.cc] || -1 !== o) {
              var l = this.hls;
              Fa(
                null != (e = i.initSegment) && e.data
                  ? Kt(i.initSegment.data, new Uint8Array(n))
                  : n,
                this.initPTS[i.cc],
                this.vttCCs,
                i.cc,
                i.start,
                function (t) {
                  r._appendCues(t, i.level),
                    l.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                      success: !0,
                      frag: i,
                    });
                },
                function (e) {
                  var a = "Missing initPTS for VTT MPEGTS" === e.message;
                  a ? s.push(t) : r._fallbackToIMSC1(i, n),
                    w.log("Failed to parse VTT cue: " + e),
                    (a && o > i.cc) ||
                      l.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                        success: !1,
                        frag: i,
                        error: e,
                      });
                }
              );
            } else s.push(t);
          }),
          (e._fallbackToIMSC1 = function (t, e) {
            var r = this,
              i = this.tracks[t.level];
            i.textCodec ||
              Ba(
                e,
                this.initPTS[t.cc],
                function () {
                  (i.textCodec = Ma), r._parseIMSC1(t, e);
                },
                function () {
                  i.textCodec = "wvtt";
                }
              );
          }),
          (e._appendCues = function (t, e) {
            var r = this.hls;
            if (this.config.renderTextTracksNatively) {
              var i = this.textTracks[e];
              if (!i || "disabled" === i.mode) return;
              t.forEach(function (t) {
                return Oe(i, t);
              });
            } else {
              var n = this.tracks[e];
              if (!n) return;
              var a = n.default ? "default" : "subtitles" + e;
              r.trigger(S.CUES_PARSED, {
                type: "subtitles",
                cues: t,
                track: a,
              });
            }
          }),
          (e.onFragDecrypted = function (t, e) {
            e.frag.type === _e && this.onFragLoaded(S.FRAG_LOADED, e);
          }),
          (e.onSubtitleTracksCleared = function () {
            (this.tracks = []), (this.captionsTracks = {});
          }),
          (e.onFragParsingUserdata = function (t, e) {
            this.initCea608Parsers();
            var r = this.cea608Parser1,
              i = this.cea608Parser2;
            if (this.enabled && r && i) {
              var n = e.frag,
                a = e.samples;
              if (n.type !== we || "NONE" !== this.closedCaptionsForLevel(n))
                for (var s = 0; s < a.length; s++) {
                  var o = a[s].bytes;
                  if (o) {
                    var l = this.extractCea608Data(o);
                    r.addData(a[s].pts, l[0]), i.addData(a[s].pts, l[1]);
                  }
                }
            }
          }),
          (e.onBufferFlushing = function (t, e) {
            var r = e.startOffset,
              i = e.endOffset,
              n = e.endOffsetSubtitles,
              a = e.type,
              s = this.media;
            if (s && !(s.currentTime < i)) {
              if (!a || "video" === a) {
                var o = this.captionsTracks;
                Object.keys(o).forEach(function (t) {
                  return Ue(o[t], r, i);
                });
              }
              if (
                this.config.renderTextTracksNatively &&
                0 === r &&
                void 0 !== n
              ) {
                var l = this.textTracks;
                Object.keys(l).forEach(function (t) {
                  return Ue(l[t], r, n);
                });
              }
            }
          }),
          (e.extractCea608Data = function (t) {
            for (var e = [[], []], r = 31 & t[0], i = 2, n = 0; n < r; n++) {
              var a = t[i++],
                s = 127 & t[i++],
                o = 127 & t[i++];
              if ((0 !== s || 0 !== o) && 0 != (4 & a)) {
                var l = 3 & a;
                (0 !== l && 1 !== l) || (e[l].push(s), e[l].push(o));
              }
            }
            return e;
          }),
          t
        );
      })();
      function qa(t) {
        return t.characteristics &&
          /transcribes-spoken-dialog/gi.test(t.characteristics) &&
          /describes-music-and-sound/gi.test(t.characteristics)
          ? "captions"
          : "subtitles";
      }
      function Xa(t, e) {
        return !!t && t.kind === qa(e) && Wn(e, t);
      }
      var za = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.autoLevelCapping = void 0),
              (this.firstLevel = void 0),
              (this.media = void 0),
              (this.restrictedLevels = void 0),
              (this.timer = void 0),
              (this.clientRect = void 0),
              (this.streamController = void 0),
              (this.hls = t),
              (this.autoLevelCapping = Number.POSITIVE_INFINITY),
              (this.firstLevel = -1),
              (this.media = null),
              (this.restrictedLevels = []),
              (this.timer = void 0),
              (this.clientRect = null),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.setStreamController = function (t) {
              this.streamController = t;
            }),
            (e.destroy = function () {
              this.hls && this.unregisterListener(),
                this.timer && this.stopCapping(),
                (this.media = null),
                (this.clientRect = null),
                (this.hls = this.streamController = null);
            }),
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this);
            }),
            (e.unregisterListener = function () {
              var t = this.hls;
              t.off(S.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this);
            }),
            (e.onFpsDropLevelCapping = function (t, e) {
              var r = this.hls.levels[e.droppedLevel];
              this.isLevelAllowed(r) &&
                this.restrictedLevels.push({
                  bitrate: r.bitrate,
                  height: r.height,
                  width: r.width,
                });
            }),
            (e.onMediaAttaching = function (t, e) {
              (this.media =
                e.media instanceof HTMLVideoElement ? e.media : null),
                (this.clientRect = null),
                this.timer && this.hls.levels.length && this.detectPlayerSize();
            }),
            (e.onManifestParsed = function (t, e) {
              var r = this.hls;
              (this.restrictedLevels = []),
                (this.firstLevel = e.firstLevel),
                r.config.capLevelToPlayerSize && e.video && this.startCapping();
            }),
            (e.onLevelsUpdated = function (t, e) {
              this.timer && y(this.autoLevelCapping) && this.detectPlayerSize();
            }),
            (e.onBufferCodecs = function (t, e) {
              this.hls.config.capLevelToPlayerSize &&
                e.video &&
                this.startCapping();
            }),
            (e.onMediaDetaching = function () {
              this.stopCapping();
            }),
            (e.detectPlayerSize = function () {
              if (this.media) {
                if (this.mediaHeight <= 0 || this.mediaWidth <= 0)
                  return void (this.clientRect = null);
                var t = this.hls.levels;
                if (t.length) {
                  var e = this.hls,
                    r = this.getMaxLevel(t.length - 1);
                  r !== this.autoLevelCapping &&
                    w.log(
                      "Setting autoLevelCapping to " +
                        r +
                        ": " +
                        t[r].height +
                        "p@" +
                        t[r].bitrate +
                        " for media " +
                        this.mediaWidth +
                        "x" +
                        this.mediaHeight
                    ),
                    (e.autoLevelCapping = r),
                    e.autoLevelCapping > this.autoLevelCapping &&
                      this.streamController &&
                      this.streamController.nextLevelSwitch(),
                    (this.autoLevelCapping = e.autoLevelCapping);
                }
              }
            }),
            (e.getMaxLevel = function (e) {
              var r = this,
                i = this.hls.levels;
              if (!i.length) return -1;
              var n = i.filter(function (t, i) {
                return r.isLevelAllowed(t) && i <= e;
              });
              return (
                (this.clientRect = null),
                t.getMaxLevelByMediaSize(n, this.mediaWidth, this.mediaHeight)
              );
            }),
            (e.startCapping = function () {
              this.timer ||
                ((this.autoLevelCapping = Number.POSITIVE_INFINITY),
                self.clearInterval(this.timer),
                (this.timer = self.setInterval(
                  this.detectPlayerSize.bind(this),
                  1e3
                )),
                this.detectPlayerSize());
            }),
            (e.stopCapping = function () {
              (this.restrictedLevels = []),
                (this.firstLevel = -1),
                (this.autoLevelCapping = Number.POSITIVE_INFINITY),
                this.timer &&
                  (self.clearInterval(this.timer), (this.timer = void 0));
            }),
            (e.getDimensions = function () {
              if (this.clientRect) return this.clientRect;
              var t = this.media,
                e = { width: 0, height: 0 };
              if (t) {
                var r = t.getBoundingClientRect();
                (e.width = r.width),
                  (e.height = r.height),
                  e.width ||
                    e.height ||
                    ((e.width = r.right - r.left || t.width || 0),
                    (e.height = r.bottom - r.top || t.height || 0));
              }
              return (this.clientRect = e), e;
            }),
            (e.isLevelAllowed = function (t) {
              return !this.restrictedLevels.some(function (e) {
                return (
                  t.bitrate === e.bitrate &&
                  t.width === e.width &&
                  t.height === e.height
                );
              });
            }),
            (t.getMaxLevelByMediaSize = function (t, e, r) {
              if (null == t || !t.length) return -1;
              for (
                var i, n, a = t.length - 1, s = Math.max(e, r), o = 0;
                o < t.length;
                o += 1
              ) {
                var l = t[o];
                if (
                  (l.width >= s || l.height >= s) &&
                  ((i = l),
                  !(n = t[o + 1]) ||
                    i.width !== n.width ||
                    i.height !== n.height)
                ) {
                  a = o;
                  break;
                }
              }
              return a;
            }),
            s(t, [
              {
                key: "mediaWidth",
                get: function () {
                  return this.getDimensions().width * this.contentScaleFactor;
                },
              },
              {
                key: "mediaHeight",
                get: function () {
                  return this.getDimensions().height * this.contentScaleFactor;
                },
              },
              {
                key: "contentScaleFactor",
                get: function () {
                  var t = 1;
                  if (!this.hls.config.ignoreDevicePixelRatio)
                    try {
                      t = self.devicePixelRatio;
                    } catch (t) {}
                  return t;
                },
              },
            ]),
            t
          );
        })(),
        Qa = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.isVideoPlaybackQualityAvailable = !1),
              (this.timer = void 0),
              (this.media = null),
              (this.lastTime = void 0),
              (this.lastDroppedFrames = 0),
              (this.lastDecodedFrames = 0),
              (this.streamController = void 0),
              (this.hls = t),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.setStreamController = function (t) {
              this.streamController = t;
            }),
            (e.registerListeners = function () {
              this.hls.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this);
            }),
            (e.unregisterListeners = function () {
              this.hls.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this);
            }),
            (e.destroy = function () {
              this.timer && clearInterval(this.timer),
                this.unregisterListeners(),
                (this.isVideoPlaybackQualityAvailable = !1),
                (this.media = null);
            }),
            (e.onMediaAttaching = function (t, e) {
              var r = this.hls.config;
              if (r.capLevelOnFPSDrop) {
                var i =
                  e.media instanceof self.HTMLVideoElement ? e.media : null;
                (this.media = i),
                  i &&
                    "function" == typeof i.getVideoPlaybackQuality &&
                    (this.isVideoPlaybackQualityAvailable = !0),
                  self.clearInterval(this.timer),
                  (this.timer = self.setInterval(
                    this.checkFPSInterval.bind(this),
                    r.fpsDroppedMonitoringPeriod
                  ));
              }
            }),
            (e.checkFPS = function (t, e, r) {
              var i = performance.now();
              if (e) {
                if (this.lastTime) {
                  var n = i - this.lastTime,
                    a = r - this.lastDroppedFrames,
                    s = e - this.lastDecodedFrames,
                    o = (1e3 * a) / n,
                    l = this.hls;
                  if (
                    (l.trigger(S.FPS_DROP, {
                      currentDropped: a,
                      currentDecoded: s,
                      totalDroppedFrames: r,
                    }),
                    o > 0 && a > l.config.fpsDroppedMonitoringThreshold * s)
                  ) {
                    var u = l.currentLevel;
                    w.warn(
                      "drop FPS ratio greater than max allowed value for currentLevel: " +
                        u
                    ),
                      u > 0 &&
                        (-1 === l.autoLevelCapping ||
                          l.autoLevelCapping >= u) &&
                        ((u -= 1),
                        l.trigger(S.FPS_DROP_LEVEL_CAPPING, {
                          level: u,
                          droppedLevel: l.currentLevel,
                        }),
                        (l.autoLevelCapping = u),
                        this.streamController.nextLevelSwitch());
                  }
                }
                (this.lastTime = i),
                  (this.lastDroppedFrames = r),
                  (this.lastDecodedFrames = e);
              }
            }),
            (e.checkFPSInterval = function () {
              var t = this.media;
              if (t)
                if (this.isVideoPlaybackQualityAvailable) {
                  var e = t.getVideoPlaybackQuality();
                  this.checkFPS(t, e.totalVideoFrames, e.droppedVideoFrames);
                } else
                  this.checkFPS(
                    t,
                    t.webkitDecodedFrameCount,
                    t.webkitDroppedFrameCount
                  );
            }),
            t
          );
        })(),
        Ja = "[eme]",
        $a = (function () {
          function t(e) {
            (this.hls = void 0),
              (this.config = void 0),
              (this.media = null),
              (this.keyFormatPromise = null),
              (this.keySystemAccessPromises = {}),
              (this._requestLicenseFailureCount = 0),
              (this.mediaKeySessions = []),
              (this.keyIdToKeySessionPromise = {}),
              (this.setMediaKeysQueue = t.CDMCleanupPromise
                ? [t.CDMCleanupPromise]
                : []),
              (this.onMediaEncrypted = this._onMediaEncrypted.bind(this)),
              (this.onWaitingForKey = this._onWaitingForKey.bind(this)),
              (this.debug = w.debug.bind(w, Ja)),
              (this.log = w.log.bind(w, Ja)),
              (this.warn = w.warn.bind(w, Ja)),
              (this.error = w.error.bind(w, Ja)),
              (this.hls = e),
              (this.config = e.config),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.unregisterListeners(), this.onMediaDetached();
              var t = this.config;
              (t.requestMediaKeySystemAccessFunc = null),
                (t.licenseXhrSetup = t.licenseResponseCallback = void 0),
                (t.drmSystems = t.drmSystemOptions = {}),
                (this.hls =
                  this.onMediaEncrypted =
                  this.onWaitingForKey =
                  this.keyIdToKeySessionPromise =
                    null),
                (this.config = null);
            }),
            (e.registerListeners = function () {
              this.hls.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.on(S.MEDIA_DETACHED, this.onMediaDetached, this),
                this.hls.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.on(S.MANIFEST_LOADED, this.onManifestLoaded, this);
            }),
            (e.unregisterListeners = function () {
              this.hls.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.off(S.MEDIA_DETACHED, this.onMediaDetached, this),
                this.hls.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.off(S.MANIFEST_LOADED, this.onManifestLoaded, this);
            }),
            (e.getLicenseServerUrl = function (t) {
              var e = this.config,
                r = e.drmSystems,
                i = e.widevineLicenseUrl,
                n = r[t];
              if (n) return n.licenseUrl;
              if (t === q.WIDEVINE && i) return i;
              throw new Error(
                'no license server URL configured for key-system "' + t + '"'
              );
            }),
            (e.getServerCertificateUrl = function (t) {
              var e = this.config.drmSystems[t];
              if (e) return e.serverCertificateUrl;
              this.log(
                'No Server Certificate in config.drmSystems["' + t + '"]'
              );
            }),
            (e.attemptKeySystemAccess = function (t) {
              var e = this,
                r = this.hls.levels,
                i = function (t, e, r) {
                  return !!t && r.indexOf(t) === e;
                },
                n = r
                  .map(function (t) {
                    return t.audioCodec;
                  })
                  .filter(i),
                a = r
                  .map(function (t) {
                    return t.videoCodec;
                  })
                  .filter(i);
              return (
                n.length + a.length === 0 && a.push("avc1.42e01e"),
                new Promise(function (r, i) {
                  !(function t(s) {
                    var o = s.shift();
                    e.getMediaKeysPromise(o, n, a)
                      .then(function (t) {
                        return r({ keySystem: o, mediaKeys: t });
                      })
                      .catch(function (e) {
                        s.length
                          ? t(s)
                          : i(
                              e instanceof is
                                ? e
                                : new is(
                                    {
                                      type: L.KEY_SYSTEM_ERROR,
                                      details: A.KEY_SYSTEM_NO_ACCESS,
                                      error: e,
                                      fatal: !0,
                                    },
                                    e.message
                                  )
                            );
                      });
                  })(t);
                })
              );
            }),
            (e.requestMediaKeySystemAccess = function (t, e) {
              var r = this.config.requestMediaKeySystemAccessFunc;
              if ("function" != typeof r) {
                var i =
                  "Configured requestMediaKeySystemAccess is not a function " +
                  r;
                return (
                  null === it &&
                    "http:" === self.location.protocol &&
                    (i =
                      "navigator.requestMediaKeySystemAccess is not available over insecure protocol " +
                      location.protocol),
                  Promise.reject(new Error(i))
                );
              }
              return r(t, e);
            }),
            (e.getMediaKeysPromise = function (t, e, r) {
              var i = this,
                n = (function (t, e, r, i) {
                  var n;
                  switch (t) {
                    case q.FAIRPLAY:
                      n = ["cenc", "sinf"];
                      break;
                    case q.WIDEVINE:
                    case q.PLAYREADY:
                      n = ["cenc"];
                      break;
                    case q.CLEARKEY:
                      n = ["cenc", "keyids"];
                      break;
                    default:
                      throw new Error("Unknown key-system: " + t);
                  }
                  return (function (t, e, r, i) {
                    return [
                      {
                        initDataTypes: t,
                        persistentState: i.persistentState || "optional",
                        distinctiveIdentifier:
                          i.distinctiveIdentifier || "optional",
                        sessionTypes: i.sessionTypes || [
                          i.sessionType || "temporary",
                        ],
                        audioCapabilities: e.map(function (t) {
                          return {
                            contentType: 'audio/mp4; codecs="' + t + '"',
                            robustness: i.audioRobustness || "",
                            encryptionScheme: i.audioEncryptionScheme || null,
                          };
                        }),
                        videoCapabilities: r.map(function (t) {
                          return {
                            contentType: 'video/mp4; codecs="' + t + '"',
                            robustness: i.videoRobustness || "",
                            encryptionScheme: i.videoEncryptionScheme || null,
                          };
                        }),
                      },
                    ];
                  })(n, e, r, i);
                })(t, e, r, this.config.drmSystemOptions),
                a = this.keySystemAccessPromises[t],
                s = null == a ? void 0 : a.keySystemAccess;
              if (!s) {
                this.log(
                  'Requesting encrypted media "' +
                    t +
                    '" key-system access with config: ' +
                    JSON.stringify(n)
                ),
                  (s = this.requestMediaKeySystemAccess(t, n));
                var o = (this.keySystemAccessPromises[t] = {
                  keySystemAccess: s,
                });
                return (
                  s.catch(function (e) {
                    i.log(
                      'Failed to obtain access to key-system "' + t + '": ' + e
                    );
                  }),
                  s.then(function (e) {
                    i.log(
                      'Access for key-system "' + e.keySystem + '" obtained'
                    );
                    var r = i.fetchServerCertificate(t);
                    return (
                      i.log('Create media-keys for "' + t + '"'),
                      (o.mediaKeys = e.createMediaKeys().then(function (e) {
                        return (
                          i.log('Media-keys created for "' + t + '"'),
                          r.then(function (r) {
                            return r
                              ? i.setMediaKeysServerCertificate(e, t, r)
                              : e;
                          })
                        );
                      })),
                      o.mediaKeys.catch(function (e) {
                        i.error(
                          'Failed to create media-keys for "' + t + '"}: ' + e
                        );
                      }),
                      o.mediaKeys
                    );
                  })
                );
              }
              return s.then(function () {
                return a.mediaKeys;
              });
            }),
            (e.createMediaKeySessionContext = function (t) {
              var e = t.decryptdata,
                r = t.keySystem,
                i = t.mediaKeys;
              this.log(
                'Creating key-system session "' +
                  r +
                  '" keyId: ' +
                  Lt(e.keyId || [])
              );
              var n = i.createSession(),
                a = {
                  decryptdata: e,
                  keySystem: r,
                  mediaKeys: i,
                  mediaKeysSession: n,
                  keyStatus: "status-pending",
                };
              return this.mediaKeySessions.push(a), a;
            }),
            (e.renewKeySession = function (t) {
              var e = t.decryptdata;
              if (e.pssh) {
                var r = this.createMediaKeySessionContext(t),
                  i = this.getKeyIdString(e);
                this.keyIdToKeySessionPromise[i] =
                  this.generateRequestWithPreferredKeySession(
                    r,
                    "cenc",
                    e.pssh,
                    "expired"
                  );
              } else
                this.warn(
                  "Could not renew expired session. Missing pssh initData."
                );
              this.removeSession(t);
            }),
            (e.getKeyIdString = function (t) {
              if (!t)
                throw new Error(
                  "Could not read keyId of undefined decryptdata"
                );
              if (null === t.keyId) throw new Error("keyId is null");
              return Lt(t.keyId);
            }),
            (e.updateKeySession = function (t, e) {
              var r,
                i = t.mediaKeysSession;
              return (
                this.log(
                  'Updating key-session "' +
                    i.sessionId +
                    '" for keyID ' +
                    Lt((null == (r = t.decryptdata) ? void 0 : r.keyId) || []) +
                    "\n      } (data length: " +
                    (e ? e.byteLength : e) +
                    ")"
                ),
                i.update(e)
              );
            }),
            (e.selectKeySystemFormat = function (t) {
              var e = Object.keys(t.levelkeys || {});
              return (
                this.keyFormatPromise ||
                  (this.log(
                    "Selecting key-system from fragment (sn: " +
                      t.sn +
                      " " +
                      t.type +
                      ": " +
                      t.level +
                      ") key formats " +
                      e.join(", ")
                  ),
                  (this.keyFormatPromise = this.getKeyFormatPromise(e))),
                this.keyFormatPromise
              );
            }),
            (e.getKeyFormatPromise = function (t) {
              var e = this;
              return new Promise(function (r, i) {
                var n = et(e.config),
                  a = t.map($).filter(function (t) {
                    return !!t && -1 !== n.indexOf(t);
                  });
                return e
                  .getKeySystemSelectionPromise(a)
                  .then(function (t) {
                    var e = t.keySystem,
                      n = tt(e);
                    n
                      ? r(n)
                      : i(
                          new Error(
                            'Unable to find format for key-system "' + e + '"'
                          )
                        );
                  })
                  .catch(i);
              });
            }),
            (e.loadKey = function (t) {
              var e = this,
                r = t.keyInfo.decryptdata,
                i = this.getKeyIdString(r),
                n =
                  "(keyId: " +
                  i +
                  ' format: "' +
                  r.keyFormat +
                  '" method: ' +
                  r.method +
                  " uri: " +
                  r.uri +
                  ")";
              this.log("Starting session for key " + n);
              var a = this.keyIdToKeySessionPromise[i];
              return (
                a ||
                  (a = this.keyIdToKeySessionPromise[i] =
                    this.getKeySystemForKeyPromise(r).then(function (i) {
                      var a = i.keySystem,
                        s = i.mediaKeys;
                      return (
                        e.throwIfDestroyed(),
                        e.log(
                          "Handle encrypted media sn: " +
                            t.frag.sn +
                            " " +
                            t.frag.type +
                            ": " +
                            t.frag.level +
                            " using key " +
                            n
                        ),
                        e.attemptSetMediaKeys(a, s).then(function () {
                          e.throwIfDestroyed();
                          var t = e.createMediaKeySessionContext({
                            keySystem: a,
                            mediaKeys: s,
                            decryptdata: r,
                          });
                          return e.generateRequestWithPreferredKeySession(
                            t,
                            "cenc",
                            r.pssh,
                            "playlist-key"
                          );
                        })
                      );
                    })).catch(function (t) {
                    return e.handleError(t);
                  }),
                a
              );
            }),
            (e.throwIfDestroyed = function (t) {
              if (!this.hls) throw new Error("invalid state");
            }),
            (e.handleError = function (t) {
              this.hls &&
                (this.error(t.message),
                t instanceof is
                  ? this.hls.trigger(S.ERROR, t.data)
                  : this.hls.trigger(S.ERROR, {
                      type: L.KEY_SYSTEM_ERROR,
                      details: A.KEY_SYSTEM_NO_KEYS,
                      error: t,
                      fatal: !0,
                    }));
            }),
            (e.getKeySystemForKeyPromise = function (t) {
              var e = this.getKeyIdString(t),
                r = this.keyIdToKeySessionPromise[e];
              if (!r) {
                var i = $(t.keyFormat),
                  n = i ? [i] : et(this.config);
                return this.attemptKeySystemAccess(n);
              }
              return r;
            }),
            (e.getKeySystemSelectionPromise = function (t) {
              if ((t.length || (t = et(this.config)), 0 === t.length))
                throw new is(
                  {
                    type: L.KEY_SYSTEM_ERROR,
                    details: A.KEY_SYSTEM_NO_CONFIGURED_LICENSE,
                    fatal: !0,
                  },
                  "Missing key-system license configuration options " +
                    JSON.stringify({ drmSystems: this.config.drmSystems })
                );
              return this.attemptKeySystemAccess(t);
            }),
            (e._onMediaEncrypted = function (t) {
              var e = this,
                r = t.initDataType,
                i = t.initData;
              if (
                (this.debug(
                  '"' + t.type + '" event: init data type: "' + r + '"'
                ),
                null !== i)
              ) {
                var n, a;
                if ("sinf" === r && this.config.drmSystems[q.FAIRPLAY]) {
                  var s = bt(new Uint8Array(i));
                  try {
                    var o = V(JSON.parse(s).sinf),
                      l = Bt(new Uint8Array(o));
                    if (!l) return;
                    (n = l.subarray(8, 24)), (a = q.FAIRPLAY);
                  } catch (t) {
                    return void this.warn(
                      'Failed to parse sinf "encrypted" event message initData'
                    );
                  }
                } else {
                  var u = (function (t) {
                    if (!(t instanceof ArrayBuffer) || t.byteLength < 32)
                      return null;
                    var e = {
                        version: 0,
                        systemId: "",
                        kids: null,
                        data: null,
                      },
                      r = new DataView(t),
                      i = r.getUint32(0);
                    if (t.byteLength !== i && i > 44) return null;
                    if (1886614376 !== r.getUint32(4)) return null;
                    if (((e.version = r.getUint32(8) >>> 24), e.version > 1))
                      return null;
                    e.systemId = Lt(new Uint8Array(t, 12, 16));
                    var n = r.getUint32(28);
                    if (0 === e.version) {
                      if (i - 32 < n) return null;
                      e.data = new Uint8Array(t, 32, n);
                    } else if (1 === e.version) {
                      e.kids = [];
                      for (var a = 0; a < n; a++)
                        e.kids.push(new Uint8Array(t, 32 + 16 * a, 16));
                    }
                    return e;
                  })(i);
                  if (null === u) return;
                  0 === u.version &&
                    u.systemId === Z &&
                    u.data &&
                    (n = u.data.subarray(8, 24)),
                    (a = (function (t) {
                      if (t === Z) return q.WIDEVINE;
                    })(u.systemId));
                }
                if (a && n) {
                  for (
                    var h,
                      d = Lt(n),
                      c = this.keyIdToKeySessionPromise,
                      f = this.mediaKeySessions,
                      g = c[d],
                      v = function () {
                        var t = f[m],
                          a = t.decryptdata;
                        if (a.pssh || !a.keyId) return 0;
                        var s = Lt(a.keyId);
                        return d === s ||
                          -1 !== a.uri.replace(/-/g, "").indexOf(d)
                          ? ((g = c[s]),
                            delete c[s],
                            (a.pssh = new Uint8Array(i)),
                            (a.keyId = n),
                            (g = c[d] =
                              g.then(function () {
                                return e.generateRequestWithPreferredKeySession(
                                  t,
                                  r,
                                  i,
                                  "encrypted-event-key-match"
                                );
                              })),
                            1)
                          : void 0;
                      },
                      m = 0;
                    m < f.length && (0 === (h = v()) || 1 !== h);
                    m++
                  );
                  g ||
                    (g = c[d] =
                      this.getKeySystemSelectionPromise([a]).then(function (t) {
                        var a,
                          s = t.keySystem,
                          o = t.mediaKeys;
                        e.throwIfDestroyed();
                        var l = new Xt(
                          "ISO-23001-7",
                          d,
                          null != (a = tt(s)) ? a : ""
                        );
                        return (
                          (l.pssh = new Uint8Array(i)),
                          (l.keyId = n),
                          e.attemptSetMediaKeys(s, o).then(function () {
                            e.throwIfDestroyed();
                            var t = e.createMediaKeySessionContext({
                              decryptdata: l,
                              keySystem: s,
                              mediaKeys: o,
                            });
                            return e.generateRequestWithPreferredKeySession(
                              t,
                              r,
                              i,
                              "encrypted-event-no-match"
                            );
                          })
                        );
                      })),
                    g.catch(function (t) {
                      return e.handleError(t);
                    });
                }
              }
            }),
            (e._onWaitingForKey = function (t) {
              this.log('"' + t.type + '" event');
            }),
            (e.attemptSetMediaKeys = function (t, e) {
              var r = this,
                i = this.setMediaKeysQueue.slice();
              this.log('Setting media-keys for "' + t + '"');
              var n = Promise.all(i).then(function () {
                if (!r.media)
                  throw new Error(
                    "Attempted to set mediaKeys without media element attached"
                  );
                return r.media.setMediaKeys(e);
              });
              return (
                this.setMediaKeysQueue.push(n),
                n.then(function () {
                  r.log('Media-keys set for "' + t + '"'),
                    i.push(n),
                    (r.setMediaKeysQueue = r.setMediaKeysQueue.filter(function (
                      t
                    ) {
                      return -1 === i.indexOf(t);
                    }));
                })
              );
            }),
            (e.generateRequestWithPreferredKeySession = function (t, e, r, i) {
              var n,
                a,
                s = this,
                o =
                  null == (n = this.config.drmSystems) ||
                  null == (a = n[t.keySystem])
                    ? void 0
                    : a.generateRequest;
              if (o)
                try {
                  var l = o.call(this.hls, e, r, t);
                  if (!l)
                    throw new Error(
                      "Invalid response from configured generateRequest filter"
                    );
                  (e = l.initDataType),
                    (r = t.decryptdata.pssh =
                      l.initData ? new Uint8Array(l.initData) : null);
                } catch (t) {
                  var u;
                  if (
                    (this.warn(t.message),
                    null != (u = this.hls) && u.config.debug)
                  )
                    throw t;
                }
              if (null === r)
                return (
                  this.log(
                    'Skipping key-session request for "' + i + '" (no initData)'
                  ),
                  Promise.resolve(t)
                );
              var h = this.getKeyIdString(t.decryptdata);
              this.log(
                'Generating key-session request for "' +
                  i +
                  '": ' +
                  h +
                  " (init data type: " +
                  e +
                  " length: " +
                  (r ? r.byteLength : null) +
                  ")"
              );
              var d = new Un(),
                c = (t._onmessage = function (e) {
                  var r = t.mediaKeysSession;
                  if (r) {
                    var i = e.messageType,
                      n = e.message;
                    s.log(
                      '"' +
                        i +
                        '" message event for session "' +
                        r.sessionId +
                        '" message size: ' +
                        n.byteLength
                    ),
                      "license-request" === i || "license-renewal" === i
                        ? s.renewLicense(t, n).catch(function (t) {
                            s.handleError(t), d.emit("error", t);
                          })
                        : "license-release" === i
                        ? t.keySystem === q.FAIRPLAY &&
                          (s.updateKeySession(t, W("acknowledged")),
                          s.removeSession(t))
                        : s.warn(
                            'unhandled media key message type "' + i + '"'
                          );
                  } else d.emit("error", new Error("invalid state"));
                }),
                f = (t._onkeystatuseschange = function (e) {
                  if (t.mediaKeysSession) {
                    s.onKeyStatusChange(t);
                    var r = t.keyStatus;
                    d.emit("keyStatus", r),
                      "expired" === r &&
                        (s.warn(t.keySystem + " expired for key " + h),
                        s.renewKeySession(t));
                  } else d.emit("error", new Error("invalid state"));
                });
              t.mediaKeysSession.addEventListener("message", c),
                t.mediaKeysSession.addEventListener("keystatuseschange", f);
              var g = new Promise(function (t, e) {
                d.on("error", e),
                  d.on("keyStatus", function (r) {
                    r.startsWith("usable")
                      ? t()
                      : "output-restricted" === r
                      ? e(
                          new is(
                            {
                              type: L.KEY_SYSTEM_ERROR,
                              details: A.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED,
                              fatal: !1,
                            },
                            "HDCP level output restricted"
                          )
                        )
                      : "internal-error" === r
                      ? e(
                          new is(
                            {
                              type: L.KEY_SYSTEM_ERROR,
                              details: A.KEY_SYSTEM_STATUS_INTERNAL_ERROR,
                              fatal: !0,
                            },
                            'key status changed to "' + r + '"'
                          )
                        )
                      : "expired" === r
                      ? e(new Error("key expired while generating request"))
                      : s.warn('unhandled key status change "' + r + '"');
                  });
              });
              return t.mediaKeysSession
                .generateRequest(e, r)
                .then(function () {
                  var e;
                  s.log(
                    'Request generated for key-session "' +
                      (null == (e = t.mediaKeysSession)
                        ? void 0
                        : e.sessionId) +
                      '" keyId: ' +
                      h
                  );
                })
                .catch(function (t) {
                  throw new is(
                    {
                      type: L.KEY_SYSTEM_ERROR,
                      details: A.KEY_SYSTEM_NO_SESSION,
                      error: t,
                      fatal: !1,
                    },
                    "Error generating key-session request: " + t
                  );
                })
                .then(function () {
                  return g;
                })
                .catch(function (e) {
                  throw (d.removeAllListeners(), s.removeSession(t), e);
                })
                .then(function () {
                  return d.removeAllListeners(), t;
                });
            }),
            (e.onKeyStatusChange = function (t) {
              var e = this;
              t.mediaKeysSession.keyStatuses.forEach(function (r, i) {
                e.log(
                  'key status change "' +
                    r +
                    '" for keyStatuses keyId: ' +
                    Lt(
                      "buffer" in i
                        ? new Uint8Array(i.buffer, i.byteOffset, i.byteLength)
                        : new Uint8Array(i)
                    ) +
                    " session keyId: " +
                    Lt(new Uint8Array(t.decryptdata.keyId || [])) +
                    " uri: " +
                    t.decryptdata.uri
                ),
                  (t.keyStatus = r);
              });
            }),
            (e.fetchServerCertificate = function (t) {
              var e = this.config,
                r = new (0, e.loader)(e),
                n = this.getServerCertificateUrl(t);
              return n
                ? (this.log('Fetching server certificate for "' + t + '"'),
                  new Promise(function (a, s) {
                    var o = { responseType: "arraybuffer", url: n },
                      l = e.certLoadPolicy.default,
                      u = {
                        loadPolicy: l,
                        timeout: l.maxLoadTimeMs,
                        maxRetry: 0,
                        retryDelay: 0,
                        maxRetryDelay: 0,
                      },
                      h = {
                        onSuccess: function (t, e, r, i) {
                          a(t.data);
                        },
                        onError: function (e, r, a, l) {
                          s(
                            new is(
                              {
                                type: L.KEY_SYSTEM_ERROR,
                                details:
                                  A.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,
                                fatal: !0,
                                networkDetails: a,
                                response: i({ url: o.url, data: void 0 }, e),
                              },
                              '"' +
                                t +
                                '" certificate request failed (' +
                                n +
                                "). Status: " +
                                e.code +
                                " (" +
                                e.text +
                                ")"
                            )
                          );
                        },
                        onTimeout: function (e, r, i) {
                          s(
                            new is(
                              {
                                type: L.KEY_SYSTEM_ERROR,
                                details:
                                  A.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,
                                fatal: !0,
                                networkDetails: i,
                                response: { url: o.url, data: void 0 },
                              },
                              '"' +
                                t +
                                '" certificate request timed out (' +
                                n +
                                ")"
                            )
                          );
                        },
                        onAbort: function (t, e, r) {
                          s(new Error("aborted"));
                        },
                      };
                    r.load(o, u, h);
                  }))
                : Promise.resolve();
            }),
            (e.setMediaKeysServerCertificate = function (t, e, r) {
              var i = this;
              return new Promise(function (n, a) {
                t.setServerCertificate(r)
                  .then(function (a) {
                    i.log(
                      "setServerCertificate " +
                        (a ? "success" : "not supported by CDM") +
                        " (" +
                        (null == r ? void 0 : r.byteLength) +
                        ') on "' +
                        e +
                        '"'
                    ),
                      n(t);
                  })
                  .catch(function (t) {
                    a(
                      new is(
                        {
                          type: L.KEY_SYSTEM_ERROR,
                          details:
                            A.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED,
                          error: t,
                          fatal: !0,
                        },
                        t.message
                      )
                    );
                  });
              });
            }),
            (e.renewLicense = function (t, e) {
              var r = this;
              return this.requestLicense(t, new Uint8Array(e)).then(function (
                e
              ) {
                return r
                  .updateKeySession(t, new Uint8Array(e))
                  .catch(function (t) {
                    throw new is(
                      {
                        type: L.KEY_SYSTEM_ERROR,
                        details: A.KEY_SYSTEM_SESSION_UPDATE_FAILED,
                        error: t,
                        fatal: !0,
                      },
                      t.message
                    );
                  });
              });
            }),
            (e.unpackPlayReadyKeyMessage = function (t, e) {
              var r = String.fromCharCode.apply(
                null,
                new Uint16Array(e.buffer)
              );
              if (!r.includes("PlayReadyKeyMessage"))
                return (
                  t.setRequestHeader("Content-Type", "text/xml; charset=utf-8"),
                  e
                );
              var i = new DOMParser().parseFromString(r, "application/xml"),
                n = i.querySelectorAll("HttpHeader");
              if (n.length > 0)
                for (var a, s = 0, o = n.length; s < o; s++) {
                  var l,
                    u,
                    h =
                      null == (l = (a = n[s]).querySelector("name"))
                        ? void 0
                        : l.textContent,
                    d =
                      null == (u = a.querySelector("value"))
                        ? void 0
                        : u.textContent;
                  h && d && t.setRequestHeader(h, d);
                }
              var c = i.querySelector("Challenge"),
                f = null == c ? void 0 : c.textContent;
              if (!f) throw new Error("Cannot find <Challenge> in key message");
              return W(atob(f));
            }),
            (e.setupLicenseXHR = function (t, e, r, i) {
              var n = this,
                a = this.config.licenseXhrSetup;
              return a
                ? Promise.resolve()
                    .then(function () {
                      if (!r.decryptdata) throw new Error("Key removed");
                      return a.call(n.hls, t, e, r, i);
                    })
                    .catch(function (s) {
                      if (!r.decryptdata) throw s;
                      return t.open("POST", e, !0), a.call(n.hls, t, e, r, i);
                    })
                    .then(function (r) {
                      return (
                        t.readyState || t.open("POST", e, !0),
                        { xhr: t, licenseChallenge: r || i }
                      );
                    })
                : (t.open("POST", e, !0),
                  Promise.resolve({ xhr: t, licenseChallenge: i }));
            }),
            (e.requestLicense = function (t, e) {
              var r = this,
                i = this.config.keyLoadPolicy.default;
              return new Promise(function (n, a) {
                var s = r.getLicenseServerUrl(t.keySystem);
                r.log("Sending license request to URL: " + s);
                var o = new XMLHttpRequest();
                (o.responseType = "arraybuffer"),
                  (o.onreadystatechange = function () {
                    if (!r.hls || !t.mediaKeysSession)
                      return a(new Error("invalid state"));
                    if (4 === o.readyState)
                      if (200 === o.status) {
                        r._requestLicenseFailureCount = 0;
                        var l = o.response;
                        r.log(
                          "License received " +
                            (l instanceof ArrayBuffer ? l.byteLength : l)
                        );
                        var u = r.config.licenseResponseCallback;
                        if (u)
                          try {
                            l = u.call(r.hls, o, s, t);
                          } catch (t) {
                            r.error(t);
                          }
                        n(l);
                      } else {
                        var h = i.errorRetry,
                          d = h ? h.maxNumRetry : 0;
                        if (
                          (r._requestLicenseFailureCount++,
                          r._requestLicenseFailureCount > d ||
                            (o.status >= 400 && o.status < 500))
                        )
                          a(
                            new is(
                              {
                                type: L.KEY_SYSTEM_ERROR,
                                details: A.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                fatal: !0,
                                networkDetails: o,
                                response: {
                                  url: s,
                                  data: void 0,
                                  code: o.status,
                                  text: o.statusText,
                                },
                              },
                              "License Request XHR failed (" +
                                s +
                                "). Status: " +
                                o.status +
                                " (" +
                                o.statusText +
                                ")"
                            )
                          );
                        else {
                          var c = d - r._requestLicenseFailureCount + 1;
                          r.warn(
                            "Retrying license request, " + c + " attempts left"
                          ),
                            r.requestLicense(t, e).then(n, a);
                        }
                      }
                  }),
                  t.licenseXhr &&
                    t.licenseXhr.readyState !== XMLHttpRequest.DONE &&
                    t.licenseXhr.abort(),
                  (t.licenseXhr = o),
                  r.setupLicenseXHR(o, s, t, e).then(function (e) {
                    var i = e.xhr,
                      n = e.licenseChallenge;
                    t.keySystem == q.PLAYREADY &&
                      (n = r.unpackPlayReadyKeyMessage(i, n)),
                      i.send(n);
                  });
              });
            }),
            (e.onMediaAttached = function (t, e) {
              if (this.config.emeEnabled) {
                var r = e.media;
                (this.media = r),
                  r.addEventListener("encrypted", this.onMediaEncrypted),
                  r.addEventListener("waitingforkey", this.onWaitingForKey);
              }
            }),
            (e.onMediaDetached = function () {
              var e = this,
                r = this.media,
                i = this.mediaKeySessions;
              r &&
                (r.removeEventListener("encrypted", this.onMediaEncrypted),
                r.removeEventListener("waitingforkey", this.onWaitingForKey),
                (this.media = null)),
                (this._requestLicenseFailureCount = 0),
                (this.setMediaKeysQueue = []),
                (this.mediaKeySessions = []),
                (this.keyIdToKeySessionPromise = {}),
                Xt.clearKeyUriToKeyIdMap();
              var n = i.length;
              t.CDMCleanupPromise = Promise.all(
                i
                  .map(function (t) {
                    return e.removeSession(t);
                  })
                  .concat(
                    null == r
                      ? void 0
                      : r.setMediaKeys(null).catch(function (t) {
                          e.log("Could not clear media keys: " + t);
                        })
                  )
              )
                .then(function () {
                  n &&
                    (e.log(
                      "finished closing key sessions and clearing media keys"
                    ),
                    (i.length = 0));
                })
                .catch(function (t) {
                  e.log("Could not close sessions and clear media keys: " + t);
                });
            }),
            (e.onManifestLoading = function () {
              this.keyFormatPromise = null;
            }),
            (e.onManifestLoaded = function (t, e) {
              var r = e.sessionKeys;
              if (r && this.config.emeEnabled && !this.keyFormatPromise) {
                var i = r.reduce(function (t, e) {
                  return (
                    -1 === t.indexOf(e.keyFormat) && t.push(e.keyFormat), t
                  );
                }, []);
                this.log(
                  "Selecting key-system from session-keys " + i.join(", ")
                ),
                  (this.keyFormatPromise = this.getKeyFormatPromise(i));
              }
            }),
            (e.removeSession = function (t) {
              var e = this,
                r = t.mediaKeysSession,
                i = t.licenseXhr;
              if (r) {
                this.log(
                  "Remove licenses and keys and close session " + r.sessionId
                ),
                  t._onmessage &&
                    (r.removeEventListener("message", t._onmessage),
                    (t._onmessage = void 0)),
                  t._onkeystatuseschange &&
                    (r.removeEventListener(
                      "keystatuseschange",
                      t._onkeystatuseschange
                    ),
                    (t._onkeystatuseschange = void 0)),
                  i && i.readyState !== XMLHttpRequest.DONE && i.abort(),
                  (t.mediaKeysSession = t.decryptdata = t.licenseXhr = void 0);
                var n = this.mediaKeySessions.indexOf(t);
                return (
                  n > -1 && this.mediaKeySessions.splice(n, 1),
                  r
                    .remove()
                    .catch(function (t) {
                      e.log("Could not remove session: " + t);
                    })
                    .then(function () {
                      return r.close();
                    })
                    .catch(function (t) {
                      e.log("Could not close session: " + t);
                    })
                );
              }
            }),
            t
          );
        })();
      $a.CDMCleanupPromise = void 0;
      var Za,
        ts,
        es,
        rs,
        is = (function (t) {
          function e(e, r) {
            var i;
            return (
              ((i = t.call(this, r) || this).data = void 0),
              e.error || (e.error = new Error(r)),
              (i.data = e),
              (e.err = e.error),
              i
            );
          }
          return l(e, t), e;
        })(c(Error));
      !(function (t) {
        (t.MANIFEST = "m"),
          (t.AUDIO = "a"),
          (t.VIDEO = "v"),
          (t.MUXED = "av"),
          (t.INIT = "i"),
          (t.CAPTION = "c"),
          (t.TIMED_TEXT = "tt"),
          (t.KEY = "k"),
          (t.OTHER = "o");
      })(Za || (Za = {})),
        (function (t) {
          (t.DASH = "d"), (t.HLS = "h"), (t.SMOOTH = "s"), (t.OTHER = "o");
        })(ts || (ts = {})),
        (function (t) {
          (t.OBJECT = "CMCD-Object"),
            (t.REQUEST = "CMCD-Request"),
            (t.SESSION = "CMCD-Session"),
            (t.STATUS = "CMCD-Status");
        })(es || (es = {}));
      var ns =
          (((rs = {})[es.OBJECT] = ["br", "d", "ot", "tb"]),
          (rs[es.REQUEST] = ["bl", "dl", "mtp", "nor", "nrr", "su"]),
          (rs[es.SESSION] = ["cid", "pr", "sf", "sid", "st", "v"]),
          (rs[es.STATUS] = ["bs", "rtp"]),
          rs),
        as = function t(e, r) {
          (this.value = void 0),
            (this.params = void 0),
            Array.isArray(e) &&
              (e = e.map(function (e) {
                return e instanceof t ? e : new t(e);
              })),
            (this.value = e),
            (this.params = r);
        },
        ss = function (t) {
          (this.description = void 0), (this.description = t);
        },
        os = "Dict";
      function ls(t, e, r, i) {
        return new Error(
          "failed to " +
            t +
            ' "' +
            ((n = e),
            (Array.isArray(n)
              ? JSON.stringify(n)
              : n instanceof Map
              ? "Map{}"
              : n instanceof Set
              ? "Set{}"
              : "object" == typeof n
              ? JSON.stringify(n)
              : String(n)) + '" as ') +
            r,
          { cause: i }
        );
        var n;
      }
      var us = "Bare Item",
        hs = "Boolean",
        ds = "Byte Sequence",
        cs = "Decimal",
        fs = "Integer",
        gs = /[\x00-\x1f\x7f]+/,
        vs = "Token",
        ms = "Key";
      function ps(t, e, r) {
        return ls("serialize", t, e, r);
      }
      function ys(t) {
        if (!1 === ArrayBuffer.isView(t)) throw ps(t, ds);
        return (
          ":" + ((e = t), btoa(String.fromCharCode.apply(String, e)) + ":")
        );
        var e;
      }
      function Es(t) {
        if (
          (function (t) {
            return t < -999999999999999 || 999999999999999 < t;
          })(t)
        )
          throw ps(t, fs);
        return t.toString();
      }
      function Ts(t, e) {
        if (t < 0) return -Ts(-t, e);
        var r = Math.pow(10, e);
        if (Math.abs(((t * r) % 1) - 0.5) < Number.EPSILON) {
          var i = Math.floor(t * r);
          return (i % 2 == 0 ? i : i + 1) / r;
        }
        return Math.round(t * r) / r;
      }
      function Ss(t) {
        var e = Ts(t, 3);
        if (Math.floor(Math.abs(e)).toString().length > 12) throw ps(t, cs);
        var r = e.toString();
        return r.includes(".") ? r : r + ".0";
      }
      var Ls = "String";
      function As(t) {
        var e,
          r = (e = t).description || e.toString().slice(7, -1);
        if (!1 === /^([a-zA-Z*])([!#$%&'*+\-.^_`|~\w:/]*)$/.test(r))
          throw ps(r, vs);
        return r;
      }
      function Rs(t) {
        switch (typeof t) {
          case "number":
            if (!y(t)) throw ps(t, us);
            return Number.isInteger(t) ? Es(t) : Ss(t);
          case "string":
            return (function (t) {
              if (gs.test(t)) throw ps(t, Ls);
              return '"' + t.replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"';
            })(t);
          case "symbol":
            return As(t);
          case "boolean":
            return (function (t) {
              if ("boolean" != typeof t) throw ps(t, hs);
              return t ? "?1" : "?0";
            })(t);
          case "object":
            if (t instanceof Date)
              return (function (t) {
                return "@" + Es(t.getTime() / 1e3);
              })(t);
            if (t instanceof Uint8Array) return ys(t);
            if (t instanceof ss) return As(t);
          default:
            throw ps(t, us);
        }
      }
      function ks(t) {
        if (!1 === /^[a-z*][a-z0-9\-_.*]*$/.test(t)) throw ps(t, ms);
        return t;
      }
      function bs(t) {
        return null == t
          ? ""
          : Object.entries(t)
              .map(function (t) {
                var e = t[0],
                  r = t[1];
                return !0 === r ? ";" + ks(e) : ";" + ks(e) + "=" + Rs(r);
              })
              .join("");
      }
      function Ds(t) {
        return t instanceof as ? "" + Rs(t.value) + bs(t.params) : Rs(t);
      }
      function Is(t, e) {
        var r;
        if ((void 0 === e && (e = { whitespace: !0 }), "object" != typeof t))
          throw ps(t, os);
        var i = t instanceof Map ? t.entries() : Object.entries(t),
          n = null != (r = e) && r.whitespace ? " " : "";
        return Array.from(i)
          .map(function (t) {
            var e = t[0],
              r = t[1];
            r instanceof as == 0 && (r = new as(r));
            var i,
              n = ks(e);
            return (
              !0 === r.value
                ? (n += bs(r.params))
                : ((n += "="),
                  Array.isArray(r.value)
                    ? (n +=
                        "(" +
                        (i = r).value.map(Ds).join(" ") +
                        ")" +
                        bs(i.params))
                    : (n += Ds(r))),
              n
            );
          })
          .join("," + n);
      }
      var ws = function (t) {
          return "ot" === t || "sf" === t || "st" === t;
        },
        Cs = function (t) {
          return "number" == typeof t
            ? y(t)
            : null != t && "" !== t && !1 !== t;
        },
        _s = function (t) {
          return Math.round(t);
        },
        xs = function (t) {
          return 100 * _s(t / 100);
        },
        Ps = {
          br: _s,
          d: _s,
          bl: xs,
          dl: xs,
          mtp: xs,
          nor: function (t, e) {
            return (
              null != e &&
                e.baseUrl &&
                (t = (function (t, e) {
                  var r = new URL(t),
                    i = new URL(e);
                  if (r.origin !== i.origin) return t;
                  for (
                    var n = r.pathname.split("/").slice(1),
                      a = i.pathname.split("/").slice(1, -1);
                    n[0] === a[0];

                  )
                    n.shift(), a.shift();
                  for (; a.length; ) a.shift(), n.unshift("..");
                  return n.join("/");
                })(t, e.baseUrl)),
              encodeURIComponent(t)
            );
          },
          rtp: xs,
          tb: _s,
        };
      function Fs(t, e) {
        return (
          void 0 === e && (e = {}),
          t
            ? (function (t, e) {
                return Is(t, e);
              })(
                (function (t, e) {
                  var r = {};
                  if (null == t || "object" != typeof t) return r;
                  var i = Object.keys(t).sort(),
                    n = o({}, Ps, null == e ? void 0 : e.formatters),
                    a = null == e ? void 0 : e.filter;
                  return (
                    i.forEach(function (i) {
                      if (null == a || !a(i)) {
                        var s = t[i],
                          o = n[i];
                        o && (s = o(s, e)),
                          ("v" === i && 1 === s) ||
                            ("pr" == i && 1 === s) ||
                            (Cs(s) &&
                              (ws(i) && "string" == typeof s && (s = new ss(s)),
                              (r[i] = s)));
                      }
                    }),
                    r
                  );
                })(t, e),
                o({ whitespace: !1 }, e)
              )
            : ""
        );
      }
      function Ms(t, e, r) {
        return o(
          t,
          (function (t, e) {
            var r;
            if ((void 0 === e && (e = {}), !t)) return {};
            var i = Object.entries(t),
              n = Object.entries(ns).concat(
                Object.entries(
                  (null == (r = e) ? void 0 : r.customHeaderMap) || {}
                )
              ),
              a = i.reduce(function (t, e) {
                var r,
                  i = e[0],
                  a = e[1],
                  s =
                    (null ==
                    (r = n.find(function (t) {
                      return t[1].includes(i);
                    }))
                      ? void 0
                      : r[0]) || es.REQUEST;
                return null != t[s] || (t[s] = {}), (t[s][i] = a), t;
              }, {});
            return Object.entries(a).reduce(function (t, r) {
              var i = r[0],
                n = r[1];
              return (t[i] = Fs(n, e)), t;
            }, {});
          })(e, r)
        );
      }
      var Os = "CMCD",
        Ns = /CMCD=[^&#]+/;
      function Us(t, e, r) {
        var i = (function (t, e) {
          if ((void 0 === e && (e = {}), !t)) return "";
          var r = Fs(t, e);
          return Os + "=" + encodeURIComponent(r);
        })(e, r);
        if (!i) return t;
        if (Ns.test(t)) return t.replace(Ns, i);
        var n = t.includes("?") ? "&" : "?";
        return "" + t + n + i;
      }
      var Bs = (function () {
          function t(t) {
            var e = this;
            (this.hls = void 0),
              (this.config = void 0),
              (this.media = void 0),
              (this.sid = void 0),
              (this.cid = void 0),
              (this.useHeaders = !1),
              (this.includeKeys = void 0),
              (this.initialized = !1),
              (this.starved = !1),
              (this.buffering = !0),
              (this.audioBuffer = void 0),
              (this.videoBuffer = void 0),
              (this.onWaiting = function () {
                e.initialized && (e.starved = !0), (e.buffering = !0);
              }),
              (this.onPlaying = function () {
                e.initialized || (e.initialized = !0), (e.buffering = !1);
              }),
              (this.applyPlaylistData = function (t) {
                try {
                  e.apply(t, { ot: Za.MANIFEST, su: !e.initialized });
                } catch (t) {
                  w.warn("Could not generate manifest CMCD data.", t);
                }
              }),
              (this.applyFragmentData = function (t) {
                try {
                  var r = t.frag,
                    i = e.hls.levels[r.level],
                    n = e.getObjectType(r),
                    a = { d: 1e3 * r.duration, ot: n };
                  (n !== Za.VIDEO && n !== Za.AUDIO && n != Za.MUXED) ||
                    ((a.br = i.bitrate / 1e3),
                    (a.tb = e.getTopBandwidth(n) / 1e3),
                    (a.bl = e.getBufferLength(n))),
                    e.apply(t, a);
                } catch (t) {
                  w.warn("Could not generate segment CMCD data.", t);
                }
              }),
              (this.hls = t);
            var r = (this.config = t.config),
              i = r.cmcd;
            null != i &&
              ((r.pLoader = this.createPlaylistLoader()),
              (r.fLoader = this.createFragmentLoader()),
              (this.sid =
                i.sessionId ||
                (function () {
                  try {
                    return crypto.randomUUID();
                  } catch (i) {
                    try {
                      var t = URL.createObjectURL(new Blob()),
                        e = t.toString();
                      return (
                        URL.revokeObjectURL(t), e.slice(e.lastIndexOf("/") + 1)
                      );
                    } catch (t) {
                      var r = new Date().getTime();
                      return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(
                        /[xy]/g,
                        function (t) {
                          var e = (r + 16 * Math.random()) % 16 | 0;
                          return (
                            (r = Math.floor(r / 16)),
                            ("x" == t ? e : (3 & e) | 8).toString(16)
                          );
                        }
                      );
                    }
                  }
                })()),
              (this.cid = i.contentId),
              (this.useHeaders = !0 === i.useHeaders),
              (this.includeKeys = i.includeKeys),
              this.registerListeners());
          }
          var e = t.prototype;
          return (
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHED, this.onMediaDetached, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHED, this.onMediaDetached, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this);
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                this.onMediaDetached(),
                (this.hls =
                  this.config =
                  this.audioBuffer =
                  this.videoBuffer =
                    null),
                (this.onWaiting = this.onPlaying = null);
            }),
            (e.onMediaAttached = function (t, e) {
              (this.media = e.media),
                this.media.addEventListener("waiting", this.onWaiting),
                this.media.addEventListener("playing", this.onPlaying);
            }),
            (e.onMediaDetached = function () {
              this.media &&
                (this.media.removeEventListener("waiting", this.onWaiting),
                this.media.removeEventListener("playing", this.onPlaying),
                (this.media = null));
            }),
            (e.onBufferCreated = function (t, e) {
              var r, i;
              (this.audioBuffer =
                null == (r = e.tracks.audio) ? void 0 : r.buffer),
                (this.videoBuffer =
                  null == (i = e.tracks.video) ? void 0 : i.buffer);
            }),
            (e.createData = function () {
              var t;
              return {
                v: 1,
                sf: ts.HLS,
                sid: this.sid,
                cid: this.cid,
                pr: null == (t = this.media) ? void 0 : t.playbackRate,
                mtp: this.hls.bandwidthEstimate / 1e3,
              };
            }),
            (e.apply = function (t, e) {
              void 0 === e && (e = {}), o(e, this.createData());
              var r =
                e.ot === Za.INIT || e.ot === Za.VIDEO || e.ot === Za.MUXED;
              this.starved &&
                r &&
                ((e.bs = !0), (e.su = !0), (this.starved = !1)),
                null == e.su && (e.su = this.buffering);
              var i = this.includeKeys;
              i &&
                (e = Object.keys(e).reduce(function (t, r) {
                  return i.includes(r) && (t[r] = e[r]), t;
                }, {})),
                this.useHeaders
                  ? (t.headers || (t.headers = {}), Ms(t.headers, e))
                  : (t.url = Us(t.url, e));
            }),
            (e.getObjectType = function (t) {
              var e = t.type;
              return "subtitle" === e
                ? Za.TIMED_TEXT
                : "initSegment" === t.sn
                ? Za.INIT
                : "audio" === e
                ? Za.AUDIO
                : "main" === e
                ? this.hls.audioTracks.length
                  ? Za.VIDEO
                  : Za.MUXED
                : void 0;
            }),
            (e.getTopBandwidth = function (t) {
              var e,
                r = 0,
                i = this.hls;
              if (t === Za.AUDIO) e = i.audioTracks;
              else {
                var n = i.maxAutoLevel,
                  a = n > -1 ? n + 1 : i.levels.length;
                e = i.levels.slice(0, a);
              }
              for (var s, o = g(e); !(s = o()).done; ) {
                var l = s.value;
                l.bitrate > r && (r = l.bitrate);
              }
              return r > 0 ? r : NaN;
            }),
            (e.getBufferLength = function (t) {
              var e = this.hls.media,
                r = t === Za.AUDIO ? this.audioBuffer : this.videoBuffer;
              return r && e
                ? 1e3 *
                    Jr.bufferInfo(r, e.currentTime, this.config.maxBufferHole)
                      .len
                : NaN;
            }),
            (e.createPlaylistLoader = function () {
              var t = this.config.pLoader,
                e = this.applyPlaylistData,
                r = t || this.config.loader;
              return (function () {
                function t(t) {
                  (this.loader = void 0), (this.loader = new r(t));
                }
                var i = t.prototype;
                return (
                  (i.destroy = function () {
                    this.loader.destroy();
                  }),
                  (i.abort = function () {
                    this.loader.abort();
                  }),
                  (i.load = function (t, r, i) {
                    e(t), this.loader.load(t, r, i);
                  }),
                  s(t, [
                    {
                      key: "stats",
                      get: function () {
                        return this.loader.stats;
                      },
                    },
                    {
                      key: "context",
                      get: function () {
                        return this.loader.context;
                      },
                    },
                  ]),
                  t
                );
              })();
            }),
            (e.createFragmentLoader = function () {
              var t = this.config.fLoader,
                e = this.applyFragmentData,
                r = t || this.config.loader;
              return (function () {
                function t(t) {
                  (this.loader = void 0), (this.loader = new r(t));
                }
                var i = t.prototype;
                return (
                  (i.destroy = function () {
                    this.loader.destroy();
                  }),
                  (i.abort = function () {
                    this.loader.abort();
                  }),
                  (i.load = function (t, r, i) {
                    e(t), this.loader.load(t, r, i);
                  }),
                  s(t, [
                    {
                      key: "stats",
                      get: function () {
                        return this.loader.stats;
                      },
                    },
                    {
                      key: "context",
                      get: function () {
                        return this.loader.context;
                      },
                    },
                  ]),
                  t
                );
              })();
            }),
            t
          );
        })(),
        Gs = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.log = void 0),
              (this.loader = null),
              (this.uri = null),
              (this.pathwayId = "."),
              (this.pathwayPriority = null),
              (this.timeToLoad = 300),
              (this.reloadTimer = -1),
              (this.updated = 0),
              (this.started = !1),
              (this.enabled = !0),
              (this.levels = null),
              (this.audioTracks = null),
              (this.subtitleTracks = null),
              (this.penalizedPathways = {}),
              (this.hls = t),
              (this.log = w.log.bind(w, "[content-steering]:")),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.ERROR, this.onError, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t &&
                (t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.ERROR, this.onError, this));
            }),
            (e.startLoad = function () {
              if (
                ((this.started = !0),
                this.clearTimeout(),
                this.enabled && this.uri)
              ) {
                if (this.updated) {
                  var t =
                    1e3 * this.timeToLoad - (performance.now() - this.updated);
                  if (t > 0) return void this.scheduleRefresh(this.uri, t);
                }
                this.loadSteeringManifest(this.uri);
              }
            }),
            (e.stopLoad = function () {
              (this.started = !1),
                this.loader && (this.loader.destroy(), (this.loader = null)),
                this.clearTimeout();
            }),
            (e.clearTimeout = function () {
              -1 !== this.reloadTimer &&
                (self.clearTimeout(this.reloadTimer), (this.reloadTimer = -1));
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                this.stopLoad(),
                (this.hls = null),
                (this.levels = this.audioTracks = this.subtitleTracks = null);
            }),
            (e.removeLevel = function (t) {
              var e = this.levels;
              e &&
                (this.levels = e.filter(function (e) {
                  return e !== t;
                }));
            }),
            (e.onManifestLoading = function () {
              this.stopLoad(),
                (this.enabled = !0),
                (this.timeToLoad = 300),
                (this.updated = 0),
                (this.uri = null),
                (this.pathwayId = "."),
                (this.levels = this.audioTracks = this.subtitleTracks = null);
            }),
            (e.onManifestLoaded = function (t, e) {
              var r = e.contentSteering;
              null !== r &&
                ((this.pathwayId = r.pathwayId),
                (this.uri = r.uri),
                this.started && this.startLoad());
            }),
            (e.onManifestParsed = function (t, e) {
              (this.audioTracks = e.audioTracks),
                (this.subtitleTracks = e.subtitleTracks);
            }),
            (e.onError = function (t, e) {
              var r = e.errorAction;
              if ((null == r ? void 0 : r.action) === Lr && r.flags === br) {
                var i = this.levels,
                  n = this.pathwayPriority,
                  a = this.pathwayId;
                if (e.context) {
                  var s = e.context,
                    o = s.groupId,
                    l = s.pathwayId,
                    u = s.type;
                  o && i
                    ? (a = this.getPathwayForGroupId(o, u, a))
                    : l && (a = l);
                }
                a in this.penalizedPathways ||
                  (this.penalizedPathways[a] = performance.now()),
                  !n &&
                    i &&
                    (n = i.reduce(function (t, e) {
                      return (
                        -1 === t.indexOf(e.pathwayId) && t.push(e.pathwayId), t
                      );
                    }, [])),
                  n &&
                    n.length > 1 &&
                    (this.updatePathwayPriority(n),
                    (r.resolved = this.pathwayId !== a)),
                  r.resolved ||
                    w.warn(
                      "Could not resolve " +
                        e.details +
                        ' ("' +
                        e.error.message +
                        '") with content-steering for Pathway: ' +
                        a +
                        " levels: " +
                        (i ? i.length : i) +
                        " priorities: " +
                        JSON.stringify(n) +
                        " penalized: " +
                        JSON.stringify(this.penalizedPathways)
                    );
              }
            }),
            (e.filterParsedLevels = function (t) {
              this.levels = t;
              var e = this.getLevelsForPathway(this.pathwayId);
              if (0 === e.length) {
                var r = t[0].pathwayId;
                this.log(
                  "No levels found in Pathway " +
                    this.pathwayId +
                    '. Setting initial Pathway to "' +
                    r +
                    '"'
                ),
                  (e = this.getLevelsForPathway(r)),
                  (this.pathwayId = r);
              }
              return e.length !== t.length
                ? (this.log(
                    "Found " +
                      e.length +
                      "/" +
                      t.length +
                      ' levels in Pathway "' +
                      this.pathwayId +
                      '"'
                  ),
                  e)
                : t;
            }),
            (e.getLevelsForPathway = function (t) {
              return null === this.levels
                ? []
                : this.levels.filter(function (e) {
                    return t === e.pathwayId;
                  });
            }),
            (e.updatePathwayPriority = function (t) {
              var e;
              this.pathwayPriority = t;
              var r = this.penalizedPathways,
                i = performance.now();
              Object.keys(r).forEach(function (t) {
                i - r[t] > 3e5 && delete r[t];
              });
              for (var n = 0; n < t.length; n++) {
                var a = t[n];
                if (!(a in r)) {
                  if (a === this.pathwayId) return;
                  var s = this.hls.nextLoadLevel,
                    o = this.hls.levels[s];
                  if ((e = this.getLevelsForPathway(a)).length > 0) {
                    this.log('Setting Pathway to "' + a + '"'),
                      (this.pathwayId = a),
                      dr(e),
                      this.hls.trigger(S.LEVELS_UPDATED, { levels: e });
                    var l = this.hls.levels[s];
                    o &&
                      l &&
                      this.levels &&
                      (l.attrs["STABLE-VARIANT-ID"] !==
                        o.attrs["STABLE-VARIANT-ID"] &&
                        l.bitrate !== o.bitrate &&
                        this.log(
                          "Unstable Pathways change from bitrate " +
                            o.bitrate +
                            " to " +
                            l.bitrate
                        ),
                      (this.hls.nextLoadLevel = s));
                    break;
                  }
                }
              }
            }),
            (e.getPathwayForGroupId = function (t, e, r) {
              for (
                var i = this.getLevelsForPathway(r).concat(this.levels || []),
                  n = 0;
                n < i.length;
                n++
              )
                if (
                  (e === De && i[n].hasAudioGroup(t)) ||
                  (e === Ie && i[n].hasSubtitleGroup(t))
                )
                  return i[n].pathwayId;
              return r;
            }),
            (e.clonePathways = function (t) {
              var e = this,
                r = this.levels;
              if (r) {
                var i = {},
                  n = {};
                t.forEach(function (t) {
                  var a = t.ID,
                    s = t["BASE-ID"],
                    o = t["URI-REPLACEMENT"];
                  if (
                    !r.some(function (t) {
                      return t.pathwayId === a;
                    })
                  ) {
                    var l = e.getLevelsForPathway(s).map(function (t) {
                      var e = new x(t.attrs);
                      e["PATHWAY-ID"] = a;
                      var r = e.AUDIO && e.AUDIO + "_clone_" + a,
                        s = e.SUBTITLES && e.SUBTITLES + "_clone_" + a;
                      r && ((i[e.AUDIO] = r), (e.AUDIO = r)),
                        s && ((n[e.SUBTITLES] = s), (e.SUBTITLES = s));
                      var l = Hs(
                          t.uri,
                          e["STABLE-VARIANT-ID"],
                          "PER-VARIANT-URIS",
                          o
                        ),
                        u = new rr({
                          attrs: e,
                          audioCodec: t.audioCodec,
                          bitrate: t.bitrate,
                          height: t.height,
                          name: t.name,
                          url: l,
                          videoCodec: t.videoCodec,
                          width: t.width,
                        });
                      if (t.audioGroups)
                        for (var h = 1; h < t.audioGroups.length; h++)
                          u.addGroupId(
                            "audio",
                            t.audioGroups[h] + "_clone_" + a
                          );
                      if (t.subtitleGroups)
                        for (var d = 1; d < t.subtitleGroups.length; d++)
                          u.addGroupId(
                            "text",
                            t.subtitleGroups[d] + "_clone_" + a
                          );
                      return u;
                    });
                    r.push.apply(r, l),
                      Ks(e.audioTracks, i, o, a),
                      Ks(e.subtitleTracks, n, o, a);
                  }
                });
              }
            }),
            (e.loadSteeringManifest = function (t) {
              var e,
                r = this,
                i = this.hls.config,
                n = i.loader;
              this.loader && this.loader.destroy(), (this.loader = new n(i));
              try {
                e = new self.URL(t);
              } catch (e) {
                return (
                  (this.enabled = !1),
                  void this.log("Failed to parse Steering Manifest URI: " + t)
                );
              }
              if ("data:" !== e.protocol) {
                var a =
                  0 | (this.hls.bandwidthEstimate || i.abrEwmaDefaultEstimate);
                e.searchParams.set("_HLS_pathway", this.pathwayId),
                  e.searchParams.set("_HLS_throughput", "" + a);
              }
              var s = { responseType: "json", url: e.href },
                o = i.steeringManifestLoadPolicy.default,
                l = o.errorRetry || o.timeoutRetry || {},
                u = {
                  loadPolicy: o,
                  timeout: o.maxLoadTimeMs,
                  maxRetry: l.maxNumRetry || 0,
                  retryDelay: l.retryDelayMs || 0,
                  maxRetryDelay: l.maxRetryDelayMs || 0,
                },
                h = {
                  onSuccess: function (t, i, n, a) {
                    r.log('Loaded steering manifest: "' + e + '"');
                    var s = t.data;
                    if (1 === s.VERSION) {
                      (r.updated = performance.now()), (r.timeToLoad = s.TTL);
                      var o = s["RELOAD-URI"],
                        l = s["PATHWAY-CLONES"],
                        u = s["PATHWAY-PRIORITY"];
                      if (o)
                        try {
                          r.uri = new self.URL(o, e).href;
                        } catch (t) {
                          return (
                            (r.enabled = !1),
                            void r.log(
                              "Failed to parse Steering Manifest RELOAD-URI: " +
                                o
                            )
                          );
                        }
                      r.scheduleRefresh(r.uri || n.url),
                        l && r.clonePathways(l);
                      var h = { steeringManifest: s, url: e.toString() };
                      r.hls.trigger(S.STEERING_MANIFEST_LOADED, h),
                        u && r.updatePathwayPriority(u);
                    } else
                      r.log(
                        "Steering VERSION " + s.VERSION + " not supported!"
                      );
                  },
                  onError: function (t, e, i, n) {
                    if (
                      (r.log(
                        "Error loading steering manifest: " +
                          t.code +
                          " " +
                          t.text +
                          " (" +
                          e.url +
                          ")"
                      ),
                      r.stopLoad(),
                      410 === t.code)
                    )
                      return (
                        (r.enabled = !1),
                        void r.log(
                          "Steering manifest " + e.url + " no longer available"
                        )
                      );
                    var a = 1e3 * r.timeToLoad;
                    if (429 !== t.code) r.scheduleRefresh(r.uri || e.url, a);
                    else {
                      var s = r.loader;
                      if (
                        "function" ==
                        typeof (null == s ? void 0 : s.getResponseHeader)
                      ) {
                        var o = s.getResponseHeader("Retry-After");
                        o && (a = 1e3 * parseFloat(o));
                      }
                      r.log("Steering manifest " + e.url + " rate limited");
                    }
                  },
                  onTimeout: function (t, e, i) {
                    r.log("Timeout loading steering manifest (" + e.url + ")"),
                      r.scheduleRefresh(r.uri || e.url);
                  },
                };
              this.log("Requesting steering manifest: " + e),
                this.loader.load(s, u, h);
            }),
            (e.scheduleRefresh = function (t, e) {
              var r = this;
              void 0 === e && (e = 1e3 * this.timeToLoad),
                this.clearTimeout(),
                (this.reloadTimer = self.setTimeout(function () {
                  var e,
                    i = null == (e = r.hls) ? void 0 : e.media;
                  !i || i.ended
                    ? r.scheduleRefresh(t, 1e3 * r.timeToLoad)
                    : r.loadSteeringManifest(t);
                }, e));
            }),
            t
          );
        })();
      function Ks(t, e, r, i) {
        t &&
          Object.keys(e).forEach(function (n) {
            var a = t
              .filter(function (t) {
                return t.groupId === n;
              })
              .map(function (t) {
                var a = o({}, t);
                return (
                  (a.details = void 0),
                  (a.attrs = new x(a.attrs)),
                  (a.url = a.attrs.URI =
                    Hs(
                      t.url,
                      t.attrs["STABLE-RENDITION-ID"],
                      "PER-RENDITION-URIS",
                      r
                    )),
                  (a.groupId = a.attrs["GROUP-ID"] = e[n]),
                  (a.attrs["PATHWAY-ID"] = i),
                  a
                );
              });
            t.push.apply(t, a);
          });
      }
      function Hs(t, e, r, i) {
        var n,
          a = i.HOST,
          s = i.PARAMS,
          o = i[r];
        e && (n = null == o ? void 0 : o[e]) && (t = n);
        var l = new self.URL(t);
        return (
          a && !n && (l.host = a),
          s &&
            Object.keys(s)
              .sort()
              .forEach(function (t) {
                t && l.searchParams.set(t, s[t]);
              }),
          l.href
        );
      }
      var Vs = /^age:\s*[\d.]+\s*$/im,
        Ys = (function () {
          function t(t) {
            (this.xhrSetup = void 0),
              (this.requestTimeout = void 0),
              (this.retryTimeout = void 0),
              (this.retryDelay = void 0),
              (this.config = null),
              (this.callbacks = null),
              (this.context = null),
              (this.loader = null),
              (this.stats = void 0),
              (this.xhrSetup = (t && t.xhrSetup) || null),
              (this.stats = new M()),
              (this.retryDelay = 0);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.callbacks = null),
                this.abortInternal(),
                (this.loader = null),
                (this.config = null),
                (this.context = null),
                (this.xhrSetup = null);
            }),
            (e.abortInternal = function () {
              var t = this.loader;
              self.clearTimeout(this.requestTimeout),
                self.clearTimeout(this.retryTimeout),
                t &&
                  ((t.onreadystatechange = null),
                  (t.onprogress = null),
                  4 !== t.readyState && ((this.stats.aborted = !0), t.abort()));
            }),
            (e.abort = function () {
              var t;
              this.abortInternal(),
                null != (t = this.callbacks) &&
                  t.onAbort &&
                  this.callbacks.onAbort(this.stats, this.context, this.loader);
            }),
            (e.load = function (t, e, r) {
              if (this.stats.loading.start)
                throw new Error("Loader can only be used once.");
              (this.stats.loading.start = self.performance.now()),
                (this.context = t),
                (this.config = e),
                (this.callbacks = r),
                this.loadInternal();
            }),
            (e.loadInternal = function () {
              var t = this,
                e = this.config,
                r = this.context;
              if (e && r) {
                var i = (this.loader = new self.XMLHttpRequest()),
                  n = this.stats;
                (n.loading.first = 0), (n.loaded = 0), (n.aborted = !1);
                var a = this.xhrSetup;
                a
                  ? Promise.resolve()
                      .then(function () {
                        if (t.loader === i && !t.stats.aborted)
                          return a(i, r.url);
                      })
                      .catch(function (e) {
                        if (t.loader === i && !t.stats.aborted)
                          return i.open("GET", r.url, !0), a(i, r.url);
                      })
                      .then(function () {
                        t.loader !== i ||
                          t.stats.aborted ||
                          t.openAndSendXhr(i, r, e);
                      })
                      .catch(function (e) {
                        t.callbacks.onError(
                          { code: i.status, text: e.message },
                          r,
                          i,
                          n
                        );
                      })
                  : this.openAndSendXhr(i, r, e);
              }
            }),
            (e.openAndSendXhr = function (t, e, r) {
              t.readyState || t.open("GET", e.url, !0);
              var i = e.headers,
                n = r.loadPolicy,
                a = n.maxTimeToFirstByteMs,
                s = n.maxLoadTimeMs;
              if (i) for (var o in i) t.setRequestHeader(o, i[o]);
              e.rangeEnd &&
                t.setRequestHeader(
                  "Range",
                  "bytes=" + e.rangeStart + "-" + (e.rangeEnd - 1)
                ),
                (t.onreadystatechange = this.readystatechange.bind(this)),
                (t.onprogress = this.loadprogress.bind(this)),
                (t.responseType = e.responseType),
                self.clearTimeout(this.requestTimeout),
                (r.timeout = a && y(a) ? a : s),
                (this.requestTimeout = self.setTimeout(
                  this.loadtimeout.bind(this),
                  r.timeout
                )),
                t.send();
            }),
            (e.readystatechange = function () {
              var t = this.context,
                e = this.loader,
                r = this.stats;
              if (t && e) {
                var i = e.readyState,
                  n = this.config;
                if (
                  !r.aborted &&
                  i >= 2 &&
                  (0 === r.loading.first &&
                    ((r.loading.first = Math.max(
                      self.performance.now(),
                      r.loading.start
                    )),
                    n.timeout !== n.loadPolicy.maxLoadTimeMs &&
                      (self.clearTimeout(this.requestTimeout),
                      (n.timeout = n.loadPolicy.maxLoadTimeMs),
                      (this.requestTimeout = self.setTimeout(
                        this.loadtimeout.bind(this),
                        n.loadPolicy.maxLoadTimeMs -
                          (r.loading.first - r.loading.start)
                      )))),
                  4 === i)
                ) {
                  self.clearTimeout(this.requestTimeout),
                    (e.onreadystatechange = null),
                    (e.onprogress = null);
                  var a = e.status,
                    s = "text" !== e.responseType;
                  if (
                    a >= 200 &&
                    a < 300 &&
                    ((s && e.response) || null !== e.responseText)
                  ) {
                    r.loading.end = Math.max(
                      self.performance.now(),
                      r.loading.first
                    );
                    var o = s ? e.response : e.responseText,
                      l =
                        "arraybuffer" === e.responseType
                          ? o.byteLength
                          : o.length;
                    if (
                      ((r.loaded = r.total = l),
                      (r.bwEstimate =
                        (8e3 * r.total) / (r.loading.end - r.loading.first)),
                      !this.callbacks)
                    )
                      return;
                    var u = this.callbacks.onProgress;
                    if ((u && u(r, t, o, e), !this.callbacks)) return;
                    var h = { url: e.responseURL, data: o, code: a };
                    this.callbacks.onSuccess(h, r, t, e);
                  } else {
                    var d = n.loadPolicy.errorRetry;
                    mr(d, r.retry, !1, { url: t.url, data: void 0, code: a })
                      ? this.retry(d)
                      : (w.error(a + " while loading " + t.url),
                        this.callbacks.onError(
                          { code: a, text: e.statusText },
                          t,
                          e,
                          r
                        ));
                  }
                }
              }
            }),
            (e.loadtimeout = function () {
              if (this.config) {
                var t = this.config.loadPolicy.timeoutRetry;
                if (mr(t, this.stats.retry, !0)) this.retry(t);
                else {
                  var e;
                  w.warn(
                    "timeout while loading " +
                      (null == (e = this.context) ? void 0 : e.url)
                  );
                  var r = this.callbacks;
                  r &&
                    (this.abortInternal(),
                    r.onTimeout(this.stats, this.context, this.loader));
                }
              }
            }),
            (e.retry = function (t) {
              var e = this.context,
                r = this.stats;
              (this.retryDelay = gr(t, r.retry)),
                r.retry++,
                w.warn(
                  (status ? "HTTP Status " + status : "Timeout") +
                    " while loading " +
                    (null == e ? void 0 : e.url) +
                    ", retrying " +
                    r.retry +
                    "/" +
                    t.maxNumRetry +
                    " in " +
                    this.retryDelay +
                    "ms"
                ),
                this.abortInternal(),
                (this.loader = null),
                self.clearTimeout(this.retryTimeout),
                (this.retryTimeout = self.setTimeout(
                  this.loadInternal.bind(this),
                  this.retryDelay
                ));
            }),
            (e.loadprogress = function (t) {
              var e = this.stats;
              (e.loaded = t.loaded), t.lengthComputable && (e.total = t.total);
            }),
            (e.getCacheAge = function () {
              var t = null;
              if (this.loader && Vs.test(this.loader.getAllResponseHeaders())) {
                var e = this.loader.getResponseHeader("age");
                t = e ? parseFloat(e) : null;
              }
              return t;
            }),
            (e.getResponseHeader = function (t) {
              return this.loader &&
                new RegExp("^" + t + ":\\s*[\\d.]+\\s*$", "im").test(
                  this.loader.getAllResponseHeaders()
                )
                ? this.loader.getResponseHeader(t)
                : null;
            }),
            t
          );
        })(),
        Ws = /(\d+)-(\d+)\/(\d+)/,
        js = (function () {
          function t(t) {
            (this.fetchSetup = void 0),
              (this.requestTimeout = void 0),
              (this.request = null),
              (this.response = null),
              (this.controller = void 0),
              (this.context = null),
              (this.config = null),
              (this.callbacks = null),
              (this.stats = void 0),
              (this.loader = null),
              (this.fetchSetup = t.fetchSetup || qs),
              (this.controller = new self.AbortController()),
              (this.stats = new M());
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.loader =
                this.callbacks =
                this.context =
                this.config =
                this.request =
                  null),
                this.abortInternal(),
                (this.response = null),
                (this.fetchSetup = this.controller = this.stats = null);
            }),
            (e.abortInternal = function () {
              this.controller &&
                !this.stats.loading.end &&
                ((this.stats.aborted = !0), this.controller.abort());
            }),
            (e.abort = function () {
              var t;
              this.abortInternal(),
                null != (t = this.callbacks) &&
                  t.onAbort &&
                  this.callbacks.onAbort(
                    this.stats,
                    this.context,
                    this.response
                  );
            }),
            (e.load = function (t, e, r) {
              var i = this,
                n = this.stats;
              if (n.loading.start)
                throw new Error("Loader can only be used once.");
              n.loading.start = self.performance.now();
              var a = (function (t, e) {
                  var r = {
                    method: "GET",
                    mode: "cors",
                    credentials: "same-origin",
                    signal: e,
                    headers: new self.Headers(o({}, t.headers)),
                  };
                  return (
                    t.rangeEnd &&
                      r.headers.set(
                        "Range",
                        "bytes=" + t.rangeStart + "-" + String(t.rangeEnd - 1)
                      ),
                    r
                  );
                })(t, this.controller.signal),
                s = r.onProgress,
                l = "arraybuffer" === t.responseType,
                u = l ? "byteLength" : "length",
                h = e.loadPolicy,
                d = h.maxTimeToFirstByteMs,
                c = h.maxLoadTimeMs;
              (this.context = t),
                (this.config = e),
                (this.callbacks = r),
                (this.request = this.fetchSetup(t, a)),
                self.clearTimeout(this.requestTimeout),
                (e.timeout = d && y(d) ? d : c),
                (this.requestTimeout = self.setTimeout(function () {
                  i.abortInternal(), r.onTimeout(n, t, i.response);
                }, e.timeout)),
                self
                  .fetch(this.request)
                  .then(function (a) {
                    i.response = i.loader = a;
                    var o = Math.max(self.performance.now(), n.loading.start);
                    if (
                      (self.clearTimeout(i.requestTimeout),
                      (e.timeout = c),
                      (i.requestTimeout = self.setTimeout(function () {
                        i.abortInternal(), r.onTimeout(n, t, i.response);
                      }, c - (o - n.loading.start))),
                      !a.ok)
                    ) {
                      var u = a.status,
                        h = a.statusText;
                      throw new zs(h || "fetch, bad network response", u, a);
                    }
                    return (
                      (n.loading.first = o),
                      (n.total =
                        (function (t) {
                          var e = t.get("Content-Range");
                          if (e) {
                            var r = (function (t) {
                              var e = Ws.exec(t);
                              if (e) return parseInt(e[2]) - parseInt(e[1]) + 1;
                            })(e);
                            if (y(r)) return r;
                          }
                          var i = t.get("Content-Length");
                          if (i) return parseInt(i);
                        })(a.headers) || n.total),
                      s && y(e.highWaterMark)
                        ? i.loadProgressively(a, n, t, e.highWaterMark, s)
                        : l
                        ? a.arrayBuffer()
                        : "json" === t.responseType
                        ? a.json()
                        : a.text()
                    );
                  })
                  .then(function (a) {
                    var o = i.response;
                    if (!o) throw new Error("loader destroyed");
                    self.clearTimeout(i.requestTimeout),
                      (n.loading.end = Math.max(
                        self.performance.now(),
                        n.loading.first
                      ));
                    var l = a[u];
                    l && (n.loaded = n.total = l);
                    var h = { url: o.url, data: a, code: o.status };
                    s && !y(e.highWaterMark) && s(n, t, a, o),
                      r.onSuccess(h, n, t, o);
                  })
                  .catch(function (e) {
                    if ((self.clearTimeout(i.requestTimeout), !n.aborted)) {
                      var a = (e && e.code) || 0,
                        s = e ? e.message : null;
                      r.onError(
                        { code: a, text: s },
                        t,
                        e ? e.details : null,
                        n
                      );
                    }
                  });
            }),
            (e.getCacheAge = function () {
              var t = null;
              if (this.response) {
                var e = this.response.headers.get("age");
                t = e ? parseFloat(e) : null;
              }
              return t;
            }),
            (e.getResponseHeader = function (t) {
              return this.response ? this.response.headers.get(t) : null;
            }),
            (e.loadProgressively = function (t, e, r, i, n) {
              void 0 === i && (i = 0);
              var a = new Di(),
                s = t.body.getReader();
              return (function o() {
                return s
                  .read()
                  .then(function (s) {
                    if (s.done)
                      return (
                        a.dataLength && n(e, r, a.flush(), t),
                        Promise.resolve(new ArrayBuffer(0))
                      );
                    var l = s.value,
                      u = l.length;
                    return (
                      (e.loaded += u),
                      u < i || a.dataLength
                        ? (a.push(l),
                          a.dataLength >= i && n(e, r, a.flush(), t))
                        : n(e, r, l, t),
                      o()
                    );
                  })
                  .catch(function () {
                    return Promise.reject();
                  });
              })();
            }),
            t
          );
        })();
      function qs(t, e) {
        return new self.Request(t.url, e);
      }
      var Xs,
        zs = (function (t) {
          function e(e, r, i) {
            var n;
            return (
              ((n = t.call(this, e) || this).code = void 0),
              (n.details = void 0),
              (n.code = r),
              (n.details = i),
              n
            );
          }
          return l(e, t), e;
        })(c(Error)),
        Qs = /\s/,
        Js = i(
          i(
            {
              autoStartLoad: !0,
              startPosition: -1,
              defaultAudioCodec: void 0,
              debug: !1,
              capLevelOnFPSDrop: !1,
              capLevelToPlayerSize: !1,
              ignoreDevicePixelRatio: !1,
              preferManagedMediaSource: !0,
              initialLiveManifestSize: 1,
              maxBufferLength: 30,
              backBufferLength: 1 / 0,
              frontBufferFlushThreshold: 1 / 0,
              maxBufferSize: 6e7,
              maxBufferHole: 0.1,
              highBufferWatchdogPeriod: 2,
              nudgeOffset: 0.1,
              nudgeMaxRetry: 3,
              maxFragLookUpTolerance: 0.25,
              liveSyncDurationCount: 3,
              liveMaxLatencyDurationCount: 1 / 0,
              liveSyncDuration: void 0,
              liveMaxLatencyDuration: void 0,
              maxLiveSyncPlaybackRate: 1,
              liveDurationInfinity: !1,
              liveBackBufferLength: null,
              maxMaxBufferLength: 600,
              enableWorker: !0,
              workerPath: null,
              enableSoftwareAES: !0,
              startLevel: void 0,
              startFragPrefetch: !1,
              fpsDroppedMonitoringPeriod: 5e3,
              fpsDroppedMonitoringThreshold: 0.2,
              appendErrorMaxRetry: 3,
              loader: Ys,
              fLoader: void 0,
              pLoader: void 0,
              xhrSetup: void 0,
              licenseXhrSetup: void 0,
              licenseResponseCallback: void 0,
              abrController: Kr,
              bufferController: Zn,
              capLevelController: za,
              errorController: Ir,
              fpsController: Qa,
              stretchShortVideoTrack: !1,
              maxAudioFramesDrift: 1,
              forceKeyFrameOnDiscontinuity: !0,
              abrEwmaFastLive: 3,
              abrEwmaSlowLive: 9,
              abrEwmaFastVoD: 3,
              abrEwmaSlowVoD: 9,
              abrEwmaDefaultEstimate: 5e5,
              abrEwmaDefaultEstimateMax: 5e6,
              abrBandWidthFactor: 0.95,
              abrBandWidthUpFactor: 0.7,
              abrMaxWithRealBitrate: !1,
              maxStarvationDelay: 4,
              maxLoadingDelay: 4,
              minAutoBitrate: 0,
              emeEnabled: !1,
              widevineLicenseUrl: void 0,
              drmSystems: {},
              drmSystemOptions: {},
              requestMediaKeySystemAccessFunc: it,
              testBandwidth: !0,
              progressive: !1,
              lowLatencyMode: !0,
              cmcd: void 0,
              enableDateRangeMetadataCues: !0,
              enableEmsgMetadataCues: !0,
              enableID3MetadataCues: !0,
              useMediaCapabilities: !0,
              certLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 8e3,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: null,
                  errorRetry: null,
                },
              },
              keyLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 8e3,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 1,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 2e4,
                    backoff: "linear",
                  },
                  errorRetry: {
                    maxNumRetry: 8,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 2e4,
                    backoff: "linear",
                  },
                },
              },
              manifestLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1 / 0,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 1,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              playlistLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1e4,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              fragLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1e4,
                  maxLoadTimeMs: 12e4,
                  timeoutRetry: {
                    maxNumRetry: 4,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 6,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              steeringManifestLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1e4,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 1,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              manifestLoadingTimeOut: 1e4,
              manifestLoadingMaxRetry: 1,
              manifestLoadingRetryDelay: 1e3,
              manifestLoadingMaxRetryTimeout: 64e3,
              levelLoadingTimeOut: 1e4,
              levelLoadingMaxRetry: 4,
              levelLoadingRetryDelay: 1e3,
              levelLoadingMaxRetryTimeout: 64e3,
              fragLoadingTimeOut: 2e4,
              fragLoadingMaxRetry: 6,
              fragLoadingRetryDelay: 1e3,
              fragLoadingMaxRetryTimeout: 64e3,
            },
            {
              cueHandler: {
                newCue: function (t, e, r, i) {
                  for (
                    var n,
                      a,
                      s,
                      o,
                      l,
                      u = [],
                      h = self.VTTCue || self.TextTrackCue,
                      d = 0;
                    d < i.rows.length;
                    d++
                  )
                    if (
                      ((s = !0), (o = 0), (l = ""), !(n = i.rows[d]).isEmpty())
                    ) {
                      for (var c, f = 0; f < n.chars.length; f++)
                        Qs.test(n.chars[f].uchar) && s
                          ? o++
                          : ((l += n.chars[f].uchar), (s = !1));
                      (n.cueStartTime = e),
                        e === r && (r += 1e-4),
                        o >= 16 ? o-- : o++;
                      var g = Ia(l.trim()),
                        v = Pa(e, r, g);
                      (null != t && null != (c = t.cues) && c.getCueById(v)) ||
                        (((a = new h(e, r, g)).id = v),
                        (a.line = d + 1),
                        (a.align = "left"),
                        (a.position =
                          10 + Math.min(80, 10 * Math.floor((8 * o) / 32))),
                        u.push(a));
                    }
                  return (
                    t &&
                      u.length &&
                      (u.sort(function (t, e) {
                        return "auto" === t.line || "auto" === e.line
                          ? 0
                          : t.line > 8 && e.line > 8
                          ? e.line - t.line
                          : t.line - e.line;
                      }),
                      u.forEach(function (e) {
                        return Oe(t, e);
                      })),
                    u
                  );
                },
              },
              enableWebVTT: !0,
              enableIMSC1: !0,
              enableCEA708Captions: !0,
              captionsTextTrack1Label: "English",
              captionsTextTrack1LanguageCode: "en",
              captionsTextTrack2Label: "Spanish",
              captionsTextTrack2LanguageCode: "es",
              captionsTextTrack3Label: "Unknown CC",
              captionsTextTrack3LanguageCode: "",
              captionsTextTrack4Label: "Unknown CC",
              captionsTextTrack4LanguageCode: "",
              renderTextTracksNatively: !0,
            }
          ),
          {},
          {
            subtitleStreamController: Xn,
            subtitleTrackController: Qn,
            timelineController: ja,
            audioStreamController: jn,
            audioTrackController: qn,
            emeController: $a,
            cmcdController: Bs,
            contentSteeringController: Gs,
          }
        );
      function $s(t) {
        return t && "object" == typeof t
          ? Array.isArray(t)
            ? t.map($s)
            : Object.keys(t).reduce(function (e, r) {
                return (e[r] = $s(t[r])), e;
              }, {})
          : t;
      }
      function Zs(t) {
        var e = t.loader;
        e !== js && e !== Ys
          ? (w.log(
              "[config]: Custom loader detected, cannot enable progressive streaming"
            ),
            (t.progressive = !1))
          : (function () {
              if (
                self.fetch &&
                self.AbortController &&
                self.ReadableStream &&
                self.Request
              )
                try {
                  return new self.ReadableStream({}), !0;
                } catch (t) {}
              return !1;
            })() &&
            ((t.loader = js),
            (t.progressive = !0),
            (t.enableSoftwareAES = !0),
            w.log(
              "[config]: Progressive streaming enabled, using FetchLoader"
            ));
      }
      var to = (function (t) {
        function e(e, r) {
          var i;
          return (
            ((i = t.call(this, e, "[level-controller]") || this)._levels = []),
            (i._firstLevel = -1),
            (i._maxAutoLevel = -1),
            (i._startLevel = void 0),
            (i.currentLevel = null),
            (i.currentLevelIndex = -1),
            (i.manualLevelIndex = -1),
            (i.steering = void 0),
            (i.onParsedComplete = void 0),
            (i.steering = r),
            i._registerListeners(),
            i
          );
        }
        l(e, t);
        var r = e.prototype;
        return (
          (r._registerListeners = function () {
            var t = this.hls;
            t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
              t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
              t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
              t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
              t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
              t.on(S.ERROR, this.onError, this);
          }),
          (r._unregisterListeners = function () {
            var t = this.hls;
            t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
              t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
              t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
              t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
              t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
              t.off(S.ERROR, this.onError, this);
          }),
          (r.destroy = function () {
            this._unregisterListeners(),
              (this.steering = null),
              this.resetLevels(),
              t.prototype.destroy.call(this);
          }),
          (r.stopLoad = function () {
            this._levels.forEach(function (t) {
              (t.loadError = 0), (t.fragmentError = 0);
            }),
              t.prototype.stopLoad.call(this);
          }),
          (r.resetLevels = function () {
            (this._startLevel = void 0),
              (this.manualLevelIndex = -1),
              (this.currentLevelIndex = -1),
              (this.currentLevel = null),
              (this._levels = []),
              (this._maxAutoLevel = -1);
          }),
          (r.onManifestLoading = function (t, e) {
            this.resetLevels();
          }),
          (r.onManifestLoaded = function (t, e) {
            var r = this.hls.config.preferManagedMediaSource,
              i = [],
              n = {},
              a = {},
              s = !1,
              o = !1,
              l = !1;
            e.levels.forEach(function (t) {
              var e,
                u,
                h = t.attrs,
                d = t.audioCodec,
                c = t.videoCodec;
              -1 !== (null == (e = d) ? void 0 : e.indexOf("mp4a.40.34")) &&
                (Xs || (Xs = /chrome|firefox/i.test(navigator.userAgent)),
                Xs && (t.audioCodec = d = void 0)),
                d && (t.audioCodec = d = he(d, r)),
                0 === (null == (u = c) ? void 0 : u.indexOf("avc1")) &&
                  (c = t.videoCodec =
                    (function (t) {
                      for (var e = t.split(","), r = 0; r < e.length; r++) {
                        var i = e[r].split(".");
                        if (i.length > 2) {
                          var n = i.shift() + ".";
                          (n += parseInt(i.shift()).toString(16)),
                            (n += (
                              "000" + parseInt(i.shift()).toString(16)
                            ).slice(-4)),
                            (e[r] = n);
                        }
                      }
                      return e.join(",");
                    })(c));
              var f = t.width,
                g = t.height,
                v = t.unknownCodecs;
              if (
                (s || (s = !(!f || !g)),
                o || (o = !!c),
                l || (l = !!d),
                !(
                  (null != v && v.length) ||
                  (d && !ie(d, "audio", r)) ||
                  (c && !ie(c, "video", r))
                ))
              ) {
                var m = h.CODECS,
                  p = h["FRAME-RATE"],
                  y = h["HDCP-LEVEL"],
                  E = h["PATHWAY-ID"],
                  T = h.RESOLUTION,
                  S = h["VIDEO-RANGE"],
                  L =
                    (E || ".") +
                    "-" +
                    t.bitrate +
                    "-" +
                    T +
                    "-" +
                    p +
                    "-" +
                    m +
                    "-" +
                    S +
                    "-" +
                    y;
                if (n[L])
                  if (n[L].uri === t.url || t.attrs["PATHWAY-ID"])
                    n[L].addGroupId("audio", h.AUDIO),
                      n[L].addGroupId("text", h.SUBTITLES);
                  else {
                    var A = (a[L] += 1);
                    t.attrs["PATHWAY-ID"] = new Array(A + 1).join(".");
                    var R = new rr(t);
                    (n[L] = R), i.push(R);
                  }
                else {
                  var k = new rr(t);
                  (n[L] = k), (a[L] = 1), i.push(k);
                }
              }
            }),
              this.filterAndSortMediaOptions(i, e, s, o, l);
          }),
          (r.filterAndSortMediaOptions = function (t, e, r, i, n) {
            var a = this,
              s = [],
              o = [],
              l = t;
            if (
              ((r || i) &&
                n &&
                (l = l.filter(function (t) {
                  var e,
                    r = t.videoCodec,
                    i = t.videoRange,
                    n = t.width,
                    a = t.height;
                  return (
                    (!!r || !(!n || !a)) && !!(e = i) && Qe.indexOf(e) > -1
                  );
                })),
              0 !== l.length)
            ) {
              if (e.audioTracks) {
                var u = this.hls.config.preferManagedMediaSource;
                eo(
                  (s = e.audioTracks.filter(function (t) {
                    return !t.audioCodec || ie(t.audioCodec, "audio", u);
                  }))
                );
              }
              e.subtitles && eo((o = e.subtitles));
              var h = l.slice(0);
              l.sort(function (t, e) {
                if (t.attrs["HDCP-LEVEL"] !== e.attrs["HDCP-LEVEL"])
                  return (t.attrs["HDCP-LEVEL"] || "") >
                    (e.attrs["HDCP-LEVEL"] || "")
                    ? 1
                    : -1;
                if (r && t.height !== e.height) return t.height - e.height;
                if (t.frameRate !== e.frameRate)
                  return t.frameRate - e.frameRate;
                if (t.videoRange !== e.videoRange)
                  return Qe.indexOf(t.videoRange) - Qe.indexOf(e.videoRange);
                if (t.videoCodec !== e.videoCodec) {
                  var i = se(t.videoCodec),
                    n = se(e.videoCodec);
                  if (i !== n) return n - i;
                }
                if (t.uri === e.uri && t.codecSet !== e.codecSet) {
                  var a = oe(t.codecSet),
                    s = oe(e.codecSet);
                  if (a !== s) return s - a;
                }
                return t.averageBitrate !== e.averageBitrate
                  ? t.averageBitrate - e.averageBitrate
                  : 0;
              });
              var d = h[0];
              if (
                this.steering &&
                (l = this.steering.filterParsedLevels(l)).length !== h.length
              )
                for (var c = 0; c < h.length; c++)
                  if (h[c].pathwayId === l[0].pathwayId) {
                    d = h[c];
                    break;
                  }
              this._levels = l;
              for (var f = 0; f < l.length; f++)
                if (l[f] === d) {
                  var g;
                  this._firstLevel = f;
                  var v = d.bitrate,
                    m = this.hls.bandwidthEstimate;
                  if (
                    (this.log(
                      "manifest loaded, " +
                        l.length +
                        " level(s) found, first bitrate: " +
                        v
                    ),
                    void 0 ===
                      (null == (g = this.hls.userConfig)
                        ? void 0
                        : g.abrEwmaDefaultEstimate))
                  ) {
                    var p = Math.min(
                      v,
                      this.hls.config.abrEwmaDefaultEstimateMax
                    );
                    p > m &&
                      m === Js.abrEwmaDefaultEstimate &&
                      (this.hls.bandwidthEstimate = p);
                  }
                  break;
                }
              var y = n && !i,
                E = {
                  levels: l,
                  audioTracks: s,
                  subtitleTracks: o,
                  sessionData: e.sessionData,
                  sessionKeys: e.sessionKeys,
                  firstLevel: this._firstLevel,
                  stats: e.stats,
                  audio: n,
                  video: i,
                  altAudio:
                    !y &&
                    s.some(function (t) {
                      return !!t.url;
                    }),
                };
              this.hls.trigger(S.MANIFEST_PARSED, E),
                (this.hls.config.autoStartLoad || this.hls.forceStartLoad) &&
                  this.hls.startLoad(this.hls.config.startPosition);
            } else
              Promise.resolve().then(function () {
                if (a.hls) {
                  e.levels.length &&
                    a.warn(
                      "One or more CODECS in variant not supported: " +
                        JSON.stringify(e.levels[0].attrs)
                    );
                  var t = new Error(
                    "no level with compatible codecs found in manifest"
                  );
                  a.hls.trigger(S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: A.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                    fatal: !0,
                    url: e.url,
                    error: t,
                    reason: t.message,
                  });
                }
              });
          }),
          (r.onError = function (t, e) {
            !e.fatal &&
              e.context &&
              e.context.type === be &&
              e.context.level === this.level &&
              this.checkRetry(e);
          }),
          (r.onFragBuffered = function (t, e) {
            var r = e.frag;
            if (void 0 !== r && r.type === we) {
              var i = r.elementaryStreams;
              if (
                !Object.keys(i).some(function (t) {
                  return !!i[t];
                })
              )
                return;
              var n = this._levels[r.level];
              null != n &&
                n.loadError &&
                (this.log(
                  "Resetting level error count of " +
                    n.loadError +
                    " on frag buffered"
                ),
                (n.loadError = 0));
            }
          }),
          (r.onLevelLoaded = function (t, e) {
            var r,
              i,
              n = e.level,
              a = e.details,
              s = this._levels[n];
            if (!s)
              return (
                this.warn("Invalid level index " + n),
                void (
                  null != (i = e.deliveryDirectives) &&
                  i.skip &&
                  (a.deltaUpdateFailed = !0)
                )
              );
            n === this.currentLevelIndex
              ? (0 === s.fragmentError && (s.loadError = 0),
                this.playlistLoaded(n, e, s.details))
              : null != (r = e.deliveryDirectives) &&
                r.skip &&
                (a.deltaUpdateFailed = !0);
          }),
          (r.loadPlaylist = function (e) {
            t.prototype.loadPlaylist.call(this);
            var r = this.currentLevelIndex,
              i = this.currentLevel;
            if (i && this.shouldLoadPlaylist(i)) {
              var n = i.uri;
              if (e)
                try {
                  n = e.addDirectives(n);
                } catch (t) {
                  this.warn(
                    "Could not construct new URL with HLS Delivery Directives: " +
                      t
                  );
                }
              var a = i.attrs["PATHWAY-ID"];
              this.log(
                "Loading level index " +
                  r +
                  (void 0 !== (null == e ? void 0 : e.msn)
                    ? " at sn " + e.msn + " part " + e.part
                    : "") +
                  " with" +
                  (a ? " Pathway " + a : "") +
                  " " +
                  n
              ),
                this.clearTimer(),
                this.hls.trigger(S.LEVEL_LOADING, {
                  url: n,
                  level: r,
                  pathwayId: i.attrs["PATHWAY-ID"],
                  id: 0,
                  deliveryDirectives: e || null,
                });
            }
          }),
          (r.removeLevel = function (t) {
            var e,
              r = this,
              i = this._levels.filter(function (e, i) {
                return (
                  i !== t ||
                  (r.steering && r.steering.removeLevel(e),
                  e === r.currentLevel &&
                    ((r.currentLevel = null),
                    (r.currentLevelIndex = -1),
                    e.details &&
                      e.details.fragments.forEach(function (t) {
                        return (t.level = -1);
                      })),
                  !1)
                );
              });
            dr(i),
              (this._levels = i),
              this.currentLevelIndex > -1 &&
                null != (e = this.currentLevel) &&
                e.details &&
                (this.currentLevelIndex =
                  this.currentLevel.details.fragments[0].level),
              this.hls.trigger(S.LEVELS_UPDATED, { levels: i });
          }),
          (r.onLevelsUpdated = function (t, e) {
            var r = e.levels;
            this._levels = r;
          }),
          (r.checkMaxAutoUpdated = function () {
            var t = this.hls,
              e = t.autoLevelCapping,
              r = t.maxAutoLevel,
              i = t.maxHdcpLevel;
            this._maxAutoLevel !== r &&
              ((this._maxAutoLevel = r),
              this.hls.trigger(S.MAX_AUTO_LEVEL_UPDATED, {
                autoLevelCapping: e,
                levels: this.levels,
                maxAutoLevel: r,
                minAutoLevel: this.hls.minAutoLevel,
                maxHdcpLevel: i,
              }));
          }),
          s(e, [
            {
              key: "levels",
              get: function () {
                return 0 === this._levels.length ? null : this._levels;
              },
            },
            {
              key: "level",
              get: function () {
                return this.currentLevelIndex;
              },
              set: function (t) {
                var e = this._levels;
                if (0 !== e.length) {
                  if (t < 0 || t >= e.length) {
                    var r = new Error("invalid level idx"),
                      i = t < 0;
                    if (
                      (this.hls.trigger(S.ERROR, {
                        type: L.OTHER_ERROR,
                        details: A.LEVEL_SWITCH_ERROR,
                        level: t,
                        fatal: i,
                        error: r,
                        reason: r.message,
                      }),
                      i)
                    )
                      return;
                    t = Math.min(t, e.length - 1);
                  }
                  var n = this.currentLevelIndex,
                    a = this.currentLevel,
                    s = a ? a.attrs["PATHWAY-ID"] : void 0,
                    o = e[t],
                    l = o.attrs["PATHWAY-ID"];
                  if (
                    ((this.currentLevelIndex = t),
                    (this.currentLevel = o),
                    n !== t || !o.details || !a || s !== l)
                  ) {
                    this.log(
                      "Switching to level " +
                        t +
                        " (" +
                        (o.height ? o.height + "p " : "") +
                        (o.videoRange ? o.videoRange + " " : "") +
                        (o.codecSet ? o.codecSet + " " : "") +
                        "@" +
                        o.bitrate +
                        ")" +
                        (l ? " with Pathway " + l : "") +
                        " from level " +
                        n +
                        (s ? " with Pathway " + s : "")
                    );
                    var u = {
                      level: t,
                      attrs: o.attrs,
                      details: o.details,
                      bitrate: o.bitrate,
                      averageBitrate: o.averageBitrate,
                      maxBitrate: o.maxBitrate,
                      realBitrate: o.realBitrate,
                      width: o.width,
                      height: o.height,
                      codecSet: o.codecSet,
                      audioCodec: o.audioCodec,
                      videoCodec: o.videoCodec,
                      audioGroups: o.audioGroups,
                      subtitleGroups: o.subtitleGroups,
                      loaded: o.loaded,
                      loadError: o.loadError,
                      fragmentError: o.fragmentError,
                      name: o.name,
                      id: o.id,
                      uri: o.uri,
                      url: o.url,
                      urlId: 0,
                      audioGroupIds: o.audioGroupIds,
                      textGroupIds: o.textGroupIds,
                    };
                    this.hls.trigger(S.LEVEL_SWITCHING, u);
                    var h = o.details;
                    if (!h || h.live) {
                      var d = this.switchParams(
                        o.uri,
                        null == a ? void 0 : a.details,
                        h
                      );
                      this.loadPlaylist(d);
                    }
                  }
                }
              },
            },
            {
              key: "manualLevel",
              get: function () {
                return this.manualLevelIndex;
              },
              set: function (t) {
                (this.manualLevelIndex = t),
                  void 0 === this._startLevel && (this._startLevel = t),
                  -1 !== t && (this.level = t);
              },
            },
            {
              key: "firstLevel",
              get: function () {
                return this._firstLevel;
              },
              set: function (t) {
                this._firstLevel = t;
              },
            },
            {
              key: "startLevel",
              get: function () {
                if (void 0 === this._startLevel) {
                  var t = this.hls.config.startLevel;
                  return void 0 !== t ? t : this.hls.firstAutoLevel;
                }
                return this._startLevel;
              },
              set: function (t) {
                this._startLevel = t;
              },
            },
            {
              key: "nextLoadLevel",
              get: function () {
                return -1 !== this.manualLevelIndex
                  ? this.manualLevelIndex
                  : this.hls.nextAutoLevel;
              },
              set: function (t) {
                (this.level = t),
                  -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = t);
              },
            },
          ]),
          e
        );
      })(wr);
      function eo(t) {
        var e = {};
        t.forEach(function (t) {
          var r = t.groupId || "";
          (t.id = e[r] = e[r] || 0), e[r]++;
        });
      }
      var ro = (function () {
        function t(t) {
          (this.config = void 0),
            (this.keyUriToKeyInfo = {}),
            (this.emeController = null),
            (this.config = t);
        }
        var e = t.prototype;
        return (
          (e.abort = function (t) {
            for (var e in this.keyUriToKeyInfo) {
              var r = this.keyUriToKeyInfo[e].loader;
              if (r) {
                var i;
                if (t && t !== (null == (i = r.context) ? void 0 : i.frag.type))
                  return;
                r.abort();
              }
            }
          }),
          (e.detach = function () {
            for (var t in this.keyUriToKeyInfo) {
              var e = this.keyUriToKeyInfo[t];
              (e.mediaKeySessionContext || e.decryptdata.isCommonEncryption) &&
                delete this.keyUriToKeyInfo[t];
            }
          }),
          (e.destroy = function () {
            for (var t in (this.detach(), this.keyUriToKeyInfo)) {
              var e = this.keyUriToKeyInfo[t].loader;
              e && e.destroy();
            }
            this.keyUriToKeyInfo = {};
          }),
          (e.createKeyLoadError = function (t, e, r, i, n) {
            return (
              void 0 === e && (e = A.KEY_LOAD_ERROR),
              new li({
                type: L.NETWORK_ERROR,
                details: e,
                fatal: !1,
                frag: t,
                response: n,
                error: r,
                networkDetails: i,
              })
            );
          }),
          (e.loadClear = function (t, e) {
            var r = this;
            if (this.emeController && this.config.emeEnabled)
              for (
                var i = t.sn,
                  n = t.cc,
                  a = function () {
                    var t = e[s];
                    if (
                      n <= t.cc &&
                      ("initSegment" === i ||
                        "initSegment" === t.sn ||
                        i < t.sn)
                    )
                      return (
                        r.emeController
                          .selectKeySystemFormat(t)
                          .then(function (e) {
                            t.setKeyFormat(e);
                          }),
                        1
                      );
                  },
                  s = 0;
                s < e.length && !a();
                s++
              );
          }),
          (e.load = function (t) {
            var e = this;
            return !t.decryptdata && t.encrypted && this.emeController
              ? this.emeController.selectKeySystemFormat(t).then(function (r) {
                  return e.loadInternal(t, r);
                })
              : this.loadInternal(t);
          }),
          (e.loadInternal = function (t, e) {
            var r, i;
            e && t.setKeyFormat(e);
            var n = t.decryptdata;
            if (!n) {
              var a = new Error(
                e
                  ? "Expected frag.decryptdata to be defined after setting format " +
                    e
                  : "Missing decryption data on fragment in onKeyLoading"
              );
              return Promise.reject(
                this.createKeyLoadError(t, A.KEY_LOAD_ERROR, a)
              );
            }
            var s = n.uri;
            if (!s)
              return Promise.reject(
                this.createKeyLoadError(
                  t,
                  A.KEY_LOAD_ERROR,
                  new Error('Invalid key URI: "' + s + '"')
                )
              );
            var o,
              l = this.keyUriToKeyInfo[s];
            if (null != (r = l) && r.decryptdata.key)
              return (
                (n.key = l.decryptdata.key),
                Promise.resolve({ frag: t, keyInfo: l })
              );
            if (null != (i = l) && i.keyLoadPromise)
              switch (
                null == (o = l.mediaKeySessionContext) ? void 0 : o.keyStatus
              ) {
                case void 0:
                case "status-pending":
                case "usable":
                case "usable-in-future":
                  return l.keyLoadPromise.then(function (e) {
                    return (
                      (n.key = e.keyInfo.decryptdata.key),
                      { frag: t, keyInfo: l }
                    );
                  });
              }
            switch (
              ((l = this.keyUriToKeyInfo[s] =
                {
                  decryptdata: n,
                  keyLoadPromise: null,
                  loader: null,
                  mediaKeySessionContext: null,
                }),
              n.method)
            ) {
              case "ISO-23001-7":
              case "SAMPLE-AES":
              case "SAMPLE-AES-CENC":
              case "SAMPLE-AES-CTR":
                return "identity" === n.keyFormat
                  ? this.loadKeyHTTP(l, t)
                  : this.loadKeyEME(l, t);
              case "AES-128":
                return this.loadKeyHTTP(l, t);
              default:
                return Promise.reject(
                  this.createKeyLoadError(
                    t,
                    A.KEY_LOAD_ERROR,
                    new Error(
                      'Key supplied with unsupported METHOD: "' + n.method + '"'
                    )
                  )
                );
            }
          }),
          (e.loadKeyEME = function (t, e) {
            var r = { frag: e, keyInfo: t };
            if (this.emeController && this.config.emeEnabled) {
              var i = this.emeController.loadKey(r);
              if (i)
                return (t.keyLoadPromise = i.then(function (e) {
                  return (t.mediaKeySessionContext = e), r;
                })).catch(function (e) {
                  throw ((t.keyLoadPromise = null), e);
                });
            }
            return Promise.resolve(r);
          }),
          (e.loadKeyHTTP = function (t, e) {
            var r = this,
              n = this.config,
              a = new (0, n.loader)(n);
            return (
              (e.keyLoader = t.loader = a),
              (t.keyLoadPromise = new Promise(function (s, o) {
                var l = {
                    keyInfo: t,
                    frag: e,
                    responseType: "arraybuffer",
                    url: t.decryptdata.uri,
                  },
                  u = n.keyLoadPolicy.default,
                  h = {
                    loadPolicy: u,
                    timeout: u.maxLoadTimeMs,
                    maxRetry: 0,
                    retryDelay: 0,
                    maxRetryDelay: 0,
                  },
                  d = {
                    onSuccess: function (t, e, i, n) {
                      var a = i.frag,
                        l = i.keyInfo,
                        u = i.url;
                      if (!a.decryptdata || l !== r.keyUriToKeyInfo[u])
                        return o(
                          r.createKeyLoadError(
                            a,
                            A.KEY_LOAD_ERROR,
                            new Error(
                              "after key load, decryptdata unset or changed"
                            ),
                            n
                          )
                        );
                      (l.decryptdata.key = a.decryptdata.key =
                        new Uint8Array(t.data)),
                        (a.keyLoader = null),
                        (l.loader = null),
                        s({ frag: a, keyInfo: l });
                    },
                    onError: function (t, n, a, s) {
                      r.resetLoader(n),
                        o(
                          r.createKeyLoadError(
                            e,
                            A.KEY_LOAD_ERROR,
                            new Error(
                              "HTTP Error " + t.code + " loading key " + t.text
                            ),
                            a,
                            i({ url: l.url, data: void 0 }, t)
                          )
                        );
                    },
                    onTimeout: function (t, i, n) {
                      r.resetLoader(i),
                        o(
                          r.createKeyLoadError(
                            e,
                            A.KEY_LOAD_TIMEOUT,
                            new Error("key loading timed out"),
                            n
                          )
                        );
                    },
                    onAbort: function (t, i, n) {
                      r.resetLoader(i),
                        o(
                          r.createKeyLoadError(
                            e,
                            A.INTERNAL_ABORTED,
                            new Error("key loading aborted"),
                            n
                          )
                        );
                    },
                  };
                a.load(l, h, d);
              }))
            );
          }),
          (e.resetLoader = function (t) {
            var e = t.frag,
              r = t.keyInfo,
              i = t.url,
              n = r.loader;
            e.keyLoader === n && ((e.keyLoader = null), (r.loader = null)),
              delete this.keyUriToKeyInfo[i],
              n && n.destroy();
          }),
          t
        );
      })();
      function io() {
        return self.SourceBuffer || self.WebKitSourceBuffer;
      }
      function no() {
        if (!ee()) return !1;
        var t = io();
        return (
          !t ||
          (t.prototype &&
            "function" == typeof t.prototype.appendBuffer &&
            "function" == typeof t.prototype.remove)
        );
      }
      var ao = (function () {
          function t(t, e, r, i) {
            (this.config = void 0),
              (this.media = null),
              (this.fragmentTracker = void 0),
              (this.hls = void 0),
              (this.nudgeRetry = 0),
              (this.stallReported = !1),
              (this.stalled = null),
              (this.moved = !1),
              (this.seeking = !1),
              (this.config = t),
              (this.media = e),
              (this.fragmentTracker = r),
              (this.hls = i);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.media = null), (this.hls = this.fragmentTracker = null);
            }),
            (e.poll = function (t, e) {
              var r = this.config,
                i = this.media,
                n = this.stalled;
              if (null !== i) {
                var a = i.currentTime,
                  s = i.seeking,
                  o = this.seeking && !s,
                  l = !this.seeking && s;
                if (((this.seeking = s), a === t))
                  if (l || o) this.stalled = null;
                  else if (
                    (i.paused && !s) ||
                    i.ended ||
                    0 === i.playbackRate ||
                    !Jr.getBuffered(i).length
                  )
                    this.nudgeRetry = 0;
                  else {
                    var u = Jr.bufferInfo(i, a, 0),
                      h = u.nextStart || 0;
                    if (s) {
                      var d = u.len > 2,
                        c =
                          !h ||
                          (e && e.start <= a) ||
                          (h - a > 2 &&
                            !this.fragmentTracker.getPartialFragment(a));
                      if (d || c) return;
                      this.moved = !1;
                    }
                    if (!this.moved && null !== this.stalled) {
                      var f;
                      if (!(u.len > 0 || h)) return;
                      var g = Math.max(h, u.start || 0) - a,
                        v = this.hls.levels
                          ? this.hls.levels[this.hls.currentLevel]
                          : null,
                        m = (
                          null == v || null == (f = v.details) ? void 0 : f.live
                        )
                          ? 2 * v.details.targetduration
                          : 2,
                        p = this.fragmentTracker.getPartialFragment(a);
                      if (g > 0 && (g <= m || p))
                        return void (i.paused || this._trySkipBufferHole(p));
                    }
                    var y = self.performance.now();
                    if (null !== n) {
                      var E = y - n;
                      if (
                        s ||
                        !(E >= 250) ||
                        (this._reportStall(u), this.media)
                      ) {
                        var T = Jr.bufferInfo(i, a, r.maxBufferHole);
                        this._tryFixBufferStall(T, E);
                      }
                    } else this.stalled = y;
                  }
                else if (
                  ((this.moved = !0), s || (this.nudgeRetry = 0), null !== n)
                ) {
                  if (this.stallReported) {
                    var S = self.performance.now() - n;
                    w.warn(
                      "playback not stuck anymore @" +
                        a +
                        ", after " +
                        Math.round(S) +
                        "ms"
                    ),
                      (this.stallReported = !1);
                  }
                  this.stalled = null;
                }
              }
            }),
            (e._tryFixBufferStall = function (t, e) {
              var r = this.config,
                i = this.fragmentTracker,
                n = this.media;
              if (null !== n) {
                var a = n.currentTime,
                  s = i.getPartialFragment(a);
                if (s && (this._trySkipBufferHole(s) || !this.media)) return;
                (t.len > r.maxBufferHole ||
                  (t.nextStart && t.nextStart - a < r.maxBufferHole)) &&
                  e > 1e3 * r.highBufferWatchdogPeriod &&
                  (w.warn("Trying to nudge playhead over buffer-hole"),
                  (this.stalled = null),
                  this._tryNudgeBuffer());
              }
            }),
            (e._reportStall = function (t) {
              var e = this.hls,
                r = this.media;
              if (!this.stallReported && r) {
                this.stallReported = !0;
                var i = new Error(
                  "Playback stalling at @" +
                    r.currentTime +
                    " due to low buffer (" +
                    JSON.stringify(t) +
                    ")"
                );
                w.warn(i.message),
                  e.trigger(S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: A.BUFFER_STALLED_ERROR,
                    fatal: !1,
                    error: i,
                    buffer: t.len,
                  });
              }
            }),
            (e._trySkipBufferHole = function (t) {
              var e = this.config,
                r = this.hls,
                i = this.media;
              if (null === i) return 0;
              var n = i.currentTime,
                a = Jr.bufferInfo(i, n, 0),
                s = n < a.start ? a.start : a.nextStart;
              if (s) {
                var o = a.len <= e.maxBufferHole,
                  l = a.len > 0 && a.len < 1 && i.readyState < 3,
                  u = s - n;
                if (u > 0 && (o || l)) {
                  if (u > e.maxBufferHole) {
                    var h = this.fragmentTracker,
                      d = !1;
                    if (0 === n) {
                      var c = h.getAppendedFrag(0, we);
                      c && s < c.end && (d = !0);
                    }
                    if (!d) {
                      var f = t || h.getAppendedFrag(n, we);
                      if (f) {
                        for (var g = !1, v = f.end; v < s; ) {
                          var m = h.getPartialFragment(v);
                          if (!m) {
                            g = !0;
                            break;
                          }
                          v += m.duration;
                        }
                        if (g) return 0;
                      }
                    }
                  }
                  var p = Math.max(s + 0.05, n + 0.1);
                  if (
                    (w.warn(
                      "skipping hole, adjusting currentTime from " +
                        n +
                        " to " +
                        p
                    ),
                    (this.moved = !0),
                    (this.stalled = null),
                    (i.currentTime = p),
                    t && !t.gap)
                  ) {
                    var y = new Error(
                      "fragment loaded with buffer holes, seeking from " +
                        n +
                        " to " +
                        p
                    );
                    r.trigger(S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: A.BUFFER_SEEK_OVER_HOLE,
                      fatal: !1,
                      error: y,
                      reason: y.message,
                      frag: t,
                    });
                  }
                  return p;
                }
              }
              return 0;
            }),
            (e._tryNudgeBuffer = function () {
              var t = this.config,
                e = this.hls,
                r = this.media,
                i = this.nudgeRetry;
              if (null !== r) {
                var n = r.currentTime;
                if ((this.nudgeRetry++, i < t.nudgeMaxRetry)) {
                  var a = n + (i + 1) * t.nudgeOffset,
                    s = new Error(
                      "Nudging 'currentTime' from " + n + " to " + a
                    );
                  w.warn(s.message),
                    (r.currentTime = a),
                    e.trigger(S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: A.BUFFER_NUDGE_ON_STALL,
                      error: s,
                      fatal: !1,
                    });
                } else {
                  var o = new Error(
                    "Playhead still not moving while enough data buffered @" +
                      n +
                      " after " +
                      t.nudgeMaxRetry +
                      " nudges"
                  );
                  w.error(o.message),
                    e.trigger(S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: A.BUFFER_STALLED_ERROR,
                      error: o,
                      fatal: !0,
                    });
                }
              }
            }),
            t
          );
        })(),
        so = (function (t) {
          function e(e, r, i) {
            var n;
            return (
              ((n =
                t.call(this, e, r, i, "[stream-controller]", we) ||
                this).audioCodecSwap = !1),
              (n.gapController = null),
              (n.level = -1),
              (n._forceStartLoad = !1),
              (n.altAudio = !1),
              (n.audioOnly = !1),
              (n.fragPlaying = null),
              (n.onvplaying = null),
              (n.onvseeked = null),
              (n.fragLastKbps = 0),
              (n.couldBacktrack = !1),
              (n.backtrackFragment = null),
              (n.audioCodecSwitch = !1),
              (n.videoBuffer = null),
              n._registerListeners(),
              n
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r._registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(
                  S.FRAG_LOAD_EMERGENCY_ABORTED,
                  this.onFragLoadEmergencyAborted,
                  this
                ),
                t.on(S.ERROR, this.onError, this),
                t.on(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.on(S.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.on(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(
                  S.FRAG_LOAD_EMERGENCY_ABORTED,
                  this.onFragLoadEmergencyAborted,
                  this
                ),
                t.off(S.ERROR, this.onError, this),
                t.off(
                  S.AUDIO_TRACK_SWITCHING,
                  this.onAudioTrackSwitching,
                  this
                ),
                t.off(S.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.off(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r.onHandlerDestroying = function () {
              this._unregisterListeners(),
                t.prototype.onHandlerDestroying.call(this);
            }),
            (r.startLoad = function (t) {
              if (this.levels) {
                var e = this.lastCurrentTime,
                  r = this.hls;
                if (
                  (this.stopLoad(),
                  this.setInterval(100),
                  (this.level = -1),
                  !this.startFragRequested)
                ) {
                  var i = r.startLevel;
                  -1 === i &&
                    (r.config.testBandwidth && this.levels.length > 1
                      ? ((i = 0), (this.bitrateTest = !0))
                      : (i = r.firstAutoLevel)),
                    (r.nextLoadLevel = i),
                    (this.level = r.loadLevel),
                    (this.loadedmetadata = !1);
                }
                e > 0 &&
                  -1 === t &&
                  (this.log(
                    "Override startPosition with lastCurrentTime @" +
                      e.toFixed(3)
                  ),
                  (t = e)),
                  (this.state = vi),
                  (this.nextLoadPosition =
                    this.startPosition =
                    this.lastCurrentTime =
                      t),
                  this.tick();
              } else (this._forceStartLoad = !0), (this.state = gi);
            }),
            (r.stopLoad = function () {
              (this._forceStartLoad = !1), t.prototype.stopLoad.call(this);
            }),
            (r.doTick = function () {
              switch (this.state) {
                case ki:
                  var t = this.levels,
                    e = this.level,
                    r = null == t ? void 0 : t[e],
                    i = null == r ? void 0 : r.details;
                  if (i && (!i.live || this.levelLastLoaded === r)) {
                    if (this.waitForCdnTuneIn(i)) break;
                    this.state = vi;
                    break;
                  }
                  if (this.hls.nextLoadLevel !== this.level) {
                    this.state = vi;
                    break;
                  }
                  break;
                case yi:
                  var n,
                    a = self.performance.now(),
                    s = this.retryDate;
                  if (!s || a >= s || (null != (n = this.media) && n.seeking)) {
                    var o = this.levels,
                      l = this.level,
                      u = null == o ? void 0 : o[l];
                    this.resetStartWhenNotLoaded(u || null), (this.state = vi);
                  }
              }
              this.state === vi && this.doTickIdle(), this.onTickEnd();
            }),
            (r.onTickEnd = function () {
              t.prototype.onTickEnd.call(this),
                this.checkBuffer(),
                this.checkFragmentChanged();
            }),
            (r.doTickIdle = function () {
              var t = this.hls,
                e = this.levelLastLoaded,
                r = this.levels,
                i = this.media;
              if (
                null !== e &&
                (i ||
                  (!this.startFragRequested && t.config.startFragPrefetch)) &&
                (!this.altAudio || !this.audioOnly)
              ) {
                var n = t.nextLoadLevel;
                if (null != r && r[n]) {
                  var a = r[n],
                    s = this.getMainFwdBufferInfo();
                  if (null !== s) {
                    var o = this.getLevelDetails();
                    if (o && this._streamEnded(s, o)) {
                      var l = {};
                      return (
                        this.altAudio && (l.type = "video"),
                        this.hls.trigger(S.BUFFER_EOS, l),
                        void (this.state = Li)
                      );
                    }
                    t.loadLevel !== n &&
                      -1 === t.manualLevel &&
                      this.log(
                        "Adapting to level " + n + " from level " + this.level
                      ),
                      (this.level = t.nextLoadLevel = n);
                    var u = a.details;
                    if (
                      !u ||
                      this.state === ki ||
                      (u.live && this.levelLastLoaded !== a)
                    )
                      return (this.level = n), void (this.state = ki);
                    var h = s.len,
                      d = this.getMaxBufferLength(a.maxBitrate);
                    if (!(h >= d)) {
                      this.backtrackFragment &&
                        this.backtrackFragment.start > s.end &&
                        (this.backtrackFragment = null);
                      var c = this.backtrackFragment
                          ? this.backtrackFragment.start
                          : s.end,
                        f = this.getNextFragment(c, u);
                      if (
                        this.couldBacktrack &&
                        !this.fragPrevious &&
                        f &&
                        "initSegment" !== f.sn &&
                        this.fragmentTracker.getState(f) !== jr
                      ) {
                        var g,
                          v =
                            (null != (g = this.backtrackFragment) ? g : f).sn -
                            u.startSN,
                          m = u.fragments[v - 1];
                        m &&
                          f.cc === m.cc &&
                          ((f = m), this.fragmentTracker.removeFragment(m));
                      } else
                        this.backtrackFragment &&
                          s.len &&
                          (this.backtrackFragment = null);
                      if (f && this.isLoopLoading(f, c)) {
                        if (!f.gap) {
                          var p = this.audioOnly && !this.altAudio ? O : N,
                            y =
                              (p === N ? this.videoBuffer : this.mediaBuffer) ||
                              this.media;
                          y && this.afterBufferFlushed(y, p, we);
                        }
                        f = this.getNextFragmentLoopLoading(f, u, s, we, d);
                      }
                      f &&
                        (!f.initSegment ||
                          f.initSegment.data ||
                          this.bitrateTest ||
                          (f = f.initSegment),
                        this.loadFragment(f, a, c));
                    }
                  }
                }
              }
            }),
            (r.loadFragment = function (e, r, i) {
              var n = this.fragmentTracker.getState(e);
              (this.fragCurrent = e),
                n === Vr || n === Wr
                  ? "initSegment" === e.sn
                    ? this._loadInitSegment(e, r)
                    : this.bitrateTest
                    ? (this.log(
                        "Fragment " +
                          e.sn +
                          " of level " +
                          e.level +
                          " is being downloaded to test bitrate and will not be buffered"
                      ),
                      this._loadBitrateTestFrag(e, r))
                    : ((this.startFragRequested = !0),
                      t.prototype.loadFragment.call(this, e, r, i))
                  : this.clearTrackerIfNeeded(e);
            }),
            (r.getBufferedFrag = function (t) {
              return this.fragmentTracker.getBufferedFrag(t, we);
            }),
            (r.followingBufferedFrag = function (t) {
              return t ? this.getBufferedFrag(t.end + 0.5) : null;
            }),
            (r.immediateLevelSwitch = function () {
              this.abortCurrentFrag(),
                this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
            }),
            (r.nextLevelSwitch = function () {
              var t = this.levels,
                e = this.media;
              if (null != e && e.readyState) {
                var r,
                  i = this.getAppendedFrag(e.currentTime);
                i && i.start > 1 && this.flushMainBuffer(0, i.start - 1);
                var n = this.getLevelDetails();
                if (null != n && n.live) {
                  var a = this.getMainFwdBufferInfo();
                  if (!a || a.len < 2 * n.targetduration) return;
                }
                if (!e.paused && t) {
                  var s = t[this.hls.nextLoadLevel],
                    o = this.fragLastKbps;
                  r =
                    o && this.fragCurrent
                      ? (this.fragCurrent.duration * s.maxBitrate) / (1e3 * o) +
                        1
                      : 0;
                } else r = 0;
                var l = this.getBufferedFrag(e.currentTime + r);
                if (l) {
                  var u = this.followingBufferedFrag(l);
                  if (u) {
                    this.abortCurrentFrag();
                    var h = u.maxStartPTS ? u.maxStartPTS : u.start,
                      d = u.duration,
                      c = Math.max(
                        l.end,
                        h +
                          Math.min(
                            Math.max(
                              d - this.config.maxFragLookUpTolerance,
                              d * (this.couldBacktrack ? 0.5 : 0.125)
                            ),
                            d * (this.couldBacktrack ? 0.75 : 0.25)
                          )
                      );
                    this.flushMainBuffer(c, Number.POSITIVE_INFINITY);
                  }
                }
              }
            }),
            (r.abortCurrentFrag = function () {
              var t = this.fragCurrent;
              switch (
                ((this.fragCurrent = null),
                (this.backtrackFragment = null),
                t &&
                  (t.abortRequests(), this.fragmentTracker.removeFragment(t)),
                this.state)
              ) {
                case mi:
                case pi:
                case yi:
                case Ti:
                case Si:
                  this.state = vi;
              }
              this.nextLoadPosition = this.getLoadPosition();
            }),
            (r.flushMainBuffer = function (e, r) {
              t.prototype.flushMainBuffer.call(
                this,
                e,
                r,
                this.altAudio ? "video" : null
              );
            }),
            (r.onMediaAttached = function (e, r) {
              t.prototype.onMediaAttached.call(this, e, r);
              var i = r.media;
              (this.onvplaying = this.onMediaPlaying.bind(this)),
                (this.onvseeked = this.onMediaSeeked.bind(this)),
                i.addEventListener("playing", this.onvplaying),
                i.addEventListener("seeked", this.onvseeked),
                (this.gapController = new ao(
                  this.config,
                  i,
                  this.fragmentTracker,
                  this.hls
                ));
            }),
            (r.onMediaDetaching = function () {
              var e = this.media;
              e &&
                this.onvplaying &&
                this.onvseeked &&
                (e.removeEventListener("playing", this.onvplaying),
                e.removeEventListener("seeked", this.onvseeked),
                (this.onvplaying = this.onvseeked = null),
                (this.videoBuffer = null)),
                (this.fragPlaying = null),
                this.gapController &&
                  (this.gapController.destroy(), (this.gapController = null)),
                t.prototype.onMediaDetaching.call(this);
            }),
            (r.onMediaPlaying = function () {
              this.tick();
            }),
            (r.onMediaSeeked = function () {
              var t = this.media,
                e = t ? t.currentTime : null;
              y(e) && this.log("Media seeked to " + e.toFixed(3));
              var r = this.getMainFwdBufferInfo();
              null !== r && 0 !== r.len
                ? this.tick()
                : this.warn(
                    'Main forward buffer length on "seeked" event ' +
                      (r ? r.len : "empty") +
                      ")"
                  );
            }),
            (r.onManifestLoading = function () {
              this.log("Trigger BUFFER_RESET"),
                this.hls.trigger(S.BUFFER_RESET, void 0),
                this.fragmentTracker.removeAllFragments(),
                (this.couldBacktrack = !1),
                (this.startPosition =
                  this.lastCurrentTime =
                  this.fragLastKbps =
                    0),
                (this.levels =
                  this.fragPlaying =
                  this.backtrackFragment =
                  this.levelLastLoaded =
                    null),
                (this.altAudio = this.audioOnly = this.startFragRequested = !1);
            }),
            (r.onManifestParsed = function (t, e) {
              var r,
                i,
                n = !1,
                a = !1;
              e.levels.forEach(function (t) {
                var e = t.audioCodec;
                e &&
                  ((n = n || -1 !== e.indexOf("mp4a.40.2")),
                  (a = a || -1 !== e.indexOf("mp4a.40.5")));
              }),
                (this.audioCodecSwitch =
                  n &&
                  a &&
                  !(
                    "function" ==
                    typeof (null == (i = io()) || null == (r = i.prototype)
                      ? void 0
                      : r.changeType)
                  )),
                this.audioCodecSwitch &&
                  this.log(
                    "Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"
                  ),
                (this.levels = e.levels),
                (this.startFragRequested = !1);
            }),
            (r.onLevelLoading = function (t, e) {
              var r = this.levels;
              if (r && this.state === vi) {
                var i = r[e.level];
                (!i.details ||
                  (i.details.live && this.levelLastLoaded !== i) ||
                  this.waitForCdnTuneIn(i.details)) &&
                  (this.state = ki);
              }
            }),
            (r.onLevelLoaded = function (t, e) {
              var r,
                i = this.levels,
                n = e.level,
                a = e.details,
                s = a.totalduration;
              if (i) {
                this.log(
                  "Level " +
                    n +
                    " loaded [" +
                    a.startSN +
                    "," +
                    a.endSN +
                    "]" +
                    (a.lastPartSn
                      ? "[part-" + a.lastPartSn + "-" + a.lastPartIndex + "]"
                      : "") +
                    ", cc [" +
                    a.startCC +
                    ", " +
                    a.endCC +
                    "] duration:" +
                    s
                );
                var o = i[n],
                  l = this.fragCurrent;
                !l ||
                  (this.state !== pi && this.state !== yi) ||
                  (l.level !== e.level && l.loader && this.abortCurrentFrag());
                var u = 0;
                if (a.live || (null != (r = o.details) && r.live)) {
                  var h;
                  if ((this.checkLiveUpdate(a), a.deltaUpdateFailed)) return;
                  u = this.alignPlaylists(
                    a,
                    o.details,
                    null == (h = this.levelLastLoaded) ? void 0 : h.details
                  );
                }
                if (
                  ((o.details = a),
                  (this.levelLastLoaded = o),
                  this.hls.trigger(S.LEVEL_UPDATED, { details: a, level: n }),
                  this.state === ki)
                ) {
                  if (this.waitForCdnTuneIn(a)) return;
                  this.state = vi;
                }
                this.startFragRequested
                  ? a.live && this.synchronizeToLiveEdge(a)
                  : this.setStartPosition(a, u),
                  this.tick();
              } else this.warn("Levels were reset while loading level " + n);
            }),
            (r._handleFragmentLoadProgress = function (t) {
              var e,
                r = t.frag,
                i = t.part,
                n = t.payload,
                a = this.levels;
              if (a) {
                var s = a[r.level],
                  o = s.details;
                if (!o)
                  return (
                    this.warn(
                      "Dropping fragment " +
                        r.sn +
                        " of level " +
                        r.level +
                        " after level details were reset"
                    ),
                    void this.fragmentTracker.removeFragment(r)
                  );
                var l = s.videoCodec,
                  u = o.PTSKnown || !o.live,
                  h = null == (e = r.initSegment) ? void 0 : e.data,
                  d = this._getAudioCodec(s),
                  c = (this.transmuxer =
                    this.transmuxer ||
                    new Hn(
                      this.hls,
                      we,
                      this._handleTransmuxComplete.bind(this),
                      this._handleTransmuxerFlush.bind(this)
                    )),
                  f = i ? i.index : -1,
                  g = -1 !== f,
                  v = new $r(
                    r.level,
                    r.sn,
                    r.stats.chunkCount,
                    n.byteLength,
                    f,
                    g
                  ),
                  m = this.initPTS[r.cc];
                c.push(n, h, d, l, r, i, o.totalduration, u, v, m);
              } else
                this.warn(
                  "Levels were reset while fragment load was in progress. Fragment " +
                    r.sn +
                    " of level " +
                    r.level +
                    " will not be buffered"
                );
            }),
            (r.onAudioTrackSwitching = function (t, e) {
              var r = this.altAudio;
              if (!e.url) {
                if (this.mediaBuffer !== this.media) {
                  this.log(
                    "Switching on main audio, use media.buffered to schedule main fragment loading"
                  ),
                    (this.mediaBuffer = this.media);
                  var i = this.fragCurrent;
                  i &&
                    (this.log(
                      "Switching to main audio track, cancel main fragment load"
                    ),
                    i.abortRequests(),
                    this.fragmentTracker.removeFragment(i)),
                    this.resetTransmuxer(),
                    this.resetLoadingState();
                } else this.audioOnly && this.resetTransmuxer();
                var n = this.hls;
                r &&
                  (n.trigger(S.BUFFER_FLUSHING, {
                    startOffset: 0,
                    endOffset: Number.POSITIVE_INFINITY,
                    type: null,
                  }),
                  this.fragmentTracker.removeAllFragments()),
                  n.trigger(S.AUDIO_TRACK_SWITCHED, e);
              }
            }),
            (r.onAudioTrackSwitched = function (t, e) {
              var r = e.id,
                i = !!this.hls.audioTracks[r].url;
              if (i) {
                var n = this.videoBuffer;
                n &&
                  this.mediaBuffer !== n &&
                  (this.log(
                    "Switching on alternate audio, use video.buffered to schedule main fragment loading"
                  ),
                  (this.mediaBuffer = n));
              }
              (this.altAudio = i), this.tick();
            }),
            (r.onBufferCreated = function (t, e) {
              var r,
                i,
                n = e.tracks,
                a = !1;
              for (var s in n) {
                var o = n[s];
                if ("main" === o.id) {
                  if (((i = s), (r = o), "video" === s)) {
                    var l = n[s];
                    l && (this.videoBuffer = l.buffer);
                  }
                } else a = !0;
              }
              a && r
                ? (this.log(
                    "Alternate track found, use " +
                      i +
                      ".buffered to schedule main fragment loading"
                  ),
                  (this.mediaBuffer = r.buffer))
                : (this.mediaBuffer = this.media);
            }),
            (r.onFragBuffered = function (t, e) {
              var r = e.frag,
                i = e.part;
              if (!r || r.type === we) {
                if (this.fragContextChanged(r))
                  return (
                    this.warn(
                      "Fragment " +
                        r.sn +
                        (i ? " p: " + i.index : "") +
                        " of level " +
                        r.level +
                        " finished buffering, but was aborted. state: " +
                        this.state
                    ),
                    void (this.state === Si && (this.state = vi))
                  );
                var n = i ? i.stats : r.stats;
                (this.fragLastKbps = Math.round(
                  (8 * n.total) / (n.buffering.end - n.loading.first)
                )),
                  "initSegment" !== r.sn && (this.fragPrevious = r),
                  this.fragBufferedComplete(r, i);
              }
            }),
            (r.onError = function (t, e) {
              var r;
              if (e.fatal) this.state = Ai;
              else
                switch (e.details) {
                  case A.FRAG_GAP:
                  case A.FRAG_PARSING_ERROR:
                  case A.FRAG_DECRYPT_ERROR:
                  case A.FRAG_LOAD_ERROR:
                  case A.FRAG_LOAD_TIMEOUT:
                  case A.KEY_LOAD_ERROR:
                  case A.KEY_LOAD_TIMEOUT:
                    this.onFragmentOrKeyLoadError(we, e);
                    break;
                  case A.LEVEL_LOAD_ERROR:
                  case A.LEVEL_LOAD_TIMEOUT:
                  case A.LEVEL_PARSING_ERROR:
                    e.levelRetry ||
                      this.state !== ki ||
                      (null == (r = e.context) ? void 0 : r.type) !== be ||
                      (this.state = vi);
                    break;
                  case A.BUFFER_APPEND_ERROR:
                  case A.BUFFER_FULL_ERROR:
                    if (!e.parent || "main" !== e.parent) return;
                    if (e.details === A.BUFFER_APPEND_ERROR)
                      return void this.resetLoadingState();
                    this.reduceLengthAndFlushBuffer(e) &&
                      this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
                    break;
                  case A.INTERNAL_EXCEPTION:
                    this.recoverWorkerError(e);
                }
            }),
            (r.checkBuffer = function () {
              var t = this.media,
                e = this.gapController;
              if (t && e && t.readyState) {
                if (this.loadedmetadata || !Jr.getBuffered(t).length) {
                  var r = this.state !== vi ? this.fragCurrent : null;
                  e.poll(this.lastCurrentTime, r);
                }
                this.lastCurrentTime = t.currentTime;
              }
            }),
            (r.onFragLoadEmergencyAborted = function () {
              (this.state = vi),
                this.loadedmetadata ||
                  ((this.startFragRequested = !1),
                  (this.nextLoadPosition = this.startPosition)),
                this.tickImmediate();
            }),
            (r.onBufferFlushed = function (t, e) {
              var r = e.type;
              if (r !== O || (this.audioOnly && !this.altAudio)) {
                var i =
                  (r === N ? this.videoBuffer : this.mediaBuffer) || this.media;
                this.afterBufferFlushed(i, r, we), this.tick();
              }
            }),
            (r.onLevelsUpdated = function (t, e) {
              this.level > -1 &&
                this.fragCurrent &&
                (this.level = this.fragCurrent.level),
                (this.levels = e.levels);
            }),
            (r.swapAudioCodec = function () {
              this.audioCodecSwap = !this.audioCodecSwap;
            }),
            (r.seekToStartPos = function () {
              var t = this.media;
              if (t) {
                var e = t.currentTime,
                  r = this.startPosition;
                if (r >= 0 && e < r) {
                  if (t.seeking)
                    return void this.log(
                      "could not seek to " + r + ", already seeking at " + e
                    );
                  var i = Jr.getBuffered(t),
                    n = (i.length ? i.start(0) : 0) - r;
                  n > 0 &&
                    (n < this.config.maxBufferHole ||
                      n < this.config.maxFragLookUpTolerance) &&
                    (this.log(
                      "adjusting start position by " +
                        n +
                        " to match buffer start"
                    ),
                    (r += n),
                    (this.startPosition = r)),
                    this.log(
                      "seek to target start position " +
                        r +
                        " from current time " +
                        e
                    ),
                    (t.currentTime = r);
                }
              }
            }),
            (r._getAudioCodec = function (t) {
              var e = this.config.defaultAudioCodec || t.audioCodec;
              return (
                this.audioCodecSwap &&
                  e &&
                  (this.log("Swapping audio codec"),
                  (e =
                    -1 !== e.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5")),
                e
              );
            }),
            (r._loadBitrateTestFrag = function (t, e) {
              var r = this;
              (t.bitrateTest = !0),
                this._doFragLoad(t, e).then(function (i) {
                  var n = r.hls;
                  if (i && !r.fragContextChanged(t)) {
                    (e.fragmentError = 0),
                      (r.state = vi),
                      (r.startFragRequested = !1),
                      (r.bitrateTest = !1);
                    var a = t.stats;
                    (a.parsing.start =
                      a.parsing.end =
                      a.buffering.start =
                      a.buffering.end =
                        self.performance.now()),
                      n.trigger(S.FRAG_LOADED, i),
                      (t.bitrateTest = !1);
                  }
                });
            }),
            (r._handleTransmuxComplete = function (t) {
              var e,
                r = "main",
                i = this.hls,
                n = t.remuxResult,
                a = t.chunkMeta,
                s = this.getCurrentContext(a);
              if (s) {
                var o = s.frag,
                  l = s.part,
                  u = s.level,
                  h = n.video,
                  d = n.text,
                  c = n.id3,
                  f = n.initSegment,
                  g = u.details,
                  v = this.altAudio ? void 0 : n.audio;
                if (this.fragContextChanged(o))
                  this.fragmentTracker.removeFragment(o);
                else {
                  if (((this.state = Ti), f)) {
                    if (null != f && f.tracks) {
                      var m = o.initSegment || o;
                      this._bufferInitSegment(u, f.tracks, m, a),
                        i.trigger(S.FRAG_PARSING_INIT_SEGMENT, {
                          frag: m,
                          id: r,
                          tracks: f.tracks,
                        });
                    }
                    var p = f.initPTS,
                      E = f.timescale;
                    y(p) &&
                      ((this.initPTS[o.cc] = { baseTime: p, timescale: E }),
                      i.trigger(S.INIT_PTS_FOUND, {
                        frag: o,
                        id: r,
                        initPTS: p,
                        timescale: E,
                      }));
                  }
                  if (h && g && "initSegment" !== o.sn) {
                    var T = g.fragments[o.sn - 1 - g.startSN],
                      L = o.sn === g.startSN,
                      A = !T || o.cc > T.cc;
                    if (!1 !== n.independent) {
                      var R = h.startPTS,
                        k = h.endPTS,
                        b = h.startDTS,
                        D = h.endDTS;
                      if (l)
                        l.elementaryStreams[h.type] = {
                          startPTS: R,
                          endPTS: k,
                          startDTS: b,
                          endDTS: D,
                        };
                      else if (
                        (h.firstKeyFrame &&
                          h.independent &&
                          1 === a.id &&
                          !A &&
                          (this.couldBacktrack = !0),
                        h.dropped && h.independent)
                      ) {
                        var I = this.getMainFwdBufferInfo(),
                          w =
                            (I ? I.end : this.getLoadPosition()) +
                            this.config.maxBufferHole,
                          C = h.firstKeyFramePTS ? h.firstKeyFramePTS : R;
                        if (!L && w < C - this.config.maxBufferHole && !A)
                          return void this.backtrack(o);
                        A && (o.gap = !0),
                          o.setElementaryStreamInfo(
                            h.type,
                            o.start,
                            k,
                            o.start,
                            D,
                            !0
                          );
                      } else L && R > 2 && (o.gap = !0);
                      o.setElementaryStreamInfo(h.type, R, k, b, D),
                        this.backtrackFragment && (this.backtrackFragment = o),
                        this.bufferFragmentData(h, o, l, a, L || A);
                    } else {
                      if (!L && !A) return void this.backtrack(o);
                      o.gap = !0;
                    }
                  }
                  if (v) {
                    var _ = v.startPTS,
                      x = v.endPTS,
                      P = v.startDTS,
                      F = v.endDTS;
                    l &&
                      (l.elementaryStreams[O] = {
                        startPTS: _,
                        endPTS: x,
                        startDTS: P,
                        endDTS: F,
                      }),
                      o.setElementaryStreamInfo(O, _, x, P, F),
                      this.bufferFragmentData(v, o, l, a);
                  }
                  if (g && null != c && null != (e = c.samples) && e.length) {
                    var M = { id: r, frag: o, details: g, samples: c.samples };
                    i.trigger(S.FRAG_PARSING_METADATA, M);
                  }
                  if (g && d) {
                    var N = { id: r, frag: o, details: g, samples: d.samples };
                    i.trigger(S.FRAG_PARSING_USERDATA, N);
                  }
                }
              } else this.resetWhenMissingContext(a);
            }),
            (r._bufferInitSegment = function (t, e, r, i) {
              var n = this;
              if (this.state === Ti) {
                (this.audioOnly = !!e.audio && !e.video),
                  this.altAudio && !this.audioOnly && delete e.audio;
                var a = e.audio,
                  s = e.video,
                  o = e.audiovideo;
                if (a) {
                  var l = t.audioCodec,
                    u = navigator.userAgent.toLowerCase();
                  if (this.audioCodecSwitch) {
                    l &&
                      (l =
                        -1 !== l.indexOf("mp4a.40.5")
                          ? "mp4a.40.2"
                          : "mp4a.40.5");
                    var h = a.metadata;
                    h &&
                      "channelCount" in h &&
                      1 !== (h.channelCount || 1) &&
                      -1 === u.indexOf("firefox") &&
                      (l = "mp4a.40.5");
                  }
                  l &&
                    -1 !== l.indexOf("mp4a.40.5") &&
                    -1 !== u.indexOf("android") &&
                    "audio/mpeg" !== a.container &&
                    ((l = "mp4a.40.2"),
                    this.log("Android: force audio codec to " + l)),
                    t.audioCodec &&
                      t.audioCodec !== l &&
                      this.log(
                        'Swapping manifest audio codec "' +
                          t.audioCodec +
                          '" for "' +
                          l +
                          '"'
                      ),
                    (a.levelCodec = l),
                    (a.id = "main"),
                    this.log(
                      "Init audio buffer, container:" +
                        a.container +
                        ", codecs[selected/level/parsed]=[" +
                        (l || "") +
                        "/" +
                        (t.audioCodec || "") +
                        "/" +
                        a.codec +
                        "]"
                    );
                }
                s &&
                  ((s.levelCodec = t.videoCodec),
                  (s.id = "main"),
                  this.log(
                    "Init video buffer, container:" +
                      s.container +
                      ", codecs[level/parsed]=[" +
                      (t.videoCodec || "") +
                      "/" +
                      s.codec +
                      "]"
                  )),
                  o &&
                    this.log(
                      "Init audiovideo buffer, container:" +
                        o.container +
                        ", codecs[level/parsed]=[" +
                        t.codecs +
                        "/" +
                        o.codec +
                        "]"
                    ),
                  this.hls.trigger(S.BUFFER_CODECS, e),
                  Object.keys(e).forEach(function (t) {
                    var a = e[t].initSegment;
                    null != a &&
                      a.byteLength &&
                      n.hls.trigger(S.BUFFER_APPENDING, {
                        type: t,
                        data: a,
                        frag: r,
                        part: null,
                        chunkMeta: i,
                        parent: r.type,
                      });
                  }),
                  this.tickImmediate();
              }
            }),
            (r.getMainFwdBufferInfo = function () {
              return this.getFwdBufferInfo(
                this.mediaBuffer ? this.mediaBuffer : this.media,
                we
              );
            }),
            (r.backtrack = function (t) {
              (this.couldBacktrack = !0),
                (this.backtrackFragment = t),
                this.resetTransmuxer(),
                this.flushBufferGap(t),
                this.fragmentTracker.removeFragment(t),
                (this.fragPrevious = null),
                (this.nextLoadPosition = t.start),
                (this.state = vi);
            }),
            (r.checkFragmentChanged = function () {
              var t = this.media,
                e = null;
              if (t && t.readyState > 1 && !1 === t.seeking) {
                var r = t.currentTime;
                if (
                  (Jr.isBuffered(t, r)
                    ? (e = this.getAppendedFrag(r))
                    : Jr.isBuffered(t, r + 0.1) &&
                      (e = this.getAppendedFrag(r + 0.1)),
                  e)
                ) {
                  this.backtrackFragment = null;
                  var i = this.fragPlaying,
                    n = e.level;
                  (i && e.sn === i.sn && i.level === n) ||
                    ((this.fragPlaying = e),
                    this.hls.trigger(S.FRAG_CHANGED, { frag: e }),
                    (i && i.level === n) ||
                      this.hls.trigger(S.LEVEL_SWITCHED, { level: n }));
                }
              }
            }),
            s(e, [
              {
                key: "nextLevel",
                get: function () {
                  var t = this.nextBufferedFrag;
                  return t ? t.level : -1;
                },
              },
              {
                key: "currentFrag",
                get: function () {
                  var t = this.media;
                  return t
                    ? this.fragPlaying || this.getAppendedFrag(t.currentTime)
                    : null;
                },
              },
              {
                key: "currentProgramDateTime",
                get: function () {
                  var t = this.media;
                  if (t) {
                    var e = t.currentTime,
                      r = this.currentFrag;
                    if (r && y(e) && y(r.programDateTime)) {
                      var i = r.programDateTime + 1e3 * (e - r.start);
                      return new Date(i);
                    }
                  }
                  return null;
                },
              },
              {
                key: "currentLevel",
                get: function () {
                  var t = this.currentFrag;
                  return t ? t.level : -1;
                },
              },
              {
                key: "nextBufferedFrag",
                get: function () {
                  var t = this.currentFrag;
                  return t ? this.followingBufferedFrag(t) : null;
                },
              },
              {
                key: "forceStartLoad",
                get: function () {
                  return this._forceStartLoad;
                },
              },
            ]),
            e
          );
        })(bi),
        oo = (function () {
          function t(e) {
            void 0 === e && (e = {}),
              (this.config = void 0),
              (this.userConfig = void 0),
              (this.coreComponents = void 0),
              (this.networkControllers = void 0),
              (this.started = !1),
              (this._emitter = new Un()),
              (this._autoLevelCapping = -1),
              (this._maxHdcpLevel = null),
              (this.abrController = void 0),
              (this.bufferController = void 0),
              (this.capLevelController = void 0),
              (this.latencyController = void 0),
              (this.levelController = void 0),
              (this.streamController = void 0),
              (this.audioTrackController = void 0),
              (this.subtitleTrackController = void 0),
              (this.emeController = void 0),
              (this.cmcdController = void 0),
              (this._media = null),
              (this.url = null),
              (this.triggeringException = void 0),
              I(e.debug || !1, "Hls instance");
            var r = (this.config = (function (t, e) {
              if (
                (e.liveSyncDurationCount || e.liveMaxLatencyDurationCount) &&
                (e.liveSyncDuration || e.liveMaxLatencyDuration)
              )
                throw new Error(
                  "Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration"
                );
              if (
                void 0 !== e.liveMaxLatencyDurationCount &&
                (void 0 === e.liveSyncDurationCount ||
                  e.liveMaxLatencyDurationCount <= e.liveSyncDurationCount)
              )
                throw new Error(
                  'Illegal hls.js config: "liveMaxLatencyDurationCount" must be greater than "liveSyncDurationCount"'
                );
              if (
                void 0 !== e.liveMaxLatencyDuration &&
                (void 0 === e.liveSyncDuration ||
                  e.liveMaxLatencyDuration <= e.liveSyncDuration)
              )
                throw new Error(
                  'Illegal hls.js config: "liveMaxLatencyDuration" must be greater than "liveSyncDuration"'
                );
              var r = $s(t),
                n = ["TimeOut", "MaxRetry", "RetryDelay", "MaxRetryTimeout"];
              return (
                ["manifest", "level", "frag"].forEach(function (t) {
                  var i = ("level" === t ? "playlist" : t) + "LoadPolicy",
                    a = void 0 === e[i],
                    s = [];
                  n.forEach(function (n) {
                    var o = t + "Loading" + n,
                      l = e[o];
                    if (void 0 !== l && a) {
                      s.push(o);
                      var u = r[i].default;
                      switch (((e[i] = { default: u }), n)) {
                        case "TimeOut":
                          (u.maxLoadTimeMs = l), (u.maxTimeToFirstByteMs = l);
                          break;
                        case "MaxRetry":
                          (u.errorRetry.maxNumRetry = l),
                            (u.timeoutRetry.maxNumRetry = l);
                          break;
                        case "RetryDelay":
                          (u.errorRetry.retryDelayMs = l),
                            (u.timeoutRetry.retryDelayMs = l);
                          break;
                        case "MaxRetryTimeout":
                          (u.errorRetry.maxRetryDelayMs = l),
                            (u.timeoutRetry.maxRetryDelayMs = l);
                      }
                    }
                  }),
                    s.length &&
                      w.warn(
                        'hls.js config: "' +
                          s.join('", "') +
                          '" setting(s) are deprecated, use "' +
                          i +
                          '": ' +
                          JSON.stringify(e[i])
                      );
                }),
                i(i({}, r), e)
              );
            })(t.DefaultConfig, e));
            (this.userConfig = e), r.progressive && Zs(r);
            var n = r.abrController,
              a = r.bufferController,
              s = r.capLevelController,
              o = r.errorController,
              l = r.fpsController,
              u = new o(this),
              h = (this.abrController = new n(this)),
              d = (this.bufferController = new a(this)),
              c = (this.capLevelController = new s(this)),
              f = new l(this),
              g = new Fe(this),
              v = new qe(this),
              m = r.contentSteeringController,
              p = m ? new m(this) : null,
              y = (this.levelController = new to(this, p)),
              E = new qr(this),
              T = new ro(this.config),
              L = (this.streamController = new so(this, E, T));
            c.setStreamController(L), f.setStreamController(L);
            var A = [g, y, L];
            p && A.splice(1, 0, p), (this.networkControllers = A);
            var R = [h, d, c, f, v, E];
            this.audioTrackController = this.createController(
              r.audioTrackController,
              A
            );
            var k = r.audioStreamController;
            k && A.push(new k(this, E, T)),
              (this.subtitleTrackController = this.createController(
                r.subtitleTrackController,
                A
              ));
            var b = r.subtitleStreamController;
            b && A.push(new b(this, E, T)),
              this.createController(r.timelineController, R),
              (T.emeController = this.emeController =
                this.createController(r.emeController, R)),
              (this.cmcdController = this.createController(
                r.cmcdController,
                R
              )),
              (this.latencyController = this.createController(Xe, R)),
              (this.coreComponents = R),
              A.push(u);
            var D = u.onErrorOut;
            "function" == typeof D && this.on(S.ERROR, D, u);
          }
          (t.isMSESupported = function () {
            return no();
          }),
            (t.isSupported = function () {
              return (function () {
                if (!no()) return !1;
                var t = ee();
                return (
                  "function" ==
                    typeof (null == t ? void 0 : t.isTypeSupported) &&
                  ([
                    "avc1.42E01E,mp4a.40.2",
                    "av01.0.01M.08",
                    "vp09.00.50.08",
                  ].some(function (e) {
                    return t.isTypeSupported(ae(e, "video"));
                  }) ||
                    ["mp4a.40.2", "fLaC"].some(function (e) {
                      return t.isTypeSupported(ae(e, "audio"));
                    }))
                );
              })();
            }),
            (t.getMediaSource = function () {
              return ee();
            });
          var e = t.prototype;
          return (
            (e.createController = function (t, e) {
              if (t) {
                var r = new t(this);
                return e && e.push(r), r;
              }
              return null;
            }),
            (e.on = function (t, e, r) {
              void 0 === r && (r = this), this._emitter.on(t, e, r);
            }),
            (e.once = function (t, e, r) {
              void 0 === r && (r = this), this._emitter.once(t, e, r);
            }),
            (e.removeAllListeners = function (t) {
              this._emitter.removeAllListeners(t);
            }),
            (e.off = function (t, e, r, i) {
              void 0 === r && (r = this), this._emitter.off(t, e, r, i);
            }),
            (e.listeners = function (t) {
              return this._emitter.listeners(t);
            }),
            (e.emit = function (t, e, r) {
              return this._emitter.emit(t, e, r);
            }),
            (e.trigger = function (t, e) {
              if (this.config.debug) return this.emit(t, t, e);
              try {
                return this.emit(t, t, e);
              } catch (e) {
                if (
                  (w.error(
                    "An internal error happened while handling event " +
                      t +
                      '. Error message: "' +
                      e.message +
                      '". Here is a stacktrace:',
                    e
                  ),
                  !this.triggeringException)
                ) {
                  this.triggeringException = !0;
                  var r = t === S.ERROR;
                  this.trigger(S.ERROR, {
                    type: L.OTHER_ERROR,
                    details: A.INTERNAL_EXCEPTION,
                    fatal: r,
                    event: t,
                    error: e,
                  }),
                    (this.triggeringException = !1);
                }
              }
              return !1;
            }),
            (e.listenerCount = function (t) {
              return this._emitter.listenerCount(t);
            }),
            (e.destroy = function () {
              w.log("destroy"),
                this.trigger(S.DESTROYING, void 0),
                this.detachMedia(),
                this.removeAllListeners(),
                (this._autoLevelCapping = -1),
                (this.url = null),
                this.networkControllers.forEach(function (t) {
                  return t.destroy();
                }),
                (this.networkControllers.length = 0),
                this.coreComponents.forEach(function (t) {
                  return t.destroy();
                }),
                (this.coreComponents.length = 0);
              var t = this.config;
              (t.xhrSetup = t.fetchSetup = void 0), (this.userConfig = null);
            }),
            (e.attachMedia = function (t) {
              w.log("attachMedia"),
                (this._media = t),
                this.trigger(S.MEDIA_ATTACHING, { media: t });
            }),
            (e.detachMedia = function () {
              w.log("detachMedia"),
                this.trigger(S.MEDIA_DETACHING, void 0),
                (this._media = null);
            }),
            (e.loadSource = function (t) {
              this.stopLoad();
              var e = this.media,
                r = this.url,
                i = (this.url = p.buildAbsoluteURL(self.location.href, t, {
                  alwaysNormalize: !0,
                }));
              (this._autoLevelCapping = -1),
                (this._maxHdcpLevel = null),
                w.log("loadSource:" + i),
                e &&
                  r &&
                  (r !== i || this.bufferController.hasSourceTypes()) &&
                  (this.detachMedia(), this.attachMedia(e)),
                this.trigger(S.MANIFEST_LOADING, { url: t });
            }),
            (e.startLoad = function (t) {
              void 0 === t && (t = -1),
                w.log("startLoad(" + t + ")"),
                (this.started = !0),
                this.networkControllers.forEach(function (e) {
                  e.startLoad(t);
                });
            }),
            (e.stopLoad = function () {
              w.log("stopLoad"),
                (this.started = !1),
                this.networkControllers.forEach(function (t) {
                  t.stopLoad();
                });
            }),
            (e.resumeBuffering = function () {
              this.started &&
                this.networkControllers.forEach(function (t) {
                  "fragmentLoader" in t && t.startLoad(-1);
                });
            }),
            (e.pauseBuffering = function () {
              this.networkControllers.forEach(function (t) {
                "fragmentLoader" in t && t.stopLoad();
              });
            }),
            (e.swapAudioCodec = function () {
              w.log("swapAudioCodec"), this.streamController.swapAudioCodec();
            }),
            (e.recoverMediaError = function () {
              w.log("recoverMediaError");
              var t = this._media;
              this.detachMedia(), t && this.attachMedia(t);
            }),
            (e.removeLevel = function (t) {
              this.levelController.removeLevel(t);
            }),
            (e.setAudioOption = function (t) {
              var e;
              return null == (e = this.audioTrackController)
                ? void 0
                : e.setAudioOption(t);
            }),
            (e.setSubtitleOption = function (t) {
              var e;
              return (
                null == (e = this.subtitleTrackController) ||
                  e.setSubtitleOption(t),
                null
              );
            }),
            s(
              t,
              [
                {
                  key: "levels",
                  get: function () {
                    var t = this.levelController.levels;
                    return t || [];
                  },
                },
                {
                  key: "currentLevel",
                  get: function () {
                    return this.streamController.currentLevel;
                  },
                  set: function (t) {
                    w.log("set currentLevel:" + t),
                      (this.levelController.manualLevel = t),
                      this.streamController.immediateLevelSwitch();
                  },
                },
                {
                  key: "nextLevel",
                  get: function () {
                    return this.streamController.nextLevel;
                  },
                  set: function (t) {
                    w.log("set nextLevel:" + t),
                      (this.levelController.manualLevel = t),
                      this.streamController.nextLevelSwitch();
                  },
                },
                {
                  key: "loadLevel",
                  get: function () {
                    return this.levelController.level;
                  },
                  set: function (t) {
                    w.log("set loadLevel:" + t),
                      (this.levelController.manualLevel = t);
                  },
                },
                {
                  key: "nextLoadLevel",
                  get: function () {
                    return this.levelController.nextLoadLevel;
                  },
                  set: function (t) {
                    this.levelController.nextLoadLevel = t;
                  },
                },
                {
                  key: "firstLevel",
                  get: function () {
                    return Math.max(
                      this.levelController.firstLevel,
                      this.minAutoLevel
                    );
                  },
                  set: function (t) {
                    w.log("set firstLevel:" + t),
                      (this.levelController.firstLevel = t);
                  },
                },
                {
                  key: "startLevel",
                  get: function () {
                    var t = this.levelController.startLevel;
                    return -1 === t && this.abrController.forcedAutoLevel > -1
                      ? this.abrController.forcedAutoLevel
                      : t;
                  },
                  set: function (t) {
                    w.log("set startLevel:" + t),
                      -1 !== t && (t = Math.max(t, this.minAutoLevel)),
                      (this.levelController.startLevel = t);
                  },
                },
                {
                  key: "capLevelToPlayerSize",
                  get: function () {
                    return this.config.capLevelToPlayerSize;
                  },
                  set: function (t) {
                    var e = !!t;
                    e !== this.config.capLevelToPlayerSize &&
                      (e
                        ? this.capLevelController.startCapping()
                        : (this.capLevelController.stopCapping(),
                          (this.autoLevelCapping = -1),
                          this.streamController.nextLevelSwitch()),
                      (this.config.capLevelToPlayerSize = e));
                  },
                },
                {
                  key: "autoLevelCapping",
                  get: function () {
                    return this._autoLevelCapping;
                  },
                  set: function (t) {
                    this._autoLevelCapping !== t &&
                      (w.log("set autoLevelCapping:" + t),
                      (this._autoLevelCapping = t),
                      this.levelController.checkMaxAutoUpdated());
                  },
                },
                {
                  key: "bandwidthEstimate",
                  get: function () {
                    var t = this.abrController.bwEstimator;
                    return t ? t.getEstimate() : NaN;
                  },
                  set: function (t) {
                    this.abrController.resetEstimator(t);
                  },
                },
                {
                  key: "ttfbEstimate",
                  get: function () {
                    var t = this.abrController.bwEstimator;
                    return t ? t.getEstimateTTFB() : NaN;
                  },
                },
                {
                  key: "maxHdcpLevel",
                  get: function () {
                    return this._maxHdcpLevel;
                  },
                  set: function (t) {
                    (function (t) {
                      return ze.indexOf(t) > -1;
                    })(t) &&
                      this._maxHdcpLevel !== t &&
                      ((this._maxHdcpLevel = t),
                      this.levelController.checkMaxAutoUpdated());
                  },
                },
                {
                  key: "autoLevelEnabled",
                  get: function () {
                    return -1 === this.levelController.manualLevel;
                  },
                },
                {
                  key: "manualLevel",
                  get: function () {
                    return this.levelController.manualLevel;
                  },
                },
                {
                  key: "minAutoLevel",
                  get: function () {
                    var t = this.levels,
                      e = this.config.minAutoBitrate;
                    if (!t) return 0;
                    for (var r = t.length, i = 0; i < r; i++)
                      if (t[i].maxBitrate >= e) return i;
                    return 0;
                  },
                },
                {
                  key: "maxAutoLevel",
                  get: function () {
                    var t,
                      e = this.levels,
                      r = this.autoLevelCapping,
                      i = this.maxHdcpLevel;
                    if (
                      ((t =
                        -1 === r && null != e && e.length ? e.length - 1 : r),
                      i)
                    )
                      for (var n = t; n--; ) {
                        var a = e[n].attrs["HDCP-LEVEL"];
                        if (a && a <= i) return n;
                      }
                    return t;
                  },
                },
                {
                  key: "firstAutoLevel",
                  get: function () {
                    return this.abrController.firstAutoLevel;
                  },
                },
                {
                  key: "nextAutoLevel",
                  get: function () {
                    return this.abrController.nextAutoLevel;
                  },
                  set: function (t) {
                    this.abrController.nextAutoLevel = t;
                  },
                },
                {
                  key: "playingDate",
                  get: function () {
                    return this.streamController.currentProgramDateTime;
                  },
                },
                {
                  key: "mainForwardBufferInfo",
                  get: function () {
                    return this.streamController.getMainFwdBufferInfo();
                  },
                },
                {
                  key: "allAudioTracks",
                  get: function () {
                    var t = this.audioTrackController;
                    return t ? t.allAudioTracks : [];
                  },
                },
                {
                  key: "audioTracks",
                  get: function () {
                    var t = this.audioTrackController;
                    return t ? t.audioTracks : [];
                  },
                },
                {
                  key: "audioTrack",
                  get: function () {
                    var t = this.audioTrackController;
                    return t ? t.audioTrack : -1;
                  },
                  set: function (t) {
                    var e = this.audioTrackController;
                    e && (e.audioTrack = t);
                  },
                },
                {
                  key: "allSubtitleTracks",
                  get: function () {
                    var t = this.subtitleTrackController;
                    return t ? t.allSubtitleTracks : [];
                  },
                },
                {
                  key: "subtitleTracks",
                  get: function () {
                    var t = this.subtitleTrackController;
                    return t ? t.subtitleTracks : [];
                  },
                },
                {
                  key: "subtitleTrack",
                  get: function () {
                    var t = this.subtitleTrackController;
                    return t ? t.subtitleTrack : -1;
                  },
                  set: function (t) {
                    var e = this.subtitleTrackController;
                    e && (e.subtitleTrack = t);
                  },
                },
                {
                  key: "media",
                  get: function () {
                    return this._media;
                  },
                },
                {
                  key: "subtitleDisplay",
                  get: function () {
                    var t = this.subtitleTrackController;
                    return !!t && t.subtitleDisplay;
                  },
                  set: function (t) {
                    var e = this.subtitleTrackController;
                    e && (e.subtitleDisplay = t);
                  },
                },
                {
                  key: "lowLatencyMode",
                  get: function () {
                    return this.config.lowLatencyMode;
                  },
                  set: function (t) {
                    this.config.lowLatencyMode = t;
                  },
                },
                {
                  key: "liveSyncPosition",
                  get: function () {
                    return this.latencyController.liveSyncPosition;
                  },
                },
                {
                  key: "latency",
                  get: function () {
                    return this.latencyController.latency;
                  },
                },
                {
                  key: "maxLatency",
                  get: function () {
                    return this.latencyController.maxLatency;
                  },
                },
                {
                  key: "targetLatency",
                  get: function () {
                    return this.latencyController.targetLatency;
                  },
                },
                {
                  key: "drift",
                  get: function () {
                    return this.latencyController.drift;
                  },
                },
                {
                  key: "forceStartLoad",
                  get: function () {
                    return this.streamController.forceStartLoad;
                  },
                },
              ],
              [
                {
                  key: "version",
                  get: function () {
                    return "1.5.13";
                  },
                },
                {
                  key: "Events",
                  get: function () {
                    return S;
                  },
                },
                {
                  key: "ErrorTypes",
                  get: function () {
                    return L;
                  },
                },
                {
                  key: "ErrorDetails",
                  get: function () {
                    return A;
                  },
                },
                {
                  key: "DefaultConfig",
                  get: function () {
                    return t.defaultConfig ? t.defaultConfig : Js;
                  },
                  set: function (e) {
                    t.defaultConfig = e;
                  },
                },
              ]
            ),
            t
          );
        })();
      return (oo.defaultConfig = void 0), oo;
    }),
    "object" == typeof exports && "undefined" != typeof module
      ? (module.exports = i())
      : "function" == typeof define && define.amd
      ? define(i)
      : ((r = "undefined" != typeof globalThis ? globalThis : r || self).Hls =
          i());
})(!1);
